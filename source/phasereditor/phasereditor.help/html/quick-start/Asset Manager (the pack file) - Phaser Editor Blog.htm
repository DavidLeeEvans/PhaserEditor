<html>

<head>

</head>

<body>


                <h2 class="title" itemprop="headline"><a href="http://phasereditor.boniatillo.com/blog/quick-start/020-asset-pack">Asset Manager (the pack file)</a></h2>
                <div class="desc text-left" itemprop="articleBody">
                    <p>In Phaser Editor we encourage to use the <a href="http://www.html5gamedevs.com/topic/6807-new-phaser-asset-pack-feature-please-test">Asset Pack JSON Format</a> to load the assets of your games, there are many features around this file, and in the future we will add more.</p>

<p><a href="https://www.youtube.com/watch?v=mMopa8gTpoQ&amp;index=2&amp;list=PLB8gI_5U0MvCJuhPv-LBdi_a9PQxYxFqK">Watch a demo video</a></p>

<h2>The JSON Asset Pack file</h2>

<p>In the Phaser repository there is the file <code>resources/Asset Pack JSON Format/assetPack.json</code>.
 It is an example of how the assets can be loaded via the asset pack. We
 reproduce here the Phaser's authors explanation of that file:</p>

<blockquote>
  <p>An Asset Pack is a means to control the loading of assets into Phaser via a JSON file. Use <code>Phaser.Loader.pack()</code> to load your data file.
  <br>
  The file is split into sections (...) Sections are a way for you to 
control the splitting-up of asset loading, so you don't have to load 
everything at once.
  <br>
  The key you use for the sections is entirely up to you and is passed to the Phaser.Loader.pack call.
  <br> 
  Within each section is an Array of objects. Each object corresponds to
 a single file to be loaded. The "type" property controls the type of 
file. Note that lots of the file properties are optional. See the <code>Phaser.Loader</code> API Documentation to find out which ones, as they match the API calls exactly.
  <br>
  Where a file type has a callback, such as "script", the context in 
which the callback is run should be passed to the Phaser.Loader.pack 
method. See the examples for further details.</p>
</blockquote>

<h2>Create the asset pack file</h2>

<p>If you create a project based on the built-in Phaser Editor templates
 then this file is created automatically. You can find it in the <code>WebContent/assets/assets-pack.json</code> path.</p>

<p>To create the pack file manually, go to<code>File &gt; New &gt; Asset Pack File</code> , or in the New button of the toolbar, in the drop-down menu.</p>

<p><img src="Asset%20Manager%20%28the%20pack%20file%29%20-%20Phaser%20Editor%20Blog_files/20151022024117-NewWizardButton.png" alt="Asset pack file menu"></p>

<p>It opens the Asset Pack File wizard. In this wizard you should write 
the name of the file and select the folder where to create the pack. By 
default, it selects the <code>assets</code> folder, but you can select any folder in any project. Press Finish to create the file and it opens in the Asset Pack editor.</p>

<p><img src="Asset%20Manager%20%28the%20pack%20file%29%20-%20Phaser%20Editor%20Blog_files/20151022024159-AssetPackDialog.png" alt="Asset pack dialog"></p>

<h2>The Asset Pack File editor</h2>

<p>The Asset Pack file is a JSON file that you can edit manually, but in
 Phaser Editor this file can be modified using a dedicated editor with a
 graphical interface.</p>

<p>The editor has two panels: the assets tree and the asset details.</p>

<p>In the assets tree you add, remove and rename the sections and the 
entries. The asset details panel shows the properties of the object 
selected in the tree.</p>

<p>To modify an asset entry, you select it in the tree and change the values in the details panel.</p>

<p>The details panel also shows the JSDoc of the different parameters, it is the same doc of the parameters of the loader method.</p>

<p>For example, if you select an "image" object in the tree, the details panel shows the parameters of the <code>Phaser.Loader.image()</code>
 method. You can modify the values of the parameters and you can see the
 documentation of it (hover the mouse in the parameter's name).</p>

<p><img src="Asset%20Manager%20%28the%20pack%20file%29%20-%20Phaser%20Editor%20Blog_files/20151022025040-AssetEditor.png" alt="Asset pack editor"></p>

<h2>Load the assets from the pack file</h2>

<p>In Phaser the asstes are loaded in the preload method of the game state. The code to load them looks like this:</p>

<pre>game.load.image("dino", "path/to/dino.png");            
game.load.image("montain", "path/to/montain.png");
game.load.spritesheet("girl", "path/to/mujer-trotando.png", 64, 64);
game.load.audio("music", "path/to/guajira.ogg");
...
</pre>

<p>For each asset to load you have to write a loader's method call.</p>

<p>When you use an asset pack you only have to write a line to load a section from the asset pack:</p>

<pre>game.load.pack("level", "path/to/assets-pack.json");
</pre>

<p>It automatically loads all the assets defined in the "level" section of the pack <code>assets-pack.json</code>.</p>

<p>From the Asset Pack Explorer the user can preview the different assets, opening it in the Preview or with a mouse hover.</p>

<p><img src="Asset%20Manager%20%28the%20pack%20file%29%20-%20Phaser%20Editor%20Blog_files/20151022025330-AssetPackExplorer.png" alt="Asset pack explorer"></p>
                </div><!--//desc-->
            
			
			
			</body>
</html>
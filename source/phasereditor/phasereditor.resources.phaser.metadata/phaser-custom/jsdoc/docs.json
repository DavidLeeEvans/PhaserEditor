[{"meta":{"range":[1164,5306],"filename":"Animation.js","lineno":22,"path":"src\\animation"},"description":"An Animation instance contains a single animation and the controls to play it.\r\rIt is created by the AnimationManager, consists of Animation.Frame objects and belongs to a single Game Object such as a Sprite.","kind":"class","classdesc":"Phaser.Animation","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["Phaser.Sprite"]},"description":"A reference to the owner of this Animation.","name":"parent"},{"type":{"names":["string"]},"description":"The unique name for this animation, used in playback commands.","name":"name"},{"type":{"names":["Phaser.FrameData"]},"description":"The FrameData object that contains all frames used by this Animation.","name":"frameData"},{"type":{"names":["Array.<number>","Array.<string>"]},"description":"An array of numbers or strings indicating which frames to play in which order.","name":"frames"},{"type":{"names":["number"]},"optional":true,"defaultvalue":60,"description":"The speed at which the animation should play. The speed is given in frames per second.","name":"frameRate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Whether or not the animation is looped or just plays once.","name":"loop"}],"name":"Animation","longname":"Phaser.Animation","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1405,1421],"filename":"Animation.js","lineno":29,"path":"src\\animation"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running Game.","name":"game"}],"name":"game","longname":"Phaser.Animation#game","kind":"member","memberof":"Phaser.Animation","scope":"instance","___s":true},{"meta":{"range":[1844,1860],"filename":"Animation.js","lineno":46,"path":"src\\animation"},"properties":[{"type":{"names":["string"]},"description":"The user defined name given to this Animation.","name":"name"}],"name":"name","longname":"Phaser.Animation#name","kind":"member","memberof":"Phaser.Animation","scope":"instance","___s":true},{"meta":{"range":[2144,2173],"filename":"Animation.js","lineno":58,"path":"src\\animation"},"properties":[{"type":{"names":["number"]},"description":"The delay in ms between each frame of the Animation, based on the given frameRate.","name":"delay"}],"name":"delay","longname":"Phaser.Animation#delay","kind":"member","memberof":"Phaser.Animation","scope":"instance","___s":true},{"meta":{"range":[2266,2282],"filename":"Animation.js","lineno":63,"path":"src\\animation"},"properties":[{"type":{"names":["boolean"]},"description":"The loop state of the Animation.","name":"loop"}],"name":"loop","longname":"Phaser.Animation#loop","kind":"member","memberof":"Phaser.Animation","scope":"instance","___s":true},{"meta":{"range":[2418,2436],"filename":"Animation.js","lineno":68,"path":"src\\animation"},"properties":[{"type":{"names":["number"]},"description":"The number of times the animation has looped since it was last started.","name":"loopCount"}],"name":"loopCount","longname":"Phaser.Animation#loopCount","kind":"member","memberof":"Phaser.Animation","scope":"instance","___s":true},{"meta":{"range":[2598,2625],"filename":"Animation.js","lineno":74,"path":"src\\animation"},"properties":[{"type":{"names":["boolean"]},"description":"Should the parent of this Animation be killed when the animation completes?","name":"killOnComplete"}],"defaultvalue":false,"name":"killOnComplete","longname":"Phaser.Animation#killOnComplete","kind":"member","memberof":"Phaser.Animation","scope":"instance","___s":true},{"meta":{"range":[2804,2827],"filename":"Animation.js","lineno":80,"path":"src\\animation"},"properties":[{"type":{"names":["boolean"]},"description":"The finished state of the Animation. Set to true once playback completes, false during playback.","name":"isFinished"}],"defaultvalue":false,"name":"isFinished","longname":"Phaser.Animation#isFinished","kind":"member","memberof":"Phaser.Animation","scope":"instance","___s":true},{"meta":{"range":[3004,3026],"filename":"Animation.js","lineno":86,"path":"src\\animation"},"properties":[{"type":{"names":["boolean"]},"description":"The playing state of the Animation. Set to false once playback completes, true during playback.","name":"isPlaying"}],"defaultvalue":false,"name":"isPlaying","longname":"Phaser.Animation#isPlaying","kind":"member","memberof":"Phaser.Animation","scope":"instance","___s":true},{"meta":{"range":[3141,3162],"filename":"Animation.js","lineno":92,"path":"src\\animation"},"properties":[{"type":{"names":["boolean"]},"description":"The paused state of the Animation.","name":"isPaused"}],"defaultvalue":false,"name":"isPaused","longname":"Phaser.Animation#isPaused","kind":"member","memberof":"Phaser.Animation","scope":"instance","___s":true},{"meta":{"range":[3785,3861],"filename":"Animation.js","lineno":125,"path":"src\\animation"},"properties":[{"type":{"names":["Phaser.Frame"]},"description":"The currently displayed frame of the Animation.","name":"currentFrame"}],"name":"currentFrame","longname":"Phaser.Animation#currentFrame","kind":"member","memberof":"Phaser.Animation","scope":"instance","___s":true},{"meta":{"range":[3992,4026],"filename":"Animation.js","lineno":130,"path":"src\\animation"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"This event is dispatched when this Animation starts playback.","name":"onStart"}],"name":"onStart","longname":"Phaser.Animation#onStart","kind":"member","memberof":"Phaser.Animation","scope":"instance","___s":true},{"meta":{"range":[4580,4600],"filename":"Animation.js","lineno":141,"path":"src\\animation"},"description":"This event is dispatched when the Animation changes frame.\rBy default this event is disabled due to its intensive nature. Enable it with: `Animation.enableUpdate = true`.\rNote that the event is only dispatched with the current frame. In a low-FPS environment Animations\rwill automatically frame-skip to try and claw back time, so do not base your code on expecting to\rreceive a perfectly sequential set of frames from this event.","properties":[{"type":{"names":["Phaser.Signal","null"]},"name":"onUpdate"}],"defaultvalue":null,"name":"onUpdate","longname":"Phaser.Animation#onUpdate","kind":"member","memberof":"Phaser.Animation","scope":"instance","___s":true},{"meta":{"range":[4817,4854],"filename":"Animation.js","lineno":146,"path":"src\\animation"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"This event is dispatched when this Animation completes playback. If the animation is set to loop this is never fired, listen for onLoop instead.","name":"onComplete"}],"name":"onComplete","longname":"Phaser.Animation#onComplete","kind":"member","memberof":"Phaser.Animation","scope":"instance","___s":true},{"meta":{"range":[4974,5007],"filename":"Animation.js","lineno":151,"path":"src\\animation"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"This event is dispatched when this Animation loops.","name":"onLoop"}],"name":"onLoop","longname":"Phaser.Animation#onLoop","kind":"member","memberof":"Phaser.Animation","scope":"instance","___s":true},{"meta":{"range":[5140,5163],"filename":"Animation.js","lineno":157,"path":"src\\animation"},"properties":[{"type":{"names":["boolean"]},"description":"Indicates if the animation will play backwards.","name":"isReversed"}],"defaultvalue":false,"name":"isReversed","longname":"Phaser.Animation#isReversed","kind":"member","memberof":"Phaser.Animation","scope":"instance","___s":true},{"meta":{"range":[5349,6017],"filename":"Animation.js","lineno":167,"path":"src\\animation"},"description":"Plays this animation.","kind":"function","name":"play","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"The framerate to play the animation at. The speed is given in frames per second. If not provided the previously set frameRate of the Animation is used.","name":"frameRate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the animation be looped after playback. If not provided the previously set loop value of the Animation is used.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set to true when the animation completes (only happens if loop=false) the parent Sprite will be killed.","name":"killOnComplete"}],"returns":[{"type":{"names":["Phaser.Animation"]},"description":"- A reference to this Animation instance."}],"memberof":"Phaser.Animation","longname":"Phaser.Animation#play","scope":"instance","___s":true},{"meta":{"range":[7342,7479],"filename":"Animation.js","lineno":218,"path":"src\\animation"},"description":"Sets this animation back to the first frame and restarts the animation.","kind":"function","name":"restart","memberof":"Phaser.Animation","longname":"Phaser.Animation#restart","scope":"instance","___s":true},{"meta":{"range":[8122,8279],"filename":"Animation.js","lineno":246,"path":"src\\animation"},"description":"Reverses the animation direction.","kind":"function","name":"reverse","returns":[{"type":{"names":["Phaser.Animation"]},"description":"The animation instance."}],"memberof":"Phaser.Animation","longname":"Phaser.Animation#reverse","scope":"instance","___s":true},{"meta":{"range":[8392,8702],"filename":"Animation.js","lineno":260,"path":"src\\animation"},"description":"Reverses the animation direction for the current/next animation only\rOnce the onComplete event is called this method will be called again and revert\rthe reversed state.","kind":"function","name":"reverseOnce","returns":[{"type":{"names":["Phaser.Animation"]},"description":"The animation instance."}],"memberof":"Phaser.Animation","longname":"Phaser.Animation#reverseOnce","scope":"instance","___s":true},{"meta":{"range":[8842,9344],"filename":"Animation.js","lineno":276,"path":"src\\animation"},"description":"Sets this animations playback to a given frame with the given ID.","kind":"function","name":"setFrame","params":[{"type":{"names":["string","number"]},"optional":true,"description":"The identifier of the frame to set. Can be the name of the frame, the sprite index of the frame, or the animation-local frame index.","name":"frameId"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If you provide a number for frameId, should it use the numeric indexes of the frameData, or the 0-indexed frame index local to the animation.","name":"useLocalFrameIndex"}],"memberof":"Phaser.Animation","longname":"Phaser.Animation#setFrame","scope":"instance","___s":true},{"meta":{"range":[10753,11356],"filename":"Animation.js","lineno":334,"path":"src\\animation"},"description":"Stops playback of this animation and set it to a finished state. If a resetFrame is provided it will stop playback and set frame to the first in the animation.\rIf `dispatchComplete` is true it will dispatch the complete events, otherwise they'll be ignored.","kind":"function","name":"stop","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true after the animation stops the currentFrame value will be set to the first frame in this animation.","name":"resetFrame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Dispatch the Animation.onComplete and parent.onAnimationComplete events?","name":"dispatchComplete"}],"memberof":"Phaser.Animation","longname":"Phaser.Animation#stop","scope":"instance","___s":true},{"meta":{"range":[12042,12151],"filename":"Animation.js","lineno":365,"path":"src\\animation"},"description":"Called when the Game enters a paused state.","kind":"function","name":"onPause","memberof":"Phaser.Animation","longname":"Phaser.Animation#onPause","scope":"instance","___s":true},{"meta":{"range":[12324,12440],"filename":"Animation.js","lineno":379,"path":"src\\animation"},"description":"Called when the Game resumes from a paused state.","kind":"function","name":"onResume","memberof":"Phaser.Animation","longname":"Phaser.Animation#onResume","scope":"instance","___s":true},{"meta":{"range":[12614,12748],"filename":"Animation.js","lineno":393,"path":"src\\animation"},"description":"Updates this animation. Called automatically by the AnimationManager.","kind":"function","name":"update","memberof":"Phaser.Animation","longname":"Phaser.Animation#update","scope":"instance","___s":true},{"meta":{"range":[17085,17317],"filename":"Animation.js","lineno":531,"path":"src\\animation"},"description":"Advances by the given number of frames in the Animation, taking the loop value into consideration.","kind":"function","name":"next","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The number of frames to advance.","name":"quantity"}],"memberof":"Phaser.Animation","longname":"Phaser.Animation#next","scope":"instance","___s":true},{"meta":{"range":[17895,18137],"filename":"Animation.js","lineno":563,"path":"src\\animation"},"description":"Moves backwards the given number of frames in the Animation, taking the loop value into consideration.","kind":"function","name":"previous","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The number of frames to move back.","name":"quantity"}],"memberof":"Phaser.Animation","longname":"Phaser.Animation#previous","scope":"instance","___s":true},{"meta":{"range":[18683,18925],"filename":"Animation.js","lineno":595,"path":"src\\animation"},"description":"Changes the FrameData object this Animation is using.","kind":"function","name":"updateFrameData","params":[{"type":{"names":["Phaser.FrameData"]},"description":"The FrameData object that contains all frames used by this Animation.","name":"frameData"}],"memberof":"Phaser.Animation","longname":"Phaser.Animation#updateFrameData","scope":"instance","___s":true},{"meta":{"range":[19162,19305],"filename":"Animation.js","lineno":608,"path":"src\\animation"},"description":"Cleans up this animation ready for deletion. Nulls all values and references.","kind":"function","name":"destroy","memberof":"Phaser.Animation","longname":"Phaser.Animation#destroy","scope":"instance","___s":true},{"meta":{"range":[19958,20228],"filename":"Animation.js","lineno":642,"path":"src\\animation"},"description":"Called internally when the animation finishes playback.\rSets the isPlaying and isFinished states and dispatches the onAnimationComplete event if it exists on the parent and local onComplete event.","kind":"function","name":"complete","memberof":"Phaser.Animation","longname":"Phaser.Animation#complete","scope":"instance","___s":true},{"meta":{"range":[20808,20930],"filename":"Animation.js","lineno":672,"path":"src\\animation"},"name":"paused","properties":[{"type":{"names":["boolean"]},"description":"Gets and sets the paused state of this Animation.","name":"paused"}],"memberof":"Phaser.Animation","longname":"Phaser.Animation#paused","scope":"instance","kind":"member","___s":true},{"meta":{"range":[21471,21601],"filename":"Animation.js","lineno":706,"path":"src\\animation"},"name":"reversed","properties":[{"type":{"names":["boolean"]},"description":"Gets and sets the isReversed state of this Animation.","name":"reversed"}],"memberof":"Phaser.Animation","longname":"Phaser.Animation#reversed","scope":"instance","kind":"member","___s":true},{"meta":{"range":[21824,22011],"filename":"Animation.js","lineno":726,"path":"src\\animation"},"name":"frameTotal","properties":[{"type":{"names":["number"]},"description":"The total number of frames in the currently loaded FrameData, or -1 if no FrameData is loaded.","name":"frameTotal"}],"readonly":true,"memberof":"Phaser.Animation","longname":"Phaser.Animation#frameTotal","scope":"instance","kind":"member","___s":true},{"meta":{"range":[22159,22308],"filename":"Animation.js","lineno":739,"path":"src\\animation"},"name":"frame","properties":[{"type":{"names":["number"]},"description":"Gets or sets the current frame index and updates the Texture Cache for display.","name":"frame"}],"memberof":"Phaser.Animation","longname":"Phaser.Animation#frame","scope":"instance","kind":"member","___s":true},{"meta":{"range":[23008,23252],"filename":"Animation.js","lineno":777,"path":"src\\animation"},"name":"speed","properties":[{"type":{"names":["number"]},"description":"Gets or sets the current speed of the animation in frames per second. Changing this in a playing animation will take effect from the next frame. Value must be greater than 0.","name":"speed"}],"memberof":"Phaser.Animation","longname":"Phaser.Animation#speed","scope":"instance","kind":"member","___s":true},{"meta":{"range":[23526,23696],"filename":"Animation.js","lineno":800,"path":"src\\animation"},"name":"enableUpdate","properties":[{"type":{"names":["boolean"]},"description":"Gets or sets if this animation will dispatch the onUpdate events upon changing frame.","name":"enableUpdate"}],"memberof":"Phaser.Animation","longname":"Phaser.Animation#enableUpdate","scope":"instance","kind":"member","___s":true},{"meta":{"range":[24163,25351],"filename":"Animation.js","lineno":828,"path":"src\\animation"},"description":"Really handy function for when you are creating arrays of animation data but it's using frame names and not numbers.\rFor example imagine you've got 30 frames named: 'explosion_0001-large' to 'explosion_0030-large'\rYou could use this function to generate those by doing: Phaser.Animation.generateFrameNames('explosion_', 1, 30, '-large', 4);","kind":"function","name":"generateFrameNames","scope":"static","params":[{"type":{"names":["string"]},"description":"The start of the filename. If the filename was 'explosion_0001-large' the prefix would be 'explosion_'.","name":"prefix"},{"type":{"names":["number"]},"description":"The number to start sequentially counting from. If your frames are named 'explosion_0001' to 'explosion_0034' the start is 1.","name":"start"},{"type":{"names":["number"]},"description":"The number to count to. If your frames are named 'explosion_0001' to 'explosion_0034' the stop value is 34.","name":"stop"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"''","description":"The end of the filename. If the filename was 'explosion_0001-large' the prefix would be '-large'.","name":"suffix"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The number of zeros to pad the min and max values with. If your frames are named 'explosion_0001' to 'explosion_0034' then the zeroPad is 4.","name":"zeroPad"}],"returns":[{"type":{"names":["Array.<string>"]},"description":"An array of framenames."}],"memberof":"Phaser.Animation","longname":"Phaser.Animation.generateFrameNames","___s":true},{"meta":{"range":[551,2181],"filename":"AnimationManager.js","lineno":15,"path":"src\\animation"},"description":"The Animation Manager is used to add, play and update Phaser Animations.\rAny Game Object such as Phaser.Sprite that supports animation contains a single AnimationManager instance.","kind":"class","classdesc":"Phaser.AnimationManager","params":[{"type":{"names":["Phaser.Sprite"]},"description":"A reference to the Game Object that owns this AnimationManager.","name":"sprite"}],"name":"AnimationManager","longname":"Phaser.AnimationManager","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[729,749],"filename":"AnimationManager.js","lineno":20,"path":"src\\animation"},"properties":[{"type":{"names":["Phaser.Sprite"]},"description":"A reference to the parent Sprite that owns this AnimationManager.","name":"sprite"}],"name":"sprite","longname":"Phaser.AnimationManager#sprite","kind":"member","memberof":"Phaser.AnimationManager","scope":"instance","___s":true},{"meta":{"range":[856,879],"filename":"AnimationManager.js","lineno":25,"path":"src\\animation"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running Game.","name":"game"}],"name":"game","longname":"Phaser.AnimationManager#game","kind":"member","memberof":"Phaser.AnimationManager","scope":"instance","___s":true},{"meta":{"range":[1143,1167],"filename":"AnimationManager.js","lineno":34,"path":"src\\animation"},"description":"The currently displayed Frame of animation, if any.\rThis property is only set once an Animation starts playing. Until that point it remains set as `null`.","properties":[{"type":{"names":["Phaser.Frame"]},"name":"currentFrame"}],"defaultvalue":null,"name":"currentFrame","longname":"Phaser.AnimationManager#currentFrame","kind":"member","memberof":"Phaser.AnimationManager","scope":"instance","___s":true},{"meta":{"range":[1302,1325],"filename":"AnimationManager.js","lineno":40,"path":"src\\animation"},"properties":[{"type":{"names":["Phaser.Animation"]},"description":"The currently displayed animation, if any.","name":"currentAnim"}],"defaultvalue":null,"name":"currentAnim","longname":"Phaser.AnimationManager#currentAnim","kind":"member","memberof":"Phaser.AnimationManager","scope":"instance","___s":true},{"meta":{"range":[1501,1528],"filename":"AnimationManager.js","lineno":46,"path":"src\\animation"},"properties":[{"type":{"names":["boolean"]},"description":"Should the animation data continue to update even if the Sprite.visible is set to false.","name":"updateIfVisible"}],"defaultvalue":true,"name":"updateIfVisible","longname":"Phaser.AnimationManager#updateIfVisible","kind":"member","memberof":"Phaser.AnimationManager","scope":"instance","___s":true},{"meta":{"range":[1657,1678],"filename":"AnimationManager.js","lineno":52,"path":"src\\animation"},"properties":[{"type":{"names":["boolean"]},"description":"Set to true once animation data has been loaded.","name":"isLoaded"}],"defaultvalue":false,"name":"isLoaded","longname":"Phaser.AnimationManager#isLoaded","kind":"member","memberof":"Phaser.AnimationManager","scope":"instance","___s":true},{"meta":{"range":[4840,5822],"filename":"AnimationManager.js","lineno":170,"path":"src\\animation"},"description":"Adds a new animation under the given key. Optionally set the frames, frame rate and loop.\rAnimations added in this way are played back with the play function.","kind":"function","name":"add","params":[{"type":{"names":["string"]},"description":"The unique (within this Sprite) name for the animation, i.e. \"run\", \"fire\", \"walk\".","name":"name"},{"type":{"names":["Array"]},"optional":true,"defaultvalue":null,"description":"An array of numbers/strings that correspond to the frames to add to this animation and in which order. e.g. [1, 2, 3] or ['run0', 'run1', run2]). If null then all frames will be used.","name":"frames"},{"type":{"names":["number"]},"optional":true,"defaultvalue":60,"description":"The speed at which the animation should play. The speed is given in frames per second.","name":"frameRate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Whether or not the animation is looped or just plays once.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Are the given frames using numeric indexes (default) or strings?","name":"useNumericIndex"}],"returns":[{"type":{"names":["Phaser.Animation"]},"description":"The Animation object that was created."}],"memberof":"Phaser.AnimationManager","longname":"Phaser.AnimationManager#add","scope":"instance","___s":true},{"meta":{"range":[6871,7289],"filename":"AnimationManager.js","lineno":219,"path":"src\\animation"},"description":"Check whether the frames in the given array are valid and exist.","kind":"function","name":"validateFrames","params":[{"type":{"names":["Array"]},"description":"An array of frames to be validated.","name":"frames"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Validate the frames based on their numeric index (true) or string index (false)","name":"useNumericIndex"}],"returns":[{"type":{"names":["boolean"]},"description":"True if all given Frames are valid, otherwise false."}],"memberof":"Phaser.AnimationManager","longname":"Phaser.AnimationManager#validateFrames","scope":"instance","___s":true},{"meta":{"range":[7933,8993],"filename":"AnimationManager.js","lineno":253,"path":"src\\animation"},"description":"Play an animation based on the given key. The animation should previously have been added via `animations.add`\r\rIf the requested animation is already playing this request will be ignored. \rIf you need to reset an already running animation do so directly on the Animation object itself.","kind":"function","name":"play","params":[{"type":{"names":["string"]},"description":"The name of the animation to be played, e.g. \"fire\", \"walk\", \"jump\".","name":"name"},{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"The framerate to play the animation at. The speed is given in frames per second. If not provided the previously set frameRate of the Animation is used.","name":"frameRate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the animation be looped after playback. If not provided the previously set loop value of the Animation is used.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set to true when the animation completes (only happens if loop=false) the parent Sprite will be killed.","name":"killOnComplete"}],"returns":[{"type":{"names":["Phaser.Animation"]},"description":"A reference to playing Animation instance."}],"memberof":"Phaser.AnimationManager","longname":"Phaser.AnimationManager#play","scope":"instance","___s":true},{"meta":{"range":[9951,10598],"filename":"AnimationManager.js","lineno":296,"path":"src\\animation"},"description":"Stop playback of an animation. If a name is given that specific animation is stopped, otherwise the current animation is stopped.\rThe currentAnim property of the AnimationManager is automatically set to the animation given.","kind":"function","name":"stop","params":[{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"The name of the animation to be stopped, e.g. \"fire\". If none is given the currently running animation is stopped.","name":"name"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"When the animation is stopped should the currentFrame be set to the first frame of the animation (true) or paused on the last frame displayed (false)","name":"resetFrame"}],"memberof":"Phaser.AnimationManager","longname":"Phaser.AnimationManager#stop","scope":"instance","___s":true},{"meta":{"range":[10889,11201],"filename":"AnimationManager.js","lineno":315,"path":"src\\animation"},"description":"The main update function is called by the Sprites update loop. It's responsible for updating animation frames and firing related events.","kind":"function","name":"update","access":"protected","returns":[{"type":{"names":["boolean"]},"description":"True if a new animation frame has been set, otherwise false."}],"memberof":"Phaser.AnimationManager","longname":"Phaser.AnimationManager#update","scope":"instance","___s":true},{"meta":{"range":[11555,11802],"filename":"AnimationManager.js","lineno":339,"path":"src\\animation"},"description":"Advances by the given number of frames in the current animation, taking the loop value into consideration.","kind":"function","name":"next","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The number of frames to advance.","name":"quantity"}],"memberof":"Phaser.AnimationManager","longname":"Phaser.AnimationManager#next","scope":"instance","___s":true},{"meta":{"range":[12018,12275],"filename":"AnimationManager.js","lineno":355,"path":"src\\animation"},"description":"Moves backwards the given number of frames in the current animation, taking the loop value into consideration.","kind":"function","name":"previous","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The number of frames to move back.","name":"quantity"}],"memberof":"Phaser.AnimationManager","longname":"Phaser.AnimationManager#previous","scope":"instance","___s":true},{"meta":{"range":[12499,12801],"filename":"AnimationManager.js","lineno":371,"path":"src\\animation"},"description":"Returns an animation that was previously added by name.","kind":"function","name":"getAnimation","params":[{"type":{"names":["string"]},"description":"The name of the animation to be returned, e.g. \"fire\".","name":"name"}],"returns":[{"type":{"names":["Phaser.Animation"]},"description":"The Animation instance, if found, otherwise null."}],"memberof":"Phaser.AnimationManager","longname":"Phaser.AnimationManager#getAnimation","scope":"instance","___s":true},{"meta":{"range":[13052,13222],"filename":"AnimationManager.js","lineno":392,"path":"src\\animation"},"description":"Refreshes the current frame data back to the parent Sprite and also resets the texture data.","kind":"function","name":"refreshFrame","memberof":"Phaser.AnimationManager","longname":"Phaser.AnimationManager#refreshFrame","scope":"instance","___s":true},{"meta":{"range":[13372,13605],"filename":"AnimationManager.js","lineno":404,"path":"src\\animation"},"description":"Destroys all references this AnimationManager contains.\rIterates through the list of animations stored in this manager and calls destroy on each of them.","kind":"function","name":"destroy","memberof":"Phaser.AnimationManager","longname":"Phaser.AnimationManager#destroy","scope":"instance","___s":true},{"meta":{"range":[14167,14308],"filename":"AnimationManager.js","lineno":436,"path":"src\\animation"},"name":"frameData","properties":[{"type":{"names":["Phaser.FrameData"]},"description":"The current animations FrameData.","name":"frameData"}],"readonly":true,"memberof":"Phaser.AnimationManager","longname":"Phaser.AnimationManager#frameData","scope":"instance","kind":"member","___s":true},{"meta":{"range":[14458,14652],"filename":"AnimationManager.js","lineno":449,"path":"src\\animation"},"name":"frameTotal","properties":[{"type":{"names":["number"]},"description":"The total number of frames in the currently loaded FrameData, or -1 if no FrameData is loaded.","name":"frameTotal"}],"readonly":true,"memberof":"Phaser.AnimationManager","longname":"Phaser.AnimationManager#frameTotal","scope":"instance","kind":"member","___s":true},{"meta":{"range":[14811,14947],"filename":"AnimationManager.js","lineno":463,"path":"src\\animation"},"name":"paused","properties":[{"type":{"names":["boolean"]},"description":"Gets and sets the paused state of the current animation.","name":"paused"}],"memberof":"Phaser.AnimationManager","longname":"Phaser.AnimationManager#paused","scope":"instance","kind":"member","___s":true},{"meta":{"range":[15193,15308],"filename":"AnimationManager.js","lineno":483,"path":"src\\animation"},"name":"name","properties":[{"type":{"names":["string"]},"description":"Gets the current animation name, if set.","name":"name"}],"memberof":"Phaser.AnimationManager","longname":"Phaser.AnimationManager#name","scope":"instance","kind":"member","___s":true},{"meta":{"range":[15520,15676],"filename":"AnimationManager.js","lineno":500,"path":"src\\animation"},"name":"frame","properties":[{"type":{"names":["number"]},"description":"Gets or sets the current frame index and updates the Texture Cache for display.","name":"frame"}],"memberof":"Phaser.AnimationManager","longname":"Phaser.AnimationManager#frame","scope":"instance","kind":"member","___s":true},{"meta":{"range":[16252,16415],"filename":"AnimationManager.js","lineno":531,"path":"src\\animation"},"name":"frameName","properties":[{"type":{"names":["string"]},"description":"Gets or sets the current frame name and updates the Texture Cache for display.","name":"frameName"}],"memberof":"Phaser.AnimationManager","longname":"Phaser.AnimationManager#frameName","scope":"instance","kind":"member","___s":true},{"meta":{"range":[204,380],"filename":"AnimationParser.js","lineno":7,"path":"src\\animation"},"description":"Responsible for parsing sprite sheet and JSON data into the internal FrameData format that Phaser uses for animations.","kind":"class","name":"AnimationParser","scope":"static","memberof":"Phaser","longname":"Phaser.AnimationParser","___s":true},{"meta":{"range":[416,1395],"filename":"AnimationParser.js","lineno":15,"path":"src\\animation"},"description":"Parse a Sprite Sheet and extract the animation frame data from it.","kind":"function","name":"spriteSheet","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["string","Image"]},"description":"The Game.Cache asset key of the Sprite Sheet image or an actual HTML Image element.","name":"key"},{"type":{"names":["number"]},"description":"The fixed width of each frame of the animation.","name":"frameWidth"},{"type":{"names":["number"]},"description":"The fixed height of each frame of the animation.","name":"frameHeight"},{"type":{"names":["number"]},"optional":true,"defaultvalue":-1,"description":"The total number of animation frames to extract from the Sprite Sheet. The default value of -1 means \"extract all frames\".","name":"frameMax"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the frames have been drawn with a margin, specify the amount here.","name":"margin"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the frames have been drawn with spacing between them, specify the amount here.","name":"spacing"}],"returns":[{"type":{"names":["Phaser.FrameData"]},"description":"A FrameData object containing the parsed frames."}],"memberof":"Phaser.AnimationParser","longname":"Phaser.AnimationParser.spriteSheet","scope":"static","___s":true},{"meta":{"range":[3164,3556],"filename":"AnimationParser.js","lineno":93,"path":"src\\animation"},"description":"Parse the JSON data and extract the animation frame data from it.","kind":"function","name":"JSONData","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["object"]},"description":"The JSON data from the Texture Atlas. Must be in Array format.","name":"json"}],"returns":[{"type":{"names":["Phaser.FrameData"]},"description":"A FrameData object containing the parsed frames."}],"memberof":"Phaser.AnimationParser","longname":"Phaser.AnimationParser.JSONData","scope":"static","___s":true},{"meta":{"range":[4900,5302],"filename":"AnimationParser.js","lineno":147,"path":"src\\animation"},"description":"Parse the JSON data and extract the animation frame data from it.","kind":"function","name":"JSONDataPyxel","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["object"]},"description":"The JSON data from the Texture Atlas. Must be in Pyxel JSON format.","name":"json"}],"returns":[{"type":{"names":["Phaser.FrameData"]},"description":"A FrameData object containing the parsed frames."}],"memberof":"Phaser.AnimationParser","longname":"Phaser.AnimationParser.JSONDataPyxel","scope":"static","___s":true},{"meta":{"range":[6838,7238],"filename":"AnimationParser.js","lineno":204,"path":"src\\animation"},"description":"Parse the JSON data and extract the animation frame data from it.","kind":"function","name":"JSONDataHash","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["object"]},"description":"The JSON data from the Texture Atlas. Must be in JSON Hash format.","name":"json"}],"returns":[{"type":{"names":["Phaser.FrameData"]},"description":"A FrameData object containing the parsed frames."}],"memberof":"Phaser.AnimationParser","longname":"Phaser.AnimationParser.JSONDataHash","scope":"static","___s":true},{"meta":{"range":[8624,9019],"filename":"AnimationParser.js","lineno":261,"path":"src\\animation"},"description":"Parse the XML data and extract the animation frame data from it.","kind":"function","name":"XMLData","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["object"]},"description":"The XML data from the Texture Atlas. Must be in Starling XML format.","name":"xml"}],"returns":[{"type":{"names":["Phaser.FrameData"]},"description":"A FrameData object containing the parsed frames."}],"memberof":"Phaser.AnimationParser","longname":"Phaser.AnimationParser.XMLData","scope":"static","___s":true},{"meta":{"range":[0,160],"filename":"gl-matrix.js","lineno":1,"path":"src\\animation\\creature"},"name":"animation/creature/gl-matrix.js","kind":"file","description":"gl-matrix - High performance matrix and vector operations","preserveName":true,"author":["Brandon Jones","Colin MacKenzie IV"],"version":"2.2.2","longname":"animation/creature/gl-matrix.js","scope":"global","___s":true},{"meta":{"range":[837,3690],"filename":"Frame.js","lineno":19,"path":"src\\animation"},"description":"A Frame is a single frame of an animation and is part of a FrameData collection.","kind":"class","classdesc":"Phaser.Frame","params":[{"type":{"names":["number"]},"description":"The index of this Frame within the FrameData set it is being added to.","name":"index"},{"type":{"names":["number"]},"description":"X position of the frame within the texture image.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the frame within the texture image.","name":"y"},{"type":{"names":["number"]},"description":"Width of the frame within the texture image.","name":"width"},{"type":{"names":["number"]},"description":"Height of the frame within the texture image.","name":"height"},{"type":{"names":["string"]},"description":"The name of the frame. In Texture Atlas data this is usually set to the filename.","name":"name"}],"name":"Frame","longname":"Phaser.Frame","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1027,1045],"filename":"Frame.js","lineno":24,"path":"src\\animation"},"properties":[{"type":{"names":["number"]},"description":"The index of this Frame within the FrameData set it is being added to.","name":"index"}],"name":"index","longname":"Phaser.Frame#index","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[1142,1152],"filename":"Frame.js","lineno":29,"path":"src\\animation"},"properties":[{"type":{"names":["number"]},"description":"X position within the image to cut from.","name":"x"}],"name":"x","longname":"Phaser.Frame#x","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[1249,1259],"filename":"Frame.js","lineno":34,"path":"src\\animation"},"properties":[{"type":{"names":["number"]},"description":"Y position within the image to cut from.","name":"y"}],"name":"y","longname":"Phaser.Frame#y","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[1339,1357],"filename":"Frame.js","lineno":39,"path":"src\\animation"},"properties":[{"type":{"names":["number"]},"description":"Width of the frame.","name":"width"}],"name":"width","longname":"Phaser.Frame#width","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[1439,1459],"filename":"Frame.js","lineno":44,"path":"src\\animation"},"properties":[{"type":{"names":["number"]},"description":"Height of the frame.","name":"height"}],"name":"height","longname":"Phaser.Frame#height","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[1581,1597],"filename":"Frame.js","lineno":49,"path":"src\\animation"},"properties":[{"type":{"names":["string"]},"description":"Useful for Texture Atlas files (is set to the filename value).","name":"name"}],"name":"name","longname":"Phaser.Frame#name","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[1707,1743],"filename":"Frame.js","lineno":54,"path":"src\\animation"},"properties":[{"type":{"names":["number"]},"description":"Center X position within the image to cut from.","name":"centerX"}],"name":"centerX","longname":"Phaser.Frame#centerX","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[1853,1890],"filename":"Frame.js","lineno":59,"path":"src\\animation"},"properties":[{"type":{"names":["number"]},"description":"Center Y position within the image to cut from.","name":"centerY"}],"name":"centerY","longname":"Phaser.Frame#centerY","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[2019,2076],"filename":"Frame.js","lineno":64,"path":"src\\animation"},"properties":[{"type":{"names":["number"]},"description":"The distance from the top left to the bottom-right of this Frame.","name":"distance"}],"name":"distance","longname":"Phaser.Frame#distance","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[2186,2206],"filename":"Frame.js","lineno":70,"path":"src\\animation"},"properties":[{"type":{"names":["boolean"]},"description":"Rotated? (not yet implemented)","name":"rotated"}],"defaultvalue":false,"name":"rotated","longname":"Phaser.Frame#rotated","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[2352,2381],"filename":"Frame.js","lineno":76,"path":"src\\animation"},"properties":[{"type":{"names":["string"]},"description":"Either 'cw' or 'ccw', rotation is always 90 degrees.","name":"rotationDirection"}],"defaultvalue":"'cw'","name":"rotationDirection","longname":"Phaser.Frame#rotationDirection","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[2488,2508],"filename":"Frame.js","lineno":82,"path":"src\\animation"},"properties":[{"type":{"names":["boolean"]},"description":"Was it trimmed when packed?","name":"trimmed"}],"defaultvalue":false,"name":"trimmed","longname":"Phaser.Frame#trimmed","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[2626,2650],"filename":"Frame.js","lineno":87,"path":"src\\animation"},"properties":[{"type":{"names":["number"]},"description":"Width of the original sprite before it was trimmed.","name":"sourceSizeW"}],"name":"sourceSizeW","longname":"Phaser.Frame#sourceSizeW","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[2769,2794],"filename":"Frame.js","lineno":92,"path":"src\\animation"},"properties":[{"type":{"names":["number"]},"description":"Height of the original sprite before it was trimmed.","name":"sourceSizeH"}],"name":"sourceSizeH","longname":"Phaser.Frame#sourceSizeH","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[2939,2965],"filename":"Frame.js","lineno":98,"path":"src\\animation"},"properties":[{"type":{"names":["number"]},"description":"X position of the trimmed sprite inside original sprite.","name":"spriteSourceSizeX"}],"defaultvalue":0,"name":"spriteSourceSizeX","longname":"Phaser.Frame#spriteSourceSizeX","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[3110,3136],"filename":"Frame.js","lineno":104,"path":"src\\animation"},"properties":[{"type":{"names":["number"]},"description":"Y position of the trimmed sprite inside original sprite.","name":"spriteSourceSizeY"}],"defaultvalue":0,"name":"spriteSourceSizeY","longname":"Phaser.Frame#spriteSourceSizeY","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[3253,3279],"filename":"Frame.js","lineno":110,"path":"src\\animation"},"properties":[{"type":{"names":["number"]},"description":"Width of the trimmed sprite.","name":"spriteSourceSizeW"}],"defaultvalue":0,"name":"spriteSourceSizeW","longname":"Phaser.Frame#spriteSourceSizeW","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[3397,3423],"filename":"Frame.js","lineno":116,"path":"src\\animation"},"properties":[{"type":{"names":["number"]},"description":"Height of the trimmed sprite.","name":"spriteSourceSizeH"}],"defaultvalue":0,"name":"spriteSourceSizeH","longname":"Phaser.Frame#spriteSourceSizeH","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[3519,3551],"filename":"Frame.js","lineno":121,"path":"src\\animation"},"properties":[{"type":{"names":["number"]},"description":"The right of the Frame (x + width).","name":"right"}],"name":"right","longname":"Phaser.Frame#right","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[3650,3684],"filename":"Frame.js","lineno":126,"path":"src\\animation"},"properties":[{"type":{"names":["number"]},"description":"The bottom of the frame (y + height).","name":"bottom"}],"name":"bottom","longname":"Phaser.Frame#bottom","kind":"member","memberof":"Phaser.Frame","scope":"instance","___s":true},{"meta":{"range":[3729,3991],"filename":"Frame.js","lineno":132,"path":"src\\animation"},"description":"Adjusts of all the Frame properties based on the given width and height values.","kind":"function","name":"resize","params":[{"type":{"names":["integer"]},"description":"The new width of the Frame.","name":"width"},{"type":{"names":["integer"]},"description":"The new height of the Frame.","name":"height"}],"memberof":"Phaser.Frame","longname":"Phaser.Frame#resize","scope":"instance","___s":true},{"meta":{"range":[4423,5182],"filename":"Frame.js","lineno":153,"path":"src\\animation"},"description":"If the frame was trimmed when added to the Texture Atlas this records the trim and source data.","kind":"function","name":"setTrim","params":[{"type":{"names":["boolean"]},"description":"If this frame was trimmed or not.","name":"trimmed"},{"type":{"names":["number"]},"description":"The width of the frame before being trimmed.","name":"actualWidth"},{"type":{"names":["number"]},"description":"The height of the frame before being trimmed.","name":"actualHeight"},{"type":{"names":["number"]},"description":"The destination X position of the trimmed frame for display.","name":"destX"},{"type":{"names":["number"]},"description":"The destination Y position of the trimmed frame for display.","name":"destY"},{"type":{"names":["number"]},"description":"The destination width of the trimmed frame for display.","name":"destWidth"},{"type":{"names":["number"]},"description":"The destination height of the trimmed frame for display.","name":"destHeight"}],"memberof":"Phaser.Frame","longname":"Phaser.Frame#setTrim","scope":"instance","___s":true},{"meta":{"range":[5775,6051],"filename":"Frame.js","lineno":183,"path":"src\\animation"},"description":"Clones this Frame into a new Phaser.Frame object and returns it.\rNote that all properties are cloned, including the name, index and UUID.","kind":"function","name":"clone","returns":[{"type":{"names":["Phaser.Frame"]},"description":"An exact copy of this Frame object."}],"memberof":"Phaser.Frame","longname":"Phaser.Frame#clone","scope":"instance","___s":true},{"meta":{"range":[6401,6652],"filename":"Frame.js","lineno":206,"path":"src\\animation"},"description":"Returns a Rectangle set to the dimensions of this Frame.","kind":"function","name":"getRect","params":[{"type":{"names":["Phaser.Rectangle"]},"optional":true,"description":"A rectangle to copy the frame dimensions to.","name":"out"}],"returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"A rectangle."}],"memberof":"Phaser.Frame","longname":"Phaser.Frame#getRect","scope":"instance","___s":true},{"meta":{"range":[373,687],"filename":"FrameData.js","lineno":13,"path":"src\\animation"},"description":"FrameData is a container for Frame objects, which are the internal representation of animation data in Phaser.","kind":"class","classdesc":"Phaser.FrameData","name":"FrameData","longname":"Phaser.FrameData","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[730,1040],"filename":"FrameData.js","lineno":31,"path":"src\\animation"},"description":"Adds a new Frame to this FrameData collection. Typically called by the Animation.Parser and not directly.","kind":"function","name":"addFrame","params":[{"type":{"names":["Phaser.Frame"]},"description":"The frame to add to this FrameData set.","name":"frame"}],"returns":[{"type":{"names":["Phaser.Frame"]},"description":"The frame that was just added."}],"memberof":"Phaser.FrameData","longname":"Phaser.FrameData#addFrame","scope":"instance","___s":true},{"meta":{"range":[1313,1537],"filename":"FrameData.js","lineno":53,"path":"src\\animation"},"description":"Get a Frame by its numerical index.","kind":"function","name":"getFrame","params":[{"type":{"names":["number"]},"description":"The index of the frame you want to get.","name":"index"}],"returns":[{"type":{"names":["Phaser.Frame"]},"description":"The frame, if found."}],"memberof":"Phaser.FrameData","longname":"Phaser.FrameData#getFrame","scope":"instance","___s":true},{"meta":{"range":[1719,1942],"filename":"FrameData.js","lineno":71,"path":"src\\animation"},"description":"Get a Frame by its frame name.","kind":"function","name":"getFrameByName","params":[{"type":{"names":["string"]},"description":"The name of the frame you want to get.","name":"name"}],"returns":[{"type":{"names":["Phaser.Frame"]},"description":"The frame, if found."}],"memberof":"Phaser.FrameData","longname":"Phaser.FrameData#getFrameByName","scope":"instance","___s":true},{"meta":{"range":[2162,2422],"filename":"FrameData.js","lineno":89,"path":"src\\animation"},"description":"Check if there is a Frame with the given name.","kind":"function","name":"checkFrameName","params":[{"type":{"names":["string"]},"description":"The name of the frame you want to check.","name":"name"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the frame is found, otherwise false."}],"memberof":"Phaser.FrameData","longname":"Phaser.FrameData#checkFrameName","scope":"instance","___s":true},{"meta":{"range":[2599,2875],"filename":"FrameData.js","lineno":107,"path":"src\\animation"},"description":"Makes a copy of this FrameData including copies (not references) to all of the Frames it contains.","kind":"function","name":"clone","returns":[{"type":{"names":["Phaser.FrameData"]},"description":"A clone of this object, including clones of the Frame objects it contains."}],"memberof":"Phaser.FrameData","longname":"Phaser.FrameData#clone","scope":"instance","___s":true},{"meta":{"range":[3401,3940],"filename":"FrameData.js","lineno":135,"path":"src\\animation"},"description":"Returns a range of frames based on the given start and end frame indexes and returns them in an Array.","kind":"function","name":"getFrameRange","params":[{"type":{"names":["number"]},"description":"The starting frame index.","name":"start"},{"type":{"names":["number"]},"description":"The ending frame index.","name":"end"},{"type":{"names":["Array"]},"optional":true,"description":"If given the results will be appended to the end of this array otherwise a new array will be created.","name":"output"}],"returns":[{"type":{"names":["Array"]},"description":"An array of Frames between the start and end index values, or an empty array if none were found."}],"memberof":"Phaser.FrameData","longname":"Phaser.FrameData#getFrameRange","scope":"instance","___s":true},{"meta":{"range":[4201,4997],"filename":"FrameData.js","lineno":157,"path":"src\\animation"},"description":"Returns all of the Frames in this FrameData set where the frame index is found in the input array.\rThe frames are returned in the output array, or if none is provided in a new Array object.","kind":"function","name":"getFrames","params":[{"type":{"names":["Array"]},"optional":true,"description":"An Array containing the indexes of the frames to retrieve. If the array is empty or undefined then all frames in the FrameData are returned.","name":"frames"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Are the given frames using numeric indexes (default) or strings? (false)","name":"useNumericIndex"},{"type":{"names":["Array"]},"optional":true,"description":"If given the results will be appended to the end of this array otherwise a new array will be created.","name":"output"}],"returns":[{"type":{"names":["Array"]},"description":"An array of all Frames in this FrameData set matching the given names or IDs."}],"memberof":"Phaser.FrameData","longname":"Phaser.FrameData#getFrames","scope":"instance","___s":true},{"meta":{"range":[6150,6902],"filename":"FrameData.js","lineno":204,"path":"src\\animation"},"description":"Returns all of the Frame indexes in this FrameData set.\rThe frames indexes are returned in the output array, or if none is provided in a new Array object.","kind":"function","name":"getFrameIndexes","params":[{"type":{"names":["Array"]},"optional":true,"description":"An Array containing the indexes of the frames to retrieve. If undefined or the array is empty then all frames in the FrameData are returned.","name":"frames"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Are the given frames using numeric indexes (default) or strings? (false)","name":"useNumericIndex"},{"type":{"names":["Array"]},"optional":true,"description":"If given the results will be appended to the end of this array otherwise a new array will be created.","name":"output"}],"returns":[{"type":{"names":["Array"]},"description":"An array of all Frame indexes matching the given names or IDs."}],"memberof":"Phaser.FrameData","longname":"Phaser.FrameData#getFrameIndexes","scope":"instance","___s":true},{"meta":{"range":[8084,8231],"filename":"FrameData.js","lineno":251,"path":"src\\animation"},"description":"Destroys this FrameData collection by nulling the _frames and _frameNames arrays.","kind":"function","name":"destroy","memberof":"Phaser.FrameData","longname":"Phaser.FrameData#destroy","scope":"instance","___s":true},{"meta":{"range":[8406,8538],"filename":"FrameData.js","lineno":267,"path":"src\\animation"},"name":"total","properties":[{"type":{"names":["number"]},"description":"The total number of frames in this FrameData set.","name":"total"}],"readonly":true,"memberof":"Phaser.FrameData","longname":"Phaser.FrameData#total","scope":"instance","kind":"member","___s":true},{"meta":{"range":[929,6397],"filename":"Camera.js","lineno":20,"path":"src\\core"},"description":"A Camera is your view into the game world. It has a position and size and renders only those objects within its field of view.\rThe game automatically creates a single Stage sized camera on boot. Move the camera around the world with Phaser.Camera.x/y","kind":"class","classdesc":"Phaser.Camera","params":[{"type":{"names":["Phaser.Game"]},"description":"Game reference to the currently running game.","name":"game"},{"type":{"names":["number"]},"description":"Not being used at the moment, will be when Phaser supports multiple camera","name":"id"},{"type":{"names":["number"]},"description":"Position of the camera on the X axis","name":"x"},{"type":{"names":["number"]},"description":"Position of the camera on the Y axis","name":"y"},{"type":{"names":["number"]},"description":"The width of the view rectangle","name":"width"},{"type":{"names":["number"]},"description":"The height of the view rectangle","name":"height"}],"name":"Camera","longname":"Phaser.Camera","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1093,1109],"filename":"Camera.js","lineno":25,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running Game.","name":"game"}],"name":"game","longname":"Phaser.Camera#game","kind":"member","memberof":"Phaser.Camera","scope":"instance","___s":true},{"meta":{"range":[1206,1229],"filename":"Camera.js","lineno":30,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.World"]},"description":"A reference to the game world.","name":"world"}],"name":"world","longname":"Phaser.Camera#world","kind":"member","memberof":"Phaser.Camera","scope":"instance","___s":true},{"meta":{"range":[1347,1358],"filename":"Camera.js","lineno":36,"path":"src\\core"},"properties":[{"type":{"names":["number"]},"description":"Reserved for future multiple camera set-ups.","name":"id"}],"defaultvalue":0,"name":"id","longname":"Phaser.Camera#id","kind":"member","memberof":"Phaser.Camera","scope":"instance","___s":true},{"meta":{"range":[1773,1826],"filename":"Camera.js","lineno":45,"path":"src\\core"},"description":"Camera view.\rThe view into the world we wish to render (by default the game dimensions).\rThe x/y values are in world coordinates, not screen coordinates, the width/height is how many pixels to render.\rSprites outside of this view are not rendered if Sprite.autoCull is set to `true`. Otherwise they are always rendered.","properties":[{"type":{"names":["Phaser.Rectangle"]},"name":"view"}],"name":"view","longname":"Phaser.Camera#view","kind":"member","memberof":"Phaser.Camera","scope":"instance","___s":true},{"meta":{"range":[2398,2453],"filename":"Camera.js","lineno":54,"path":"src\\core"},"description":"The Camera is bound to this Rectangle and cannot move outside of it. By default it is enabled and set to the size of the World.\rThe Rectangle can be located anywhere in the world and updated as often as you like. If you don't wish the Camera to be bound\rat all then set this to null. The values can be anything and are in World coordinates, with 0,0 being the top-left of the world.","properties":[{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle in which the Camera is bounded. Set to null to allow for movement anywhere.","name":"bounds"}],"name":"bounds","longname":"Phaser.Camera#bounds","kind":"member","memberof":"Phaser.Camera","scope":"instance","___s":true},{"meta":{"range":[2590,2610],"filename":"Camera.js","lineno":59,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Rectangle"]},"description":"Moving inside this Rectangle will not cause the camera to move.","name":"deadzone"}],"name":"deadzone","longname":"Phaser.Camera#deadzone","kind":"member","memberof":"Phaser.Camera","scope":"instance","___s":true},{"meta":{"range":[2728,2747],"filename":"Camera.js","lineno":65,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"Whether this camera is visible or not.","name":"visible"}],"defaultvalue":true,"name":"visible","longname":"Phaser.Camera#visible","kind":"member","memberof":"Phaser.Camera","scope":"instance","___s":true},{"meta":{"range":[3010,3029],"filename":"Camera.js","lineno":71,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"If a Camera has roundPx set to `true` it will call `view.floor` as part of its update loop, keeping its boundary to integer values. Set this to `false` to disable this from happening.","name":"roundPx"}],"defaultvalue":true,"name":"roundPx","longname":"Phaser.Camera#roundPx","kind":"member","memberof":"Phaser.Camera","scope":"instance","___s":true},{"meta":{"range":[3151,3188],"filename":"Camera.js","lineno":76,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"Whether this camera is flush with the World Bounds or not.","name":"atLimit"}],"name":"atLimit","longname":"Phaser.Camera#atLimit","kind":"member","memberof":"Phaser.Camera","scope":"instance","___s":true},{"meta":{"range":[3351,3369],"filename":"Camera.js","lineno":82,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Sprite"]},"description":"If the camera is tracking a Sprite, this is a reference to it, otherwise null.","name":"target"}],"defaultvalue":null,"name":"target","longname":"Phaser.Camera#target","kind":"member","memberof":"Phaser.Camera","scope":"instance","___s":true},{"meta":{"range":[3524,3549],"filename":"Camera.js","lineno":87,"path":"src\\core"},"properties":[{"type":{"names":["PIXI.DisplayObject"]},"description":"The display object to which all game objects are added. Set by World.boot.","name":"displayObject"}],"name":"displayObject","longname":"Phaser.Camera#displayObject","kind":"member","memberof":"Phaser.Camera","scope":"instance","___s":true},{"meta":{"range":[3703,3720],"filename":"Camera.js","lineno":92,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The scale of the display object to which all game objects are added. Set by World.boot.","name":"scale"}],"name":"scale","longname":"Phaser.Camera#scale","kind":"member","memberof":"Phaser.Camera","scope":"instance","___s":true},{"meta":{"range":[3894,3914],"filename":"Camera.js","lineno":98,"path":"src\\core"},"properties":[{"type":{"names":["number"]},"description":"The total number of Sprites with `autoCull` set to `true` that are visible by this Camera.","name":"totalInView"}],"readonly":true,"name":"totalInView","longname":"Phaser.Camera#totalInView","kind":"member","memberof":"Phaser.Camera","scope":"instance","___s":true},{"meta":{"range":[4406,4440],"filename":"Camera.js","lineno":109,"path":"src\\core"},"description":"The linear interpolation value to use when following a target.\rThe default values of 1 means the camera will instantly snap to the target coordinates.\rA lower value, such as 0.1 means the camera will more slowly track the target, giving\ra smooth transition. You can set the horizontal and vertical values independently, and also\radjust this value in real-time during your game.","properties":[{"type":{"names":["Phaser.Point"]},"name":"lerp"}],"name":"lerp","longname":"Phaser.Camera#lerp","kind":"member","memberof":"Phaser.Camera","scope":"instance","___s":true},{"meta":{"range":[4583,4625],"filename":"Camera.js","lineno":114,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"This signal is dispatched when the camera shake effect completes.","name":"onShakeComplete"}],"name":"onShakeComplete","longname":"Phaser.Camera#onShakeComplete","kind":"member","memberof":"Phaser.Camera","scope":"instance","___s":true},{"meta":{"range":[4768,4810],"filename":"Camera.js","lineno":119,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"This signal is dispatched when the camera flash effect completes.","name":"onFlashComplete"}],"name":"onFlashComplete","longname":"Phaser.Camera#onFlashComplete","kind":"member","memberof":"Phaser.Camera","scope":"instance","___s":true},{"meta":{"range":[5179,5220],"filename":"Camera.js","lineno":128,"path":"src\\core"},"description":"This signal is dispatched when the camera fade effect completes.\rWhen the fade effect completes you will be left with the screen black (or whatever\rcolor you faded to). In order to reset this call `Camera.resetFX`. This is called\rautomatically when you change State.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onFadeComplete"}],"name":"onFadeComplete","longname":"Phaser.Camera#onFadeComplete","kind":"member","memberof":"Phaser.Camera","scope":"instance","___s":true},{"meta":{"range":[5378,5392],"filename":"Camera.js","lineno":135,"path":"src\\core"},"description":"The Graphics object used to handle camera fx such as fade and flash.","properties":[{"type":{"names":["Phaser.Graphics"]},"name":"fx"}],"access":"protected","name":"fx","longname":"Phaser.Camera#fx","kind":"member","memberof":"Phaser.Camera","scope":"instance","___s":true},{"meta":{"range":[6442,6473],"filename":"Camera.js","lineno":189,"path":"src\\core"},"kind":"constant","type":{"names":["number"]},"name":"FOLLOW_LOCKON","longname":"Phaser.Camera.FOLLOW_LOCKON","memberof":"Phaser.Camera","scope":"static","___s":true},{"meta":{"range":[6518,6553],"filename":"Camera.js","lineno":195,"path":"src\\core"},"kind":"constant","type":{"names":["number"]},"name":"FOLLOW_PLATFORMER","longname":"Phaser.Camera.FOLLOW_PLATFORMER","memberof":"Phaser.Camera","scope":"static","___s":true},{"meta":{"range":[6598,6630],"filename":"Camera.js","lineno":201,"path":"src\\core"},"kind":"constant","type":{"names":["number"]},"name":"FOLLOW_TOPDOWN","longname":"Phaser.Camera.FOLLOW_TOPDOWN","memberof":"Phaser.Camera","scope":"static","___s":true},{"meta":{"range":[6675,6713],"filename":"Camera.js","lineno":207,"path":"src\\core"},"kind":"constant","type":{"names":["number"]},"name":"FOLLOW_TOPDOWN_TIGHT","longname":"Phaser.Camera.FOLLOW_TOPDOWN_TIGHT","memberof":"Phaser.Camera","scope":"static","___s":true},{"meta":{"range":[6758,6786],"filename":"Camera.js","lineno":213,"path":"src\\core"},"kind":"constant","type":{"names":["number"]},"name":"SHAKE_BOTH","longname":"Phaser.Camera.SHAKE_BOTH","memberof":"Phaser.Camera","scope":"static","___s":true},{"meta":{"range":[6831,6865],"filename":"Camera.js","lineno":219,"path":"src\\core"},"kind":"constant","type":{"names":["number"]},"name":"SHAKE_HORIZONTAL","longname":"Phaser.Camera.SHAKE_HORIZONTAL","memberof":"Phaser.Camera","scope":"static","___s":true},{"meta":{"range":[6910,6942],"filename":"Camera.js","lineno":225,"path":"src\\core"},"kind":"constant","type":{"names":["number"]},"name":"SHAKE_VERTICAL","longname":"Phaser.Camera.SHAKE_VERTICAL","memberof":"Phaser.Camera","scope":"static","___s":true},{"meta":{"range":[6988,7018],"filename":"Camera.js","lineno":231,"path":"src\\core"},"kind":"constant","type":{"names":["boolean"]},"name":"ENABLE_FX","longname":"Phaser.Camera.ENABLE_FX","memberof":"Phaser.Camera","scope":"static","___s":true},{"meta":{"range":[7532,7651],"filename":"Camera.js","lineno":258,"path":"src\\core"},"description":"Camera preUpdate. Sets the total view counter to zero.","kind":"function","name":"preUpdate","memberof":"Phaser.Camera","longname":"Phaser.Camera#preUpdate","scope":"instance","___s":true},{"meta":{"range":[7732,9046],"filename":"Camera.js","lineno":269,"path":"src\\core"},"description":"Tell the camera which sprite to follow.\r\rYou can set the follow type and a linear interpolation value.\rUse low lerp values (such as 0.1) to automatically smooth the camera motion.\r\rIf you find you're getting a slight \"jitter\" effect when following a Sprite it's probably to do with sub-pixel rendering of the Sprite position.\rThis can be disabled by setting `game.renderer.renderSession.roundPixels = true` to force full pixel rendering.","kind":"function","name":"follow","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.Text"]},"description":"The object you want the camera to track. Set to null to not follow anything.","name":"target"},{"type":{"names":["number"]},"optional":true,"description":"Leverage one of the existing \"deadzone\" presets. If you use a custom deadzone, ignore this parameter and manually specify the deadzone after calling follow().","name":"style"},{"type":{"names":["float"]},"optional":true,"defaultvalue":1,"description":"A value between 0 and 1. This value specifies the amount of linear interpolation to use when horizontally tracking the target. The closer the value to 1, the faster the camera will track.","name":"lerpX"},{"type":{"names":["float"]},"optional":true,"defaultvalue":1,"description":"A value between 0 and 1. This value specifies the amount of linear interpolation to use when vertically tracking the target. The closer the value to 1, the faster the camera will track.","name":"lerpY"}],"memberof":"Phaser.Camera","longname":"Phaser.Camera#follow","scope":"instance","___s":true},{"meta":{"range":[10438,10595],"filename":"Camera.js","lineno":324,"path":"src\\core"},"description":"Sets the Camera follow target to null, stopping it from following an object if it's doing so.","kind":"function","name":"unfollow","memberof":"Phaser.Camera","longname":"Phaser.Camera#unfollow","scope":"instance","___s":true},{"meta":{"range":[10673,10894],"filename":"Camera.js","lineno":335,"path":"src\\core"},"description":"Move the camera focus on a display object instantly.","kind":"function","name":"focusOn","params":[{"type":{"names":["any"]},"description":"The display object to focus the camera on. Must have visible x/y properties.","name":"displayObject"}],"memberof":"Phaser.Camera","longname":"Phaser.Camera#focusOn","scope":"instance","___s":true},{"meta":{"range":[11085,11267],"filename":"Camera.js","lineno":346,"path":"src\\core"},"description":"Move the camera focus on a location instantly.","kind":"function","name":"focusOnXY","params":[{"type":{"names":["number"]},"description":"X position.","name":"x"},{"type":{"names":["number"]},"description":"Y position.","name":"y"}],"memberof":"Phaser.Camera","longname":"Phaser.Camera#focusOnXY","scope":"instance","___s":true},{"meta":{"range":[11423,12663],"filename":"Camera.js","lineno":358,"path":"src\\core"},"description":"This creates a camera shake effect. It works by applying a random amount of additional\rspacing on the x and y axis each frame. You can control the intensity and duration\rof the effect, and if it should effect both axis or just one.\r\rWhen the shake effect ends the signal Camera.onShakeComplete is dispatched.","kind":"function","name":"shake","params":[{"type":{"names":["float"]},"optional":true,"defaultvalue":0.05,"description":"The intensity of the camera shake. Given as a percentage of the camera size representing the maximum distance that the camera can move while shaking.","name":"intensity"},{"type":{"names":["number"]},"optional":true,"defaultvalue":500,"description":"The duration of the shake effect in milliseconds.","name":"duration"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If a camera shake effect is already running and force is true it will replace the previous effect, resetting the duration.","name":"force"},{"type":{"names":["number"]},"optional":true,"defaultvalue":"Phaser.Camera.SHAKE_BOTH","description":"The directions in which the camera can shake. Either Phaser.Camera.SHAKE_BOTH, Phaser.Camera.SHAKE_HORIZONTAL or Phaser.Camera.SHAKE_VERTICAL.","name":"direction"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Is the effect allowed to shake the camera beyond its bounds (if set?).","name":"shakeBounds"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the shake effect was started, otherwise false."}],"memberof":"Phaser.Camera","longname":"Phaser.Camera#shake","scope":"instance","___s":true},{"meta":{"range":[13690,14530],"filename":"Camera.js","lineno":401,"path":"src\\core"},"description":"This creates a camera flash effect. It works by filling the game with the solid fill\rcolor specified, and then fading it away to alpha 0 over the duration given.\r\rYou can use this for things such as hit feedback effects.\r\rWhen the effect ends the signal Camera.onFlashComplete is dispatched.","kind":"function","name":"flash","params":[{"type":{"names":["numer"]},"optional":true,"defaultvalue":"0xffffff","description":"The color of the flash effect. I.e. 0xffffff for white, 0xff0000 for red, etc.","name":"color"},{"type":{"names":["number"]},"optional":true,"defaultvalue":500,"description":"The duration of the flash effect in milliseconds.","name":"duration"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If a camera flash or fade effect is already running and force is true it will replace the previous effect, resetting the duration.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the effect was started, otherwise false."}],"memberof":"Phaser.Camera","longname":"Phaser.Camera#flash","scope":"instance","___s":true},{"meta":{"range":[15146,16303],"filename":"Camera.js","lineno":441,"path":"src\\core"},"description":"This creates a camera fade effect. It works by filling the game with the\rcolor specified, over the duration given, ending with a solid fill.\r\rYou can use this for things such as transitioning to a new scene.\r\rThe game will be left 'filled' at the end of this effect, likely obscuring\reverything. In order to reset it you can call `Camera.resetFX` and it will clear the\rfade. Or you can call `Camera.flash` with the same color as the fade, and it will\rreverse the process, bringing the game back into view again.\r\rWhen the effect ends the signal Camera.onFadeComplete is dispatched.","kind":"function","name":"fade","params":[{"type":{"names":["numer"]},"optional":true,"defaultvalue":"0x000000","description":"The color the game will fade to. I.e. 0x000000 for black, 0xff0000 for red, etc.","name":"color"},{"type":{"names":["number"]},"optional":true,"defaultvalue":500,"description":"The duration of the fade in milliseconds.","name":"duration"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If a camera flash or fade effect is already running and force is true it will replace the previous effect, resetting the duration.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the effect was started, otherwise false."}],"memberof":"Phaser.Camera","longname":"Phaser.Camera#fade","scope":"instance","___s":true},{"meta":{"range":[16918,17073],"filename":"Camera.js","lineno":486,"path":"src\\core"},"description":"The camera update loop. This is called automatically by the core game loop.","kind":"function","name":"update","access":"protected","memberof":"Phaser.Camera","longname":"Phaser.Camera#update","scope":"instance","___s":true},{"meta":{"range":[21318,21439],"filename":"Camera.js","lineno":643,"path":"src\\core"},"description":"Update the Camera bounds to match the game world.","kind":"function","name":"setBoundsToWorld","memberof":"Phaser.Camera","longname":"Phaser.Camera#setBoundsToWorld","scope":"instance","___s":true},{"meta":{"range":[21603,21811],"filename":"Camera.js","lineno":657,"path":"src\\core"},"description":"Method called to ensure the camera doesn't venture outside of the game world.\rCalled automatically by Camera.update.","kind":"function","name":"checkBounds","access":"protected","memberof":"Phaser.Camera","longname":"Phaser.Camera#checkBounds","scope":"instance","___s":true},{"meta":{"range":[23660,23941],"filename":"Camera.js","lineno":725,"path":"src\\core"},"description":"A helper function to set both the X and Y properties of the camera at once\rwithout having to use game.camera.x and game.camera.y.","kind":"function","name":"setPosition","params":[{"type":{"names":["number"]},"description":"X position.","name":"x"},{"type":{"names":["number"]},"description":"Y position.","name":"y"}],"memberof":"Phaser.Camera","longname":"Phaser.Camera#setPosition","scope":"instance","___s":true},{"meta":{"range":[24132,24374],"filename":"Camera.js","lineno":745,"path":"src\\core"},"description":"Sets the size of the view rectangle given the width and height in parameters.","kind":"function","name":"setSize","params":[{"type":{"names":["number"]},"description":"The desired width.","name":"width"},{"type":{"names":["number"]},"description":"The desired height.","name":"height"}],"memberof":"Phaser.Camera","longname":"Phaser.Camera#setSize","scope":"instance","___s":true},{"meta":{"range":[24505,24762],"filename":"Camera.js","lineno":759,"path":"src\\core"},"description":"Resets the camera back to 0,0 and un-follows any object it may have been tracking.\rAlso immediately resets any camera effects that may have been running such as\rshake, flash or fade.","kind":"function","name":"reset","memberof":"Phaser.Camera","longname":"Phaser.Camera#reset","scope":"instance","___s":true},{"meta":{"range":[24955,25172],"filename":"Camera.js","lineno":779,"path":"src\\core"},"description":"Resets any active FX, such as a fade or flash and immediately clears it.\rUseful to calling after a fade in order to remove the fade from the Stage.","kind":"function","name":"resetFX","memberof":"Phaser.Camera","longname":"Phaser.Camera#resetFX","scope":"instance","___s":true},{"meta":{"range":[25366,25567],"filename":"Camera.js","lineno":799,"path":"src\\core"},"description":"The Cameras x coordinate. This value is automatically clamped if it falls outside of the World bounds.","name":"x","properties":[{"type":{"names":["number"]},"description":"Gets or sets the cameras x position.","name":"x"}],"memberof":"Phaser.Camera","longname":"Phaser.Camera#x","scope":"instance","kind":"member","___s":true},{"meta":{"range":[25853,26054],"filename":"Camera.js","lineno":824,"path":"src\\core"},"description":"The Cameras y coordinate. This value is automatically clamped if it falls outside of the World bounds.","name":"y","properties":[{"type":{"names":["number"]},"description":"Gets or sets the cameras y position.","name":"y"}],"memberof":"Phaser.Camera","longname":"Phaser.Camera#y","scope":"instance","kind":"member","___s":true},{"meta":{"range":[26340,26584],"filename":"Camera.js","lineno":849,"path":"src\\core"},"description":"The Cameras position. This value is automatically clamped if it falls outside of the World bounds.","name":"position","properties":[{"type":{"names":["Phaser.Point"]},"description":"Gets or sets the cameras xy position using Phaser.Point object.","name":"position"}],"memberof":"Phaser.Camera","longname":"Phaser.Camera#position","scope":"instance","kind":"member","___s":true},{"meta":{"range":[27051,27252],"filename":"Camera.js","lineno":877,"path":"src\\core"},"description":"The Cameras width. By default this is the same as the Game size and should not be adjusted for now.","name":"width","properties":[{"type":{"names":["number"]},"description":"Gets or sets the cameras width.","name":"width"}],"memberof":"Phaser.Camera","longname":"Phaser.Camera#width","scope":"instance","kind":"member","___s":true},{"meta":{"range":[27469,27674],"filename":"Camera.js","lineno":898,"path":"src\\core"},"description":"The Cameras height. By default this is the same as the Game size and should not be adjusted for now.","name":"height","properties":[{"type":{"names":["number"]},"description":"Gets or sets the cameras height.","name":"height"}],"memberof":"Phaser.Camera","longname":"Phaser.Camera#height","scope":"instance","kind":"member","___s":true},{"meta":{"range":[27896,28054],"filename":"Camera.js","lineno":920,"path":"src\\core"},"description":"The Cameras shake intensity.","name":"shakeIntensity","properties":[{"type":{"names":["number"]},"description":"Gets or sets the cameras shake intensity.","name":"shakeIntensity"}],"memberof":"Phaser.Camera","longname":"Phaser.Camera#shakeIntensity","scope":"instance","kind":"member","___s":true},{"meta":{"range":[725,2584],"filename":"Create.js","lineno":18,"path":"src\\core"},"description":"The Phaser.Create class is a collection of smaller helper methods that allow you to generate game content\rquickly and easily, without the need for any external files. You can create textures for sprites and in\rcoming releases we'll add dynamic sound effect generation support as well (like sfxr).\r\rAccess this via `Game.create` (`this.game.create` from within a State object)","kind":"class","classdesc":"Phaser.Create","params":[{"type":{"names":["Phaser.Game"]},"description":"Game reference to the currently running game.","name":"game"}],"name":"Create","longname":"Phaser.Create","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[864,880],"filename":"Create.js","lineno":23,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running Game.","name":"game"}],"name":"game","longname":"Phaser.Create#game","kind":"member","memberof":"Phaser.Create","scope":"instance","___s":true},{"meta":{"range":[1012,1027],"filename":"Create.js","lineno":28,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.BitmapData"]},"description":"The internal BitmapData Create uses to generate textures from.","name":"bmd"}],"name":"bmd","longname":"Phaser.Create#bmd","kind":"member","memberof":"Phaser.Create","scope":"instance","___s":true},{"meta":{"range":[1131,1149],"filename":"Create.js","lineno":33,"path":"src\\core"},"properties":[{"type":{"names":["HTMLCanvasElement"]},"description":"The canvas the BitmapData uses.","name":"canvas"}],"name":"canvas","longname":"Phaser.Create#canvas","kind":"member","memberof":"Phaser.Create","scope":"instance","___s":true},{"meta":{"range":[1259,1274],"filename":"Create.js","lineno":38,"path":"src\\core"},"properties":[{"type":{"names":["CanvasRenderingContext2D"]},"description":"The 2d context of the canvas.","name":"context"}],"name":"ctx","longname":"Phaser.Create#ctx","kind":"member","memberof":"Phaser.Create","scope":"instance","___s":true},{"meta":{"range":[1397,2578],"filename":"Create.js","lineno":43,"path":"src\\core"},"properties":[{"type":{"names":["array"]},"description":"A range of 16 color palettes for use with sprite generation.","name":"palettes"}],"name":"palettes","longname":"Phaser.Create#palettes","kind":"member","memberof":"Phaser.Create","scope":"instance","___s":true},{"meta":{"range":[2703,2733],"filename":"Create.js","lineno":58,"path":"src\\core"},"description":"A 16 color palette by [Arne](http://androidarts.com/palette/16pal.htm)","kind":"constant","type":{"names":["number"]},"name":"PALETTE_ARNE","longname":"Phaser.Create.PALETTE_ARNE","memberof":"Phaser.Create","scope":"static","___s":true},{"meta":{"range":[2814,2843],"filename":"Create.js","lineno":65,"path":"src\\core"},"description":"A 16 color JMP inspired palette.","kind":"constant","type":{"names":["number"]},"name":"PALETTE_JMP","longname":"Phaser.Create.PALETTE_JMP","memberof":"Phaser.Create","scope":"static","___s":true},{"meta":{"range":[2924,2953],"filename":"Create.js","lineno":72,"path":"src\\core"},"description":"A 16 color CGA inspired palette.","kind":"constant","type":{"names":["number"]},"name":"PALETTE_CGA","longname":"Phaser.Create.PALETTE_CGA","memberof":"Phaser.Create","scope":"static","___s":true},{"meta":{"range":[3034,3063],"filename":"Create.js","lineno":79,"path":"src\\core"},"description":"A 16 color C64 inspired palette.","kind":"constant","type":{"names":["number"]},"name":"PALETTE_C64","longname":"Phaser.Create.PALETTE_C64","memberof":"Phaser.Create","scope":"static","___s":true},{"meta":{"range":[3175,3217],"filename":"Create.js","lineno":86,"path":"src\\core"},"description":"A 16 color palette inspired by Japanese computers like the MSX.","kind":"constant","type":{"names":["number"]},"name":"PALETTE_JAPANESE_MACHINE","longname":"Phaser.Create.PALETTE_JAPANESE_MACHINE","memberof":"Phaser.Create","scope":"static","___s":true},{"meta":{"range":[3257,4684],"filename":"Create.js","lineno":90,"path":"src\\core"},"description":"Generates a new PIXI.Texture from the given data, which can be applied to a Sprite.\r\rThis allows you to create game graphics quickly and easily, with no external files but that use actual proper images\rrather than Phaser.Graphics objects, which are expensive to render and limited in scope.\r\rEach element of the array is a string holding the pixel color values, as mapped to one of the Phaser.Create PALETTE consts.\r\rFor example:\r\r`var data = [\r  ' 333 ',\r  ' 777 ',\r  'E333E',\r  ' 333 ',\r  ' 3 3 '\r];`\r\r`game.create.texture('bob', data);`\r\rThe above will create a new texture called `bob`, which will look like a little man wearing a hat. You can then use it\rfor sprites the same way you use any other texture: `game.add.sprite(0, 0, 'bob');`","kind":"function","name":"texture","params":[{"type":{"names":["string"]},"description":"The key used to store this texture in the Phaser Cache.","name":"key"},{"type":{"names":["array"]},"description":"An array of pixel data.","name":"data"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":8,"description":"The width of each pixel.","name":"pixelWidth"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":8,"description":"The height of each pixel.","name":"pixelHeight"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The palette to use when rendering the texture. One of the Phaser.Create.PALETTE consts.","name":"palette"}],"returns":[{"type":{"names":["PIXI.Texture"]},"description":"The newly generated texture."}],"memberof":"Phaser.Create","longname":"Phaser.Create#texture","scope":"instance","___s":true},{"meta":{"range":[5881,6583],"filename":"Create.js","lineno":162,"path":"src\\core"},"description":"Creates a grid texture based on the given dimensions.","kind":"function","name":"grid","params":[{"type":{"names":["string"]},"description":"The key used to store this texture in the Phaser Cache.","name":"key"},{"type":{"names":["integer"]},"description":"The width of the grid in pixels.","name":"width"},{"type":{"names":["integer"]},"description":"The height of the grid in pixels.","name":"height"},{"type":{"names":["integer"]},"description":"The width of the grid cells in pixels.","name":"cellWidth"},{"type":{"names":["integer"]},"description":"The height of the grid cells in pixels.","name":"cellHeight"},{"type":{"names":["string"]},"description":"The color to draw the grid lines in. Should be a Canvas supported color string like `#ff5500` or `rgba(200,50,3,0.5)`.","name":"color"}],"returns":[{"type":{"names":["PIXI.Texture"]},"description":"The newly generated texture."}],"memberof":"Phaser.Create","longname":"Phaser.Create#grid","scope":"instance","___s":true},{"meta":{"range":[762,3356],"filename":"Filter.js","lineno":19,"path":"src\\core"},"description":"This is a base Filter class to use for any Phaser filter development.\r\rThe vast majority of filters (including all of those that ship with Phaser) use fragment shaders, and\rtherefore only work in WebGL and are not supported by Canvas at all.","kind":"class","classdesc":"Phaser.Filter","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["object"]},"description":"Uniform mappings object","name":"uniforms"},{"type":{"names":["Array","string"]},"description":"The fragment shader code. Either an array, one element per line of code, or a string.","name":"fragmentSrc"}],"name":"Filter","longname":"Phaser.Filter","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[924,940],"filename":"Filter.js","lineno":24,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"game","longname":"Phaser.Filter#game","kind":"member","memberof":"Phaser.Filter","scope":"instance","___s":true},{"meta":{"range":[1098,1129],"filename":"Filter.js","lineno":30,"path":"src\\core"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object, either Phaser.WEBGL_FILTER or Phaser.CANVAS_FILTER.","name":"type"}],"name":"type","longname":"Phaser.Filter#type","kind":"member","memberof":"Phaser.Filter","scope":"instance","___s":true},{"meta":{"range":[1654,1671],"filename":"Filter.js","lineno":50,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"Internal PIXI var.","name":"dirty"}],"defaultvalue":true,"name":"dirty","longname":"Phaser.Filter#dirty","kind":"member","memberof":"Phaser.Filter","scope":"instance","___s":true},{"meta":{"range":[1768,1784],"filename":"Filter.js","lineno":56,"path":"src\\core"},"properties":[{"type":{"names":["number"]},"description":"Internal PIXI var.","name":"padding"}],"defaultvalue":0,"name":"padding","longname":"Phaser.Filter#padding","kind":"member","memberof":"Phaser.Filter","scope":"instance","___s":true},{"meta":{"range":[1933,1968],"filename":"Filter.js","lineno":61,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The previous position of the pointer (we don't update the uniform if the same)","name":"prevPoint"}],"name":"prevPoint","longname":"Phaser.Filter#prevPoint","kind":"member","memberof":"Phaser.Filter","scope":"instance","___s":true},{"meta":{"range":[2276,3018],"filename":"Filter.js","lineno":72,"path":"src\\core"},"properties":[{"type":{"names":["object"]},"description":"Default uniform mappings. Compatible with ShaderToy and GLSLSandbox.","name":"uniforms"}],"name":"uniforms","longname":"Phaser.Filter#uniforms","kind":"member","memberof":"Phaser.Filter","scope":"instance","___s":true},{"meta":{"range":[3314,3350],"filename":"Filter.js","lineno":98,"path":"src\\core"},"properties":[{"type":{"names":["array","string"]},"description":"The fragment shader code.","name":"fragmentSrc"}],"name":"fragmentSrc","longname":"Phaser.Filter#fragmentSrc","kind":"member","memberof":"Phaser.Filter","scope":"instance","___s":true},{"meta":{"range":[3396,3471],"filename":"Filter.js","lineno":104,"path":"src\\core"},"description":"Should be over-ridden.","kind":"function","name":"init","memberof":"Phaser.Filter","longname":"Phaser.Filter#init","scope":"instance","___s":true},{"meta":{"range":[3598,3818],"filename":"Filter.js","lineno":112,"path":"src\\core"},"description":"Set the resolution uniforms on the filter.","kind":"function","name":"setResolution","params":[{"type":{"names":["number"]},"description":"The width of the display.","name":"width"},{"type":{"names":["number"]},"description":"The height of the display.","name":"height"}],"memberof":"Phaser.Filter","longname":"Phaser.Filter#setResolution","scope":"instance","___s":true},{"meta":{"range":[3988,4194],"filename":"Filter.js","lineno":125,"path":"src\\core"},"description":"Updates the filter.","kind":"function","name":"update","params":[{"type":{"names":["Phaser.Pointer"]},"optional":true,"description":"A Pointer object to use for the filter. The coordinates are mapped to the mouse uniform.","name":"pointer"}],"memberof":"Phaser.Filter","longname":"Phaser.Filter#update","scope":"instance","___s":true},{"meta":{"range":[4760,6006],"filename":"Filter.js","lineno":149,"path":"src\\core"},"description":"Creates a new Phaser.Image object using a blank texture and assigns \rthis Filter to it. The image is then added to the world.\r\rIf you don't provide width and height values then Filter.width and Filter.height are used.\r\rIf you do provide width and height values then this filter will be resized to match those\rvalues.","kind":"function","name":"addToWorld","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate to place the Image at.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate to place the Image at.","name":"y"},{"type":{"names":["number"]},"optional":true,"description":"The width of the Image. If not specified (or null) it will use Filter.width. If specified Filter.width will be set to this value.","name":"width"},{"type":{"names":["number"]},"optional":true,"description":"The height of the Image. If not specified (or null) it will use Filter.height. If specified Filter.height will be set to this value.","name":"height"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Set the x anchor point of the Image. A value between 0 and 1, where 0 is the top-left and 1 is bottom-right.","name":"anchorX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Set the y anchor point of the Image. A value between 0 and 1, where 0 is the top-left and 1 is bottom-right.","name":"anchorY"}],"returns":[{"type":{"names":["Phaser.Image"]},"description":"The newly added Image object."}],"memberof":"Phaser.Filter","longname":"Phaser.Filter#addToWorld","scope":"instance","___s":true},{"meta":{"range":[6798,6900],"filename":"Filter.js","lineno":203,"path":"src\\core"},"description":"Clear down this Filter and null out references","kind":"function","name":"destroy","memberof":"Phaser.Filter","longname":"Phaser.Filter#destroy","scope":"instance","___s":true},{"meta":{"range":[7032,7129],"filename":"Filter.js","lineno":217,"path":"src\\core"},"name":"width","properties":[{"type":{"names":["number"]},"description":"The width (resolution uniform)","name":"width"}],"memberof":"Phaser.Filter","longname":"Phaser.Filter#width","scope":"instance","kind":"member","___s":true},{"meta":{"range":[7370,7470],"filename":"Filter.js","lineno":233,"path":"src\\core"},"name":"height","properties":[{"type":{"names":["number"]},"description":"The height (resolution uniform)","name":"height"}],"memberof":"Phaser.Filter","longname":"Phaser.Filter#height","scope":"instance","kind":"member","___s":true},{"meta":{"range":[864,2488],"filename":"FlexGrid.js","lineno":21,"path":"src\\core"},"description":"WARNING: This is an EXPERIMENTAL class. The API will change significantly in the coming versions and is incomplete.\rPlease try to avoid using in production games with a long time to build.\rThis is also why the documentation is incomplete.\r\rFlexGrid is a a responsive grid manager that works in conjunction with the ScaleManager RESIZE scaling mode and FlexLayers\rto provide for game object positioning in a responsive manner.","kind":"class","classdesc":"Phaser.FlexGrid","params":[{"type":{"names":["Phaser.ScaleManager"]},"description":"The ScaleManager.","name":"manager"},{"type":{"names":["number"]},"description":"The width of the game.","name":"width"},{"type":{"names":["number"]},"description":"The height of the game.","name":"height"}],"name":"FlexGrid","longname":"Phaser.FlexGrid","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1023,1047],"filename":"FlexGrid.js","lineno":26,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running Game.","name":"game"}],"name":"game","longname":"Phaser.FlexGrid#game","kind":"member","memberof":"Phaser.FlexGrid","scope":"instance","___s":true},{"meta":{"range":[1155,1177],"filename":"FlexGrid.js","lineno":31,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.ScaleManager"]},"description":"A reference to the ScaleManager.","name":"manager"}],"name":"manager","longname":"Phaser.FlexGrid#manager","kind":"member","memberof":"Phaser.FlexGrid","scope":"instance","___s":true},{"meta":{"range":[1653,1697],"filename":"FlexGrid.js","lineno":46,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"-","name":"position"}],"readonly":true,"name":"positionCustom","longname":"Phaser.FlexGrid#positionCustom","kind":"member","memberof":"Phaser.FlexGrid","scope":"instance","___s":true},{"meta":{"range":[2007,2048],"filename":"FlexGrid.js","lineno":55,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The scale factor based on the game dimensions vs. the scaled dimensions.","name":"scaleFactor"}],"readonly":true,"name":"scaleCustom","longname":"Phaser.FlexGrid#scaleCustom","kind":"member","memberof":"Phaser.FlexGrid","scope":"instance","___s":true},{"meta":{"range":[2530,2771],"filename":"FlexGrid.js","lineno":77,"path":"src\\core"},"description":"Sets the core game size. This resets the w/h parameters and bounds.","kind":"function","name":"setSize","params":[{"type":{"names":["number"]},"description":"The new dimensions.","name":"width"},{"type":{"names":["number"]},"description":"The new dimensions.","name":"height"}],"memberof":"Phaser.FlexGrid","longname":"Phaser.FlexGrid#setSize","scope":"instance","___s":true},{"meta":{"range":[3298,3766],"filename":"FlexGrid.js","lineno":104,"path":"src\\core"},"description":"A custom layer is centered on the game and maintains its aspect ratio as it scales up and down.","kind":"function","name":"createCustomLayer","params":[{"type":{"names":["number"]},"description":"Width of this layer in pixels.","name":"width"},{"type":{"names":["number"]},"description":"Height of this layer in pixels.","name":"height"},{"type":{"names":["Array.<PIXI.DisplayObject>"]},"optional":true,"description":"An array of children that are used to populate the FlexLayer.","name":"children"}],"returns":[{"type":{"names":["Phaser.FlexLayer"]},"description":"The Layer object."}],"memberof":"Phaser.FlexGrid","longname":"Phaser.FlexGrid#createCustomLayer","scope":"instance","___s":true},{"meta":{"range":[4483,4806],"filename":"FlexGrid.js","lineno":141,"path":"src\\core"},"description":"A fluid layer is centered on the game and maintains its aspect ratio as it scales up and down.","kind":"function","name":"createFluidLayer","params":[{"type":{"names":["array"]},"optional":true,"description":"An array of children that are used to populate the FlexLayer.","name":"children"}],"returns":[{"type":{"names":["Phaser.FlexLayer"]},"description":"The Layer object."}],"memberof":"Phaser.FlexGrid","longname":"Phaser.FlexGrid#createFluidLayer","scope":"instance","___s":true},{"meta":{"range":[5342,5692],"filename":"FlexGrid.js","lineno":170,"path":"src\\core"},"description":"A full layer is placed at 0,0 and extends to the full size of the game. Children are scaled according to the fluid ratios.","kind":"function","name":"createFullLayer","params":[{"type":{"names":["array"]},"optional":true,"description":"An array of children that are used to populate the FlexLayer.","name":"children"}],"returns":[{"type":{"names":["Phaser.FlexLayer"]},"description":"The Layer object."}],"memberof":"Phaser.FlexGrid","longname":"Phaser.FlexGrid#createFullLayer","scope":"instance","___s":true},{"meta":{"range":[6070,6415],"filename":"FlexGrid.js","lineno":194,"path":"src\\core"},"description":"A fixed layer is centered on the game and is the size of the required dimensions and is never scaled.","kind":"function","name":"createFixedLayer","params":[{"type":{"names":["Array.<PIXI.DisplayObject>"]},"optional":true,"description":"An array of children that are used to populate the FlexLayer.","name":"children"}],"returns":[{"type":{"names":["Phaser.FlexLayer"]},"description":"The Layer object."}],"memberof":"Phaser.FlexGrid","longname":"Phaser.FlexGrid#createFixedLayer","scope":"instance","___s":true},{"meta":{"range":[6793,6896],"filename":"FlexGrid.js","lineno":218,"path":"src\\core"},"description":"Resets the layer children references","kind":"function","name":"reset","memberof":"Phaser.FlexGrid","longname":"Phaser.FlexGrid#reset","scope":"instance","___s":true},{"meta":{"range":[7286,7546],"filename":"FlexGrid.js","lineno":240,"path":"src\\core"},"description":"Called when the game container changes dimensions.","kind":"function","name":"onResize","params":[{"type":{"names":["number"]},"description":"The new width of the game container.","name":"width"},{"type":{"names":["number"]},"description":"The new height of the game container.","name":"height"}],"memberof":"Phaser.FlexGrid","longname":"Phaser.FlexGrid#onResize","scope":"instance","___s":true},{"meta":{"range":[7726,7857],"filename":"FlexGrid.js","lineno":256,"path":"src\\core"},"description":"Updates all internal vars such as the bounds and scale values.","kind":"function","name":"refresh","memberof":"Phaser.FlexGrid","longname":"Phaser.FlexGrid#refresh","scope":"instance","___s":true},{"meta":{"range":[9021,9186],"filename":"FlexGrid.js","lineno":284,"path":"src\\core"},"description":"Fits a sprites width to the bounds.","kind":"function","name":"fitSprite","params":[{"type":{"names":["Phaser.Sprite"]},"description":"The Sprite to fit.","name":"sprite"}],"memberof":"Phaser.FlexGrid","longname":"Phaser.FlexGrid#fitSprite","scope":"instance","___s":true},{"meta":{"range":[9385,9507],"filename":"FlexGrid.js","lineno":299,"path":"src\\core"},"description":"Call in the render function to output the bounds rects.","kind":"function","name":"debug","memberof":"Phaser.FlexGrid","longname":"Phaser.FlexGrid#debug","scope":"instance","___s":true},{"meta":{"range":[914,2421],"filename":"FlexLayer.js","lineno":22,"path":"src\\core"},"description":"WARNING: This is an EXPERIMENTAL class. The API will change significantly in the coming versions and is incomplete.\rPlease try to avoid using in production games with a long time to build.\rThis is also why the documentation is incomplete.\r\rA responsive grid layer.","kind":"class","classdesc":"Phaser.FlexLayer","augments":["Phaser.Group"],"params":[{"type":{"names":["Phaser.FlexGrid"]},"description":"The FlexGrid that owns this FlexLayer.","name":"manager"},{"type":{"names":["Phaser.Point"]},"description":"A reference to the Point object used for positioning.","name":"position"},{"type":{"names":["Phaser.Rectangle"]},"description":"A reference to the Rectangle used for the layer bounds.","name":"bounds"},{"type":{"names":["Phaser.Point"]},"description":"A reference to the Point object used for layer scaling.","name":"scale"}],"name":"FlexLayer","longname":"Phaser.FlexLayer","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1183,1213],"filename":"FlexLayer.js","lineno":29,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.ScaleManager"]},"description":"A reference to the ScaleManager.","name":"scale"}],"name":"manager","longname":"Phaser.FlexLayer#manager","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","___s":true},{"meta":{"range":[1331,1350],"filename":"FlexLayer.js","lineno":34,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.FlexGrid"]},"description":"A reference to the FlexGrid that owns this layer.","name":"grid"}],"name":"grid","longname":"Phaser.FlexLayer#grid","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","___s":true},{"meta":{"range":[1467,1487],"filename":"FlexLayer.js","lineno":41,"path":"src\\core"},"description":"Should the FlexLayer remain through a State swap?","type":{"names":["boolean"]},"name":"persist","longname":"Phaser.FlexLayer#persist","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","___s":true},{"meta":{"range":[1554,1578],"filename":"FlexLayer.js","lineno":46,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Point"]},"name":"position"}],"name":"position","longname":"Phaser.FlexLayer#position","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","___s":true},{"meta":{"range":[1647,1667],"filename":"FlexLayer.js","lineno":51,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Rectangle"]},"name":"bounds"}],"name":"bounds","longname":"Phaser.FlexLayer#bounds","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","___s":true},{"meta":{"range":[1731,1749],"filename":"FlexLayer.js","lineno":56,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Point"]},"name":"scale"}],"name":"scale","longname":"Phaser.FlexLayer#scale","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","___s":true},{"meta":{"range":[1815,1844],"filename":"FlexLayer.js","lineno":61,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Point"]},"name":"topLeft"}],"name":"topLeft","longname":"Phaser.FlexLayer#topLeft","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","___s":true},{"meta":{"range":[1912,1966],"filename":"FlexLayer.js","lineno":66,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Point"]},"name":"topMiddle"}],"name":"topMiddle","longname":"Phaser.FlexLayer#topMiddle","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","___s":true},{"meta":{"range":[2033,2064],"filename":"FlexLayer.js","lineno":71,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Point"]},"name":"topRight"}],"name":"topRight","longname":"Phaser.FlexLayer#topRight","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","___s":true},{"meta":{"range":[2133,2168],"filename":"FlexLayer.js","lineno":76,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Point"]},"name":"bottomLeft"}],"name":"bottomLeft","longname":"Phaser.FlexLayer#bottomLeft","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","___s":true},{"meta":{"range":[2239,2308],"filename":"FlexLayer.js","lineno":81,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Point"]},"name":"bottomMiddle"}],"name":"bottomMiddle","longname":"Phaser.FlexLayer#bottomMiddle","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","___s":true},{"meta":{"range":[2378,2415],"filename":"FlexLayer.js","lineno":86,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Point"]},"name":"bottomRight"}],"name":"bottomRight","longname":"Phaser.FlexLayer#bottomRight","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","___s":true},{"meta":{"range":[2557,2617],"filename":"FlexLayer.js","lineno":93,"path":"src\\core"},"description":"Resize.","kind":"function","name":"resize","memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#resize","scope":"instance","___s":true},{"meta":{"range":[2676,2734],"filename":"FlexLayer.js","lineno":101,"path":"src\\core"},"description":"Debug.","kind":"function","name":"debug","memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#debug","scope":"instance","___s":true},{"meta":{"range":[1898,13610],"filename":"Game.js","lineno":25,"path":"src\\core"},"description":"This is where the magic happens. The Game object is the heart of your game,\rproviding quick access to common functions and handling the boot process.\r\r\"Hell, there are no rules here - we're trying to accomplish something.\"\r                                                      Thomas A. Edison","kind":"class","classdesc":"Phaser.Game","params":[{"type":{"names":["number","string"]},"optional":true,"defaultvalue":800,"description":"The width of your game in game pixels. If given as a string the value must be between 0 and 100 and will be used as the percentage width of the parent container, or the browser window if no parent is given.","name":"width"},{"type":{"names":["number","string"]},"optional":true,"defaultvalue":600,"description":"The height of your game in game pixels. If given as a string the value must be between 0 and 100 and will be used as the percentage height of the parent container, or the browser window if no parent is given.","name":"height"},{"type":{"names":["number"]},"optional":true,"defaultvalue":"Phaser.AUTO","description":"Which renderer to use: Phaser.AUTO will auto-detect, Phaser.WEBGL, Phaser.CANVAS or Phaser.HEADLESS (no rendering at all).","name":"renderer"},{"type":{"names":["string","HTMLElement"]},"optional":true,"defaultvalue":"''","description":"The DOM element into which this games canvas will be injected. Either a DOM ID (string) or the element itself.","name":"parent"},{"type":{"names":["object"]},"optional":true,"defaultvalue":null,"description":"The default state object. A object consisting of Phaser.State functions (preload, create, update, render) or null.","name":"state"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Use a transparent canvas background or not.","name":"transparent"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Draw all image textures anti-aliased or not. The default is for smooth textures, but disable if your game features pixel art.","name":"antialias"},{"type":{"names":["object"]},"optional":true,"defaultvalue":null,"description":"A physics configuration object to pass to the Physics world on creation.","name":"physicsConfig"}],"name":"Game","longname":"Phaser.Game","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[2135,2172],"filename":"Game.js","lineno":31,"path":"src\\core"},"properties":[{"type":{"names":["number"]},"description":"Phaser Game ID (for when Pixi supports multiple instances).","name":"id"}],"readonly":true,"name":"id","longname":"Phaser.Game#id","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[2271,2289],"filename":"Game.js","lineno":36,"path":"src\\core"},"properties":[{"type":{"names":["object"]},"description":"The Phaser.Game configuration object.","name":"config"}],"name":"config","longname":"Phaser.Game#config","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[2404,2438],"filename":"Game.js","lineno":41,"path":"src\\core"},"properties":[{"type":{"names":["object"]},"description":"The Phaser.Physics.World configuration object.","name":"physicsConfig"}],"name":"physicsConfig","longname":"Phaser.Game#physicsConfig","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[2549,2565],"filename":"Game.js","lineno":47,"path":"src\\core"},"properties":[{"type":{"names":["string","HTMLElement"]},"description":"The Games DOM parent.","name":"parent"}],"defaultvalue":"","name":"parent","longname":"Phaser.Game#parent","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[2860,2876],"filename":"Game.js","lineno":58,"path":"src\\core"},"description":"The current Game Width in pixels.\r\r_Do not modify this property directly:_ use {@link Phaser.ScaleManager#setGameSize} - eg. `game.scale.setGameSize(width, height)` - instead.","properties":[{"type":{"names":["integer"]},"name":"width"}],"readonly":true,"defaultvalue":800,"name":"width","longname":"Phaser.Game#width","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[3173,3190],"filename":"Game.js","lineno":69,"path":"src\\core"},"description":"The current Game Height in pixels.\r\r_Do not modify this property directly:_ use {@link Phaser.ScaleManager#setGameSize} - eg. `game.scale.setGameSize(width, height)` - instead.","properties":[{"type":{"names":["integer"]},"name":"height"}],"readonly":true,"defaultvalue":600,"name":"height","longname":"Phaser.Game#height","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[3424,3443],"filename":"Game.js","lineno":78,"path":"src\\core"},"description":"The resolution of your game. This value is read only, but can be changed at start time it via a game configuration object.","properties":[{"type":{"names":["integer"]},"name":"resolution"}],"readonly":true,"defaultvalue":1,"name":"resolution","longname":"Phaser.Game#resolution","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[3806,3830],"filename":"Game.js","lineno":96,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"Use a transparent canvas background or not.","name":"transparent"}],"defaultvalue":false,"name":"transparent","longname":"Phaser.Game#transparent","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[4041,4062],"filename":"Game.js","lineno":102,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"Anti-alias graphics. By default scaled images are smoothed in Canvas and WebGL, set anti-alias to false to disable this globally.","name":"antialias"}],"defaultvalue":true,"name":"antialias","longname":"Phaser.Game#antialias","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[4286,4320],"filename":"Game.js","lineno":108,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"The value of the preserveDrawingBuffer flag affects whether or not the contents of the stencil buffer is retained after rendering.","name":"preserveDrawingBuffer"}],"defaultvalue":false,"name":"preserveDrawingBuffer","longname":"Phaser.Game#preserveDrawingBuffer","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[4614,4643],"filename":"Game.js","lineno":116,"path":"src\\core"},"description":"Clear the Canvas each frame before rendering the display list.\rYou can set this to `false` to gain some performance if your game always contains a background that completely fills the display.","properties":[{"type":{"names":["boolean"]},"name":"clearBeforeRender"}],"defaultvalue":true,"name":"clearBeforeRender","longname":"Phaser.Game#clearBeforeRender","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[4775,4795],"filename":"Game.js","lineno":122,"path":"src\\core"},"properties":[{"type":{"names":["PIXI.CanvasRenderer","PIXI.WebGLRenderer"]},"description":"The Pixi Renderer.","name":"renderer"}],"access":"protected","name":"renderer","longname":"Phaser.Game#renderer","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[4979,5008],"filename":"Game.js","lineno":128,"path":"src\\core"},"properties":[{"type":{"names":["number"]},"description":"The Renderer this game will use. Either Phaser.AUTO, Phaser.CANVAS, Phaser.WEBGL, or Phaser.HEADLESS.","name":"renderType"}],"readonly":true,"name":"renderType","longname":"Phaser.Game#renderType","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[5099,5116],"filename":"Game.js","lineno":133,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.StateManager"]},"description":"The StateManager.","name":"state"}],"name":"state","longname":"Phaser.Game#state","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[5247,5268],"filename":"Game.js","lineno":139,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"Whether the game engine is booted, aka available.","name":"isBooted"}],"readonly":true,"name":"isBooted","longname":"Phaser.Game#isBooted","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[5377,5399],"filename":"Game.js","lineno":145,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"Is game running or paused?","name":"isRunning"}],"readonly":true,"name":"isRunning","longname":"Phaser.Game#isRunning","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[5578,5593],"filename":"Game.js","lineno":151,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.RequestAnimationFrame"]},"description":"Automatically handles the core game loop via requestAnimationFrame or setTimeout","name":"raf"}],"access":"protected","name":"raf","longname":"Phaser.Game#raf","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[5712,5727],"filename":"Game.js","lineno":156,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.GameObjectFactory"]},"description":"Reference to the Phaser.GameObjectFactory.","name":"add"}],"name":"add","longname":"Phaser.Game#add","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[5841,5857],"filename":"Game.js","lineno":161,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.GameObjectCreator"]},"description":"Reference to the GameObject Creator.","name":"make"}],"name":"make","longname":"Phaser.Game#make","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[5954,5971],"filename":"Game.js","lineno":166,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Cache"]},"description":"Reference to the assets cache.","name":"cache"}],"name":"cache","longname":"Phaser.Game#cache","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[6068,6085],"filename":"Game.js","lineno":171,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Input"]},"description":"Reference to the input manager","name":"input"}],"name":"input","longname":"Phaser.Game#input","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[6183,6199],"filename":"Game.js","lineno":176,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Loader"]},"description":"Reference to the assets loader.","name":"load"}],"name":"load","longname":"Phaser.Game#load","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[6293,6309],"filename":"Game.js","lineno":181,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Math"]},"description":"Reference to the math helper.","name":"math"}],"name":"math","longname":"Phaser.Game#math","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[6403,6418],"filename":"Game.js","lineno":186,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Net"]},"description":"Reference to the network class.","name":"net"}],"name":"net","longname":"Phaser.Game#net","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[6515,6532],"filename":"Game.js","lineno":191,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.ScaleManager"]},"description":"The game scale manager.","name":"scale"}],"name":"scale","longname":"Phaser.Game#scale","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[6637,6654],"filename":"Game.js","lineno":196,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.SoundManager"]},"description":"Reference to the sound manager.","name":"sound"}],"name":"sound","longname":"Phaser.Game#sound","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[6744,6761],"filename":"Game.js","lineno":201,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Stage"]},"description":"Reference to the stage.","name":"stage"}],"name":"stage","longname":"Phaser.Game#stage","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[6859,6875],"filename":"Game.js","lineno":206,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Time"]},"description":"Reference to the core game clock.","name":"time"}],"name":"time","longname":"Phaser.Game#time","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[6981,6999],"filename":"Game.js","lineno":211,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.TweenManager"]},"description":"Reference to the tween manager.","name":"tweens"}],"name":"tweens","longname":"Phaser.Game#tweens","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[7089,7106],"filename":"Game.js","lineno":216,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.World"]},"description":"Reference to the world.","name":"world"}],"name":"world","longname":"Phaser.Game#world","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[7210,7229],"filename":"Game.js","lineno":221,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Physics"]},"description":"Reference to the physics manager.","name":"physics"}],"name":"physics","longname":"Phaser.Game#physics","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[7342,7361],"filename":"Game.js","lineno":226,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.PluginManager"]},"description":"Reference to the plugin manager.","name":"plugins"}],"name":"plugins","longname":"Phaser.Game#plugins","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[7492,7507],"filename":"Game.js","lineno":231,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.RandomDataGenerator"]},"description":"Instance of repeatable random data generator helper.","name":"rnd"}],"name":"rnd","longname":"Phaser.Game#rnd","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[7621,7648],"filename":"Game.js","lineno":236,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Device"]},"description":"Contains device information and capabilities.","name":"device"}],"name":"device","longname":"Phaser.Game#device","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[7751,7769],"filename":"Game.js","lineno":241,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Camera"]},"description":"A handy reference to world.camera.","name":"camera"}],"name":"camera","longname":"Phaser.Game#camera","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[7927,7945],"filename":"Game.js","lineno":246,"path":"src\\core"},"properties":[{"type":{"names":["HTMLCanvasElement"]},"description":"A handy reference to renderer.view, the canvas that the game is being rendered in to.","name":"canvas"}],"name":"canvas","longname":"Phaser.Game#canvas","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[8102,8121],"filename":"Game.js","lineno":251,"path":"src\\core"},"properties":[{"type":{"names":["CanvasRenderingContext2D"]},"description":"A handy reference to renderer.context (only set for CANVAS games, not WebGL)","name":"context"}],"name":"context","longname":"Phaser.Game#context","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[8226,8243],"filename":"Game.js","lineno":256,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Utils.Debug"]},"description":"A set of useful debug utilities.","name":"debug"}],"name":"debug","longname":"Phaser.Game#debug","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[8339,8360],"filename":"Game.js","lineno":261,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Particles"]},"description":"The Particle Manager.","name":"particles"}],"name":"particles","longname":"Phaser.Game#particles","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[8449,8467],"filename":"Game.js","lineno":266,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Create"]},"description":"The Asset Generator.","name":"create"}],"name":"create","longname":"Phaser.Game#create","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[8972,8995],"filename":"Game.js","lineno":275,"path":"src\\core"},"description":"If `false` Phaser will automatically render the display list every update. If `true` the render loop will be skipped.\rYou can toggle this value at run-time to gain exact control over when Phaser renders. This can be useful in certain types of game or application.\rPlease note that if you don't render the display list then none of the game object transforms will be updated, so use this value carefully.","properties":[{"type":{"names":["boolean"]},"name":"lockRender"}],"defaultvalue":false,"name":"lockRender","longname":"Phaser.Game#lockRender","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[9142,9163],"filename":"Game.js","lineno":282,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"Enable core loop stepping with Game.enableStep().","name":"stepping"}],"defaultvalue":false,"readonly":true,"name":"stepping","longname":"Phaser.Game#stepping","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[9357,9381],"filename":"Game.js","lineno":289,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"An internal property used by enableStep, but also useful to query from your own game objects.","name":"pendingStep"}],"defaultvalue":false,"readonly":true,"name":"pendingStep","longname":"Phaser.Game#pendingStep","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[9541,9559],"filename":"Game.js","lineno":296,"path":"src\\core"},"properties":[{"type":{"names":["number"]},"description":"When stepping is enabled this contains the current step cycle.","name":"stepCount"}],"defaultvalue":0,"readonly":true,"name":"stepCount","longname":"Phaser.Game#stepCount","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[9670,9689],"filename":"Game.js","lineno":301,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"This event is fired when the game pauses.","name":"onPause"}],"name":"onPause","longname":"Phaser.Game#onPause","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[9822,9842],"filename":"Game.js","lineno":306,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"This event is fired when the game resumes from a paused state.","name":"onResume"}],"name":"onResume","longname":"Phaser.Game#onResume","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[9990,10008],"filename":"Game.js","lineno":311,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"This event is fired when the game no longer has focus (typically on page hide).","name":"onBlur"}],"name":"onBlur","longname":"Phaser.Game#onBlur","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[10147,10166],"filename":"Game.js","lineno":316,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"This event is fired when the game has focus (typically on page show).","name":"onFocus"}],"name":"onFocus","longname":"Phaser.Game#onFocus","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[10733,10757],"filename":"Game.js","lineno":336,"path":"src\\core"},"description":"The ID of the current/last logic update applied this render frame, starting from 0.\rThe first update is `currentUpdateID === 0` and the last update is `currentUpdateID === updatesThisFrame.`","properties":[{"type":{"names":["integer"]},"name":"currentUpdateID"}],"access":"protected","name":"currentUpdateID","longname":"Phaser.Game#currentUpdateID","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[10974,10999],"filename":"Game.js","lineno":343,"path":"src\\core"},"description":"Number of logic updates expected to occur this render frame; will be 1 unless there are catch-ups required (and allowed).","properties":[{"type":{"names":["integer"]},"name":"updatesThisFrame"}],"access":"protected","name":"updatesThisFrame","longname":"Phaser.Game#updatesThisFrame","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[11992,12037],"filename":"Game.js","lineno":375,"path":"src\\core"},"description":"If the game is struggling to maintain the desired FPS, this signal will be dispatched.\rThe desired/chosen FPS should probably be closer to the {@link Phaser.Time#suggestedFps} value.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"fpsProblemNotifier"}],"access":"public","name":"fpsProblemNotifier","longname":"Phaser.Game#fpsProblemNotifier","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[12253,12282],"filename":"Game.js","lineno":380,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"Should the game loop force a logic update, regardless of the delta timer? Set to true if you know you need this. You can toggle it on the fly.","name":"forceSingleUpdate"}],"name":"forceSingleUpdate","longname":"Phaser.Game#forceSingleUpdate","kind":"member","memberof":"Phaser.Game","scope":"instance","___s":true},{"meta":{"range":[13648,13766],"filename":"Game.js","lineno":440,"path":"src\\core"},"description":"Parses a Game configuration object.","kind":"function","name":"parseConfig","access":"protected","memberof":"Phaser.Game","longname":"Phaser.Game#parseConfig","scope":"instance","___s":true},{"meta":{"range":[15422,15547],"filename":"Game.js","lineno":520,"path":"src\\core"},"description":"Initialize engine sub modules and start the game.","kind":"function","name":"boot","access":"protected","memberof":"Phaser.Game","longname":"Phaser.Game#boot","scope":"instance","___s":true},{"meta":{"range":[17958,18099],"filename":"Game.js","lineno":609,"path":"src\\core"},"description":"Displays a Phaser version debug header in the console.","kind":"function","name":"showDebugHeader","access":"protected","memberof":"Phaser.Game","longname":"Phaser.Game#showDebugHeader","scope":"instance","___s":true},{"meta":{"range":[19769,19958],"filename":"Game.js","lineno":676,"path":"src\\core"},"description":"Checks if the device is capable of using the requested renderer and sets it up or an alternative if not.","kind":"function","name":"setUpRenderer","access":"protected","memberof":"Phaser.Game","longname":"Phaser.Game#setUpRenderer","scope":"instance","___s":true},{"meta":{"range":[22616,22798],"filename":"Game.js","lineno":777,"path":"src\\core"},"description":"The core game loop.","kind":"function","name":"update","access":"protected","params":[{"type":{"names":["number"]},"description":"The current time as provided by RequestAnimationFrame.","name":"time"}],"memberof":"Phaser.Game","longname":"Phaser.Game#update","scope":"instance","___s":true},{"meta":{"range":[26136,26386],"filename":"Game.js","lineno":877,"path":"src\\core"},"description":"Updates all logic subsystems in Phaser. Called automatically by Game.update.","kind":"function","name":"updateLogic","access":"protected","params":[{"type":{"names":["number"]},"description":"The current timeStep value as determined by Game.update.","name":"timeStep"}],"memberof":"Phaser.Game","longname":"Phaser.Game#updateLogic","scope":"instance","___s":true},{"meta":{"range":[27546,28573],"filename":"Game.js","lineno":925,"path":"src\\core"},"description":"Runs the Render cycle.\rIt starts by calling State.preRender. In here you can do any last minute adjustments of display objects as required.\rIt then calls the renderer, which renders the entire display list, starting from the Stage object and working down.\rIt then calls plugin.render on any loaded plugins, in the order in which they were enabled.\rAfter this State.render is called. Any rendering that happens here will take place on-top of the display list.\rFinally plugin.postRender is called on any loaded plugins, in the order in which they were enabled.\rThis method is called automatically by Game.update, you don't need to call it directly.\rShould you wish to have fine-grained control over when Phaser renders then use the `Game.lockRender` boolean.\rPhaser will only render when this boolean is `false`.","kind":"function","name":"updateRender","access":"protected","params":[{"type":{"names":["number"]},"description":"The time elapsed since the last update.","name":"elapsedTime"}],"memberof":"Phaser.Game","longname":"Phaser.Game#updateRender","scope":"instance","___s":true},{"meta":{"range":[29022,29310],"filename":"Game.js","lineno":962,"path":"src\\core"},"description":"Enable core game loop stepping. When enabled you must call game.step() directly (perhaps via a DOM button?)\rCalling step will advance the game loop by one frame. This is extremely useful for hard to track down errors!","kind":"function","name":"enableStep","memberof":"Phaser.Game","longname":"Phaser.Game#enableStep","scope":"instance","___s":true},{"meta":{"range":[29456,29554],"filename":"Game.js","lineno":976,"path":"src\\core"},"description":"Disables core game loop stepping.","kind":"function","name":"disableStep","memberof":"Phaser.Game","longname":"Phaser.Game#disableStep","scope":"instance","___s":true},{"meta":{"range":[29673,29978],"filename":"Game.js","lineno":988,"path":"src\\core"},"description":"When stepping is enabled you must call this function directly (perhaps via a DOM button?) to advance the game loop by one frame.\rThis is extremely useful to hard to track down errors! Use the internal stepCount property to monitor progress.","kind":"function","name":"step","memberof":"Phaser.Game","longname":"Phaser.Game#step","scope":"instance","___s":true},{"meta":{"range":[30085,30462],"filename":"Game.js","lineno":1001,"path":"src\\core"},"description":"Nukes the entire game from orbit.\r\rCalls destroy on Game.state, Game.sound, Game.scale, Game.stage, Game.input, Game.physics and Game.plugins.\r\rThen sets all of those local handlers to null, destroys the renderer, removes the canvas from the DOM\rand resets the PIXI default renderer.","kind":"function","name":"destroy","memberof":"Phaser.Game","longname":"Phaser.Game#destroy","scope":"instance","___s":true},{"meta":{"range":[31282,31487],"filename":"Game.js","lineno":1048,"path":"src\\core"},"description":"Called by the Stage visibility handler.","kind":"function","name":"gamePaused","params":[{"type":{"names":["object"]},"description":"The DOM event that caused the game to pause, if any.","name":"event"}],"access":"protected","memberof":"Phaser.Game","longname":"Phaser.Game#gamePaused","scope":"instance","___s":true},{"meta":{"range":[32144,32350],"filename":"Game.js","lineno":1080,"path":"src\\core"},"description":"Called by the Stage visibility handler.","kind":"function","name":"gameResumed","params":[{"type":{"names":["object"]},"description":"The DOM event that caused the game to pause, if any.","name":"event"}],"access":"protected","memberof":"Phaser.Game","longname":"Phaser.Game#gameResumed","scope":"instance","___s":true},{"meta":{"range":[33047,33251],"filename":"Game.js","lineno":1114,"path":"src\\core"},"description":"Called by the Stage visibility handler.","kind":"function","name":"focusLoss","params":[{"type":{"names":["object"]},"description":"The DOM event that caused the game to pause, if any.","name":"event"}],"access":"protected","memberof":"Phaser.Game","longname":"Phaser.Game#focusLoss","scope":"instance","___s":true},{"meta":{"range":[33455,33659],"filename":"Game.js","lineno":1132,"path":"src\\core"},"description":"Called by the Stage visibility handler.","kind":"function","name":"focusGain","params":[{"type":{"names":["object"]},"description":"The DOM event that caused the game to pause, if any.","name":"event"}],"access":"protected","memberof":"Phaser.Game","longname":"Phaser.Game#focusGain","scope":"instance","___s":true},{"meta":{"range":[33918,34225],"filename":"Game.js","lineno":1154,"path":"src\\core"},"description":"The paused state of the Game. A paused game doesn't update any of its subsystems.\rWhen a game is paused the onPause event is dispatched. When it is resumed the onResume event is dispatched.","name":"paused","properties":[{"type":{"names":["boolean"]},"description":"Gets and sets the paused state of the Game.","name":"paused"}],"memberof":"Phaser.Game","longname":"Phaser.Game#paused","scope":"instance","kind":"member","___s":true},{"meta":{"range":[204,1776],"filename":"Group.js","lineno":7,"path":"src\\core"},"description":"A Group is a container for {@link DisplayObject display objects} including {@link Phaser.Sprite Sprites} and {@link Phaser.Image Images}.\r\rGroups form the logical tree structure of the display/scene graph where local transformations are applied to children.\rFor instance, all children are also moved/rotated/scaled when the group is moved/rotated/scaled.\r\rIn addition, Groups provides support for fast pooling and object recycling.\r\rGroups are also display objects and can be nested as children within other Groups.","kind":"class","name":"Group","augments":["PIXI.DisplayObjectContainer"],"params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["DisplayObject","null"]},"optional":true,"defaultvalue":"(game world)","description":"The parent Group (or other {@link DisplayObject}) that this group will be added to.\r    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.","name":"parent"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'group'","description":"A name for this group. Not used internally but useful for debugging.","name":"name"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true this group will be added directly to the Game.Stage instead of Game.World.","name":"addToStage"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.","name":"enableBody"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.","name":"physicsBodyType"}],"memberof":"Phaser","longname":"Phaser.Group","scope":"static","___s":true},{"meta":{"range":[2199,2215],"filename":"Group.js","lineno":38,"path":"src\\core"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"access":"protected","name":"game","longname":"Phaser.Group#game","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[2425,2452],"filename":"Group.js","lineno":49,"path":"src\\core"},"description":"A name for this group. Not used internally but useful for debugging.","properties":[{"type":{"names":["string"]},"name":"name"}],"name":"name","longname":"Phaser.Group#name","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[2690,2700],"filename":"Group.js","lineno":57,"path":"src\\core"},"description":"The z-depth value of this object within its parent container/Group - the World is a Group as well.\rThis value must be unique for each child in a Group.","properties":[{"type":{"names":["integer"]},"name":"z"}],"readonly":true,"name":"z","longname":"Phaser.Group#z","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[3136,3160],"filename":"Group.js","lineno":80,"path":"src\\core"},"description":"Internal Phaser Type value.","properties":[{"type":{"names":["integer"]},"name":"type"}],"access":"protected","name":"type","longname":"Phaser.Group#type","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[3287,3318],"filename":"Group.js","lineno":86,"path":"src\\core"},"properties":[{"type":{"names":["number"]},"description":"The const physics body type of this object.","name":"physicsType"}],"readonly":true,"name":"physicsType","longname":"Phaser.Group#physicsType","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[3536,3553],"filename":"Group.js","lineno":93,"path":"src\\core"},"description":"The alive property is useful for Groups that are children of other Groups and need to be included/excluded in checks like forEachAlive.","properties":[{"type":{"names":["boolean"]},"name":"alive"}],"defaultvalue":true,"name":"alive","longname":"Phaser.Group#alive","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[3701,3719],"filename":"Group.js","lineno":100,"path":"src\\core"},"description":"If exists is true the group is updated, otherwise it is skipped.","properties":[{"type":{"names":["boolean"]},"name":"exists"}],"defaultvalue":true,"name":"exists","longname":"Phaser.Group#exists","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[3895,3921],"filename":"Group.js","lineno":107,"path":"src\\core"},"description":"A group with `ignoreDestroy` set to `true` ignores all calls to its `destroy` method.","properties":[{"type":{"names":["boolean"]},"name":"ignoreDestroy"}],"defaultvalue":false,"name":"ignoreDestroy","longname":"Phaser.Group#ignoreDestroy","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[4369,4396],"filename":"Group.js","lineno":119,"path":"src\\core"},"description":"A Group is that has `pendingDestroy` set to `true` is flagged to have its destroy method\rcalled on the next logic update.\rYou can set it directly to flag the Group to be destroyed on its next update.\r\rThis is extremely useful if you wish to destroy a Group from within one of its own callbacks\ror a callback of one of its children.","properties":[{"type":{"names":["boolean"]},"name":"pendingDestroy"}],"name":"pendingDestroy","longname":"Phaser.Group#pendingDestroy","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[4852,4882],"filename":"Group.js","lineno":130,"path":"src\\core"},"description":"The type of objects that will be created when using {@link #create} or {@link #createMultiple}.\r\rAny object may be used but it should extend either Sprite or Image and accept the same constructor arguments:\rwhen a new object is created it is passed the following parameters to its constructor: `(game, x, y, key, frame)`.","properties":[{"type":{"names":["object"]},"name":"classType"}],"defaultvalue":"{@link Phaser.Sprite}","name":"classType","longname":"Phaser.Group#classType","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[5172,5190],"filename":"Group.js","lineno":138,"path":"src\\core"},"description":"The current display object that the group cursor is pointing to, if any. (Can be set manually.)\r\rThe cursor is a way to iterate through the children in a Group using {@link #next} and {@link #previous}.","properties":[{"type":{"names":["DisplayObject"]},"nullable":true,"name":"cursor"}],"name":"cursor","longname":"Phaser.Group#cursor","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[5569,5601],"filename":"Group.js","lineno":149,"path":"src\\core"},"description":"A Group with `inputEnableChildren` set to `true` will automatically call `inputEnabled = true` \ron any children _added_ to, or _created by_, this Group.\r\rIf there are children already in the Group at the time you set this property, they are not changed.","properties":[{"type":{"names":["boolean"]},"name":"inputEnableChildren"}],"defaultvalue":false,"name":"inputEnableChildren","longname":"Phaser.Group#inputEnableChildren","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[6075,6118],"filename":"Group.js","lineno":161,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputDown signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 2 arguments: A reference to the Sprite that triggered the signal, and\ra reference to the Pointer that caused it.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputDown"}],"name":"onChildInputDown","longname":"Phaser.Group#onChildInputDown","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[6684,6725],"filename":"Group.js","lineno":174,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputUp signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 3 arguments: A reference to the Sprite that triggered the signal, \ra reference to the Pointer that caused it, and a boolean value `isOver` that tells you if the Pointer\ris still over the Sprite or not.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputUp"}],"name":"onChildInputUp","longname":"Phaser.Group#onChildInputUp","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[7199,7242],"filename":"Group.js","lineno":186,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputOver signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 2 arguments: A reference to the Sprite that triggered the signal, and\ra reference to the Pointer that caused it.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputOver"}],"name":"onChildInputOver","longname":"Phaser.Group#onChildInputOver","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[7714,7756],"filename":"Group.js","lineno":198,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputOut signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 2 arguments: A reference to the Sprite that triggered the signal, and\ra reference to the Pointer that caused it.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputOut"}],"name":"onChildInputOut","longname":"Phaser.Group#onChildInputOut","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[8120,8148],"filename":"Group.js","lineno":208,"path":"src\\core"},"description":"If true all Sprites created by, or added to this group, will have a physics body enabled on them.\r\rIf there are children already in the Group at the time you set this property, they are not changed.\r\rThe default body type is controlled with {@link #physicsBodyType}.","properties":[{"type":{"names":["boolean"]},"name":"enableBody"}],"name":"enableBody","longname":"Phaser.Group#enableBody","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[8397,8425],"filename":"Group.js","lineno":217,"path":"src\\core"},"description":"If true when a physics body is created (via {@link #enableBody}) it will create a physics debug object as well.\r\rThis only works for P2 bodies.","properties":[{"type":{"names":["boolean"]},"name":"enableBodyDebug"}],"defaultvalue":false,"name":"enableBodyDebug","longname":"Phaser.Group#enableBodyDebug","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[8727,8765],"filename":"Group.js","lineno":225,"path":"src\\core"},"description":"If {@link #enableBody} is true this is the type of physics body that is created on new Sprites.\r\rThe valid values are {@link Phaser.Physics.ARCADE}, {@link Phaser.Physics.P2JS}, {@link Phaser.Physics.NINJA}, etc.","properties":[{"type":{"names":["integer"]},"name":"physicsBodyType"}],"name":"physicsBodyType","longname":"Phaser.Group#physicsBodyType","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[9408,9440],"filename":"Group.js","lineno":243,"path":"src\\core"},"description":"If this Group contains Arcade Physics Sprites you can set a custom sort direction via this property.\r\rIt should be set to one of the Phaser.Physics.Arcade sort direction constants: \r\rPhaser.Physics.Arcade.SORT_NONE\rPhaser.Physics.Arcade.LEFT_RIGHT\rPhaser.Physics.Arcade.RIGHT_LEFT\rPhaser.Physics.Arcade.TOP_BOTTOM\rPhaser.Physics.Arcade.BOTTOM_TOP\r\rIf set to `null` the Group will use whatever Phaser.Physics.Arcade.sortDirection is set to. This is the default behavior.","properties":[{"type":{"names":["integer"]},"name":"physicsSortDirection"}],"defaultvalue":null,"name":"physicsSortDirection","longname":"Phaser.Group#physicsSortDirection","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[9571,9607],"filename":"Group.js","lineno":249,"path":"src\\core"},"description":"This signal is dispatched when the group is destroyed.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onDestroy"}],"name":"onDestroy","longname":"Phaser.Group#onDestroy","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[9758,9778],"filename":"Group.js","lineno":255,"path":"src\\core"},"properties":[{"type":{"names":["integer"]},"description":"The current index of the Group cursor. Advance it with Group.next.","name":"cursorIndex"}],"readonly":true,"name":"cursorIndex","longname":"Phaser.Group#cursorIndex","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[10207,10233],"filename":"Group.js","lineno":265,"path":"src\\core"},"description":"A Group that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in Group.cameraOffset.\r\rNote that the cameraOffset values are in addition to any parent in the display list.\rSo if this Group was in a Group that has x: 200, then this will be added to the cameraOffset.x","properties":[{"type":{"names":["boolean"]},"name":"fixedToCamera"}],"name":"fixedToCamera","longname":"Phaser.Group#fixedToCamera","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[10575,10613],"filename":"Group.js","lineno":272,"path":"src\\core"},"description":"If this object is {@link #fixedToCamera} then this stores the x/y position offset relative to the top-left of the camera view.\rIf the parent of this Group is also `fixedToCamera` then the offset here is in addition to that and should typically be disabled.","properties":[{"type":{"names":["Phaser.Point"]},"name":"cameraOffset"}],"name":"cameraOffset","longname":"Phaser.Group#cameraOffset","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[11287,11301],"filename":"Group.js","lineno":285,"path":"src\\core"},"description":"The hash array is an array belonging to this Group into which you can add any of its children via Group.addToHash and Group.removeFromHash.\r\rOnly children of this Group can be added to and removed from the hash.\r\rThis hash is used automatically by Phaser Arcade Physics in order to perform non z-index based destructive sorting.\rHowever if you don't use Arcade Physics, or this isn't a physics enabled Group, then you can use the hash to perform your own\rsorting and filtering of Group children without touching their z-index (and therefore display draw order)","properties":[{"type":{"names":["array"]},"name":"hash"}],"name":"hash","longname":"Phaser.Group#hash","kind":"member","memberof":"Phaser.Group","scope":"instance","___s":true},{"meta":{"range":[11703,11731],"filename":"Group.js","lineno":304,"path":"src\\core"},"description":"A returnType value, as specified in {@link #iterate} eg.","kind":"constant","type":{"names":["integer"]},"name":"RETURN_NONE","longname":"Phaser.Group.RETURN_NONE","memberof":"Phaser.Group","scope":"static","___s":true},{"meta":{"range":[11837,11866],"filename":"Group.js","lineno":311,"path":"src\\core"},"description":"A returnType value, as specified in {@link #iterate} eg.","kind":"constant","type":{"names":["integer"]},"name":"RETURN_TOTAL","longname":"Phaser.Group.RETURN_TOTAL","memberof":"Phaser.Group","scope":"static","___s":true},{"meta":{"range":[11972,12001],"filename":"Group.js","lineno":318,"path":"src\\core"},"description":"A returnType value, as specified in {@link #iterate} eg.","kind":"constant","type":{"names":["integer"]},"name":"RETURN_CHILD","longname":"Phaser.Group.RETURN_CHILD","memberof":"Phaser.Group","scope":"static","___s":true},{"meta":{"range":[12107,12134],"filename":"Group.js","lineno":325,"path":"src\\core"},"description":"A returnType value, as specified in {@link #iterate} eg.","kind":"constant","type":{"names":["integer"]},"name":"RETURN_ALL","longname":"Phaser.Group.RETURN_ALL","memberof":"Phaser.Group","scope":"static","___s":true},{"meta":{"range":[12240,12272],"filename":"Group.js","lineno":332,"path":"src\\core"},"description":"A sort ordering value, as specified in {@link #sort} eg.","kind":"constant","type":{"names":["integer"]},"name":"SORT_ASCENDING","longname":"Phaser.Group.SORT_ASCENDING","memberof":"Phaser.Group","scope":"static","___s":true},{"meta":{"range":[12378,12410],"filename":"Group.js","lineno":339,"path":"src\\core"},"description":"A sort ordering value, as specified in {@link #sort} eg.","kind":"constant","type":{"names":["integer"]},"name":"SORT_DESCENDING","longname":"Phaser.Group.SORT_DESCENDING","memberof":"Phaser.Group","scope":"static","___s":true},{"meta":{"range":[12415,13611],"filename":"Group.js","lineno":341,"path":"src\\core"},"description":"Adds an existing object as the top child in this group.\r\rThe child is automatically added to the top of the group, and is displayed above every previous child.\r\rOr if the _optional_ index is specified, the child is added at the location specified by the index value, \rthis allows you to control child ordering.\r\rIf the child was already in this Group, it is simply returned, and nothing else happens to it.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.\r\rUse {@link #addAt} to control where a child is added. Use {@link #create} to create and add a new child.","kind":"function","name":"add","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to add as a child.","name":"child"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the child will not dispatch the `onAddedToGroup` event.","name":"silent"},{"type":{"names":["integer"]},"optional":true,"description":"The index within the group to insert the child to. Where 0 is the bottom of the Group.","name":"index"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was added to the group."}],"memberof":"Phaser.Group","longname":"Phaser.Group#add","scope":"instance","___s":true},{"meta":{"range":[14707,15502],"filename":"Group.js","lineno":418,"path":"src\\core"},"description":"Adds an existing object to this group.\r\rThe child is added to the group at the location specified by the index value, this allows you to control child ordering.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.","kind":"function","name":"addAt","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to add as a child.","name":"child"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The index within the group to insert the child to.","name":"index"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the child will not dispatch the `onAddedToGroup` event.","name":"silent"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was added to the group."}],"memberof":"Phaser.Group","longname":"Phaser.Group#addAt","scope":"instance","___s":true},{"meta":{"range":[15617,16054],"filename":"Group.js","lineno":439,"path":"src\\core"},"description":"Adds a child of this Group into the hash array.\rThis call will return false if the child is not a child of this Group, or is already in the hash.","kind":"function","name":"addToHash","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to add to this Groups hash. Must be a member of this Group already and not present in the hash.","name":"child"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the child was successfully added to the hash, otherwise false."}],"memberof":"Phaser.Group","longname":"Phaser.Group#addToHash","scope":"instance","___s":true},{"meta":{"range":[16348,16745],"filename":"Group.js","lineno":464,"path":"src\\core"},"description":"Removes a child of this Group from the hash array.\rThis call will return false if the child is not in the hash.","kind":"function","name":"removeFromHash","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to remove from this Groups hash. Must be a member of this Group and in the hash.","name":"child"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the child was successfully removed from the hash, otherwise false."}],"memberof":"Phaser.Group","longname":"Phaser.Group#removeFromHash","scope":"instance","___s":true},{"meta":{"range":[17033,18107],"filename":"Group.js","lineno":489,"path":"src\\core"},"description":"Adds an array of existing Display Objects to this Group.\r\rThe Display Objects are automatically added to the top of this Group, and will render on-top of everything already in this Group.\r\rAs well as an array you can also pass another Group as the first argument. In this case all of the children from that\rGroup will be removed from it and added into this Group.\r\rIf `Group.enableBody` is set, then a physics body will be created on the objects, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the objects, so long as one does not already exist.","kind":"function","name":"addMultiple","params":[{"type":{"names":["Array.<DisplayObject>","Phaser.Group"]},"description":"An array of display objects or a Phaser.Group. If a Group is given then *all* children will be moved from it.","name":"children"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch the `onAddedToGroup` event.","name":"silent"}],"returns":[{"type":{"names":["Array.<DisplayObject>","Phaser.Group"]},"description":"The array of children or Group of children that were added to this Group."}],"memberof":"Phaser.Group","longname":"Phaser.Group#addMultiple","scope":"instance","___s":true},{"meta":{"range":[18479,18756],"filename":"Group.js","lineno":524,"path":"src\\core"},"description":"Returns the child found at the given index within this group.","kind":"function","name":"getAt","params":[{"type":{"names":["integer"]},"description":"The index to return the child from.","name":"index"}],"returns":[{"type":{"names":["DisplayObject","integer"]},"description":"The child that was found at the given index, or -1 for an invalid index."}],"memberof":"Phaser.Group","longname":"Phaser.Group#getAt","scope":"instance","___s":true},{"meta":{"range":[18970,20735],"filename":"Group.js","lineno":544,"path":"src\\core"},"description":"Creates a new Phaser.Sprite object and adds it to the top of this group.\r\rUse {@link #classType} to change the type of object created.\r\rThe child is automatically added to the top of the group, and is displayed above every previous child.\r\rOr if the _optional_ index is specified, the child is added at the location specified by the index value, \rthis allows you to control child ordering.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.","kind":"function","name":"create","params":[{"type":{"names":["number"]},"description":"The x coordinate to display the newly created Sprite at. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to display the newly created Sprite at. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"The default exists state of the Sprite.","name":"exists"},{"type":{"names":["integer"]},"optional":true,"description":"The index within the group to insert the child to. Where 0 is the bottom of the Group.","name":"index"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was created: will be a {@link Phaser.Sprite} unless {@link #classType} has been changed."}],"memberof":"Phaser.Group","longname":"Phaser.Group#create","scope":"instance","___s":true},{"meta":{"range":[21074,23649],"filename":"Group.js","lineno":581,"path":"src\\core"},"description":"Creates multiple Phaser.Sprite objects and adds them to the top of this Group.\r\rThis method is useful if you need to quickly generate a pool of sprites, such as bullets.\r\rUse {@link #classType} to change the type of object created.\r\rYou can provide an array as the `key` and / or `frame` arguments. When you do this\rit will create `quantity` Sprites for every key (and frame) in the arrays.\r\rFor example:\r\r`createMultiple(25, ['ball', 'carrot'])`\r\rIn the above code there are 2 keys (ball and carrot) which means that 50 sprites will be\rcreated in total, 25 of each. You can also have the `frame` as an array:\r\r`createMultiple(5, 'bricks', [0, 1, 2, 3])`\r\rIn the above there is one key (bricks), which is a sprite sheet. The frames array tells\rthis method to use frames 0, 1, 2 and 3. So in total it will create 20 sprites, because\rthe quantity was set to 5, so that is 5 brick sprites of frame 0, 5 brick sprites with\rframe 1, and so on.\r\rIf you set both the key and frame arguments to be arrays then understand it will create\ra total quantity of sprites equal to the size of both arrays times each other. I.e.:\r\r`createMultiple(20, ['diamonds', 'balls'], [0, 1, 2])`\r\rThe above will create 20 'diamonds' of frame 0, 20 with frame 1 and 20 with frame 2.\rIt will then create 20 'balls' of frame 0, 20 with frame 1 and 20 with frame 2.\rIn total it will have created 120 sprites.\r\rBy default the Sprites will have their `exists` property set to `false`, and they will be \rpositioned at 0x0, relative to the `Group.x / y` values.\r\rIf `Group.enableBody` is set, then a physics body will be created on the objects, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the objects, so long as one does not already exist.","kind":"function","name":"createMultiple","params":[{"type":{"names":["integer"]},"description":"The number of Sprites to create.","name":"quantity"},{"type":{"names":["string","array"]},"description":"The Cache key of the image that the Sprites will use. Or an Array of keys. See the description for details on how the quantity applies when arrays are used.","name":"key"},{"type":{"names":["integer","string","array"]},"optional":true,"defaultvalue":0,"description":"If the Sprite image contains multiple frames you can specify which one to use here. Or an Array of frames. See the description for details on how the quantity applies when arrays are used.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"The default exists state of the Sprite.","name":"exists"}],"returns":[{"type":{"names":["array"]},"description":"An array containing all of the Sprites that were created."}],"memberof":"Phaser.Group","longname":"Phaser.Group#createMultiple","scope":"instance","___s":true},{"meta":{"range":[24339,24575],"filename":"Group.js","lineno":663,"path":"src\\core"},"description":"Internal method that re-applies all of the children's Z values.\r\rThis must be called whenever children ordering is altered so that their `z` indices are correctly updated.","kind":"function","name":"updateZ","access":"protected","memberof":"Phaser.Group","longname":"Phaser.Group#updateZ","scope":"instance","___s":true},{"meta":{"range":[24736,27678],"filename":"Group.js","lineno":682,"path":"src\\core"},"description":"This method iterates through all children in the Group (regardless if they are visible or exist)\rand then changes their position so they are arranged in a Grid formation. Children must have\rthe `alignTo` method in order to be positioned by this call. All default Phaser Game Objects have\rthis.\r\rThe grid dimensions are determined by the first four arguments. The `width` and `height` arguments\rrelate to the width and height of the grid respectively.\r\rFor example if the Group had 100 children in it:\r\r`Group.align(10, 10, 32, 32)`\r\rThis will align all of the children into a grid formation of 10x10, using 32 pixels per\rgrid cell. If you want a wider grid, you could do:\r\r`Group.align(25, 4, 32, 32)`\r\rThis will align the children into a grid of 25x4, again using 32 pixels per grid cell.\r\rYou can choose to set _either_ the `width` or `height` value to -1. Doing so tells the method\rto keep on aligning children until there are no children left. For example if this Group had\r48 children in it, the following:\r\r`Group.align(-1, 8, 32, 32)`\r\r... will align the children so that there are 8 children vertically (the second argument), \rand each row will contain 6 sprites, except the last one, which will contain 5 (totaling 48)\r\rYou can also do:\r\r`Group.align(10, -1, 32, 32)`\r\rIn this case it will create a grid 10 wide, and as tall as it needs to be in order to fit\rall of the children in.\r\rThe `position` property allows you to control where in each grid cell the child is positioned.\rThis is a constant and can be one of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, \r`Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, \r`Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.\r\rThe final argument; `offset` lets you start the alignment from a specific child index.","kind":"function","name":"align","params":[{"type":{"names":["integer"]},"description":"The width of the grid in items (not pixels). Set to -1 for a dynamic width. If -1 then you must set an explicit height value.","name":"width"},{"type":{"names":["integer"]},"description":"The height of the grid in items (not pixels). Set to -1 for a dynamic height. If -1 then you must set an explicit width value.","name":"height"},{"type":{"names":["integer"]},"description":"The width of each grid cell, in pixels.","name":"cellWidth"},{"type":{"names":["integer"]},"description":"The height of each grid cell, in pixels.","name":"cellHeight"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Optional index to start the alignment from. Defaults to zero, the first child in the Group, but can be set to any valid child index value.","name":"offset"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the Group children were aligned, otherwise false."}],"memberof":"Phaser.Group","longname":"Phaser.Group#align","scope":"instance","___s":true},{"meta":{"range":[29501,29838],"filename":"Group.js","lineno":806,"path":"src\\core"},"description":"Sets the group cursor to the first child in the group.\r\rIf the optional index parameter is given it sets the cursor to the object at that index instead.","kind":"function","name":"resetCursor","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Set the cursor to point to a specific index.","name":"index"}],"returns":[{"type":{"names":["any"]},"description":"The child the cursor now points to."}],"memberof":"Phaser.Group","longname":"Phaser.Group#resetCursor","scope":"instance","___s":true},{"meta":{"range":[30189,30462],"filename":"Group.js","lineno":833,"path":"src\\core"},"description":"Advances the group cursor to the next (higher) object in the group.\r\rIf the cursor is at the end of the group (top child) it is moved the start of the group (bottom child).","kind":"function","name":"next","returns":[{"type":{"names":["any"]},"description":"The child the cursor now points to."}],"memberof":"Phaser.Group","longname":"Phaser.Group#next","scope":"instance","___s":true},{"meta":{"range":[30859,31125],"filename":"Group.js","lineno":862,"path":"src\\core"},"description":"Moves the group cursor to the previous (lower) child in the group.\r\rIf the cursor is at the start of the group (bottom child) it is moved to the end (top child).","kind":"function","name":"previous","returns":[{"type":{"names":["any"]},"description":"The child the cursor now points to."}],"memberof":"Phaser.Group","longname":"Phaser.Group#previous","scope":"instance","___s":true},{"meta":{"range":[31527,31845],"filename":"Group.js","lineno":891,"path":"src\\core"},"description":"Swaps the position of two children in this group.\r\rBoth children must be in this group, a child cannot be swapped with itself, and unparented children cannot be swapped.","kind":"function","name":"swap","params":[{"type":{"names":["any"]},"description":"The first child to swap.","name":"child1"},{"type":{"names":["any"]},"description":"The second child to swap.","name":"child2"}],"memberof":"Phaser.Group","longname":"Phaser.Group#swap","scope":"instance","___s":true},{"meta":{"range":[31977,32225],"filename":"Group.js","lineno":907,"path":"src\\core"},"description":"Brings the given child to the top of this group so it renders above all other children.","kind":"function","name":"bringToTop","params":[{"type":{"names":["any"]},"description":"The child to bring to the top of this group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.Group","longname":"Phaser.Group#bringToTop","scope":"instance","___s":true},{"meta":{"range":[32481,32733],"filename":"Group.js","lineno":926,"path":"src\\core"},"description":"Sends the given child to the bottom of this group so it renders below all other children.","kind":"function","name":"sendToBack","params":[{"type":{"names":["any"]},"description":"The child to send to the bottom of this group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.Group","longname":"Phaser.Group#sendToBack","scope":"instance","___s":true},{"meta":{"range":[32975,33202],"filename":"Group.js","lineno":945,"path":"src\\core"},"description":"Moves the given child up one place in this group unless it's already at the top.","kind":"function","name":"moveUp","params":[{"type":{"names":["any"]},"description":"The child to move up in the group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.Group","longname":"Phaser.Group#moveUp","scope":"instance","___s":true},{"meta":{"range":[33533,33769],"filename":"Group.js","lineno":969,"path":"src\\core"},"description":"Moves the given child down one place in this group unless it's already at the bottom.","kind":"function","name":"moveDown","params":[{"type":{"names":["any"]},"description":"The child to move down in the group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.Group","longname":"Phaser.Group#moveDown","scope":"instance","___s":true},{"meta":{"range":[34079,34416],"filename":"Group.js","lineno":993,"path":"src\\core"},"description":"Positions the child found at the given index within this group to the given x and y coordinates.","kind":"function","name":"xy","params":[{"type":{"names":["integer"]},"description":"The index of the child in the group to set the position of.","name":"index"},{"type":{"names":["number"]},"description":"The new x position of the child.","name":"x"},{"type":{"names":["number"]},"description":"The new y position of the child.","name":"y"}],"memberof":"Phaser.Group","longname":"Phaser.Group#xy","scope":"instance","___s":true},{"meta":{"range":[34670,34845],"filename":"Group.js","lineno":1015,"path":"src\\core"},"description":"Reverses all children in this group.\r\rThis operation applies only to immediate children and does not propagate to subgroups.","kind":"function","name":"reverse","memberof":"Phaser.Group","longname":"Phaser.Group#reverse","scope":"instance","___s":true},{"meta":{"range":[34956,35246],"filename":"Group.js","lineno":1029,"path":"src\\core"},"description":"Get the index position of the given child in this group, which should match the child's `z` property.","kind":"function","name":"getIndex","params":[{"type":{"names":["any"]},"description":"The child to get the index for.","name":"child"}],"returns":[{"type":{"names":["integer"]},"description":"The index of the child or -1 if it's not a member of this group."}],"memberof":"Phaser.Group","longname":"Phaser.Group#getIndex","scope":"instance","___s":true},{"meta":{"range":[35354,35730],"filename":"Group.js","lineno":1042,"path":"src\\core"},"description":"Searches the Group for the first instance of a child with the `name`\rproperty matching the given argument. Should more than one child have\rthe same name only the first instance is returned.","kind":"function","name":"getByName","params":[{"type":{"names":["string"]},"description":"The name to search for.","name":"name"}],"returns":[{"type":{"names":["any"]},"description":"The first child with a matching name, or null if none were found."}],"memberof":"Phaser.Group","longname":"Phaser.Group#getByName","scope":"instance","___s":true},{"meta":{"range":[35987,36616],"filename":"Group.js","lineno":1065,"path":"src\\core"},"description":"Replaces a child of this Group with the given newChild. The newChild cannot be a member of this Group.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.","kind":"function","name":"replace","params":[{"type":{"names":["any"]},"description":"The child in this group that will be replaced.","name":"oldChild"},{"type":{"names":["any"]},"description":"The child to be inserted into this group.","name":"newChild"}],"returns":[{"type":{"names":["any"]},"description":"Returns the oldChild that was replaced within this group."}],"memberof":"Phaser.Group","longname":"Phaser.Group#replace","scope":"instance","___s":true},{"meta":{"range":[37172,37536],"filename":"Group.js","lineno":1104,"path":"src\\core"},"description":"Checks if the child has the given property.\r\rWill scan up to 4 levels deep only.","kind":"function","name":"hasProperty","params":[{"type":{"names":["any"]},"description":"The child to check for the existence of the property on.","name":"child"},{"type":{"names":["Array.<string>"]},"description":"An array of strings that make up the property.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the child has the property, otherwise false."}],"memberof":"Phaser.Group","longname":"Phaser.Group#hasProperty","scope":"instance","___s":true},{"meta":{"range":[38169,39389],"filename":"Group.js","lineno":1139,"path":"src\\core"},"description":"Sets a property to the given value on the child. The operation parameter controls how the value is set.\r\rThe operations are:\r- 0: set the existing value to the given value; if force is `true` a new property will be created if needed\r- 1: will add the given value to the value already present.\r- 2: will subtract the given value from the value already present.\r- 3: will multiply the value already present by the given value.\r- 4: will divide the value already present by the given value.","kind":"function","name":"setProperty","params":[{"type":{"names":["any"]},"description":"The child to set the property value on.","name":"child"},{"type":{"names":["array"]},"description":"An array of strings that make up the property that will be set.","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the property was set, false if not."}],"memberof":"Phaser.Group","longname":"Phaser.Group#setProperty","scope":"instance","___s":true},{"meta":{"range":[41812,42411],"filename":"Group.js","lineno":1217,"path":"src\\core"},"description":"Checks a property for the given value on the child.","kind":"function","name":"checkProperty","params":[{"type":{"names":["any"]},"description":"The child to check the property value on.","name":"child"},{"type":{"names":["array"]},"description":"An array of strings that make up the property that will be set.","name":"key"},{"type":{"names":["any"]},"description":"The value that will be checked.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the property was was equal to value, false if not."}],"memberof":"Phaser.Group","longname":"Phaser.Group#checkProperty","scope":"instance","___s":true},{"meta":{"range":[42841,43970],"filename":"Group.js","lineno":1246,"path":"src\\core"},"description":"Quickly set a property on a single child of this group to a new value.\r\rThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","kind":"function","name":"set","params":[{"type":{"names":["Phaser.Sprite"]},"description":"The child to set the property on.","name":"child"},{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then the child will only be updated if alive=true.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then the child will only be updated if visible=true.","name":"checkVisible"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the property was set, false if not."}],"memberof":"Phaser.Group","longname":"Phaser.Group#set","scope":"instance","___s":true},{"meta":{"range":[44503,45816],"filename":"Group.js","lineno":1277,"path":"src\\core"},"description":"Quickly set the same property across all children of this group to a new value.\r\rThis call doesn't descend down children, so if you have a Group inside of this group, the property will be set on the group but not its children.\rIf you need that ability please see `Group.setAllChildren`.\r\rThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","kind":"function","name":"setAll","params":[{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with alive=true will be updated. This includes any Groups that are children.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with visible=true will be updated. This includes any Groups that are children.","name":"checkVisible"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"memberof":"Phaser.Group","longname":"Phaser.Group#setAll","scope":"instance","___s":true},{"meta":{"range":[46466,47814],"filename":"Group.js","lineno":1312,"path":"src\\core"},"description":"Quickly set the same property across all children of this group, and any child Groups, to a new value.\r\rIf this group contains other Groups then the same property is set across their children as well, iterating down until it reaches the bottom.\rUnlike with `setAll` the property is NOT set on child Groups itself.\r\rThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","kind":"function","name":"setAllChildren","params":[{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with alive=true will be updated. This includes any Groups that are children.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with visible=true will be updated. This includes any Groups that are children.","name":"checkVisible"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"memberof":"Phaser.Group","longname":"Phaser.Group#setAllChildren","scope":"instance","___s":true},{"meta":{"range":[48703,49653],"filename":"Group.js","lineno":1353,"path":"src\\core"},"description":"Quickly check that the same property across all children of this group is equal to the given value.\r\rThis call doesn't descend down children, so if you have a Group inside of this group, the property will be checked on the group but not its children.","kind":"function","name":"checkAll","params":[{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be checked.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with alive=true will be checked. This includes any Groups that are children.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with visible=true will be checked. This includes any Groups that are children.","name":"checkVisible"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned.","name":"force"}],"memberof":"Phaser.Group","longname":"Phaser.Group#checkAll","scope":"instance","___s":true},{"meta":{"range":[50309,50931],"filename":"Group.js","lineno":1386,"path":"src\\core"},"description":"Adds the amount to the given property on all children in this group.\r\r`Group.addAll('x', 10)` will add 10 to the child.x value for each child.","kind":"function","name":"addAll","params":[{"type":{"names":["string"]},"description":"The property to increment, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to increment the property by. If child.x = 10 then addAll('x', 40) would make child.x = 50.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.Group","longname":"Phaser.Group#addAll","scope":"instance","___s":true},{"meta":{"range":[51097,51731],"filename":"Group.js","lineno":1403,"path":"src\\core"},"description":"Subtracts the amount from the given property on all children in this group.\r\r`Group.subAll('x', 10)` will minus 10 from the child.x value for each child.","kind":"function","name":"subAll","params":[{"type":{"names":["string"]},"description":"The property to decrement, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to subtract from the property. If child.x = 50 then subAll('x', 40) would make child.x = 10.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.Group","longname":"Phaser.Group#subAll","scope":"instance","___s":true},{"meta":{"range":[51897,52529],"filename":"Group.js","lineno":1420,"path":"src\\core"},"description":"Multiplies the given property by the amount on all children in this group.\r\r`Group.multiplyAll('x', 2)` will x2 the child.x value for each child.","kind":"function","name":"multiplyAll","params":[{"type":{"names":["string"]},"description":"The property to multiply, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to multiply the property by. If child.x = 10 then multiplyAll('x', 2) would make child.x = 20.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.Group","longname":"Phaser.Group#multiplyAll","scope":"instance","___s":true},{"meta":{"range":[52700,53322],"filename":"Group.js","lineno":1437,"path":"src\\core"},"description":"Divides the given property by the amount on all children in this group.\r\r`Group.divideAll('x', 2)` will half the child.x value for each child.","kind":"function","name":"divideAll","params":[{"type":{"names":["string"]},"description":"The property to divide, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to divide the property by. If child.x = 100 then divideAll('x', 2) would make child.x = 50.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.Group","longname":"Phaser.Group#divideAll","scope":"instance","___s":true},{"meta":{"range":[53491,54021],"filename":"Group.js","lineno":1454,"path":"src\\core"},"description":"Calls a function, specified by name, on all children in the group who exist (or do not exist).\r\rAfter the existsValue parameter you can add as many parameters as you like, which will all be passed to the child callback.","kind":"function","name":"callAllExists","params":[{"type":{"names":["string"]},"description":"Name of the function on the children to call.","name":"callback"},{"type":{"names":["boolean"]},"description":"Only children with exists=existsValue will be called.","name":"existsValue"},{"type":{"names":["any"]},"variable":true,"description":"Additional parameters that will be passed to the callback.","name":"parameter"}],"memberof":"Phaser.Group","longname":"Phaser.Group#callAllExists","scope":"instance","___s":true},{"meta":{"range":[54549,54911],"filename":"Group.js","lineno":1488,"path":"src\\core"},"description":"Returns a reference to a function that exists on a child of the group based on the given callback array.","kind":"function","name":"callbackFromArray","params":[{"type":{"names":["object"]},"description":"The object to inspect.","name":"child"},{"type":{"names":["array"]},"description":"The array of function names.","name":"callback"},{"type":{"names":["integer"]},"description":"The size of the array (pre-calculated in callAll).","name":"length"}],"access":"protected","memberof":"Phaser.Group","longname":"Phaser.Group#callbackFromArray","scope":"instance","___s":true},{"meta":{"range":[55847,56541],"filename":"Group.js","lineno":1538,"path":"src\\core"},"description":"Calls a function, specified by name, on all on children.\r\rThe function is called for all children regardless if they are dead or alive (see callAllExists for different options).\rAfter the method parameter and context you can add as many extra parameters as you like, which will all be passed to the child.","kind":"function","name":"callAll","params":[{"type":{"names":["string"]},"description":"Name of the function on the child to call. Deep property lookup is supported.","name":"method"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"A string containing the context under which the method will be executed. Set to null to default to the child.","name":"context"},{"type":{"names":["any"]},"variable":true,"description":"Additional parameters that will be passed to the method.","name":"args"}],"memberof":"Phaser.Group","longname":"Phaser.Group#callAll","scope":"instance","___s":true},{"meta":{"range":[57918,58017],"filename":"Group.js","lineno":1611,"path":"src\\core"},"description":"The core preUpdate - as called by World.","kind":"function","name":"preUpdate","access":"protected","memberof":"Phaser.Group","longname":"Phaser.Group#preUpdate","scope":"instance","___s":true},{"meta":{"range":[58417,58510],"filename":"Group.js","lineno":1639,"path":"src\\core"},"description":"The core update - as called by World.","kind":"function","name":"update","access":"protected","memberof":"Phaser.Group","longname":"Phaser.Group#update","scope":"instance","___s":true},{"meta":{"range":[58768,58869],"filename":"Group.js","lineno":1656,"path":"src\\core"},"description":"The core postUpdate - as called by World.","kind":"function","name":"postUpdate","access":"protected","memberof":"Phaser.Group","longname":"Phaser.Group#postUpdate","scope":"instance","___s":true},{"meta":{"range":[59239,60105],"filename":"Group.js","lineno":1677,"path":"src\\core"},"description":"Find children matching a certain predicate.\r\rFor example:\r\r    var healthyList = Group.filter(function(child, index, children) {\r        return child.health > 10 ? true : false;\r    }, true);\r    healthyList.callAll('attack');\r\rNote: Currently this will skip any children which are Groups themselves.","kind":"function","name":"filter","params":[{"type":{"names":["function"]},"description":"The function that each child will be evaluated against. Each child of the group will be passed to it as its first parameter, the index as the second, and the entire child array as the third","name":"predicate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true, only existing can be selected; otherwise all children can be selected and will be passed to the predicate.","name":"checkExists"}],"returns":[{"type":{"names":["Phaser.ArraySet"]},"description":"Returns an array list containing all the children that the predicate returned true for"}],"memberof":"Phaser.Group","longname":"Phaser.Group#filter","scope":"instance","___s":true},{"meta":{"range":[60612,61562],"filename":"Group.js","lineno":1717,"path":"src\\core"},"description":"Call a function on each child in this group.\r\rAdditional arguments for the callback can be specified after the `checkExists` parameter. For example,\r\r    Group.forEach(awardBonusGold, this, true, 100, 500)\r\rwould invoke `awardBonusGold` function with the parameters `(child, 100, 500)`.\r\rNote: This check will skip any children which are Groups themselves.","kind":"function","name":"forEach","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set only children matching for which `exists` is true will be passed to the callback, otherwise all children will be passed.","name":"checkExists"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.Group","longname":"Phaser.Group#forEach","scope":"instance","___s":true},{"meta":{"range":[62664,63187],"filename":"Group.js","lineno":1771,"path":"src\\core"},"description":"Call a function on each existing child in this group.\r\rSee {@link Phaser.Group#forEach forEach} for details.","kind":"function","name":"forEachExists","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.Group","longname":"Phaser.Group#forEachExists","scope":"instance","___s":true},{"meta":{"range":[63575,64094],"filename":"Group.js","lineno":1799,"path":"src\\core"},"description":"Call a function on each alive child in this group.\r\rSee {@link Phaser.Group#forEach forEach} for details.","kind":"function","name":"forEachAlive","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.Group","longname":"Phaser.Group#forEachAlive","scope":"instance","___s":true},{"meta":{"range":[64480,64997],"filename":"Group.js","lineno":1827,"path":"src\\core"},"description":"Call a function on each dead child in this group.\r\rSee {@link Phaser.Group#forEach forEach} for details.","kind":"function","name":"forEachDead","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.Group","longname":"Phaser.Group#forEachDead","scope":"instance","___s":true},{"meta":{"range":[65383,66281],"filename":"Group.js","lineno":1855,"path":"src\\core"},"description":"Sort the children in the group according to a particular key and ordering.\r\rCall this function to sort the group according to a particular key value and order.\r\rFor example to depth sort Sprites for Zelda-style game you might call `group.sort('y', Phaser.Group.SORT_ASCENDING)` at the bottom of your `State.update()`.\r\rInternally this uses a standard JavaScript Array sort, so everything that applies there also applies here, including\ralphabetical sorting, mixing strings and numbers, and Unicode sorting. See MDN for more details.","kind":"function","name":"sort","params":[{"type":{"names":["string"]},"optional":true,"defaultvalue":"'z'","description":"The name of the property to sort on. Defaults to the objects z-depth value.","name":"key"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"Phaser.Group.SORT_ASCENDING","description":"Order ascending ({@link Phaser.Group.SORT_ASCENDING SORT_ASCENDING}) or descending ({@link Phaser.Group.SORT_DESCENDING SORT_DESCENDING}).","name":"order"}],"memberof":"Phaser.Group","longname":"Phaser.Group#sort","scope":"instance","___s":true},{"meta":{"range":[66838,67280],"filename":"Group.js","lineno":1895,"path":"src\\core"},"description":"Sort the children in the group according to custom sort function.\r\rThe `sortHandler` is provided the two parameters: the two children involved in the comparison (a and b).\rIt should return -1 if `a > b`, 1 if `a < b` or 0 if `a === b`.","kind":"function","name":"customSort","params":[{"type":{"names":["function"]},"description":"The custom sort function.","name":"sortHandler"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the sortHandler is called.","name":"context"}],"memberof":"Phaser.Group","longname":"Phaser.Group#customSort","scope":"instance","___s":true},{"meta":{"range":[67535,67766],"filename":"Group.js","lineno":1919,"path":"src\\core"},"description":"An internal helper function for the sort process.","kind":"function","name":"ascendingSortHandler","access":"protected","params":[{"type":{"names":["object"]},"description":"The first object being sorted.","name":"a"},{"type":{"names":["object"]},"description":"The second object being sorted.","name":"b"}],"memberof":"Phaser.Group","longname":"Phaser.Group#ascendingSortHandler","scope":"instance","___s":true},{"meta":{"range":[68180,68412],"filename":"Group.js","lineno":1951,"path":"src\\core"},"description":"An internal helper function for the sort process.","kind":"function","name":"descendingSortHandler","access":"protected","params":[{"type":{"names":["object"]},"description":"The first object being sorted.","name":"a"},{"type":{"names":["object"]},"description":"The second object being sorted.","name":"b"}],"memberof":"Phaser.Group","longname":"Phaser.Group#descendingSortHandler","scope":"instance","___s":true},{"meta":{"range":[68717,70530],"filename":"Group.js","lineno":1976,"path":"src\\core"},"description":"Iterates over the children of the group performing one of several actions for matched children.\r\rA child is considered a match when it has a property, named `key`, whose value is equal to `value`\raccording to a strict equality comparison.\r\rThe result depends on the `returnType`:\r\r- {@link Phaser.Group.RETURN_TOTAL RETURN_TOTAL}:\r    The callback, if any, is applied to all matching children. The number of matched children is returned.\r- {@link Phaser.Group.RETURN_NONE RETURN_NONE}:\r    The callback, if any, is applied to all matching children. No value is returned.\r- {@link Phaser.Group.RETURN_CHILD RETURN_CHILD}:\r    The callback, if any, is applied to the *first* matching child and the *first* matched child is returned.\r    If there is no matching child then null is returned.\r\rIf `args` is specified it must be an array. The matched child will be assigned to the first\relement and the entire array will be applied to the callback function.","kind":"function","name":"iterate","params":[{"type":{"names":["string"]},"description":"The child property to check, i.e. 'exists', 'alive', 'health'","name":"key"},{"type":{"names":["any"]},"description":"A child matches if `child[key] === value` is true.","name":"value"},{"type":{"names":["integer"]},"description":"How to iterate the children and what to return.","name":"returnType"},{"type":{"names":["function"]},"optional":true,"defaultvalue":null,"description":"Optional function that will be called on each matching child. The matched child is supplied as the first argument.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["Array.<any>"]},"optional":true,"defaultvalue":"(none)","description":"The arguments supplied to to the callback; the first array index (argument) will be replaced with the matched child.","name":"args"}],"returns":[{"type":{"names":["any"]},"description":"Returns either an integer (for RETURN_TOTAL), the first matched child (for RETURN_CHILD), or null."}],"memberof":"Phaser.Group","longname":"Phaser.Group#iterate","scope":"instance","___s":true},{"meta":{"range":[72077,73685],"filename":"Group.js","lineno":2071,"path":"src\\core"},"description":"Get the first display object that exists, or doesn't exist.\r\rYou can use the optional argument `createIfNull` to create a new Game Object if none matching your exists argument were found in this Group.\r\rIt works by calling `Group.create` passing it the parameters given to this method, and returning the new child.\r\rIf a child *was* found , `createIfNull` is `false` and you provided the additional arguments then the child\rwill be reset and/or have a new texture loaded on it. This is handled by `Group.resetChild`.","kind":"function","name":"getFirstExists","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true, find the first existing child; otherwise find the first non-existing child.","name":"exists"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `true` and no alive children are found a new one is created.","name":"createIfNull"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The first child, or `null` if none found and `createIfNull` was false."}],"memberof":"Phaser.Group","longname":"Phaser.Group#getFirstExists","scope":"instance","___s":true},{"meta":{"range":[74132,75655],"filename":"Group.js","lineno":2105,"path":"src\\core"},"description":"Get the first child that is alive (`child.alive === true`).\r\rThis is handy for choosing a squad leader, etc.\r\rYou can use the optional argument `createIfNull` to create a new Game Object if no alive ones were found in this Group.\r\rIt works by calling `Group.create` passing it the parameters given to this method, and returning the new child.\r\rIf a child *was* found , `createIfNull` is `false` and you provided the additional arguments then the child\rwill be reset and/or have a new texture loaded on it. This is handled by `Group.resetChild`.","kind":"function","name":"getFirstAlive","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `true` and no alive children are found a new one is created.","name":"createIfNull"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The alive dead child, or `null` if none found and `createIfNull` was false."}],"memberof":"Phaser.Group","longname":"Phaser.Group#getFirstAlive","scope":"instance","___s":true},{"meta":{"range":[76012,77578],"filename":"Group.js","lineno":2135,"path":"src\\core"},"description":"Get the first child that is dead (`child.alive === false`).\r\rThis is handy for checking if everything has been wiped out and adding to the pool as needed.\r\rYou can use the optional argument `createIfNull` to create a new Game Object if no dead ones were found in this Group.\r\rIt works by calling `Group.create` passing it the parameters given to this method, and returning the new child.\r\rIf a child *was* found , `createIfNull` is `false` and you provided the additional arguments then the child\rwill be reset and/or have a new texture loaded on it. This is handled by `Group.resetChild`.","kind":"function","name":"getFirstDead","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `true` and no dead children are found a new one is created.","name":"createIfNull"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The first dead child, or `null` if none found and `createIfNull` was false."}],"memberof":"Phaser.Group","longname":"Phaser.Group#getFirstDead","scope":"instance","___s":true},{"meta":{"range":[77935,79182],"filename":"Group.js","lineno":2165,"path":"src\\core"},"description":"Takes a child and if the `x` and `y` arguments are given it calls `child.reset(x, y)` on it.\r\rIf the `key` and optionally the `frame` arguments are given, it calls `child.loadTexture(key, frame)` on it.\r\rThe two operations are separate. For example if you just wish to load a new texture then pass `null` as the x and y values.","kind":"function","name":"resetChild","params":[{"type":{"names":["DisplayObject"]},"description":"The child to reset and/or load the texture on.","name":"child"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was reset: usually a {@link Phaser.Sprite}."}],"memberof":"Phaser.Group","longname":"Phaser.Group#resetChild","scope":"instance","___s":true},{"meta":{"range":[79595,79813],"filename":"Group.js","lineno":2204,"path":"src\\core"},"description":"Return the child at the top of this group.\r\rThe top child is the child displayed (rendered) above every other child.","kind":"function","name":"getTop","returns":[{"type":{"names":["any"]},"description":"The child at the top of the Group."}],"memberof":"Phaser.Group","longname":"Phaser.Group#getTop","scope":"instance","___s":true},{"meta":{"range":[79978,80212],"filename":"Group.js","lineno":2221,"path":"src\\core"},"description":"Returns the child at the bottom of this group.\r\rThe bottom child the child being displayed (rendered) below every other child.","kind":"function","name":"getBottom","returns":[{"type":{"names":["any"]},"description":"The child at the bottom of the Group."}],"memberof":"Phaser.Group","longname":"Phaser.Group#getBottom","scope":"instance","___s":true},{"meta":{"range":[80357,81660],"filename":"Group.js","lineno":2238,"path":"src\\core"},"description":"Get the closest child to given Object, with optional callback to filter children.\r\rThis can be a Sprite, Group, Image or any object with public x and y properties.\r\r'close' is determined by the distance from the objects `x` and `y` properties compared to the childs `x` and `y` properties.\r\rYou can use the optional `callback` argument to apply your own filter to the distance checks.\rIf the child is closer then the previous child, it will be sent to `callback` as the first argument,\rwith the distance as the second. The callback should return `true` if it passes your \rfiltering criteria, otherwise it should return `false`.","kind":"function","name":"getClosestTo","params":[{"type":{"names":["any"]},"description":"The object used to determine the distance. This can be a Sprite, Group, Image or any object with public x and y properties.","name":"object"},{"type":{"names":["function"]},"optional":true,"description":"The function that each child will be evaluated against. Each child of the group will be passed to it as its first parameter, with the distance as the second. It should return `true` if the child passes the matching criteria.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"}],"returns":[{"type":{"names":["any"]},"description":"The child closest to given object, or `null` if no child was found."}],"memberof":"Phaser.Group","longname":"Phaser.Group#getClosestTo","scope":"instance","___s":true},{"meta":{"range":[82322,83655],"filename":"Group.js","lineno":2282,"path":"src\\core"},"description":"Get the child furthest away from the given Object, with optional callback to filter children.\r\rThis can be a Sprite, Group, Image or any object with public x and y properties.\r\r'furthest away' is determined by the distance from the objects `x` and `y` properties compared to the childs `x` and `y` properties.\r\rYou can use the optional `callback` argument to apply your own filter to the distance checks.\rIf the child is closer then the previous child, it will be sent to `callback` as the first argument,\rwith the distance as the second. The callback should return `true` if it passes your \rfiltering criteria, otherwise it should return `false`.","kind":"function","name":"getFurthestFrom","params":[{"type":{"names":["any"]},"description":"The object used to determine the distance. This can be a Sprite, Group, Image or any object with public x and y properties.","name":"object"},{"type":{"names":["function"]},"optional":true,"description":"The function that each child will be evaluated against. Each child of the group will be passed to it as its first parameter, with the distance as the second. It should return `true` if the child passes the matching criteria.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"}],"returns":[{"type":{"names":["any"]},"description":"The child furthest from the given object, or `null` if no child was found."}],"memberof":"Phaser.Group","longname":"Phaser.Group#getFurthestFrom","scope":"instance","___s":true},{"meta":{"range":[84305,84465],"filename":"Group.js","lineno":2326,"path":"src\\core"},"description":"Get the number of living children in this group.","kind":"function","name":"countLiving","returns":[{"type":{"names":["integer"]},"description":"The number of children flagged as alive."}],"memberof":"Phaser.Group","longname":"Phaser.Group#countLiving","scope":"instance","___s":true},{"meta":{"range":[84597,84752],"filename":"Group.js","lineno":2338,"path":"src\\core"},"description":"Get the number of dead children in this group.","kind":"function","name":"countDead","returns":[{"type":{"names":["integer"]},"description":"The number of children flagged as dead."}],"memberof":"Phaser.Group","longname":"Phaser.Group#countDead","scope":"instance","___s":true},{"meta":{"range":[84883,85214],"filename":"Group.js","lineno":2350,"path":"src\\core"},"description":"Returns a random child from the group.","kind":"function","name":"getRandom","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Offset from the front of the group (lowest child).","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"(to top)","description":"Restriction on the number of values you want to randomly select from.","name":"length"}],"returns":[{"type":{"names":["any"]},"description":"A random child of this Group."}],"memberof":"Phaser.Group","longname":"Phaser.Group#getRandom","scope":"instance","___s":true},{"meta":{"range":[85558,86132],"filename":"Group.js","lineno":2372,"path":"src\\core"},"description":"Returns a random child from the Group that has `exists` set to `true`.\r\rOptionally you can specify a start and end index. For example if this Group had 100 children,\rand you set `startIndex` to 0 and `endIndex` to 50, it would return a random child from only\rthe first 50 children in the Group.","kind":"function","name":"getRandomExists","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The first child index to start the search from.","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"description":"The last child index to search up to.","name":"endIndex"}],"returns":[{"type":{"names":["any"]},"description":"A random child of this Group that exists."}],"memberof":"Phaser.Group","longname":"Phaser.Group#getRandomExists","scope":"instance","___s":true},{"meta":{"range":[86327,87278],"filename":"Group.js","lineno":2392,"path":"src\\core"},"description":"Returns all children in this Group.\r\rYou can optionally specify a matching criteria using the `property` and `value` arguments.\r\rFor example: `getAll('exists', true)` would return only children that have their exists property set.\r\rOptionally you can specify a start and end index. For example if this Group had 100 children,\rand you set `startIndex` to 0 and `endIndex` to 50, it would return a random child from only\rthe first 50 children in the Group.","kind":"function","name":"getAll","params":[{"type":{"names":["string"]},"optional":true,"description":"An optional property to test against the value argument.","name":"property"},{"type":{"names":["any"]},"optional":true,"description":"If property is set then Child.property must strictly equal this value to be included in the results.","name":"value"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The first child index to start the search from.","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"description":"The last child index to search up until.","name":"endIndex"}],"returns":[{"type":{"names":["any"]},"description":"A random existing child of this Group."}],"memberof":"Phaser.Group","longname":"Phaser.Group#getAll","scope":"instance","___s":true},{"meta":{"range":[87758,88400],"filename":"Group.js","lineno":2431,"path":"src\\core"},"description":"Removes the given child from this group.\r\rThis will dispatch an `onRemovedFromGroup` event from the child (if it has one), and optionally destroy the child.\r\rIf the group cursor was referring to the removed child it is updated to refer to the next child.","kind":"function","name":"remove","params":[{"type":{"names":["any"]},"description":"The child to remove.","name":"child"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true `destroy` will be invoked on the removed child.","name":"destroy"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the the child will not dispatch the `onRemovedFromGroup` event.","name":"silent"}],"returns":[{"type":{"names":["boolean"]},"description":"true if the child was removed from this group, otherwise false."}],"memberof":"Phaser.Group","longname":"Phaser.Group#remove","scope":"instance","___s":true},{"meta":{"range":[89108,89491],"filename":"Group.js","lineno":2479,"path":"src\\core"},"description":"Moves all children from this Group to the Group given.","kind":"function","name":"moveAll","params":[{"type":{"names":["Phaser.Group"]},"description":"The new Group to which the children will be moved to.","name":"group"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch the `onAddedToGroup` event for the new Group.","name":"silent"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"The Group to which all the children were moved."}],"memberof":"Phaser.Group","longname":"Phaser.Group#moveAll","scope":"instance","___s":true},{"meta":{"range":[89905,90715],"filename":"Group.js","lineno":2508,"path":"src\\core"},"description":"Removes all children from this Group, but does not remove the group from its parent.\r\rThe children can be optionally destroyed as they are removed.\r\rYou can also optionally also destroy the BaseTexture the Child is using. Be careful if you've\rmore than one Game Object sharing the same BaseTexture.","kind":"function","name":"removeAll","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true `destroy` will be invoked on each removed child.","name":"destroy"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch their `onRemovedFromGroup` events.","name":"silent"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true, and if the `destroy` argument is also true, the BaseTexture belonging to the Child is also destroyed. Note that if another Game Object is sharing the same BaseTexture it will invalidate it.","name":"destroyTexture"}],"memberof":"Phaser.Group","longname":"Phaser.Group#removeAll","scope":"instance","___s":true},{"meta":{"range":[91534,92171],"filename":"Group.js","lineno":2556,"path":"src\\core"},"description":"Removes all children from this group whose index falls beteen the given startIndex and endIndex values.","kind":"function","name":"removeBetween","params":[{"type":{"names":["integer"]},"description":"The index to start removing children from.","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"description":"The index to stop removing children at. Must be higher than startIndex. If undefined this method will remove all children between startIndex and the end of the group.","name":"endIndex"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true `destroy` will be invoked on each removed child.","name":"destroy"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch their `onRemovedFromGroup` events.","name":"silent"}],"memberof":"Phaser.Group","longname":"Phaser.Group#removeBetween","scope":"instance","___s":true},{"meta":{"range":[93215,93635],"filename":"Group.js","lineno":2611,"path":"src\\core"},"description":"Destroys this group.\r\rRemoves all children, then removes this group from its parent and nulls references.","kind":"function","name":"destroy","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true `destroy` will be invoked on each removed child.","name":"destroyChildren"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"A 'soft destroy' (set to true) doesn't remove this group from its parent or null the game reference. Set to false and it does.","name":"soft"}],"memberof":"Phaser.Group","longname":"Phaser.Group#destroy","scope":"instance","___s":true},{"meta":{"range":[94267,94398],"filename":"Group.js","lineno":2648,"path":"src\\core"},"description":"Total number of existing children in the group.","name":"total","properties":[{"type":{"names":["integer"]},"name":"total"}],"readonly":true,"memberof":"Phaser.Group","longname":"Phaser.Group#total","scope":"instance","kind":"member","___s":true},{"meta":{"range":[94577,94738],"filename":"Group.js","lineno":2665,"path":"src\\core"},"description":"Total number of children in this group, regardless of exists/alive status.","name":"length","properties":[{"type":{"names":["integer"]},"name":"length"}],"readonly":true,"memberof":"Phaser.Group","longname":"Phaser.Group#length","scope":"instance","kind":"member","___s":true},{"meta":{"range":[94883,95247],"filename":"Group.js","lineno":2682,"path":"src\\core"},"description":"The angle of rotation of the group container, in degrees.\r\rThis adjusts the group itself by modifying its local rotation transform.\r\rThis has no impact on the rotation/angle properties of the children, but it will update their worldTransform\rand on-screen orientation and position.","name":"angle","properties":[{"type":{"names":["number"]},"name":"angle"}],"memberof":"Phaser.Group","longname":"Phaser.Group#angle","scope":"instance","kind":"member","___s":true},{"meta":{"range":[95493,95718],"filename":"Group.js","lineno":2705,"path":"src\\core"},"description":"The center x coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"centerX","properties":[{"type":{"names":["number"]},"name":"centerX"}],"memberof":"Phaser.Group","longname":"Phaser.Group#centerX","scope":"instance","kind":"member","___s":true},{"meta":{"range":[96056,96281],"filename":"Group.js","lineno":2733,"path":"src\\core"},"description":"The center y coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"centerY","properties":[{"type":{"names":["number"]},"name":"centerY"}],"memberof":"Phaser.Group","longname":"Phaser.Group#centerY","scope":"instance","kind":"member","___s":true},{"meta":{"range":[96620,96835],"filename":"Group.js","lineno":2761,"path":"src\\core"},"description":"The left coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"left","properties":[{"type":{"names":["number"]},"name":"left"}],"memberof":"Phaser.Group","longname":"Phaser.Group#left","scope":"instance","kind":"member","___s":true},{"meta":{"range":[97151,97368],"filename":"Group.js","lineno":2789,"path":"src\\core"},"description":"The right coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"right","properties":[{"type":{"names":["number"]},"name":"right"}],"memberof":"Phaser.Group","longname":"Phaser.Group#right","scope":"instance","kind":"member","___s":true},{"meta":{"range":[97698,97909],"filename":"Group.js","lineno":2817,"path":"src\\core"},"description":"The top coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"top","properties":[{"type":{"names":["number"]},"name":"top"}],"memberof":"Phaser.Group","longname":"Phaser.Group#top","scope":"instance","kind":"member","___s":true},{"meta":{"range":[98225,98446],"filename":"Group.js","lineno":2845,"path":"src\\core"},"description":"The bottom coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"bottom","properties":[{"type":{"names":["number"]},"name":"bottom"}],"memberof":"Phaser.Group","longname":"Phaser.Group#bottom","scope":"instance","kind":"member","___s":true},{"meta":{"range":[98779,101436],"filename":"Group.js","lineno":2873,"path":"src\\core"},"description":"Aligns this Group within another Game Object, or Rectangle, known as the\r'container', to one of 9 possible positions.\r\rThe container must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Groups within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Group to another Game Object does **not** make it a child of\rthe container. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, \r`Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, \r`Phaser.BOTTOM_CENTER` and `Phaser.BOTTOM_RIGHT`.\r\rGroups are placed in such a way that their _bounds_ align with the\rcontainer, taking into consideration rotation and scale of its children.\rThis allows you to neatly align Groups, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Group. For example:\r\r`group.alignIn(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `group` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the containers bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the container bounds by that amount, and providing a positive\rone expands it.","kind":"function","name":"alignIn","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Group to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"container"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"This Group."}],"memberof":"Phaser.Group","longname":"Phaser.Group#alignIn","scope":"instance","___s":true},{"meta":{"range":[101522,104305],"filename":"Group.js","lineno":2915,"path":"src\\core"},"description":"Aligns this Group to the side of another Game Object, or Rectangle, known as the\r'parent', in one of 11 possible positions.\r\rThe parent must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Groups within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Group to another Game Object does **not** make it a child of\rthe parent. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, \r`Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, \r`Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` \rand `Phaser.BOTTOM_RIGHT`.\r\rGroups are placed in such a way that their _bounds_ align with the\rparent, taking into consideration rotation and scale of the children.\rThis allows you to neatly align Groups, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Group. For example:\r\r`group.alignTo(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `group` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the parents bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the parent bounds by that amount, and providing a positive\rone expands it.","kind":"function","name":"alignTo","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Group to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"parent"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, `Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, `Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"This Group."}],"memberof":"Phaser.Group","longname":"Phaser.Group#alignTo","scope":"instance","___s":true},{"meta":{"range":[104771,105080],"filename":"Group.js","lineno":2969,"path":"src\\core"},"description":"The x coordinate of the group container.\r\rYou can adjust the group container itself by modifying its coordinates.\rThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position.","name":"x","properties":[{"type":{"names":["number"]},"name":"x"}],"memberof":"Phaser.Group","longname":"Phaser.Group#x","scope":"instance","kind":"member","___s":true},{"meta":{"range":[105084,105393],"filename":"Group.js","lineno":2978,"path":"src\\core"},"description":"The y coordinate of the group container.\r\rYou can adjust the group container itself by modifying its coordinates.\rThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position.","name":"y","properties":[{"type":{"names":["number"]},"name":"y"}],"memberof":"Phaser.Group","longname":"Phaser.Group#y","scope":"instance","kind":"member","___s":true},{"meta":{"range":[105397,105735],"filename":"Group.js","lineno":2987,"path":"src\\core"},"description":"The angle of rotation of the group container, in radians.\r\rThis will adjust the group container itself by modifying its rotation.\rThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position.","name":"rotation","properties":[{"type":{"names":["number"]},"name":"rotation"}],"memberof":"Phaser.Group","longname":"Phaser.Group#rotation","scope":"instance","kind":"member","___s":true},{"meta":{"range":[105739,105908],"filename":"Group.js","lineno":2996,"path":"src\\core"},"description":"The visible state of the group. Non-visible Groups and all of their children are not rendered.","name":"visible","properties":[{"type":{"names":["boolean"]},"name":"visible"}],"memberof":"Phaser.Group","longname":"Phaser.Group#visible","scope":"instance","kind":"member","___s":true},{"meta":{"range":[105912,106021],"filename":"Group.js","lineno":3003,"path":"src\\core"},"description":"The alpha value of the group container.","name":"alpha","properties":[{"type":{"names":["number"]},"name":"alpha"}],"memberof":"Phaser.Group","longname":"Phaser.Group#alpha","scope":"instance","kind":"member","___s":true},{"meta":{"range":[495,2158],"filename":"Plugin.js","lineno":15,"path":"src\\core"},"description":"This is a base Plugin template to use for any Phaser plugin development.","kind":"class","classdesc":"Phaser.Plugin","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["any"]},"description":"The object that owns this plugin, usually Phaser.PluginManager.","name":"parent"}],"name":"Plugin","longname":"Phaser.Plugin","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[694,710],"filename":"Plugin.js","lineno":22,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"game","longname":"Phaser.Plugin#game","kind":"member","memberof":"Phaser.Plugin","scope":"instance","___s":true},{"meta":{"range":[884,904],"filename":"Plugin.js","lineno":27,"path":"src\\core"},"properties":[{"type":{"names":["any"]},"description":"The parent of this plugin. If added to the PluginManager the parent will be set to that, otherwise it will be null.","name":"parent"}],"name":"parent","longname":"Phaser.Plugin#parent","kind":"member","memberof":"Phaser.Plugin","scope":"instance","___s":true},{"meta":{"range":[1095,1114],"filename":"Plugin.js","lineno":33,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"A Plugin with active=true has its preUpdate and update methods called by the parent, otherwise they are skipped.","name":"active"}],"defaultvalue":false,"name":"active","longname":"Phaser.Plugin#active","kind":"member","memberof":"Phaser.Plugin","scope":"instance","___s":true},{"meta":{"range":[1308,1328],"filename":"Plugin.js","lineno":39,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"A Plugin with visible=true has its render and postRender methods called by the parent, otherwise they are skipped.","name":"visible"}],"defaultvalue":false,"name":"visible","longname":"Phaser.Plugin#visible","kind":"member","memberof":"Phaser.Plugin","scope":"instance","___s":true},{"meta":{"range":[1470,1495],"filename":"Plugin.js","lineno":45,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"A flag to indicate if this plugin has a preUpdate method.","name":"hasPreUpdate"}],"defaultvalue":false,"name":"hasPreUpdate","longname":"Phaser.Plugin#hasPreUpdate","kind":"member","memberof":"Phaser.Plugin","scope":"instance","___s":true},{"meta":{"range":[1632,1654],"filename":"Plugin.js","lineno":51,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"A flag to indicate if this plugin has an update method.","name":"hasUpdate"}],"defaultvalue":false,"name":"hasUpdate","longname":"Phaser.Plugin#hasUpdate","kind":"member","memberof":"Phaser.Plugin","scope":"instance","___s":true},{"meta":{"range":[1798,1824],"filename":"Plugin.js","lineno":57,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"A flag to indicate if this plugin has a postUpdate method.","name":"hasPostUpdate"}],"defaultvalue":false,"name":"hasPostUpdate","longname":"Phaser.Plugin#hasPostUpdate","kind":"member","memberof":"Phaser.Plugin","scope":"instance","___s":true},{"meta":{"range":[1960,1982],"filename":"Plugin.js","lineno":63,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"A flag to indicate if this plugin has a render method.","name":"hasRender"}],"defaultvalue":false,"name":"hasRender","longname":"Phaser.Plugin#hasRender","kind":"member","memberof":"Phaser.Plugin","scope":"instance","___s":true},{"meta":{"range":[2126,2152],"filename":"Plugin.js","lineno":69,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"A flag to indicate if this plugin has a postRender method.","name":"hasPostRender"}],"defaultvalue":false,"name":"hasPostRender","longname":"Phaser.Plugin#hasPostRender","kind":"member","memberof":"Phaser.Plugin","scope":"instance","___s":true},{"meta":{"range":[2198,2433],"filename":"Plugin.js","lineno":75,"path":"src\\core"},"description":"Pre-update is called at the very start of the update cycle, before any other subsystems have been updated (including Physics).\rIt is only called if active is set to true.","kind":"function","name":"preUpdate","memberof":"Phaser.Plugin","longname":"Phaser.Plugin#preUpdate","scope":"instance","___s":true},{"meta":{"range":[2479,2710],"filename":"Plugin.js","lineno":83,"path":"src\\core"},"description":"Update is called after all the core subsystems (Input, Tweens, Sound, etc) and the State have updated, but before the render.\rIt is only called if active is set to true.","kind":"function","name":"update","memberof":"Phaser.Plugin","longname":"Phaser.Plugin#update","scope":"instance","___s":true},{"meta":{"range":[2753,2946],"filename":"Plugin.js","lineno":91,"path":"src\\core"},"description":"Render is called right after the Game Renderer completes, but before the State.render.\rIt is only called if visible is set to true.","kind":"function","name":"render","memberof":"Phaser.Plugin","longname":"Phaser.Plugin#render","scope":"instance","___s":true},{"meta":{"range":[2989,3172],"filename":"Plugin.js","lineno":99,"path":"src\\core"},"description":"Post-render is called after the Game Renderer and State.render have run.\rIt is only called if visible is set to true.","kind":"function","name":"postRender","memberof":"Phaser.Plugin","longname":"Phaser.Plugin#postRender","scope":"instance","___s":true},{"meta":{"range":[3219,3321],"filename":"Plugin.js","lineno":107,"path":"src\\core"},"description":"Clear down this Plugin and null out references","kind":"function","name":"destroy","memberof":"Phaser.Plugin","longname":"Phaser.Plugin#destroy","scope":"instance","___s":true},{"meta":{"range":[462,994],"filename":"PluginManager.js","lineno":16,"path":"src\\core"},"description":"The Plugin Manager is responsible for the loading, running and unloading of Phaser Plugins.","kind":"class","classdesc":"Phaser.PluginManager","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"PluginManager","longname":"Phaser.PluginManager","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[607,623],"filename":"PluginManager.js","lineno":21,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"game","longname":"Phaser.PluginManager#game","kind":"member","memberof":"Phaser.PluginManager","scope":"instance","___s":true},{"meta":{"range":[759,776],"filename":"PluginManager.js","lineno":26,"path":"src\\core"},"properties":[{"type":{"names":["Array.<Phaser.Plugin>"]},"description":"An array of all the plugins being managed by this PluginManager.","name":"plugins"}],"name":"plugins","longname":"Phaser.PluginManager#plugins","kind":"member","memberof":"Phaser.PluginManager","scope":"instance","___s":true},{"meta":{"range":[1041,1619],"filename":"PluginManager.js","lineno":44,"path":"src\\core"},"description":"Add a new Plugin into the PluginManager.\rThe Plugin must have 2 properties: game and parent. Plugin.game is set to the game reference the PluginManager uses, and parent is set to the PluginManager.","kind":"function","name":"add","params":[{"type":{"names":["object","Phaser.Plugin"]},"description":"The Plugin to add into the PluginManager. This can be a function or an existing object.","name":"plugin"},{"type":{"names":["*"]},"variable":true,"description":"Additional arguments that will be passed to the Plugin.init method.","name":"parameter"}],"returns":[{"type":{"names":["Phaser.Plugin"]},"description":"The Plugin that was added to the manager."}],"memberof":"Phaser.PluginManager","longname":"Phaser.PluginManager#add","scope":"instance","___s":true},{"meta":{"range":[3673,4006],"filename":"PluginManager.js","lineno":129,"path":"src\\core"},"description":"Remove a Plugin from the PluginManager. It calls Plugin.destroy on the plugin before removing it from the manager.","kind":"function","name":"remove","params":[{"type":{"names":["Phaser.Plugin"]},"description":"The plugin to be removed.","name":"plugin"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Call destroy on the plugin that is removed?","name":"destroy"}],"memberof":"Phaser.PluginManager","longname":"Phaser.PluginManager#remove","scope":"instance","___s":true},{"meta":{"range":[4502,4693],"filename":"PluginManager.js","lineno":159,"path":"src\\core"},"description":"Remove all Plugins from the PluginManager. It calls Plugin.destroy on every plugin before removing it from the manager.","kind":"function","name":"removeAll","memberof":"Phaser.PluginManager","longname":"Phaser.PluginManager#removeAll","scope":"instance","___s":true},{"meta":{"range":[4929,5178],"filename":"PluginManager.js","lineno":178,"path":"src\\core"},"description":"Pre-update is called at the very start of the update cycle, before any other subsystems have been updated (including Physics).\rIt only calls plugins who have active=true.","kind":"function","name":"preUpdate","memberof":"Phaser.PluginManager","longname":"Phaser.PluginManager#preUpdate","scope":"instance","___s":true},{"meta":{"range":[5476,5721],"filename":"PluginManager.js","lineno":198,"path":"src\\core"},"description":"Update is called after all the core subsystems (Input, Tweens, Sound, etc) and the State have updated, but before the render.\rIt only calls plugins who have active=true.","kind":"function","name":"update","memberof":"Phaser.PluginManager","longname":"Phaser.PluginManager#update","scope":"instance","___s":true},{"meta":{"range":[6010,6305],"filename":"PluginManager.js","lineno":218,"path":"src\\core"},"description":"PostUpdate is the last thing to be called before the world render.\rIn particular, it is called after the world postUpdate, which means the camera has been adjusted.\rIt only calls plugins who have active=true.","kind":"function","name":"postUpdate","memberof":"Phaser.PluginManager","longname":"Phaser.PluginManager#postUpdate","scope":"instance","___s":true},{"meta":{"range":[6606,6813],"filename":"PluginManager.js","lineno":239,"path":"src\\core"},"description":"Render is called right after the Game Renderer completes, but before the State.render.\rIt only calls plugins who have visible=true.","kind":"function","name":"render","memberof":"Phaser.PluginManager","longname":"Phaser.PluginManager#render","scope":"instance","___s":true},{"meta":{"range":[7103,7300],"filename":"PluginManager.js","lineno":259,"path":"src\\core"},"description":"Post-render is called after the Game Renderer and State.render have run.\rIt only calls plugins who have visible=true.","kind":"function","name":"postRender","memberof":"Phaser.PluginManager","longname":"Phaser.PluginManager#postRender","scope":"instance","___s":true},{"meta":{"range":[7602,7758],"filename":"PluginManager.js","lineno":279,"path":"src\\core"},"description":"Clear down this PluginManager, calls destroy on every plugin and nulls out references.","kind":"function","name":"destroy","memberof":"Phaser.PluginManager","longname":"Phaser.PluginManager#destroy","scope":"instance","___s":true},{"meta":{"range":[2407,21597],"filename":"ScaleManager.js","lineno":46,"path":"src\\core"},"classdesc":"The ScaleManager object handles the the scaling, resizing, and alignment of the\rGame size and the game Display canvas.\r\rThe Game size is the logical size of the game; the Display canvas has size as an HTML element.\r\rThe calculations of these are heavily influenced by the bounding Parent size which is the computed\rdimensions of the Display canvas's Parent container/element - the _effective CSS rules of the\rcanvas's Parent element play an important role_ in the operation of the ScaleManager. \r\rThe Display canvas - or Game size, depending {@link #scaleMode} - is updated to best utilize the Parent size.\rWhen in Fullscreen mode or with {@link #parentIsWindow} the Parent size is that of the visual viewport (see {@link Phaser.ScaleManager#getParentBounds getParentBounds}).\r\rParent and Display canvas containment guidelines:\r\r- Style the Parent element (of the game canvas) to control the Parent size and\r  thus the Display canvas's size and layout.\r\r- The Parent element's CSS styles should _effectively_ apply maximum (and minimum) bounding behavior.\r\r- The Parent element should _not_ apply a padding as this is not accounted for.\r  If a padding is required apply it to the Parent's parent or apply a margin to the Parent.\r  If you need to add a border, margin or any other CSS around your game container, then use a parent element and\r  apply the CSS to this instead, otherwise you'll be constantly resizing the shape of the game container.\r\r- The Display canvas layout CSS styles (i.e. margins, size) should not be altered/specified as\r  they may be updated by the ScaleManager.","description":"Create a new ScaleManager object - this is done automatically by {@link Phaser.Game}\r\rThe `width` and `height` constructor parameters can either be a number which represents pixels or a string that represents a percentage: e.g. `800` (for 800 pixels) or `\"80%\"` for 80%.","kind":"class","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["number","string"]},"description":"The width of the game. See above.","name":"width"},{"type":{"names":["number","string"]},"description":"The height of the game. See above.","name":"height"}],"name":"ScaleManager","longname":"Phaser.ScaleManager","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[2607,2623],"filename":"ScaleManager.js","lineno":54,"path":"src\\core"},"description":"A reference to the currently running game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"access":"protected","readonly":true,"name":"game","longname":"Phaser.ScaleManager#game","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[2777,2798],"filename":"ScaleManager.js","lineno":62,"path":"src\\core"},"description":"Provides access to some cross-device DOM functions.","properties":[{"type":{"names":["Phaser.DOM"]},"name":"dom"}],"access":"protected","readonly":true,"name":"dom","longname":"Phaser.ScaleManager#dom","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[2957,2973],"filename":"ScaleManager.js","lineno":69,"path":"src\\core"},"description":"_EXPERIMENTAL:_ A responsive grid on which you can align game objects.","properties":[{"type":{"names":["Phaser.FlexGrid"]},"name":"grid"}],"access":"public","name":"grid","longname":"Phaser.ScaleManager#grid","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[3103,3117],"filename":"ScaleManager.js","lineno":76,"path":"src\\core"},"description":"Target width (in pixels) of the Display canvas.","properties":[{"type":{"names":["number"]},"name":"width"}],"readonly":true,"name":"width","longname":"Phaser.ScaleManager#width","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[3249,3264],"filename":"ScaleManager.js","lineno":83,"path":"src\\core"},"description":"Target height (in pixels) of the Display canvas.","properties":[{"type":{"names":["number"]},"name":"height"}],"readonly":true,"name":"height","longname":"Phaser.ScaleManager#height","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[3465,3485],"filename":"ScaleManager.js","lineno":92,"path":"src\\core"},"description":"Minimum width the canvas should be scaled to (in pixels).\rChange with {@link #setMinMax}.","properties":[{"type":{"names":["number"]},"nullable":true,"name":"minWidth"}],"readonly":true,"access":"protected","name":"minWidth","longname":"Phaser.ScaleManager#minWidth","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[3757,3777],"filename":"ScaleManager.js","lineno":102,"path":"src\\core"},"description":"Maximum width the canvas should be scaled to (in pixels).\rIf null it will scale to whatever width the browser can handle.\rChange with {@link #setMinMax}.","properties":[{"type":{"names":["number"]},"nullable":true,"name":"maxWidth"}],"readonly":true,"access":"protected","name":"maxWidth","longname":"Phaser.ScaleManager#maxWidth","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[3980,4001],"filename":"ScaleManager.js","lineno":111,"path":"src\\core"},"description":"Minimum height the canvas should be scaled to (in pixels).\rChange with {@link #setMinMax}.","properties":[{"type":{"names":["number"]},"nullable":true,"name":"minHeight"}],"readonly":true,"access":"protected","name":"minHeight","longname":"Phaser.ScaleManager#minHeight","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[4276,4297],"filename":"ScaleManager.js","lineno":121,"path":"src\\core"},"description":"Maximum height the canvas should be scaled to (in pixels).\rIf null it will scale to whatever height the browser can handle.\rChange with {@link #setMinMax}.","properties":[{"type":{"names":["number"]},"nullable":true,"name":"maxHeight"}],"readonly":true,"access":"protected","name":"maxHeight","longname":"Phaser.ScaleManager#maxHeight","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[4576,4608],"filename":"ScaleManager.js","lineno":130,"path":"src\\core"},"description":"The offset coordinates of the Display canvas from the top-left of the browser window.\rThe is used internally by Phaser.Pointer (for Input) and possibly other types.","properties":[{"type":{"names":["Phaser.Point"]},"name":"offset"}],"readonly":true,"access":"protected","name":"offset","longname":"Phaser.ScaleManager#offset","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[4842,4869],"filename":"ScaleManager.js","lineno":140,"path":"src\\core"},"description":"If true, the game should only run in a landscape orientation.\rChange with {@link #forceOrientation}.","properties":[{"type":{"names":["boolean"]},"name":"forceLandscape"}],"readonly":true,"defaultvalue":false,"access":"protected","name":"forceLandscape","longname":"Phaser.ScaleManager#forceLandscape","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[5089,5115],"filename":"ScaleManager.js","lineno":150,"path":"src\\core"},"description":"If true, the game should only run in a portrait \rChange with {@link #forceOrientation}.","properties":[{"type":{"names":["boolean"]},"name":"forcePortrait"}],"readonly":true,"defaultvalue":false,"access":"protected","name":"forcePortrait","longname":"Phaser.ScaleManager#forcePortrait","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[5408,5441],"filename":"ScaleManager.js","lineno":161,"path":"src\\core"},"description":"True if {@link #forceLandscape} or {@link #forcePortrait} are set and do not agree with the browser orientation.\r\rThis value is not updated immediately.","properties":[{"type":{"names":["boolean"]},"name":"incorrectOrientation"}],"readonly":true,"access":"protected","name":"incorrectOrientation","longname":"Phaser.ScaleManager#incorrectOrientation","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[7014,7060],"filename":"ScaleManager.js","lineno":201,"path":"src\\core"},"description":"This signal is dispatched when the orientation changes _or_ the validity of the current orientation changes.\r\rThe signal is supplied with the following arguments:\r- `scale` - the ScaleManager object\r- `prevOrientation`, a string - The previous orientation as per {@link Phaser.ScaleManager#screenOrientation screenOrientation}.\r- `wasIncorrect`, a boolean - True if the previous orientation was last determined to be incorrect.\r\rAccess the current orientation and validity with `scale.screenOrientation` and `scale.incorrectOrientation`.\rThus the following tests can be done:\r\r    // The orientation itself changed:\r    scale.screenOrientation !== prevOrientation\r    // The orientation just became incorrect:\r    scale.incorrectOrientation && !wasIncorrect\r\rIt is possible that this signal is triggered after {@link #forceOrientation} so the orientation\rcorrectness changes even if the orientation itself does not change.\r\rThis is signaled from `preUpdate` (or `pauseUpdate`) _even when_ the game is paused.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onOrientationChange"}],"access":"public","name":"onOrientationChange","longname":"Phaser.ScaleManager#onOrientationChange","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[7390,7442],"filename":"ScaleManager.js","lineno":211,"path":"src\\core"},"description":"This signal is dispatched when the browser enters an incorrect orientation, as defined by {@link #forceOrientation}.\r\rThis is signaled from `preUpdate` (or `pauseUpdate`) _even when_ the game is paused.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"enterIncorrectOrientation"}],"access":"public","name":"enterIncorrectOrientation","longname":"Phaser.ScaleManager#enterIncorrectOrientation","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[7772,7824],"filename":"ScaleManager.js","lineno":221,"path":"src\\core"},"description":"This signal is dispatched when the browser leaves an incorrect orientation, as defined by {@link #forceOrientation}.\r\rThis is signaled from `preUpdate` (or `pauseUpdate`) _even when_ the game is paused.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"leaveIncorrectOrientation"}],"access":"public","name":"leaveIncorrectOrientation","longname":"Phaser.ScaleManager#leaveIncorrectOrientation","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[8294,8329],"filename":"ScaleManager.js","lineno":233,"path":"src\\core"},"description":"This boolean provides you with a way to determine if the browser is in Full Screen\rmode (via the Full Screen API), and Phaser was the one responsible for activating it.\r\rIt's possible that ScaleManager.isFullScreen returns `true` even if Phaser wasn't the\rone that made the browser go full-screen, so this flag lets you determine that.","properties":[{"type":{"names":["boolean"]},"name":"hasPhaserSetFullScreen"}],"defaultvalue":false,"name":"hasPhaserSetFullScreen","longname":"Phaser.ScaleManager#hasPhaserSetFullScreen","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[8978,9006],"filename":"ScaleManager.js","lineno":248,"path":"src\\core"},"description":"If specified, this is the DOM element on which the Fullscreen API enter request will be invoked.\rThe target element must have the correct CSS styling and contain the Display canvas.\r\rThe elements style will be modified (ie. the width and height might be set to 100%)\rbut it will not be added to, removed from, or repositioned within the DOM.\rAn attempt is made to restore relevant style changes when fullscreen mode is left.\r\rFor pre-2.2.0 behavior set `game.scale.fullScreenTarget = game.canvas`.","properties":[{"type":{"names":["DOMElement"]},"nullable":true,"name":"fullScreenTarget"}],"defaultvalue":null,"name":"fullScreenTarget","longname":"Phaser.ScaleManager#fullScreenTarget","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[10461,10504],"filename":"ScaleManager.js","lineno":279,"path":"src\\core"},"description":"This signal is dispatched when fullscreen mode is ready to be initialized but\rbefore the fullscreen request.\r\rThe signal is passed two arguments: `scale` (the ScaleManager), and an object in the form `{targetElement: DOMElement}`.\r\rThe `targetElement` is the {@link #fullScreenTarget} element,\rif such is assigned, or a new element created by {@link #createFullScreenTarget}.\r\rCustom CSS styling or resets can be applied to `targetElement` as required.\r\rIf `targetElement` is _not_ the same element as {@link #fullScreenTarget}:\r- After initialization the Display canvas is moved onto the `targetElement` for\r  the duration of the fullscreen mode, and restored to it's original DOM location when fullscreen is exited.\r- The `targetElement` is moved/re-parented within the DOM and may have its CSS styles updated.\r\rThe behavior of a pre-assigned target element is covered in {@link Phaser.ScaleManager#fullScreenTarget fullScreenTarget}.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onFullScreenInit"}],"access":"public","name":"onFullScreenInit","longname":"Phaser.ScaleManager#onFullScreenInit","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[10881,10926],"filename":"ScaleManager.js","lineno":290,"path":"src\\core"},"description":"This signal is dispatched when the browser enters or leaves fullscreen mode, if supported.\r\rThe signal is supplied with a single argument: `scale` (the ScaleManager). Use `scale.isFullScreen` to determine\rif currently running in Fullscreen mode.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onFullScreenChange"}],"access":"public","name":"onFullScreenChange","longname":"Phaser.ScaleManager#onFullScreenChange","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[11287,11331],"filename":"ScaleManager.js","lineno":301,"path":"src\\core"},"description":"This signal is dispatched when the browser fails to enter fullscreen mode;\ror if the device does not support fullscreen mode and `startFullScreen` is invoked.\r\rThe signal is supplied with a single argument: `scale` (the ScaleManager).","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onFullScreenError"}],"access":"public","name":"onFullScreenError","longname":"Phaser.ScaleManager#onFullScreenError","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[11604,11660],"filename":"ScaleManager.js","lineno":311,"path":"src\\core"},"description":"The _last known_ orientation of the screen, as defined in the Window Screen Web API.\rSee {@link Phaser.DOM.getScreenOrientation} for possible values.","properties":[{"type":{"names":["string"]},"name":"screenOrientation"}],"readonly":true,"access":"public","name":"screenOrientation","longname":"Phaser.ScaleManager#screenOrientation","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[11837,11878],"filename":"ScaleManager.js","lineno":318,"path":"src\\core"},"description":"The _current_ scale factor based on the game dimensions vs. the scaled dimensions.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleFactor"}],"readonly":true,"name":"scaleFactor","longname":"Phaser.ScaleManager#scaleFactor","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[12092,12141],"filename":"ScaleManager.js","lineno":326,"path":"src\\core"},"description":"The _current_ inversed scale factor. The displayed dimensions divided by the game dimensions.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleFactorInversed"}],"readonly":true,"access":"protected","name":"scaleFactorInversed","longname":"Phaser.ScaleManager#scaleFactorInversed","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[12344,12408],"filename":"ScaleManager.js","lineno":335,"path":"src\\core"},"description":"The Display canvas is aligned by adjusting the margins; the last margins are stored here.","properties":[{"type":{"names":["Bounds-like"]},"name":"margin"}],"readonly":true,"access":"protected","name":"margin","longname":"Phaser.ScaleManager#margin","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[12634,12670],"filename":"ScaleManager.js","lineno":342,"path":"src\\core"},"description":"The bounds of the scaled game. The x/y will match the offset of the canvas element and the width/height the scaled width and height.","properties":[{"type":{"names":["Phaser.Rectangle"]},"name":"bounds"}],"readonly":true,"name":"bounds","longname":"Phaser.ScaleManager#bounds","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[12805,12825],"filename":"ScaleManager.js","lineno":349,"path":"src\\core"},"description":"The aspect ratio of the scaled Display canvas.","properties":[{"type":{"names":["number"]},"name":"aspectRatio"}],"readonly":true,"name":"aspectRatio","longname":"Phaser.ScaleManager#aspectRatio","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[12969,12995],"filename":"ScaleManager.js","lineno":356,"path":"src\\core"},"description":"The aspect ratio of the original game dimensions.","properties":[{"type":{"names":["number"]},"name":"sourceAspectRatio"}],"readonly":true,"name":"sourceAspectRatio","longname":"Phaser.ScaleManager#sourceAspectRatio","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[13721,13800],"filename":"ScaleManager.js","lineno":379,"path":"src\\core"},"description":"The edges on which to constrain the game Display/canvas in _addition_ to the restrictions of the parent container.\r\rThe properties are strings and can be '', 'visual', 'layout', or 'layout-soft'.\r- If 'visual', the edge will be constrained to the Window / displayed screen area\r- If 'layout', the edge will be constrained to the CSS Layout bounds\r- An invalid value is treated as 'visual'","kind":"member","properties":[{"type":{"names":["string"]},"name":"bottom"},{"type":{"names":["string"]},"name":"right"}],"defaultvalue":"{\"right\":\"layout\",\"bottom\":\"\"}","defaultvaluetype":"object","name":"windowConstraints","longname":"Phaser.ScaleManager#windowConstraints","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[15672,15930],"filename":"ScaleManager.js","lineno":410,"path":"src\\core"},"description":"Various compatibility settings.\rA value of \"(auto)\" indicates the setting is configured based on device and runtime information.\r\rA {@link #refresh} may need to be performed after making changes.","access":"protected","properties":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":"(auto)","description":"True only if fullscreen support will be used. (Changing to fullscreen still might not work.)","name":"supportsFullScreen"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":"(auto)","description":"See {@link Phaser.DOM.getScreenOrientation}.","name":"orientationFallback"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true then the Display canvas's margins will not be updated anymore: existing margins must be manually cleared. Disabling margins prevents automatic canvas alignment/centering, possibly in fullscreen.","name":"noMargins"},{"type":{"names":["Phaser.Point"]},"optional":true,"nullable":true,"defaultvalue":"(auto)","description":"If specified the window will be scrolled to this position on every refresh.","name":"scrollTo"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If enabled the document elements minimum height is explicitly set on updates.\r   The height set varies by device and may either be the height of the window or the viewport.","name":"forceMinimumDocumentHeight"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If enabled then SHOW_ALL and USER_SCALE modes can try and expand the parent element. It may be necessary for the parent element to impose CSS width/height restrictions.","name":"canExpandParent"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"(auto)","description":"On certain browsers (eg. IE) FullScreen events need to be triggered via 'click' events.\r    A value of 'when-not-mouse' uses a click trampoline when a pointer that is not the primary mouse is used.\r    Any other string value (including the empty string) prevents using click trampolines.\r    For more details on click trampolines see {@link Phaser.Pointer#addClickTrampoline}.","name":"clickTrampoline"}],"name":"compatibility","longname":"Phaser.ScaleManager#compatibility","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[16624,16651],"filename":"ScaleManager.js","lineno":442,"path":"src\\core"},"description":"If the parent container of the Game canvas is the browser window itself (i.e. document.body),\rrather than another div, this should set to `true`.\r\rThe {@link #parentNode} property is generally ignored while this is in effect.","properties":[{"type":{"names":["boolean"]},"name":"parentIsWindow"}],"name":"parentIsWindow","longname":"Phaser.ScaleManager#parentIsWindow","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[16978,17000],"filename":"ScaleManager.js","lineno":452,"path":"src\\core"},"description":"The _original_ DOM element for the parent of the Display canvas.\rThis may be different in fullscreen - see {@link #createFullScreenTarget}.\r\rThis should only be changed after moving the Game canvas to a different DOM parent.","properties":[{"type":{"names":["DOMElement"]},"nullable":true,"name":"parentNode"}],"name":"parentNode","longname":"Phaser.ScaleManager#parentNode","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[17159,17206],"filename":"ScaleManager.js","lineno":459,"path":"src\\core"},"description":"The scale of the game in relation to its parent container.","properties":[{"type":{"names":["Phaser.Point"]},"name":"parentScaleFactor"}],"readonly":true,"name":"parentScaleFactor","longname":"Phaser.ScaleManager#parentScaleFactor","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[17559,17590],"filename":"ScaleManager.js","lineno":470,"path":"src\\core"},"description":"The maximum time (in ms) between dimension update checks for the Canvas's parent element (or window).\rUpdate checks normally happen quicker in response to other events.","properties":[{"type":{"names":["integer"]},"name":"trackParentInterval"}],"defaultvalue":2000,"access":"protected","see":["{@link Phaser.ScaleManager#refresh refresh}"],"name":"trackParentInterval","longname":"Phaser.ScaleManager#trackParentInterval","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[18345,18384],"filename":"ScaleManager.js","lineno":487,"path":"src\\core"},"description":"This signal is dispatched when the size of the Display canvas changes _or_ the size of the Game changes. \rWhen invoked this is done _after_ the Canvas size/position have been updated.\r\rThis signal is _only_ called when a change occurs and a reflow may be required.\rFor example, if the canvas does not change sizes because of CSS settings (such as min-width)\rthen this signal will _not_ be triggered.\r\rUse this to handle responsive game layout options.\r\rThis is signaled from `preUpdate` (or `pauseUpdate`) _even when_ the game is paused.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onSizeChange"}],"todo":["Formalize the arguments, if any, supplied to this signal."],"name":"onSizeChange","longname":"Phaser.ScaleManager#onSizeChange","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[21768,21801],"filename":"ScaleManager.js","lineno":609,"path":"src\\core"},"description":"A scale mode that stretches content to fill all available space - see {@link Phaser.ScaleManager#scaleMode scaleMode}.","kind":"constant","type":{"names":["integer"]},"name":"EXACT_FIT","longname":"Phaser.ScaleManager.EXACT_FIT","memberof":"Phaser.ScaleManager","scope":"static","___s":true},{"meta":{"range":[21947,21979],"filename":"ScaleManager.js","lineno":617,"path":"src\\core"},"description":"A scale mode that prevents any scaling - see {@link Phaser.ScaleManager#scaleMode scaleMode}.","kind":"constant","type":{"names":["integer"]},"name":"NO_SCALE","longname":"Phaser.ScaleManager.NO_SCALE","memberof":"Phaser.ScaleManager","scope":"static","___s":true},{"meta":{"range":[22156,22188],"filename":"ScaleManager.js","lineno":625,"path":"src\\core"},"description":"A scale mode that shows the entire game while maintaining proportions - see {@link Phaser.ScaleManager#scaleMode scaleMode}.","kind":"constant","type":{"names":["integer"]},"name":"SHOW_ALL","longname":"Phaser.ScaleManager.SHOW_ALL","memberof":"Phaser.ScaleManager","scope":"static","___s":true},{"meta":{"range":[22344,22374],"filename":"ScaleManager.js","lineno":633,"path":"src\\core"},"description":"A scale mode that causes the Game size to change - see {@link Phaser.ScaleManager#scaleMode scaleMode}.","kind":"constant","type":{"names":["integer"]},"name":"RESIZE","longname":"Phaser.ScaleManager.RESIZE","memberof":"Phaser.ScaleManager","scope":"static","___s":true},{"meta":{"range":[22528,22562],"filename":"ScaleManager.js","lineno":641,"path":"src\\core"},"description":"A scale mode that allows a custom scale factor - see {@link Phaser.ScaleManager#scaleMode scaleMode}.","kind":"constant","type":{"names":["integer"]},"name":"USER_SCALE","longname":"Phaser.ScaleManager.USER_SCALE","memberof":"Phaser.ScaleManager","scope":"static","___s":true},{"meta":{"range":[22608,22716],"filename":"ScaleManager.js","lineno":645,"path":"src\\core"},"description":"Start the ScaleManager.","kind":"function","name":"boot","access":"protected","memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#boot","scope":"instance","___s":true},{"meta":{"range":[26141,26324],"filename":"ScaleManager.js","lineno":748,"path":"src\\core"},"description":"Load configuration settings.","kind":"function","name":"parseConfig","access":"protected","params":[{"type":{"names":["object"]},"description":"The game configuration object.","name":"config"}],"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#parseConfig","scope":"instance","___s":true},{"meta":{"range":[26962,27320],"filename":"ScaleManager.js","lineno":781,"path":"src\\core"},"description":"Calculates and sets the game dimensions based on the given width and height.\r\rThis should _not_ be called when in fullscreen mode.","kind":"function","name":"setupScale","access":"protected","params":[{"type":{"names":["number","string"]},"description":"The width of the game.","name":"width"},{"type":{"names":["number","string"]},"description":"The height of the game.","name":"height"}],"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#setupScale","scope":"instance","___s":true},{"meta":{"range":[29723,30291],"filename":"ScaleManager.js","lineno":881,"path":"src\\core"},"description":"Set the actual Game size.\rUse this instead of directly changing `game.width` or `game.height`.\r\rThe actual physical display (Canvas element size) depends on various settings including\r- Scale mode\r- Scaling factor\r- Size of Canvas's parent element or CSS rules such as min-height/max-height;\r- The size of the Window","kind":"function","name":"setGameSize","access":"public","params":[{"type":{"names":["integer"]},"description":"_Game width_, in pixels.","name":"width"},{"type":{"names":["integer"]},"description":"_Game height_, in pixels.","name":"height"}],"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#setGameSize","scope":"instance","___s":true},{"meta":{"range":[30599,31282],"filename":"ScaleManager.js","lineno":909,"path":"src\\core"},"description":"Set a User scaling factor used in the USER_SCALE scaling mode.\r\rThe target canvas size is computed by:\r\r    canvas.width = (game.width * hScale) - hTrim\r    canvas.height = (game.height * vScale) - vTrim\r\rThis method can be used in the {@link Phaser.ScaleManager#setResizeCallback resize callback}.","kind":"function","name":"setUserScale","params":[{"type":{"names":["number"]},"description":"Horizontal scaling factor.","name":"hScale"},{"type":{"names":["numer"]},"description":"Vertical scaling factor.","name":"vScale"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Horizontal trim, applied after scaling.","name":"hTrim"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Vertical trim, applied after scaling.","name":"vTrim"}],"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#setUserScale","scope":"instance","___s":true},{"meta":{"range":[31508,32591],"filename":"ScaleManager.js","lineno":933,"path":"src\\core"},"description":"Sets the callback that will be invoked before sizing calculations.\r\rThis is the appropriate place to call {@link #setUserScale} if needing custom dynamic scaling.\r\rThe callback is supplied with two arguments `scale` and `parentBounds` where `scale` is the ScaleManager\rand `parentBounds`, a Phaser.Rectangle, is the size of the Parent element.\r\rThis callback\r- May be invoked even though the parent container or canvas sizes have not changed\r- Unlike {@link #onSizeChange}, it runs _before_ the canvas is guaranteed to be updated\r- Will be invoked from `preUpdate`, _even when_ the game is paused    \r\rSee {@link #onSizeChange} for a better way of reacting to layout updates.","kind":"function","name":"setResizeCallback","access":"public","params":[{"type":{"names":["function"]},"description":"The callback that will be called each time a window.resize event happens or if set, the parent container resizes.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the callback will be called.","name":"context"}],"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#setResizeCallback","scope":"instance","___s":true},{"meta":{"range":[33998,34811],"filename":"ScaleManager.js","lineno":996,"path":"src\\core"},"description":"Set the min and max dimensions for the Display canvas.\r\r_Note:_ The min/max dimensions are only applied in some cases\r- When the device is not in an incorrect orientation; or\r- The scale mode is EXACT_FIT when not in fullscreen","kind":"function","name":"setMinMax","access":"public","params":[{"type":{"names":["number"]},"description":"The minimum width the game is allowed to scale down to.","name":"minWidth"},{"type":{"names":["number"]},"description":"The minimum height the game is allowed to scale down to.","name":"minHeight"},{"type":{"names":["number"]},"optional":true,"description":"The maximum width the game is allowed to scale up to; only changed if specified.","name":"maxWidth"},{"type":{"names":["number"]},"optional":true,"description":"The maximum height the game is allowed to scale up to; only changed if specified.","name":"maxHeight"}],"todo":["These values are only sometimes honored."],"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#setMinMax","scope":"instance","___s":true},{"meta":{"range":[35194,35357],"filename":"ScaleManager.js","lineno":1028,"path":"src\\core"},"description":"The ScaleManager.preUpdate is called automatically by the core Game loop.","kind":"function","name":"preUpdate","access":"protected","memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#preUpdate","scope":"instance","___s":true},{"meta":{"range":[39552,40459],"filename":"ScaleManager.js","lineno":1163,"path":"src\\core"},"description":"Force the game to run in only one orientation.\r\rThis enables generation of incorrect orientation signals and affects resizing but does not otherwise rotate or lock the orientation.\r\rOrientation checks are performed via the Screen Orientation API, if available in browser. This means it will check your monitor\rorientation on desktop, or your device orientation on mobile, rather than comparing actual game dimensions. If you need to check the \rviewport dimensions instead and bypass the Screen Orientation API then set: `ScaleManager.compatibility.orientationFallback = 'viewport'`","kind":"function","name":"forceOrientation","access":"public","params":[{"type":{"names":["boolean"]},"description":"true if the game should run in landscape mode only.","name":"forceLandscape"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"true if the game should run in portrait mode only.","name":"forcePortrait"}],"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#forceOrientation","scope":"instance","___s":true},{"meta":{"range":[43871,44911],"filename":"ScaleManager.js","lineno":1301,"path":"src\\core"},"description":"The \"refresh\" methods informs the ScaleManager that a layout refresh is required.\r\rThe ScaleManager automatically queues a layout refresh (eg. updates the Game size or Display canvas layout)\rwhen the browser is resized, the orientation changes, or when there is a detected change\rof the Parent size. Refreshing is also done automatically when public properties,\rsuch as {@link #scaleMode}, are updated or state-changing methods are invoked.\r\rThe \"refresh\" method _may_ need to be used in a few (rare) situtations when\r\r- a device change event is not correctly detected; or\r- the Parent size changes (and an immediate reflow is desired); or\r- the ScaleManager state is updated by non-standard means; or\r- certain {@link #compatibility} properties are manually changed.\r\rThe queued layout refresh is not immediate but will run promptly in an upcoming `preRender`.","kind":"function","name":"refresh","access":"public","memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#refresh","scope":"instance","___s":true},{"meta":{"range":[47734,48506],"filename":"ScaleManager.js","lineno":1408,"path":"src\\core"},"description":"Returns the computed Parent size/bounds that the Display canvas is allowed/expected to fill.\r\rIf in fullscreen mode or without parent (see {@link #parentIsWindow}),\rthis will be the bounds of the visual viewport itself.\r\rThis function takes the {@link #windowConstraints} into consideration - if the parent is partially outside\rthe viewport then this function may return a smaller than expected size.\r\rValues are rounded to the nearest pixel.","kind":"function","name":"getParentBounds","access":"protected","params":[{"type":{"names":["Phaser.Rectangle"]},"optional":true,"defaultvalue":"(new Rectangle)","description":"The rectangle to update; a new one is created as needed.","name":"target"}],"returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"The established parent bounds."}],"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#getParentBounds","scope":"instance","___s":true},{"meta":{"range":[57520,57874],"filename":"ScaleManager.js","lineno":1728,"path":"src\\core"},"description":"Creates a fullscreen target. This is called automatically as as needed when entering\rfullscreen mode and the resulting element is supplied to {@link #onFullScreenInit}.\r\rUse {@link #onFullScreenInit} to customize the created object.","kind":"function","name":"createFullScreenTarget","access":"protected","memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#createFullScreenTarget","scope":"instance","___s":true},{"meta":{"range":[58144,59343],"filename":"ScaleManager.js","lineno":1749,"path":"src\\core"},"description":"Start the browsers fullscreen mode - this _must_ be called from a user input Pointer or Mouse event.\r\rThe Fullscreen API must be supported by the browser for this to work - it is not the same as setting\rthe game size to fill the browser window. See {@link Phaser.ScaleManager#compatibility compatibility.supportsFullScreen} to check if the current\rdevice is reported to support fullscreen mode.\r\rThe {@link #fullScreenFailed} signal will be dispatched if the fullscreen change request failed or the game does not support the Fullscreen API.","kind":"function","name":"startFullScreen","access":"public","params":[{"type":{"names":["boolean"]},"optional":true,"description":"Changes the anti-alias feature of the canvas before jumping in to fullscreen (false = retain pixel art, true = smooth art). If not specified then no change is made. Only works in CANVAS mode.","name":"antialias"},{"type":{"names":["boolean"]},"optional":true,"description":"Internal argument. If `false` click trampolining is suppressed.","name":"allowTrampoline"}],"returns":[{"type":{"names":["boolean"]},"description":"Returns true if the device supports fullscreen mode and fullscreen mode was attempted to be started. (It might not actually start, wait for the signals.)"}],"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#startFullScreen","scope":"instance","___s":true},{"meta":{"range":[61639,61885],"filename":"ScaleManager.js","lineno":1842,"path":"src\\core"},"description":"Stops / exits fullscreen mode, if active.","kind":"function","name":"stopFullScreen","access":"public","returns":[{"type":{"names":["boolean"]},"description":"Returns true if the browser supports fullscreen mode and fullscreen mode will be exited."}],"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#stopFullScreen","scope":"instance","___s":true},{"meta":{"range":[66101,67233],"filename":"ScaleManager.js","lineno":1988,"path":"src\\core"},"description":"Takes a Sprite or Image object and scales it to fit the given dimensions.\rScaling happens proportionally without distortion to the sprites texture.\rThe letterBox parameter controls if scaling will produce a letter-box effect or zoom the\rsprite until it fills the given values. Note that with letterBox set to false the scaled sprite may spill out over either\rthe horizontal or vertical sides of the target dimensions. If you wish to stop this you can crop the Sprite.","kind":"function","name":"scaleSprite","access":"protected","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image"]},"description":"The sprite we want to scale.","name":"sprite"},{"type":{"names":["integer"]},"optional":true,"description":"The target width that we want to fit the sprite in to. If not given it defaults to ScaleManager.width.","name":"width"},{"type":{"names":["integer"]},"optional":true,"description":"The target height that we want to fit the sprite in to. If not given it defaults to ScaleManager.height.","name":"height"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"True if we want the `fitted` mode. Otherwise, the function uses the `zoom` mode.","name":"letterBox"}],"returns":[{"type":{"names":["Phaser.Sprite","Phaser.Image"]},"description":"The scaled sprite."}],"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#scaleSprite","scope":"instance","___s":true},{"meta":{"range":[68677,68893],"filename":"ScaleManager.js","lineno":2058,"path":"src\\core"},"description":"Destroys the ScaleManager and removes any event listeners.\rThis should probably only be called when the game is destroyed.","kind":"function","name":"destroy","access":"protected","memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#destroy","scope":"instance","___s":true},{"meta":{"range":[70081,70483],"filename":"ScaleManager.js","lineno":2091,"path":"src\\core"},"description":"The DOM element that is considered the Parent bounding element, if any.\r\rThis `null` if {@link #parentIsWindow} is true or if fullscreen mode is entered and {@link #fullScreenTarget} is specified.\rIt will also be null if there is no game canvas or if the game canvas has no parent.","name":"boundingParent","properties":[{"type":{"names":["DOMElement"]},"nullable":true,"name":"boundingParent"}],"readonly":true,"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#boundingParent","scope":"instance","kind":"member","___s":true},{"meta":{"range":[70903,72471],"filename":"ScaleManager.js","lineno":2119,"path":"src\\core"},"description":"The scaling method used by the ScaleManager when not in fullscreen.\r\r<dl>\r  <dt>{@link Phaser.ScaleManager.NO_SCALE}</dt>\r  <dd>\r      The Game display area will not be scaled - even if it is too large for the canvas/screen.\r      This mode _ignores_ any applied scaling factor and displays the canvas at the Game size.\r  </dd>\r  <dt>{@link Phaser.ScaleManager.EXACT_FIT}</dt>\r  <dd>\r      The Game display area will be _stretched_ to fill the entire size of the canvas's parent element and/or screen.\r      Proportions are not maintained.\r  </dd>\r  <dt>{@link Phaser.ScaleManager.SHOW_ALL}</dt>\r  <dd>\r      Show the entire game display area while _maintaining_ the original aspect ratio.\r  </dd>\r  <dt>{@link Phaser.ScaleManager.RESIZE}</dt>\r  <dd>\r      The dimensions of the game display area are changed to match the size of the parent container.\r      That is, this mode _changes the Game size_ to match the display size.\r      <p>\r      Any manually set Game size (see {@link #setGameSize}) is ignored while in effect.\r  </dd>\r  <dt>{@link Phaser.ScaleManager.USER_SCALE}</dt>\r  <dd>\r      The game Display is scaled according to the user-specified scale set by {@link Phaser.ScaleManager#setUserScale setUserScale}.\r      <p>\r      This scale can be adjusted in the {@link Phaser.ScaleManager#setResizeCallback resize callback}\r      for flexible custom-sizing needs.\r  </dd>\r</dl>","name":"scaleMode","properties":[{"type":{"names":["integer"]},"name":"scaleMode"}],"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#scaleMode","scope":"instance","kind":"member","___s":true},{"meta":{"range":[73000,73260],"filename":"ScaleManager.js","lineno":2183,"path":"src\\core"},"description":"The scaling method used by the ScaleManager when in fullscreen.\r\rSee {@link Phaser.ScaleManager#scaleMode scaleMode} for the different modes allowed.","name":"fullScreenScaleMode","properties":[{"type":{"names":["integer"]},"name":"fullScreenScaleMode"}],"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#fullScreenScaleMode","scope":"instance","kind":"member","___s":true},{"meta":{"range":[74003,74288],"filename":"ScaleManager.js","lineno":2224,"path":"src\\core"},"description":"Returns the current scale mode - for normal or fullscreen operation.\r\rSee {@link Phaser.ScaleManager#scaleMode scaleMode} for the different modes allowed.","name":"currentScaleMode","properties":[{"type":{"names":["number"]},"name":"currentScaleMode"}],"access":"protected","readonly":true,"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#currentScaleMode","scope":"instance","kind":"member","___s":true},{"meta":{"range":[74493,75010],"filename":"ScaleManager.js","lineno":2244,"path":"src\\core"},"description":"When enabled the Display canvas will be horizontally-aligned _in the Parent container_ (or {@link Phaser.ScaleManager#parentIsWindow window}).\r\rTo align horizontally across the page the Display canvas should be added directly to page;\ror the parent container should itself be horizontally aligned.\r\rHorizontal alignment is not applicable with the {@link .RESIZE} scaling mode.","name":"pageAlignHorizontally","properties":[{"type":{"names":["boolean"]},"name":"pageAlignHorizontally"}],"defaultvalue":"false","memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#pageAlignHorizontally","scope":"instance","kind":"member","___s":true},{"meta":{"range":[75388,76555],"filename":"ScaleManager.js","lineno":2276,"path":"src\\core"},"description":"When enabled the Display canvas will be vertically-aligned _in the Parent container_ (or {@link Phaser.ScaleManager#parentIsWindow window}).\r\rTo align vertically the Parent element should have a _non-collapsible_ height, such that it will maintain\ra height _larger_ than the height of the contained Game canvas - the game canvas will then be scaled vertically\r_within_ the remaining available height dictated by the Parent element.\r\rOne way to prevent the parent from collapsing is to add an absolute \"min-height\" CSS property to the parent element.\rIf specifying a relative \"min-height/height\" or adjusting margins, the Parent height must still be non-collapsible (see note).\r\r_Note_: In version 2.2 the minimum document height is _not_ automatically set to the viewport/window height.\rTo automatically update the minimum document height set {@link Phaser.ScaleManager#compatibility compatibility.forceMinimumDocumentHeight} to true.\r\rVertical alignment is not applicable with the {@link .RESIZE} scaling mode.","name":"pageAlignVertically","properties":[{"type":{"names":["boolean"]},"name":"pageAlignVertically"}],"defaultvalue":"false","memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#pageAlignVertically","scope":"instance","kind":"member","___s":true},{"meta":{"range":[76925,77094],"filename":"ScaleManager.js","lineno":2315,"path":"src\\core"},"description":"Returns true if the browser is in fullscreen mode, otherwise false.","name":"isFullScreen","properties":[{"type":{"names":["boolean"]},"name":"isFullScreen"}],"readonly":true,"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#isFullScreen","scope":"instance","kind":"member","___s":true},{"meta":{"range":[77410,77570],"filename":"ScaleManager.js","lineno":2332,"path":"src\\core"},"description":"Returns true if the screen orientation is in portrait mode.","name":"isPortrait","properties":[{"type":{"names":["boolean"]},"name":"isPortrait"}],"readonly":true,"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#isPortrait","scope":"instance","kind":"member","___s":true},{"meta":{"range":[77765,77928],"filename":"ScaleManager.js","lineno":2347,"path":"src\\core"},"description":"Returns true if the screen orientation is in landscape mode.","name":"isLandscape","properties":[{"type":{"names":["boolean"]},"name":"isLandscape"}],"readonly":true,"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#isLandscape","scope":"instance","kind":"member","___s":true},{"meta":{"range":[78125,78541],"filename":"ScaleManager.js","lineno":2362,"path":"src\\core"},"description":"Returns true if the game dimensions are portrait (height > width).\rThis is especially useful to check when using the RESIZE scale mode \rbut wanting to maintain game orientation on desktop browsers, \rwhere typically the screen orientation will always be landscape regardless of the browser viewport.","name":"isGamePortrait","properties":[{"type":{"names":["boolean"]},"name":"isGamePortrait"}],"readonly":true,"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#isGamePortrait","scope":"instance","kind":"member","___s":true},{"meta":{"range":[78703,79122],"filename":"ScaleManager.js","lineno":2380,"path":"src\\core"},"description":"Returns true if the game dimensions are landscape (width > height).\rThis is especially useful to check when using the RESIZE scale mode \rbut wanting to maintain game orientation on desktop browsers, \rwhere typically the screen orientation will always be landscape regardless of the browser viewport.","name":"isGameLandscape","properties":[{"type":{"names":["boolean"]},"name":"isGameLandscape"}],"readonly":true,"memberof":"Phaser.ScaleManager","longname":"Phaser.ScaleManager#isGameLandscape","scope":"instance","kind":"member","___s":true},{"meta":{"range":[2080,2110],"filename":"Signal.js","lineno":60,"path":"src\\core"},"description":"Signals are what Phaser uses to handle events and event dispatching.\rYou can listen for a Signal by binding a callback / function to it.\rThis is done by using either `Signal.add` or `Signal.addOnce`.\r\rFor example you can listen for a touch or click event from the Input Manager \rby using its `onDown` Signal:\r\r`game.input.onDown.add(function() { ... });`\r\rRather than inline your function, you can pass a reference:\r\r`game.input.onDown.add(clicked, this);`\r`function clicked () { ... }`\r\rIn this case the second argument (`this`) is the context in which your function should be called.\r\rNow every time the InputManager dispatches the `onDown` signal (or event), your function\rwill be called.\r\rVery often a Signal will send arguments to your function.\rThis is specific to the Signal itself.\rIf you're unsure then check the documentation, or failing that simply do:\r\r`Signal.add(function() { console.log(arguments); })`\r\rand it will log all of the arguments your function received from the Signal.\r\rSprites have lots of default signals you can listen to in their Events class, such as:\r\r`sprite.events.onKilled`\r\rWhich is called automatically whenever the Sprite is killed.\rThere are lots of other events, see the Events component for a list.\r\rAs well as listening to pre-defined Signals you can also create your own:\r\r`var mySignal = new Phaser.Signal();`\r\rThis creates a new Signal. You can bind a callback to it:\r\r`mySignal.add(myCallback, this);`\r\rand then finally when ready you can dispatch the Signal:\r\r`mySignal.dispatch(your arguments);`\r\rAnd your callback will be invoked. See the dispatch method for more details.","kind":"class","classdesc":"Phaser.Signal","name":"Signal","longname":"Phaser.Signal","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[2722,2737],"filename":"Signal.js","lineno":84,"path":"src\\core"},"description":"Memorize the previously dispatched event?\r\rIf an event has been memorized it is automatically dispatched when a new listener is added with {@link #add} or {@link #addOnce}.\rUse {@link #forget} to clear any currently memorized event.","properties":[{"type":{"names":["boolean"]},"name":"memorize"}],"name":"memorize","longname":"Phaser.Signal#memorize","kind":"member","memberof":"Phaser.Signal","scope":"instance","___s":true},{"meta":{"range":[3172,3184],"filename":"Signal.js","lineno":100,"path":"src\\core"},"description":"Is the Signal active? Only active signals will broadcast dispatched events.\r\rSetting this property during a dispatch will only affect the next dispatch. To stop the propagation of a signal from a listener use {@link #halt}.","properties":[{"type":{"names":["boolean"]},"name":"active"}],"defaultvalue":true,"name":"active","longname":"Phaser.Signal#active","kind":"member","memberof":"Phaser.Signal","scope":"instance","___s":true},{"meta":{"range":[6756,7135],"filename":"Signal.js","lineno":218,"path":"src\\core"},"description":"Check if a specific listener is attached.","kind":"function","name":"has","params":[{"type":{"names":["function"]},"description":"Signal handler function.","name":"listener"},{"type":{"names":["object"]},"optional":true,"description":"Context on which listener will be executed (object that should represent the `this` variable inside listener function).","name":"context"}],"returns":[{"type":{"names":["boolean"]},"description":"If Signal has the specified listener."}],"memberof":"Phaser.Signal","longname":"Phaser.Signal#has","scope":"instance","___s":true},{"meta":{"range":[7261,8934],"filename":"Signal.js","lineno":232,"path":"src\\core"},"description":"Add an event listener for this signal.\r\rAn event listener is a callback with a related context and priority.\r\rYou can optionally provide extra arguments which will be passed to the callback after any internal parameters.\r\rFor example: `Phaser.Key.onDown` when dispatched will send the Phaser.Key object that caused the signal as the first parameter.\rAny arguments you've specified after `priority` will be sent as well:\r\r`fireButton.onDown.add(shoot, this, 0, 'lazer', 100);`\r\rWhen onDown dispatches it will call the `shoot` callback passing it: `Phaser.Key, 'lazer', 100`.\r\rWhere the first parameter is the one that Key.onDown dispatches internally and 'lazer', \rand the value 100 were the custom arguments given in the call to 'add'.","kind":"function","name":"add","params":[{"type":{"names":["function"]},"description":"The function to call when this Signal is dispatched.","name":"listener"},{"type":{"names":["object"]},"optional":true,"description":"The context under which the listener will be executed (i.e. the object that should represent the `this` variable).","name":"listenerContext"},{"type":{"names":["number"]},"optional":true,"description":"The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added (default = 0)","name":"priority"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback (listener) function. They will be appended after any arguments usually dispatched.","name":"args"}],"returns":[{"type":{"names":["Phaser.SignalBinding"]},"description":"An Object representing the binding between the Signal and listener."}],"memberof":"Phaser.Signal","longname":"Phaser.Signal#add","scope":"instance","___s":true},{"meta":{"range":[9367,10463],"filename":"Signal.js","lineno":274,"path":"src\\core"},"description":"Add a one-time listener - the listener is automatically removed after the first execution.\r\rIf there is as {@link Phaser.Signal#memorize memorized} event then it will be dispatched and\rthe listener will be removed immediately.","kind":"function","name":"addOnce","params":[{"type":{"names":["function"]},"description":"The function to call when this Signal is dispatched.","name":"listener"},{"type":{"names":["object"]},"optional":true,"description":"The context under which the listener will be executed (i.e. the object that should represent the `this` variable).","name":"listenerContext"},{"type":{"names":["number"]},"optional":true,"description":"The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added (default = 0)","name":"priority"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback (listener) function. They will be appended after any arguments usually dispatched.","name":"args"}],"returns":[{"type":{"names":["Phaser.SignalBinding"]},"description":"An Object representing the binding between the Signal and listener."}],"memberof":"Phaser.Signal","longname":"Phaser.Signal#addOnce","scope":"instance","___s":true},{"meta":{"range":[10903,11273],"filename":"Signal.js","lineno":305,"path":"src\\core"},"description":"Remove a single event listener.","kind":"function","name":"remove","params":[{"type":{"names":["function"]},"description":"Handler function that should be removed.","name":"listener"},{"type":{"names":["object"]},"optional":true,"defaultvalue":null,"description":"Execution context (since you can add the same handler multiple times if executing in a different context).","name":"context"}],"returns":[{"type":{"names":["function"]},"description":"Listener handler function."}],"memberof":"Phaser.Signal","longname":"Phaser.Signal#remove","scope":"instance","___s":true},{"meta":{"range":[11687,11886],"filename":"Signal.js","lineno":329,"path":"src\\core"},"description":"Remove all event listeners.","kind":"function","name":"removeAll","params":[{"type":{"names":["object"]},"optional":true,"defaultvalue":null,"description":"If specified only listeners for the given context will be removed.","name":"context"}],"memberof":"Phaser.Signal","longname":"Phaser.Signal#removeAll","scope":"instance","___s":true},{"meta":{"range":[12598,12797],"filename":"Signal.js","lineno":369,"path":"src\\core"},"description":"Gets the total number of listeners attached to this Signal.","kind":"function","name":"getNumListeners","returns":[{"type":{"names":["integer"]},"description":"Number of listeners attached to the Signal."}],"memberof":"Phaser.Signal","longname":"Phaser.Signal#getNumListeners","scope":"instance","___s":true},{"meta":{"range":[12913,13253],"filename":"Signal.js","lineno":381,"path":"src\\core"},"description":"Stop propagation of the event, blocking the dispatch to next listener on the queue.\r\rThis should be called only during event dispatch as calling it before/after dispatch won't affect another broadcast.\rSee {@link #active} to enable/disable the signal entirely.","kind":"function","name":"halt","memberof":"Phaser.Signal","longname":"Phaser.Signal#halt","scope":"instance","___s":true},{"meta":{"range":[13338,13627],"filename":"Signal.js","lineno":395,"path":"src\\core"},"description":"Dispatch / broadcast the event to all listeners.\r\rTo create an instance-bound dispatch for this Signal, use {@link #boundDispatch}.","kind":"function","name":"dispatch","params":[{"type":{"names":["any"]},"optional":true,"description":"Parameters that should be passed to each handler.","name":"params"}],"memberof":"Phaser.Signal","longname":"Phaser.Signal#dispatch","scope":"instance","___s":true},{"meta":{"range":[14666,14804],"filename":"Signal.js","lineno":437,"path":"src\\core"},"description":"Forget the currently {@link Phaser.Signal#memorize memorized} event, if any.","kind":"function","name":"forget","memberof":"Phaser.Signal","longname":"Phaser.Signal#forget","scope":"instance","___s":true},{"meta":{"range":[14941,15224],"filename":"Signal.js","lineno":451,"path":"src\\core"},"description":"Dispose the signal - no more events can be dispatched.\r\rThis removes all event listeners and clears references to external objects.\rCalling methods on a disposed objects results in undefined behavior.","kind":"function","name":"dispose","memberof":"Phaser.Signal","longname":"Phaser.Signal#dispose","scope":"instance","___s":true},{"meta":{"range":[15424,15587],"filename":"Signal.js","lineno":471,"path":"src\\core"},"description":"A string representation of the object.","kind":"function","name":"toString","returns":[{"type":{"names":["string"]},"description":"String representation of the object."}],"memberof":"Phaser.Signal","longname":"Phaser.Signal#toString","scope":"instance","___s":true},{"meta":{"range":[1222,1962],"filename":"SignalBinding.js","lineno":22,"path":"src\\core"},"description":"Object that represents a binding between a Signal and a listener function.\rThis is an internal constructor and shouldn't be created directly.\rInspired by Joa Ebert AS3 SignalBinding and Robert Penner's Slot classes.","kind":"class","classdesc":"Phaser.SignalBinding","params":[{"type":{"names":["Phaser.Signal"]},"description":"Reference to Signal object that listener is currently bound to.","name":"signal"},{"type":{"names":["function"]},"description":"Handler function bound to the signal.","name":"listener"},{"type":{"names":["boolean"]},"description":"If binding should be executed just once.","name":"isOnce"},{"type":{"names":["object"]},"optional":true,"defaultvalue":null,"description":"Context on which listener will be executed (object that should represent the `this` variable inside listener function).","name":"listenerContext"},{"type":{"names":["number"]},"optional":true,"description":"The priority level of the event listener. (default = 0).","name":"priority"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback (listener) function. They will be appended after any arguments usually dispatched.","name":"args"}],"name":"SignalBinding","longname":"Phaser.SignalBinding","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[2183,2196],"filename":"SignalBinding.js","lineno":63,"path":"src\\core"},"properties":[{"type":{"names":["object"]},"nullable":true,"description":"Context on which listener will be executed (object that should represent the `this` variable inside listener function).","name":"context"}],"name":"context","longname":"Phaser.SignalBinding#context","kind":"member","memberof":"Phaser.SignalBinding","scope":"instance","___s":true},{"meta":{"range":[2669,2681],"filename":"SignalBinding.js","lineno":86,"path":"src\\core"},"properties":[{"type":{"names":["number"]},"description":"The number of times the handler function has been called.","name":"callCount"}],"name":"callCount","longname":"Phaser.SignalBinding#callCount","kind":"member","memberof":"Phaser.SignalBinding","scope":"instance","___s":true},{"meta":{"range":[2809,2821],"filename":"SignalBinding.js","lineno":93,"path":"src\\core"},"description":"If binding is active and should be executed.","properties":[{"type":{"names":["boolean"]},"name":"active"}],"defaultvalue":true,"name":"active","longname":"Phaser.SignalBinding#active","kind":"member","memberof":"Phaser.SignalBinding","scope":"instance","___s":true},{"meta":{"range":[3020,3032],"filename":"SignalBinding.js","lineno":100,"path":"src\\core"},"description":"Default parameters passed to listener during `Signal.dispatch` and `SignalBinding.execute` (curried parameters).","properties":[{"type":{"names":["array","null"]},"name":"params"}],"defaultvalue":null,"name":"params","longname":"Phaser.SignalBinding#params","kind":"member","memberof":"Phaser.SignalBinding","scope":"instance","___s":true},{"meta":{"range":[3041,3465],"filename":"SignalBinding.js","lineno":102,"path":"src\\core"},"description":"Call listener passing arbitrary parameters.\rIf binding was added using `Signal.addOnce()` it will be automatically removed from signal dispatch queue, this method is used internally for the signal dispatch.","kind":"function","name":"execute","params":[{"type":{"names":["Array.<any>"]},"optional":true,"description":"Array of parameters that should be passed to the listener.","name":"paramsArr"}],"returns":[{"type":{"names":["any"]},"description":"Value returned by the listener."}],"memberof":"Phaser.SignalBinding","longname":"Phaser.SignalBinding#execute","scope":"instance","___s":true},{"meta":{"range":[4056,4323],"filename":"SignalBinding.js","lineno":136,"path":"src\\core"},"description":"Detach binding from signal.\ralias to: @see mySignal.remove(myBinding.getListener());","kind":"function","name":"detach","returns":[{"type":{"names":["function","null"]},"description":"Handler function bound to the signal or `null` if binding was previously detached."}],"memberof":"Phaser.SignalBinding","longname":"Phaser.SignalBinding#detach","scope":"instance","___s":true},{"meta":{"range":[4457,4602],"filename":"SignalBinding.js","lineno":146,"path":"src\\core"},"kind":"function","name":"isBound","returns":[{"type":{"names":["boolean"]},"description":"True if binding is still bound to the signal and has a listener."}],"memberof":"Phaser.SignalBinding","longname":"Phaser.SignalBinding#isBound","scope":"instance","___s":true},{"meta":{"range":[4700,4824],"filename":"SignalBinding.js","lineno":154,"path":"src\\core"},"kind":"function","name":"isOnce","returns":[{"type":{"names":["boolean"]},"description":"If SignalBinding will only be executed once."}],"memberof":"Phaser.SignalBinding","longname":"Phaser.SignalBinding#isOnce","scope":"instance","___s":true},{"meta":{"range":[4897,5020],"filename":"SignalBinding.js","lineno":162,"path":"src\\core"},"kind":"function","name":"getListener","returns":[{"type":{"names":["function"]},"description":"Handler function bound to the signal."}],"memberof":"Phaser.SignalBinding","longname":"Phaser.SignalBinding#getListener","scope":"instance","___s":true},{"meta":{"range":[5100,5232],"filename":"SignalBinding.js","lineno":170,"path":"src\\core"},"kind":"function","name":"getSignal","returns":[{"type":{"names":["Phaser.Signal"]},"description":"Signal that listener is currently bound to."}],"memberof":"Phaser.SignalBinding","longname":"Phaser.SignalBinding#getSignal","scope":"instance","___s":true},{"meta":{"range":[5551,5668],"filename":"SignalBinding.js","lineno":189,"path":"src\\core"},"kind":"function","name":"toString","returns":[{"type":{"names":["string"]},"description":"String representation of the object."}],"memberof":"Phaser.SignalBinding","longname":"Phaser.SignalBinding#toString","scope":"instance","___s":true},{"meta":{"range":[543,2867],"filename":"Stage.js","lineno":16,"path":"src\\core"},"description":"The Stage controls root level display objects upon which everything is displayed.\rIt also handles browser visibility handling and the pausing due to loss of focus.","kind":"class","classdesc":"Phaser.Stage","augments":["PIXI.DisplayObjectContainer"],"params":[{"type":{"names":["Phaser.Game"]},"description":"Game reference to the currently running game.","name":"game"}],"name":"Stage","longname":"Phaser.Stage","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[681,697],"filename":"Stage.js","lineno":21,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running Game.","name":"game"}],"name":"game","longname":"Phaser.Stage#game","kind":"member","memberof":"Phaser.Stage","scope":"instance","___s":true},{"meta":{"range":[844,869],"filename":"Stage.js","lineno":29,"path":"src\\core"},"properties":[{"type":{"names":["string"]},"description":"The name of this object.","name":"name"}],"defaultvalue":"_stage_root","name":"name","longname":"Phaser.Stage#name","kind":"member","memberof":"Phaser.Stage","scope":"instance","___s":true},{"meta":{"range":[1396,1432],"filename":"Stage.js","lineno":40,"path":"src\\core"},"description":"By default if the browser tab loses focus the game will pause.\rYou can stop that behavior by setting this property to true.\rNote that the browser can still elect to pause your game if it wishes to do so,\rfor example swapping to another browser tab. This will cause the RAF callback to halt,\reffectively pausing your game, even though no in-game pause event is triggered if you enable this property.","properties":[{"type":{"names":["boolean"]},"name":"disableVisibilityChange"}],"defaultvalue":false,"name":"disableVisibilityChange","longname":"Phaser.Stage#disableVisibilityChange","kind":"member","memberof":"Phaser.Stage","scope":"instance","___s":true},{"meta":{"range":[1593,1611],"filename":"Stage.js","lineno":46,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"If exists is true the Stage and all children are updated, otherwise it is skipped.","name":"exists"}],"defaultvalue":true,"name":"exists","longname":"Phaser.Stage#exists","kind":"member","memberof":"Phaser.Stage","scope":"instance","___s":true},{"meta":{"range":[2133,2162],"filename":"Stage.js","lineno":65,"path":"src\\core"},"properties":[{"type":{"names":["number"]},"description":"Reset each frame, keeps a count of the total number of objects updated.","name":"currentRenderOrderID"}],"name":"currentRenderOrderID","longname":"Phaser.Stage#currentRenderOrderID","kind":"member","memberof":"Phaser.Stage","scope":"instance","___s":true},{"meta":{"range":[3006,3167],"filename":"Stage.js","lineno":101,"path":"src\\core"},"description":"Parses a Game configuration object.","kind":"function","name":"parseConfig","access":"protected","params":[{"type":{"names":["object"]},"description":"The configuration object to parse.","name":"config"}],"memberof":"Phaser.Stage","longname":"Phaser.Stage#parseConfig","scope":"instance","___s":true},{"meta":{"range":[3855,4084],"filename":"Stage.js","lineno":138,"path":"src\\core"},"description":"This is called automatically after the plugins preUpdate and before the State.update.\rMost objects have preUpdate methods and it's where initial movement and positioning is done.","kind":"function","name":"preUpdate","memberof":"Phaser.Stage","longname":"Phaser.Stage#preUpdate","scope":"instance","___s":true},{"meta":{"range":[4370,4507],"filename":"Stage.js","lineno":156,"path":"src\\core"},"description":"This is called automatically after the State.update, but before particles or plugins update.","kind":"function","name":"update","memberof":"Phaser.Stage","longname":"Phaser.Stage#update","scope":"instance","___s":true},{"meta":{"range":[4765,5064],"filename":"Stage.js","lineno":173,"path":"src\\core"},"description":"This is called automatically before the renderer runs and after the plugins have updated.\rIn postUpdate this is where all the final physics calculations and object positioning happens.\rThe objects are processed in the order of the display list.","kind":"function","name":"postUpdate","memberof":"Phaser.Stage","longname":"Phaser.Stage#postUpdate","scope":"instance","___s":true},{"meta":{"range":[5555,5782],"filename":"Stage.js","lineno":204,"path":"src\\core"},"description":"Updates the transforms for all objects on the display list.\rThis overrides the Pixi default as we don't need the interactionManager, but do need the game property check.","kind":"function","name":"updateTransform","memberof":"Phaser.Stage","longname":"Phaser.Stage#updateTransform","scope":"instance","___s":true},{"meta":{"range":[5989,6211],"filename":"Stage.js","lineno":221,"path":"src\\core"},"description":"Starts a page visibility event listener running, or window.onpagehide/onpageshow if not supported by the browser.\rAlso listens for window.onblur and window.onfocus.","kind":"function","name":"checkVisibility","memberof":"Phaser.Stage","longname":"Phaser.Stage#checkVisibility","scope":"instance","___s":true},{"meta":{"range":[7672,7890],"filename":"Stage.js","lineno":281,"path":"src\\core"},"description":"This method is called when the document visibility is changed.","kind":"function","name":"visibilityChange","params":[{"type":{"names":["Event"]},"description":"Its type will be used to decide whether the game should be paused or not.","name":"event"}],"memberof":"Phaser.Stage","longname":"Phaser.Stage#visibilityChange","scope":"instance","___s":true},{"meta":{"range":[8684,9131],"filename":"Stage.js","lineno":319,"path":"src\\core"},"description":"Sets the background color for the Stage.\r\rThe color can be given as a hex string (`'#RRGGBB'`), a CSS color string (`'rgb(r,g,b)'`), or a numeric value (`0xRRGGBB`).\r\rAn alpha channel is _not_ supported and will be ignored.\r\rIf you've set your game to be transparent then calls to setBackgroundColor are ignored.","kind":"function","name":"setBackgroundColor","params":[{"type":{"names":["number","string"]},"description":"The color of the background.","name":"color"}],"memberof":"Phaser.Stage","longname":"Phaser.Stage#setBackgroundColor","scope":"instance","___s":true},{"meta":{"range":[9523,9616],"filename":"Stage.js","lineno":346,"path":"src\\core"},"description":"Destroys the Stage and removes event listeners.","kind":"function","name":"destroy","memberof":"Phaser.Stage","longname":"Phaser.Stage#destroy","scope":"instance","___s":true},{"meta":{"range":[9916,10129],"filename":"Stage.js","lineno":366,"path":"src\\core"},"name":"backgroundColor","properties":[{"type":{"names":["number","string"]},"description":"Gets and sets the background color of the stage. The color can be given as a number: 0xff0000 or a hex string: '#ff0000'","name":"backgroundColor"}],"memberof":"Phaser.Stage","longname":"Phaser.Stage#backgroundColor","scope":"instance","kind":"member","___s":true},{"meta":{"range":[10366,10692],"filename":"Stage.js","lineno":386,"path":"src\\core"},"description":"Enable or disable texture smoothing for all objects on this Stage. Only works for bitmap/image textures. Smoothing is enabled by default.","name":"smoothed","properties":[{"type":{"names":["boolean"]},"description":"Set to true to smooth all sprites rendered on this Stage, or false to disable smoothing (great for pixel art)","name":"smoothed"}],"memberof":"Phaser.Stage","longname":"Phaser.Stage#smoothed","scope":"instance","kind":"member","___s":true},{"meta":{"range":[447,3537],"filename":"State.js","lineno":14,"path":"src\\core"},"description":"This is a base State class which can be extended if you are creating your own game.\rIt provides quick access to common functions such as the camera, cache, input, match, sound and more.","kind":"class","classdesc":"Phaser.State","name":"State","longname":"Phaser.State","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[589,605],"filename":"State.js","lineno":19,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"This is a reference to the currently running Game.","name":"game"}],"name":"game","longname":"Phaser.State#game","kind":"member","memberof":"Phaser.State","scope":"instance","___s":true},{"meta":{"range":[745,758],"filename":"State.js","lineno":24,"path":"src\\core"},"properties":[{"type":{"names":["string"]},"description":"The string based identifier given to the State when added into the State Manager.","name":"key"}],"name":"key","longname":"Phaser.State#key","kind":"member","memberof":"Phaser.State","scope":"instance","___s":true},{"meta":{"range":[922,937],"filename":"State.js","lineno":29,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.GameObjectFactory"]},"description":"A reference to the GameObjectFactory which can be used to add new objects to the World.","name":"add"}],"name":"add","longname":"Phaser.State#add","kind":"member","memberof":"Phaser.State","scope":"instance","___s":true},{"meta":{"range":[1090,1106],"filename":"State.js","lineno":34,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.GameObjectCreator"]},"description":"A reference to the GameObjectCreator which can be used to make new objects.","name":"make"}],"name":"make","longname":"Phaser.State#make","kind":"member","memberof":"Phaser.State","scope":"instance","___s":true},{"meta":{"range":[1209,1227],"filename":"State.js","lineno":39,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Camera"]},"description":"A handy reference to World.camera.","name":"camera"}],"name":"camera","longname":"Phaser.State#camera","kind":"member","memberof":"Phaser.State","scope":"instance","___s":true},{"meta":{"range":[1402,1419],"filename":"State.js","lineno":44,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Cache"]},"description":"A reference to the game cache which contains any loaded or generated assets, such as images, sound and more.","name":"cache"}],"name":"cache","longname":"Phaser.State#cache","kind":"member","memberof":"Phaser.State","scope":"instance","___s":true},{"meta":{"range":[1519,1536],"filename":"State.js","lineno":49,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Input"]},"description":"A reference to the Input Manager.","name":"input"}],"name":"input","longname":"Phaser.State#input","kind":"member","memberof":"Phaser.State","scope":"instance","___s":true},{"meta":{"range":[1711,1727],"filename":"State.js","lineno":54,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Loader"]},"description":"A reference to the Loader, which you mostly use in the preload method of your state to load external assets.","name":"load"}],"name":"load","longname":"Phaser.State#load","kind":"member","memberof":"Phaser.State","scope":"instance","___s":true},{"meta":{"range":[1849,1865],"filename":"State.js","lineno":59,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Math"]},"description":"A reference to Math class with lots of helpful functions.","name":"math"}],"name":"math","longname":"Phaser.State#math","kind":"member","memberof":"Phaser.State","scope":"instance","___s":true},{"meta":{"range":[2044,2061],"filename":"State.js","lineno":64,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.SoundManager"]},"description":"A reference to the Sound Manager which can create, play and stop sounds, as well as adjust global volume.","name":"sound"}],"name":"sound","longname":"Phaser.State#sound","kind":"member","memberof":"Phaser.State","scope":"instance","___s":true},{"meta":{"range":[2229,2246],"filename":"State.js","lineno":69,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.ScaleManager"]},"description":"A reference to the Scale Manager which controls the way the game scales on different displays.","name":"scale"}],"name":"scale","longname":"Phaser.State#scale","kind":"member","memberof":"Phaser.State","scope":"instance","___s":true},{"meta":{"range":[2338,2355],"filename":"State.js","lineno":74,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Stage"]},"description":"A reference to the Stage.","name":"stage"}],"name":"stage","longname":"Phaser.State#stage","kind":"member","memberof":"Phaser.State","scope":"instance","___s":true},{"meta":{"range":[2492,2509],"filename":"State.js","lineno":79,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.StateManager"]},"description":"A reference to the State Manager, which controls state changes.","name":"stage"}],"name":"state","longname":"Phaser.State#state","kind":"member","memberof":"Phaser.State","scope":"instance","___s":true},{"meta":{"range":[2628,2644],"filename":"State.js","lineno":84,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Time"]},"description":"A reference to the game clock and timed events system.","name":"time"}],"name":"time","longname":"Phaser.State#time","kind":"member","memberof":"Phaser.State","scope":"instance","___s":true},{"meta":{"range":[2752,2770],"filename":"State.js","lineno":89,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.TweenManager"]},"description":"A reference to the tween manager.","name":"tweens"}],"name":"tweens","longname":"Phaser.State#tweens","kind":"member","memberof":"Phaser.State","scope":"instance","___s":true},{"meta":{"range":[2955,2972],"filename":"State.js","lineno":94,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.World"]},"description":"A reference to the game world. All objects live in the Game World and its size is not bound by the display resolution.","name":"world"}],"name":"world","longname":"Phaser.State#world","kind":"member","memberof":"Phaser.State","scope":"instance","___s":true},{"meta":{"range":[3156,3177],"filename":"State.js","lineno":99,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Particles"]},"description":"The Particle Manager. It is called during the core gameloop and updates any Particle Emitters it has created.","name":"particles"}],"name":"particles","longname":"Phaser.State#particles","kind":"member","memberof":"Phaser.State","scope":"instance","___s":true},{"meta":{"range":[3355,3374],"filename":"State.js","lineno":104,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Physics"]},"description":"A reference to the physics manager which looks after the different physics systems available within Phaser.","name":"physics"}],"name":"physics","longname":"Phaser.State#physics","kind":"member","memberof":"Phaser.State","scope":"instance","___s":true},{"meta":{"range":[3516,3531],"filename":"State.js","lineno":109,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.RandomDataGenerator"]},"description":"A reference to the seeded and repeatable random data generator.","name":"rnd"}],"name":"rnd","longname":"Phaser.State#rnd","kind":"member","memberof":"Phaser.State","scope":"instance","___s":true},{"meta":{"range":[3576,3927],"filename":"State.js","lineno":115,"path":"src\\core"},"description":"init is the very first function called when your State starts up. It's called before preload, create or anything else.\rIf you need to route the game away to another State you could do so here, or if you need to prepare a set of variables\ror objects before the preloading starts.","kind":"function","name":"init","memberof":"Phaser.State","longname":"Phaser.State#init","scope":"instance","___s":true},{"meta":{"range":[3968,4298],"filename":"State.js","lineno":125,"path":"src\\core"},"description":"preload is called first. Normally you'd use this to load your game assets (or those needed for the current State)\rYou shouldn't create any objects in this method that require assets that you're also loading in this method, as\rthey won't yet be available.","kind":"function","name":"preload","memberof":"Phaser.State","longname":"Phaser.State#preload","scope":"instance","___s":true},{"meta":{"range":[4342,4536],"filename":"State.js","lineno":135,"path":"src\\core"},"description":"loadUpdate is called during the Loader process. This only happens if you've set one or more assets to load in the preload method.","kind":"function","name":"loadUpdate","memberof":"Phaser.State","longname":"Phaser.State#loadUpdate","scope":"instance","___s":true},{"meta":{"range":[4583,4912],"filename":"State.js","lineno":143,"path":"src\\core"},"description":"loadRender is called during the Loader process. This only happens if you've set one or more assets to load in the preload method.\rThe difference between loadRender and render is that any objects you render in this method you must be sure their assets exist.","kind":"function","name":"loadRender","memberof":"Phaser.State","longname":"Phaser.State#loadRender","scope":"instance","___s":true},{"meta":{"range":[4959,5217],"filename":"State.js","lineno":152,"path":"src\\core"},"description":"create is called once preload has completed, this includes the loading of any assets from the Loader.\rIf you don't have a preload method then create is the first method called in your State.","kind":"function","name":"create","memberof":"Phaser.State","longname":"Phaser.State#create","scope":"instance","___s":true},{"meta":{"range":[5260,5631],"filename":"State.js","lineno":161,"path":"src\\core"},"description":"The update method is left empty for your own use.\rIt is called during the core game loop AFTER debug, physics, plugins and the Stage have had their preUpdate methods called.\rIt is called BEFORE Stage, Tweens, Sounds, Input, Physics, Particles and Plugins have had their postUpdate methods called.","kind":"function","name":"update","memberof":"Phaser.State","longname":"Phaser.State#update","scope":"instance","___s":true},{"meta":{"range":[5674,5848],"filename":"State.js","lineno":171,"path":"src\\core"},"description":"The preRender method is called after all Game Objects have been updated, but before any rendering takes place.","kind":"function","name":"preRender","memberof":"Phaser.State","longname":"Phaser.State#preRender","scope":"instance","___s":true},{"meta":{"range":[5894,6282],"filename":"State.js","lineno":179,"path":"src\\core"},"description":"Nearly all display objects in Phaser render automatically, you don't need to tell them to render.\rHowever the render method is called AFTER the game renderer and plugins have rendered, so you're able to do any\rfinal post-processing style effects here. Note that this happens before plugins postRender takes place.","kind":"function","name":"render","memberof":"Phaser.State","longname":"Phaser.State#render","scope":"instance","___s":true},{"meta":{"range":[6325,6525],"filename":"State.js","lineno":189,"path":"src\\core"},"description":"If your game is set to Scalemode RESIZE then each time the browser resizes it will call this function, passing in the new width and height.","kind":"function","name":"resize","memberof":"Phaser.State","longname":"Phaser.State#resize","scope":"instance","___s":true},{"meta":{"range":[6568,6688],"filename":"State.js","lineno":197,"path":"src\\core"},"description":"This method will be called if the core game loop is paused.","kind":"function","name":"paused","memberof":"Phaser.State","longname":"Phaser.State#paused","scope":"instance","___s":true},{"meta":{"range":[6731,6872],"filename":"State.js","lineno":205,"path":"src\\core"},"description":"This method will be called when the core game loop resumes from a paused state.","kind":"function","name":"resumed","memberof":"Phaser.State","longname":"Phaser.State#resumed","scope":"instance","___s":true},{"meta":{"range":[6916,7073],"filename":"State.js","lineno":213,"path":"src\\core"},"description":"pauseUpdate is called while the game is paused instead of preUpdate, update and postUpdate.","kind":"function","name":"pauseUpdate","memberof":"Phaser.State","longname":"Phaser.State#pauseUpdate","scope":"instance","___s":true},{"meta":{"range":[7121,7287],"filename":"State.js","lineno":221,"path":"src\\core"},"description":"This method will be called when the State is shutdown (i.e. you switch to another state from this one).","kind":"function","name":"shutdown","memberof":"Phaser.State","longname":"Phaser.State#shutdown","scope":"instance","___s":true},{"meta":{"range":[548,5210],"filename":"StateManager.js","lineno":17,"path":"src\\core"},"description":"The State Manager is responsible for loading, setting up and switching game states.","kind":"class","classdesc":"Phaser.StateManager","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["Phaser.State","Object"]},"optional":true,"defaultvalue":null,"description":"A State object to seed the manager with.","name":"pendingState"}],"name":"StateManager","longname":"Phaser.StateManager","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[707,723],"filename":"StateManager.js","lineno":22,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"game","longname":"Phaser.StateManager#game","kind":"member","memberof":"Phaser.StateManager","scope":"instance","___s":true},{"meta":{"range":[821,837],"filename":"StateManager.js","lineno":27,"path":"src\\core"},"properties":[{"type":{"names":["object"]},"description":"The object containing Phaser.States.","name":"states"}],"name":"states","longname":"Phaser.StateManager#states","kind":"member","memberof":"Phaser.StateManager","scope":"instance","___s":true},{"meta":{"range":[1841,1858],"filename":"StateManager.js","lineno":68,"path":"src\\core"},"properties":[{"type":{"names":["string"]},"description":"The current active State object.","name":"current"}],"defaultvalue":"","name":"current","longname":"Phaser.StateManager#current","kind":"member","memberof":"Phaser.StateManager","scope":"instance","___s":true},{"meta":{"range":[2588,2628],"filename":"StateManager.js","lineno":82,"path":"src\\core"},"description":"onStateChange is a Phaser.Signal that is dispatched whenever the game changes state.\r\rIt is dispatched only when the new state is started, which isn't usually at the same time as StateManager.start\ris called because state swapping is done in sync with the game loop. It is dispatched *before* any of the new states\rmethods (such as preload and create) are called, and *after* the previous states shutdown method has been run.\r\rThe callback you specify is sent two parameters: the string based key of the new state, \rand the second parameter is the string based key of the old / previous state.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onStateChange"}],"name":"onStateChange","longname":"Phaser.StateManager#onStateChange","kind":"member","memberof":"Phaser.StateManager","scope":"instance","___s":true},{"meta":{"range":[2773,2799],"filename":"StateManager.js","lineno":88,"path":"src\\core"},"properties":[{"type":{"names":["function"]},"description":"This is called when the state is set as the active state.","name":"onInitCallback"}],"defaultvalue":null,"name":"onInitCallback","longname":"Phaser.StateManager#onInitCallback","kind":"member","memberof":"Phaser.StateManager","scope":"instance","___s":true},{"meta":{"range":[2942,2971],"filename":"StateManager.js","lineno":94,"path":"src\\core"},"properties":[{"type":{"names":["function"]},"description":"This is called when the state starts to load assets.","name":"onPreloadCallback"}],"defaultvalue":null,"name":"onPreloadCallback","longname":"Phaser.StateManager#onPreloadCallback","kind":"member","memberof":"Phaser.StateManager","scope":"instance","___s":true},{"meta":{"range":[3132,3160],"filename":"StateManager.js","lineno":100,"path":"src\\core"},"properties":[{"type":{"names":["function"]},"description":"This is called when the state preload has finished and creation begins.","name":"onCreateCallback"}],"defaultvalue":null,"name":"onCreateCallback","longname":"Phaser.StateManager#onCreateCallback","kind":"member","memberof":"Phaser.StateManager","scope":"instance","___s":true},{"meta":{"range":[3370,3398],"filename":"StateManager.js","lineno":106,"path":"src\\core"},"properties":[{"type":{"names":["function"]},"description":"This is called when the state is updated, every game loop. It doesn't happen during preload (@see onLoadUpdateCallback).","name":"onUpdateCallback"}],"defaultvalue":null,"name":"onUpdateCallback","longname":"Phaser.StateManager#onUpdateCallback","kind":"member","memberof":"Phaser.StateManager","scope":"instance","___s":true},{"meta":{"range":[3576,3604],"filename":"StateManager.js","lineno":112,"path":"src\\core"},"properties":[{"type":{"names":["function"]},"description":"This is called post-render. It doesn't happen during preload (see onLoadRenderCallback).","name":"onRenderCallback"}],"defaultvalue":null,"name":"onRenderCallback","longname":"Phaser.StateManager#onRenderCallback","kind":"member","memberof":"Phaser.StateManager","scope":"instance","___s":true},{"meta":{"range":[3809,3837],"filename":"StateManager.js","lineno":118,"path":"src\\core"},"properties":[{"type":{"names":["function"]},"description":"This is called if ScaleManager.scalemode is RESIZE and a resize event occurs. It's passed the new width and height.","name":"onResizeCallback"}],"defaultvalue":null,"name":"onResizeCallback","longname":"Phaser.StateManager#onResizeCallback","kind":"member","memberof":"Phaser.StateManager","scope":"instance","___s":true},{"meta":{"range":[4074,4105],"filename":"StateManager.js","lineno":124,"path":"src\\core"},"properties":[{"type":{"names":["function"]},"description":"This is called before the state is rendered and before the stage is cleared but after all game objects have had their final properties adjusted.","name":"onPreRenderCallback"}],"defaultvalue":null,"name":"onPreRenderCallback","longname":"Phaser.StateManager#onPreRenderCallback","kind":"member","memberof":"Phaser.StateManager","scope":"instance","___s":true},{"meta":{"range":[4265,4297],"filename":"StateManager.js","lineno":130,"path":"src\\core"},"properties":[{"type":{"names":["function"]},"description":"This is called when the State is updated during the preload phase.","name":"onLoadUpdateCallback"}],"defaultvalue":null,"name":"onLoadUpdateCallback","longname":"Phaser.StateManager#onLoadUpdateCallback","kind":"member","memberof":"Phaser.StateManager","scope":"instance","___s":true},{"meta":{"range":[4458,4490],"filename":"StateManager.js","lineno":136,"path":"src\\core"},"properties":[{"type":{"names":["function"]},"description":"This is called when the State is rendered during the preload phase.","name":"onLoadRenderCallback"}],"defaultvalue":null,"name":"onLoadRenderCallback","longname":"Phaser.StateManager#onLoadRenderCallback","kind":"member","memberof":"Phaser.StateManager","scope":"instance","___s":true},{"meta":{"range":[4619,4647],"filename":"StateManager.js","lineno":142,"path":"src\\core"},"properties":[{"type":{"names":["function"]},"description":"This is called when the game is paused.","name":"onPausedCallback"}],"defaultvalue":null,"name":"onPausedCallback","longname":"Phaser.StateManager#onPausedCallback","kind":"member","memberof":"Phaser.StateManager","scope":"instance","___s":true},{"meta":{"range":[4798,4827],"filename":"StateManager.js","lineno":148,"path":"src\\core"},"properties":[{"type":{"names":["function"]},"description":"This is called when the game is resumed from a paused state.","name":"onResumedCallback"}],"defaultvalue":null,"name":"onResumedCallback","longname":"Phaser.StateManager#onResumedCallback","kind":"member","memberof":"Phaser.StateManager","scope":"instance","___s":true},{"meta":{"range":[4974,5007],"filename":"StateManager.js","lineno":154,"path":"src\\core"},"properties":[{"type":{"names":["function"]},"description":"This is called every frame while the game is paused.","name":"onPauseUpdateCallback"}],"defaultvalue":null,"name":"onPauseUpdateCallback","longname":"Phaser.StateManager#onPauseUpdateCallback","kind":"member","memberof":"Phaser.StateManager","scope":"instance","___s":true},{"meta":{"range":[5174,5204],"filename":"StateManager.js","lineno":160,"path":"src\\core"},"properties":[{"type":{"names":["function"]},"description":"This is called when the state is shut down (i.e. swapped to another state).","name":"onShutDownCallback"}],"defaultvalue":null,"name":"onShutDownCallback","longname":"Phaser.StateManager#onShutDownCallback","kind":"member","memberof":"Phaser.StateManager","scope":"instance","___s":true},{"meta":{"range":[5712,6386],"filename":"StateManager.js","lineno":183,"path":"src\\core"},"description":"Adds a new State into the StateManager. You must give each State a unique key by which you'll identify it.\rThe State can be either a Phaser.State object (or an object that extends it), a plain JavaScript object or a function.\rIf a function is given a new state object will be created by calling it.","kind":"function","name":"add","params":[{"type":{"names":["string"]},"description":"A unique key you use to reference this state, i.e. \"MainMenu\", \"Level1\".","name":"key"},{"type":{"names":["Phaser.State","object","function"]},"description":"The state you want to switch to.","name":"state"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the State will be started immediately after adding it.","name":"autoStart"}],"memberof":"Phaser.StateManager","longname":"Phaser.StateManager#add","scope":"instance","___s":true},{"meta":{"range":[7197,7383],"filename":"StateManager.js","lineno":231,"path":"src\\core"},"description":"Delete the given state.","kind":"function","name":"remove","params":[{"type":{"names":["string"]},"description":"A unique key you use to reference this state, i.e. \"MainMenu\", \"Level1\".","name":"key"}],"memberof":"Phaser.StateManager","longname":"Phaser.StateManager#remove","scope":"instance","___s":true},{"meta":{"range":[8149,8952],"filename":"StateManager.js","lineno":262,"path":"src\\core"},"description":"Start the given State. If a State is already running then State.shutDown will be called (if it exists) before switching to the new State.","kind":"function","name":"start","params":[{"type":{"names":["string"]},"description":"The key of the state you want to start.","name":"key"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Clear everything in the world? This clears the World display list fully (but not the Stage, so if you've added your own objects to the Stage they will need managing directly)","name":"clearWorld"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Clear the Game.Cache? This purges out all loaded assets. The default is false and you must have clearWorld=true if you want to clearCache as well.","name":"clearCache"},{"type":{"names":["*"]},"variable":true,"description":"Additional parameters that will be passed to the State.init function (if it has one).","name":"parameter"}],"memberof":"Phaser.StateManager","longname":"Phaser.StateManager#start","scope":"instance","___s":true},{"meta":{"range":[9582,10282],"filename":"StateManager.js","lineno":291,"path":"src\\core"},"description":"Restarts the current State. State.shutDown will be called (if it exists) before the State is restarted.","kind":"function","name":"restart","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Clear everything in the world? This clears the World display list fully (but not the Stage, so if you've added your own objects to the Stage they will need managing directly)","name":"clearWorld"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Clear the Game.Cache? This purges out all loaded assets. The default is false and you must have clearWorld=true if you want to clearCache as well.","name":"clearCache"},{"type":{"names":["*"]},"variable":true,"description":"Additional parameters that will be passed to the State.init function if it has one.","name":"parameter"}],"memberof":"Phaser.StateManager","longname":"Phaser.StateManager#restart","scope":"instance","___s":true},{"meta":{"range":[11021,11225],"filename":"StateManager.js","lineno":324,"path":"src\\core"},"description":"preUpdate is called right at the start of the game loop. It is responsible for changing to a new state that was requested previously.","kind":"function","name":"preUpdate","memberof":"Phaser.StateManager","longname":"Phaser.StateManager#preUpdate","scope":"instance","___s":true},{"meta":{"range":[12770,13075],"filename":"StateManager.js","lineno":378,"path":"src\\core"},"description":"This method clears the current State, calling its shutdown callback. The process also removes any active tweens,\rresets the camera, resets input, clears physics, removes timers and if set clears the world and cache too.","kind":"function","name":"clearCurrentState","memberof":"Phaser.StateManager","longname":"Phaser.StateManager#clearCurrentState","scope":"instance","___s":true},{"meta":{"range":[13952,14330],"filename":"StateManager.js","lineno":423,"path":"src\\core"},"description":"Checks if a given phaser state is valid. A State is considered valid if it has at least one of the core functions: preload, create, update or render.","kind":"function","name":"checkState","params":[{"type":{"names":["string"]},"description":"The key of the state you want to check.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"true if the State has the required functions, otherwise false."}],"memberof":"Phaser.StateManager","longname":"Phaser.StateManager#checkState","scope":"instance","___s":true},{"meta":{"range":[15021,15197],"filename":"StateManager.js","lineno":452,"path":"src\\core"},"description":"Links game properties to the State given by the key.","kind":"function","name":"link","params":[{"type":{"names":["string"]},"description":"State key.","name":"key"}],"access":"protected","memberof":"Phaser.StateManager","longname":"Phaser.StateManager#link","scope":"instance","___s":true},{"meta":{"range":[16182,16379],"filename":"StateManager.js","lineno":483,"path":"src\\core"},"description":"Nulls all State level Phaser properties, including a reference to Game.","kind":"function","name":"unlink","params":[{"type":{"names":["string"]},"description":"State key.","name":"key"}],"access":"protected","memberof":"Phaser.StateManager","longname":"Phaser.StateManager#unlink","scope":"instance","___s":true},{"meta":{"range":[19308,19459],"filename":"StateManager.js","lineno":569,"path":"src\\core"},"description":"Gets the current State.","kind":"function","name":"getCurrentState","returns":[{"type":{"names":["Phaser.State"]}}],"access":"public","memberof":"Phaser.StateManager","longname":"Phaser.StateManager#getCurrentState","scope":"instance","___s":true},{"meta":{"range":[19553,19630],"filename":"StateManager.js","lineno":580,"path":"src\\core"},"kind":"function","name":"loadComplete","access":"protected","memberof":"Phaser.StateManager","longname":"Phaser.StateManager#loadComplete","scope":"instance","___s":true},{"meta":{"range":[20204,20274],"filename":"StateManager.js","lineno":604,"path":"src\\core"},"kind":"function","name":"pause","access":"protected","memberof":"Phaser.StateManager","longname":"Phaser.StateManager#pause","scope":"instance","___s":true},{"meta":{"range":[20469,20540],"filename":"StateManager.js","lineno":617,"path":"src\\core"},"kind":"function","name":"resume","access":"protected","memberof":"Phaser.StateManager","longname":"Phaser.StateManager#resume","scope":"instance","___s":true},{"meta":{"range":[20738,20809],"filename":"StateManager.js","lineno":630,"path":"src\\core"},"kind":"function","name":"update","access":"protected","memberof":"Phaser.StateManager","longname":"Phaser.StateManager#update","scope":"instance","___s":true},{"meta":{"range":[21246,21322],"filename":"StateManager.js","lineno":653,"path":"src\\core"},"kind":"function","name":"pauseUpdate","access":"protected","memberof":"Phaser.StateManager","longname":"Phaser.StateManager#pauseUpdate","scope":"instance","___s":true},{"meta":{"range":[21774,21925],"filename":"StateManager.js","lineno":676,"path":"src\\core"},"kind":"function","name":"preRender","access":"protected","params":[{"type":{"names":["number"]},"description":"The time elapsed since the last update.","name":"elapsedTime"}],"memberof":"Phaser.StateManager","longname":"Phaser.StateManager#preRender","scope":"instance","___s":true},{"meta":{"range":[22154,22225],"filename":"StateManager.js","lineno":690,"path":"src\\core"},"kind":"function","name":"resize","access":"protected","memberof":"Phaser.StateManager","longname":"Phaser.StateManager#resize","scope":"instance","___s":true},{"meta":{"range":[22421,22492],"filename":"StateManager.js","lineno":703,"path":"src\\core"},"kind":"function","name":"render","access":"protected","memberof":"Phaser.StateManager","longname":"Phaser.StateManager#render","scope":"instance","___s":true},{"meta":{"range":[23342,23605],"filename":"StateManager.js","lineno":736,"path":"src\\core"},"description":"Removes all StateManager callback references to the State object, nulls the game reference and clears the States object.\rYou don't recover from this without rebuilding the Phaser instance again.","kind":"function","name":"destroy","memberof":"Phaser.StateManager","longname":"Phaser.StateManager#destroy","scope":"instance","___s":true},{"meta":{"range":[24435,24632],"filename":"StateManager.js","lineno":774,"path":"src\\core"},"name":"created","properties":[{"type":{"names":["boolean"]},"description":"True if the current state has had its `create` method run (if it has one, if not this is true by default).","name":"created"}],"readonly":true,"memberof":"Phaser.StateManager","longname":"Phaser.StateManager#created","scope":"instance","kind":"member","___s":true},{"meta":{"range":[743,2706],"filename":"World.js","lineno":19,"path":"src\\core"},"description":"\"This world is but a canvas to our imagination.\" - Henry David Thoreau\r\rA game has only one world. The world is an abstract place in which all game objects live. It is not bound\rby stage limits and can be any size. You look into the world via cameras. All game objects live within\rthe world at world-based coordinates. By default a world is created the same size as your Stage.","kind":"class","classdesc":"Phaser.World","augments":["Phaser.Group"],"params":[{"type":{"names":["Phaser.Game"]},"description":"Reference to the current game instance.","name":"game"}],"name":"World","longname":"Phaser.World","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1709,1774],"filename":"World.js","lineno":30,"path":"src\\core"},"description":"The World has no fixed size, but it does have a bounds outside of which objects are no longer considered as being \"in world\" and you should use this to clean-up the display list and purge dead objects.\rBy default we set the Bounds to be from 0,0 to Game.width,Game.height. I.e. it will match the size given to the game constructor with 0,0 representing the top-left of the display.\rHowever 0,0 is actually the center of the world, and if you rotate or scale the world all of that will happen from 0,0.\rSo if you want to make a game in which the world itself will rotate you should adjust the bounds so that 0,0 is the center point, i.e. set them to -1000,-1000,2000,2000 for a 2000x2000 sized world centered around 0,0.","properties":[{"type":{"names":["Phaser.Rectangle"]},"description":"Bound of this world that objects can not escape from.","name":"bounds"}],"name":"bounds","longname":"Phaser.World#bounds","kind":"member","memberof":"Phaser.World","scope":"instance","___s":true},{"meta":{"range":[1859,1877],"filename":"World.js","lineno":35,"path":"src\\core"},"properties":[{"type":{"names":["Phaser.Camera"]},"description":"Camera instance.","name":"camera"}],"name":"camera","longname":"Phaser.World#camera","kind":"member","memberof":"Phaser.World","scope":"instance","___s":true},{"meta":{"range":[2117,2142],"filename":"World.js","lineno":41,"path":"src\\core"},"properties":[{"type":{"names":["boolean"]},"description":"True if the World has been given a specifically defined size (i.e. from a Tilemap or direct in code) or false if it's just matched to the Game dimensions.","name":"_definedSize"}],"readonly":true,"name":"_definedSize","longname":"Phaser.World#_definedSize","kind":"member","memberof":"Phaser.World","scope":"instance","___s":true},{"meta":{"range":[2362,2386],"filename":"World.js","lineno":46,"path":"src\\core"},"properties":[{"type":{"names":["number"]},"description":"The defined width of the World. Sometimes the bounds needs to grow larger than this (if you resize the game) but this retains the original requested dimension.","name":"width"}],"name":"_width","longname":"Phaser.World#_width","kind":"member","memberof":"Phaser.World","scope":"instance","___s":true},{"meta":{"range":[2608,2634],"filename":"World.js","lineno":51,"path":"src\\core"},"properties":[{"type":{"names":["number"]},"description":"The defined height of the World. Sometimes the bounds needs to grow larger than this (if you resize the game) but this retains the original requested dimension.","name":"height"}],"name":"_height","longname":"Phaser.World#_height","kind":"member","memberof":"Phaser.World","scope":"instance","___s":true},{"meta":{"range":[2830,2914],"filename":"World.js","lineno":60,"path":"src\\core"},"description":"Initialises the game world.","kind":"function","name":"boot","access":"protected","memberof":"Phaser.World","longname":"Phaser.World#boot","scope":"instance","___s":true},{"meta":{"range":[3130,3332],"filename":"World.js","lineno":76,"path":"src\\core"},"description":"Called whenever the State changes or resets.\r\rIt resets the world.x and world.y coordinates back to zero,\rthen resets the Camera.","kind":"function","name":"stateChange","access":"protected","memberof":"Phaser.World","longname":"Phaser.World#stateChange","scope":"instance","___s":true},{"meta":{"range":[3458,3922],"filename":"World.js","lineno":94,"path":"src\\core"},"description":"Updates the size of this world and sets World.x/y to the given values\rThe Camera bounds and Physics bounds (if set) are also updated to match the new World bounds.","kind":"function","name":"setBounds","params":[{"type":{"names":["number"]},"description":"Top left most corner of the world.","name":"x"},{"type":{"names":["number"]},"description":"Top left most corner of the world.","name":"y"},{"type":{"names":["number"]},"description":"New width of the game world in pixels.","name":"width"},{"type":{"names":["number"]},"description":"New height of the game world in pixels.","name":"height"}],"memberof":"Phaser.World","longname":"Phaser.World#setBounds","scope":"instance","___s":true},{"meta":{"range":[4436,4730],"filename":"World.js","lineno":125,"path":"src\\core"},"description":"Updates the size of this world. Note that this doesn't modify the world x/y coordinates, just the width and height.","kind":"function","name":"resize","params":[{"type":{"names":["number"]},"description":"New width of the game world in pixels.","name":"width"},{"type":{"names":["number"]},"description":"New height of the game world in pixels.","name":"height"}],"memberof":"Phaser.World","longname":"Phaser.World#resize","scope":"instance","___s":true},{"meta":{"range":[5306,5373],"filename":"World.js","lineno":158,"path":"src\\core"},"description":"Destroyer of worlds.","kind":"function","name":"shutdown","memberof":"Phaser.World","longname":"Phaser.World#shutdown","scope":"instance","___s":true},{"meta":{"range":[5544,6833],"filename":"World.js","lineno":170,"path":"src\\core"},"description":"This will take the given game object and check if its x/y coordinates fall outside of the world bounds.\rIf they do it will reposition the object to the opposite side of the world, creating a wrap-around effect.\rIf sprite has a P2 body then the body (sprite.body) should be passed as first parameter to the function.\r\rPlease understand there are limitations to this method. For example if you have scaled the World\rthen objects won't always be re-positioned correctly, and you'll need to employ your own wrapping function.","kind":"function","name":"wrap","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.TileSprite","Phaser.Text"]},"description":"The object you wish to wrap around the world bounds.","name":"sprite"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Extra padding added equally to the sprite.x and y coordinates before checking if within the world bounds. Ignored if useBounds is true.","name":"padding"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If useBounds is false wrap checks the object.x/y coordinates. If true it does a more accurate bounds check, which is more expensive.","name":"useBounds"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If horizontal is false, wrap will not wrap the object.x coordinates horizontally.","name":"horizontal"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If vertical is false, wrap will not wrap the object.y coordinates vertically.","name":"vertical"}],"memberof":"Phaser.World","longname":"Phaser.World#wrap","scope":"instance","___s":true},{"meta":{"range":[8475,8656],"filename":"World.js","lineno":243,"path":"src\\core"},"name":"width","properties":[{"type":{"names":["number"]},"description":"Gets or sets the current width of the game world. The world can never be smaller than the game (canvas) dimensions.","name":"width"}],"memberof":"Phaser.World","longname":"Phaser.World#width","scope":"instance","kind":"member","___s":true},{"meta":{"range":[9037,9221],"filename":"World.js","lineno":268,"path":"src\\core"},"name":"height","properties":[{"type":{"names":["number"]},"description":"Gets or sets the current height of the game world. The world can never be smaller than the game (canvas) dimensions.","name":"height"}],"memberof":"Phaser.World","longname":"Phaser.World#height","scope":"instance","kind":"member","___s":true},{"meta":{"range":[9608,9758],"filename":"World.js","lineno":293,"path":"src\\core"},"name":"centerX","properties":[{"type":{"names":["number"]},"description":"Gets the X position corresponding to the center point of the world.","name":"centerX"}],"readonly":true,"memberof":"Phaser.World","longname":"Phaser.World#centerX","scope":"instance","kind":"member","overrides":"Phaser.Group#centerX","___s":true},{"meta":{"range":[9917,10067],"filename":"World.js","lineno":306,"path":"src\\core"},"name":"centerY","properties":[{"type":{"names":["number"]},"description":"Gets the Y position corresponding to the center point of the world.","name":"centerY"}],"readonly":true,"memberof":"Phaser.World","longname":"Phaser.World#centerY","scope":"instance","kind":"member","overrides":"Phaser.Group#centerY","___s":true},{"meta":{"range":[10227,10401],"filename":"World.js","lineno":319,"path":"src\\core"},"name":"randomX","properties":[{"type":{"names":["number"]},"description":"Gets a random integer which is lesser than or equal to the current width of the game world.","name":"randomX"}],"readonly":true,"memberof":"Phaser.World","longname":"Phaser.World#randomX","scope":"instance","kind":"member","___s":true},{"meta":{"range":[10781,10956],"filename":"World.js","lineno":341,"path":"src\\core"},"name":"randomY","properties":[{"type":{"names":["number"]},"description":"Gets a random integer which is lesser than or equal to the current height of the game world.","name":"randomY"}],"readonly":true,"memberof":"Phaser.World","longname":"Phaser.World#randomY","scope":"instance","kind":"member","___s":true},{"meta":{"range":[1533,7508],"filename":"BitmapData.js","lineno":24,"path":"src\\gameobjects"},"description":"A BitmapData object contains a Canvas element to which you can draw anything you like via normal Canvas context operations.\rA single BitmapData can be used as the texture for one or many Images / Sprites. \rSo if you need to dynamically create a Sprite texture then they are a good choice.\r\rImportant note: Every BitmapData creates its own Canvas element. Because BitmapData's are now Game Objects themselves, and don't\rlive on the display list, they are NOT automatically cleared when you change State. Therefore you _must_ call BitmapData.destroy\rin your State's shutdown method if you wish to free-up the resources the BitmapData used, it will not happen for you.","kind":"class","classdesc":"Phaser.BitmapData","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["string"]},"description":"Internal Phaser reference key for the BitmapData.","name":"key"},{"type":{"names":["number"]},"optional":true,"defaultvalue":256,"description":"The width of the BitmapData in pixels. If undefined or zero it's set to a default value.","name":"width"},{"type":{"names":["number"]},"optional":true,"defaultvalue":256,"description":"The height of the BitmapData in pixels. If undefined or zero it's set to a default value.","name":"height"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"When this BitmapData generates its internal canvas to use for rendering, it will get the canvas from the CanvasPool if false, or create its own if true.","name":"skipPool"}],"name":"BitmapData","longname":"Phaser.BitmapData","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1890,1906],"filename":"BitmapData.js","lineno":33,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"game","longname":"Phaser.BitmapData#game","kind":"member","memberof":"Phaser.BitmapData","scope":"instance","___s":true},{"meta":{"range":[2021,2035],"filename":"BitmapData.js","lineno":38,"path":"src\\gameobjects"},"properties":[{"type":{"names":["string"]},"description":"The key of the BitmapData in the Cache, if stored there.","name":"key"}],"name":"key","longname":"Phaser.BitmapData#key","kind":"member","memberof":"Phaser.BitmapData","scope":"instance","___s":true},{"meta":{"range":[2134,2152],"filename":"BitmapData.js","lineno":43,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The width of the BitmapData in pixels.","name":"width"}],"name":"width","longname":"Phaser.BitmapData#width","kind":"member","memberof":"Phaser.BitmapData","scope":"instance","___s":true},{"meta":{"range":[2253,2273],"filename":"BitmapData.js","lineno":48,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The height of the BitmapData in pixels.","name":"height"}],"name":"height","longname":"Phaser.BitmapData#height","kind":"member","memberof":"Phaser.BitmapData","scope":"instance","___s":true},{"meta":{"range":[2404,2475],"filename":"BitmapData.js","lineno":54,"path":"src\\gameobjects"},"properties":[{"type":{"names":["HTMLCanvasElement"]},"description":"The canvas to which this BitmapData draws.","name":"canvas"}],"name":"canvas","longname":"Phaser.BitmapData#canvas","kind":"member","memberof":"Phaser.BitmapData","scope":"instance","___s":true},{"meta":{"range":[2601,2661],"filename":"BitmapData.js","lineno":60,"path":"src\\gameobjects"},"properties":[{"type":{"names":["CanvasRenderingContext2D"]},"description":"The 2d context of the canvas.","name":"context"}],"name":"context","longname":"Phaser.BitmapData#context","kind":"member","memberof":"Phaser.BitmapData","scope":"instance","___s":true},{"meta":{"range":[2772,2795],"filename":"BitmapData.js","lineno":65,"path":"src\\gameobjects"},"properties":[{"type":{"names":["CanvasRenderingContext2D"]},"description":"A reference to BitmapData.context.","name":"ctx"}],"name":"ctx","longname":"Phaser.BitmapData#ctx","kind":"member","memberof":"Phaser.BitmapData","scope":"instance","___s":true},{"meta":{"range":[2919,3070],"filename":"BitmapData.js","lineno":70,"path":"src\\gameobjects"},"properties":[{"type":{"names":["string"]},"description":"The context property needed for smoothing this Canvas.","name":"smoothProperty"}],"name":"smoothProperty","longname":"Phaser.BitmapData#smoothProperty","kind":"member","memberof":"Phaser.BitmapData","scope":"instance","___s":true},{"meta":{"range":[3445,3508],"filename":"BitmapData.js","lineno":77,"path":"src\\gameobjects"},"properties":[{"type":{"names":["ImageData"]},"description":"The context image data.\rPlease note that a call to BitmapData.draw() or BitmapData.copy() does not update immediately this property for performance reason. Use BitmapData.update() to do so.\rThis property is updated automatically after the first game loop, according to the dirty flag property.","name":"imageData"}],"name":"imageData","longname":"Phaser.BitmapData#imageData","kind":"member","memberof":"Phaser.BitmapData","scope":"instance","___s":true},{"meta":{"range":[3742,3758],"filename":"BitmapData.js","lineno":84,"path":"src\\gameobjects"},"description":"A Uint8ClampedArray view into BitmapData.buffer.\rNote that this is unavailable in some browsers (such as Epic Browser due to its security restrictions)","properties":[{"type":{"names":["Uint8ClampedArray"]},"name":"data"}],"name":"data","longname":"Phaser.BitmapData#data","kind":"member","memberof":"Phaser.BitmapData","scope":"instance","___s":true},{"meta":{"range":[3951,3969],"filename":"BitmapData.js","lineno":94,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Uint32Array"]},"description":"An Uint32Array view into BitmapData.buffer.","name":"pixels"}],"name":"pixels","longname":"Phaser.BitmapData#pixels","kind":"member","memberof":"Phaser.BitmapData","scope":"instance","___s":true},{"meta":{"range":[4749,4801],"filename":"BitmapData.js","lineno":124,"path":"src\\gameobjects"},"properties":[{"type":{"names":["PIXI.BaseTexture"]},"description":"The PIXI.BaseTexture.","name":"baseTexture"}],"name":"baseTexture","longname":"Phaser.BitmapData#baseTexture","kind":"member","memberof":"Phaser.BitmapData","scope":"instance","___s":true},{"meta":{"range":[4903,4952],"filename":"BitmapData.js","lineno":130,"path":"src\\gameobjects"},"properties":[{"type":{"names":["PIXI.Texture"]},"description":"The PIXI.Texture.","name":"texture"}],"name":"texture","longname":"Phaser.BitmapData#texture","kind":"member","memberof":"Phaser.BitmapData","scope":"instance","___s":true},{"meta":{"range":[5086,5125],"filename":"BitmapData.js","lineno":135,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.FrameData"]},"description":"The FrameData container this BitmapData uses for rendering.","name":"frameData"}],"name":"frameData","longname":"Phaser.BitmapData#frameData","kind":"member","memberof":"Phaser.BitmapData","scope":"instance","___s":true},{"meta":{"range":[5260,5359],"filename":"BitmapData.js","lineno":141,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.Frame"]},"description":"The Frame this BitmapData uses for rendering.","name":"textureFrame"}],"name":"textureFrame","longname":"Phaser.BitmapData#textureFrame","kind":"member","memberof":"Phaser.BitmapData","scope":"instance","___s":true},{"meta":{"range":[5512,5541],"filename":"BitmapData.js","lineno":149,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"name":"type","longname":"Phaser.BitmapData#type","kind":"member","memberof":"Phaser.BitmapData","scope":"instance","___s":true},{"meta":{"range":[5736,5769],"filename":"BitmapData.js","lineno":154,"path":"src\\gameobjects"},"properties":[{"type":{"names":["boolean"]},"description":"If disableTextureUpload is true this BitmapData will never send its image data to the GPU when its dirty flag is true.","name":"disableTextureUpload"}],"name":"disableTextureUpload","longname":"Phaser.BitmapData#disableTextureUpload","kind":"member","memberof":"Phaser.BitmapData","scope":"instance","___s":true},{"meta":{"range":[5876,5894],"filename":"BitmapData.js","lineno":159,"path":"src\\gameobjects"},"properties":[{"type":{"names":["boolean"]},"description":"If dirty this BitmapData will be re-rendered.","name":"dirty"}],"name":"dirty","longname":"Phaser.BitmapData#dirty","kind":"member","memberof":"Phaser.BitmapData","scope":"instance","___s":true},{"meta":{"range":[7552,8234],"filename":"BitmapData.js","lineno":240,"path":"src\\gameobjects"},"description":"Shifts the contents of this BitmapData by the distances given.\r\rThe image will wrap-around the edges on all sides if the wrap argument is true (the default).","kind":"function","name":"move","params":[{"type":{"names":["integer"]},"description":"The amount of pixels to horizontally shift the canvas by. Use a negative value to shift to the left, positive to the right.","name":"x"},{"type":{"names":["integer"]},"description":"The amount of pixels to vertically shift the canvas by. Use a negative value to shift up, positive to shift down.","name":"y"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Wrap the content of the BitmapData.","name":"wrap"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#move","scope":"instance","___s":true},{"meta":{"range":[8471,8996],"filename":"BitmapData.js","lineno":267,"path":"src\\gameobjects"},"description":"Shifts the contents of this BitmapData horizontally.\r\rThe image will wrap-around the sides if the wrap argument is true (the default).","kind":"function","name":"moveH","params":[{"type":{"names":["integer"]},"description":"The amount of pixels to horizontally shift the canvas by. Use a negative value to shift to the left, positive to the right.","name":"distance"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Wrap the content of the BitmapData.","name":"wrap"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#moveH","scope":"instance","___s":true},{"meta":{"range":[10352,10865],"filename":"BitmapData.js","lineno":330,"path":"src\\gameobjects"},"description":"Shifts the contents of this BitmapData vertically.\r\rThe image will wrap-around the sides if the wrap argument is true (the default).","kind":"function","name":"moveV","params":[{"type":{"names":["integer"]},"description":"The amount of pixels to vertically shift the canvas by. Use a negative value to shift up, positive to shift down.","name":"distance"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Wrap the content of the BitmapData.","name":"wrap"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#moveV","scope":"instance","___s":true},{"meta":{"range":[12195,12623],"filename":"BitmapData.js","lineno":393,"path":"src\\gameobjects"},"description":"Updates the given objects so that they use this BitmapData as their texture.\rThis will replace any texture they will currently have set.","kind":"function","name":"add","params":[{"type":{"names":["Phaser.Sprite","Array.<Phaser.Sprite>","Phaser.Image","Array.<Phaser.Image>"]},"description":"Either a single Sprite/Image or an Array of Sprites/Images.","name":"object"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#add","scope":"instance","___s":true},{"meta":{"range":[13048,13904],"filename":"BitmapData.js","lineno":422,"path":"src\\gameobjects"},"description":"Takes the given Game Object, resizes this BitmapData to match it and then draws it into this BitmapDatas canvas, ready for further processing.\rThe source game object is not modified by this operation.\rIf the source object uses a texture as part of a Texture Atlas or Sprite Sheet, only the current frame will be used for sizing.\rIf a string is given it will assume it's a cache key and look in Phaser.Cache for an image key matching the string.","kind":"function","name":"load","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapData","Image","HTMLCanvasElement","string"]},"description":"The object that will be used to populate this BitmapData. If you give a string it will try and find the Image in the Game.Cache first.","name":"source"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#load","scope":"instance","___s":true},{"meta":{"range":[14455,15330],"filename":"BitmapData.js","lineno":463,"path":"src\\gameobjects"},"description":"Clears the BitmapData context using a clearRect.\r\rYou can optionally define the area to clear.\rIf the arguments are left empty it will clear the entire canvas.\r\rYou may need to call BitmapData.update after this in order to clear out the pixel data, \rbut Phaser will not do this automatically for you.","kind":"function","name":"clear","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of the top-left of the area to clear.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of the top-left of the area to clear.","name":"y"},{"type":{"names":["number"]},"optional":true,"description":"The width of the area to clear. If undefined it will use BitmapData.width.","name":"width"},{"type":{"names":["number"]},"optional":true,"description":"The height of the area to clear. If undefined it will use BitmapData.height.","name":"height"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#clear","scope":"instance","___s":true},{"meta":{"range":[14336,14447],"filename":"BitmapData.js","lineno":457,"path":"src\\gameobjects"},"description":"Clears the BitmapData context using a clearRect.","kind":"function","name":"cls","memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#cls","scope":"instance","___s":true},{"meta":{"range":[15706,16187],"filename":"BitmapData.js","lineno":494,"path":"src\\gameobjects"},"description":"Fills the BitmapData with the given color.","kind":"function","name":"fill","params":[{"type":{"names":["number"]},"description":"The red color value, between 0 and 0xFF (255).","name":"r"},{"type":{"names":["number"]},"description":"The green color value, between 0 and 0xFF (255).","name":"g"},{"type":{"names":["number"]},"description":"The blue color value, between 0 and 0xFF (255).","name":"b"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The alpha color value, between 0 and 1.","name":"a"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#fill","scope":"instance","___s":true},{"meta":{"range":[16483,17380],"filename":"BitmapData.js","lineno":516,"path":"src\\gameobjects"},"description":"Creates a new Image element by converting this BitmapDatas canvas into a dataURL.\r\rThe image is then stored in the image Cache using the key given.\r\rFinally a PIXI.Texture is created based on the image and returned.\r\rYou can apply the texture to a sprite or any other supporting object by using either the\rkey or the texture. First call generateTexture:\r\r`var texture = bitmapdata.generateTexture('ball');`\r\rThen you can either apply the texture to a sprite:\r\r`game.add.sprite(0, 0, texture);`\r\ror by using the string based key:\r\r`game.add.sprite(0, 0, 'ball');`","kind":"function","name":"generateTexture","params":[{"type":{"names":["string"]},"description":"The key which will be used to store the image in the Cache.","name":"key"}],"returns":[{"type":{"names":["PIXI.Texture"]},"description":"The newly generated texture."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#generateTexture","scope":"instance","___s":true},{"meta":{"range":[17641,18014],"filename":"BitmapData.js","lineno":552,"path":"src\\gameobjects"},"description":"Resizes the BitmapData. This changes the size of the underlying canvas and refreshes the buffer.","kind":"function","name":"resize","params":[{"type":{"names":["integer"]},"description":"The new width of the BitmapData.","name":"width"},{"type":{"names":["integer"]},"description":"The new height of the BitmapData.","name":"height"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#resize","scope":"instance","___s":true},{"meta":{"range":[18948,19764],"filename":"BitmapData.js","lineno":596,"path":"src\\gameobjects"},"description":"This re-creates the BitmapData.imageData from the current context.\rIt then re-builds the ArrayBuffer, the data Uint8ClampedArray reference and the pixels Int32Array.\rIf not given the dimensions defaults to the full size of the context.\r\rWarning: This is a very expensive operation, so use it sparingly.","kind":"function","name":"update","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of the top-left of the image data area to grab from.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of the top-left of the image data area to grab from.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The width of the image data area.","name":"width"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The height of the image data area.","name":"height"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#update","scope":"instance","___s":true},{"meta":{"range":[20719,22343],"filename":"BitmapData.js","lineno":642,"path":"src\\gameobjects"},"description":"Scans through the area specified in this BitmapData and sends a color object for every pixel to the given callback.\rThe callback will be sent a color object with 6 properties: `{ r: number, g: number, b: number, a: number, color: number, rgba: string }`.\rWhere r, g, b and a are integers between 0 and 255 representing the color component values for red, green, blue and alpha.\rThe `color` property is an Int32 of the full color. Note the endianess of this will change per system.\rThe `rgba` property is a CSS style rgba() string which can be used with context.fillStyle calls, among others.\rThe callback will also be sent the pixels x and y coordinates respectively.\rThe callback must return either `false`, in which case no change will be made to the pixel, or a new color object.\rIf a new color object is returned the pixel will be set to the r, g, b and a color values given within it.","kind":"function","name":"processPixelRGB","params":[{"type":{"names":["function"]},"description":"The callback that will be sent each pixel color object to be processed.","name":"callback"},{"type":{"names":["object"]},"description":"The context under which the callback will be called.","name":"callbackContext"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of the top-left of the region to process from.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of the top-left of the region to process from.","name":"y"},{"type":{"names":["number"]},"optional":true,"description":"The width of the region to process.","name":"width"},{"type":{"names":["number"]},"optional":true,"description":"The height of the region to process.","name":"height"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#processPixelRGB","scope":"instance","___s":true},{"meta":{"range":[23532,24832],"filename":"BitmapData.js","lineno":700,"path":"src\\gameobjects"},"description":"Scans through the area specified in this BitmapData and sends the color for every pixel to the given callback along with its x and y coordinates.\rWhatever value the callback returns is set as the new color for that pixel, unless it returns the same color, in which case it's skipped.\rNote that the format of the color received will be different depending on if the system is big or little endian.\rIt is expected that your callback will deal with endianess. If you'd rather Phaser did it then use processPixelRGB instead.\rThe callback will also be sent the pixels x and y coordinates respectively.","kind":"function","name":"processPixel","params":[{"type":{"names":["function"]},"description":"The callback that will be sent each pixel color to be processed.","name":"callback"},{"type":{"names":["object"]},"description":"The context under which the callback will be called.","name":"callbackContext"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of the top-left of the region to process from.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of the top-left of the region to process from.","name":"y"},{"type":{"names":["number"]},"optional":true,"description":"The width of the region to process.","name":"width"},{"type":{"names":["number"]},"optional":true,"description":"The height of the region to process.","name":"height"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#processPixel","scope":"instance","___s":true},{"meta":{"range":[25870,27133],"filename":"BitmapData.js","lineno":754,"path":"src\\gameobjects"},"description":"Replaces all pixels matching one color with another. The color values are given as two sets of RGBA values.\rAn optional region parameter controls if the replacement happens in just a specific area of the BitmapData or the entire thing.","kind":"function","name":"replaceRGB","params":[{"type":{"names":["number"]},"description":"The red color value to be replaced. Between 0 and 255.","name":"r1"},{"type":{"names":["number"]},"description":"The green color value to be replaced. Between 0 and 255.","name":"g1"},{"type":{"names":["number"]},"description":"The blue color value to be replaced. Between 0 and 255.","name":"b1"},{"type":{"names":["number"]},"description":"The alpha color value to be replaced. Between 0 and 255.","name":"a1"},{"type":{"names":["number"]},"description":"The red color value that is the replacement color. Between 0 and 255.","name":"r2"},{"type":{"names":["number"]},"description":"The green color value that is the replacement color. Between 0 and 255.","name":"g2"},{"type":{"names":["number"]},"description":"The blue color value that is the replacement color. Between 0 and 255.","name":"b2"},{"type":{"names":["number"]},"description":"The alpha color value that is the replacement color. Between 0 and 255.","name":"a2"},{"type":{"names":["Phaser.Rectangle"]},"optional":true,"description":"The area to perform the search over. If not given it will replace over the whole BitmapData.","name":"region"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#replaceRGB","scope":"instance","___s":true},{"meta":{"range":[28025,28639],"filename":"BitmapData.js","lineno":804,"path":"src\\gameobjects"},"description":"Sets the hue, saturation and lightness values on every pixel in the given region, or the whole BitmapData if no region was specified.","kind":"function","name":"setHSL","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"The hue, in the range 0 - 1.","name":"h"},{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"The saturation, in the range 0 - 1.","name":"s"},{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"The lightness, in the range 0 - 1.","name":"l"},{"type":{"names":["Phaser.Rectangle"]},"optional":true,"description":"The area to perform the operation on. If not given it will run over the whole BitmapData.","name":"region"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#setHSL","scope":"instance","___s":true},{"meta":{"range":[29919,30771],"filename":"BitmapData.js","lineno":865,"path":"src\\gameobjects"},"description":"Shifts any or all of the hue, saturation and lightness values on every pixel in the given region, or the whole BitmapData if no region was specified.\rShifting will add the given value onto the current h, s and l values, not replace them.\rThe hue is wrapped to keep it within the range 0 to 1. Saturation and lightness are clamped to not exceed 1.","kind":"function","name":"shiftHSL","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"The amount to shift the hue by.","name":"h"},{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"The amount to shift the saturation by.","name":"s"},{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"The amount to shift the lightness by.","name":"l"},{"type":{"names":["Phaser.Rectangle"]},"optional":true,"description":"The area to perform the operation on. If not given it will run over the whole BitmapData.","name":"region"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#shiftHSL","scope":"instance","___s":true},{"meta":{"range":[32197,33100],"filename":"BitmapData.js","lineno":928,"path":"src\\gameobjects"},"description":"Sets the color of the given pixel to the specified red, green, blue and alpha values.","kind":"function","name":"setPixel32","params":[{"type":{"names":["number"]},"description":"The x coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData.","name":"y"},{"type":{"names":["number"]},"description":"The red color value, between 0 and 0xFF (255).","name":"red"},{"type":{"names":["number"]},"description":"The green color value, between 0 and 0xFF (255).","name":"green"},{"type":{"names":["number"]},"description":"The blue color value, between 0 and 0xFF (255).","name":"blue"},{"type":{"names":["number"]},"description":"The alpha color value, between 0 and 0xFF (255).","name":"alpha"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If `true` the context.putImageData will be called and the dirty flag set.","name":"immediate"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#setPixel32","scope":"instance","___s":true},{"meta":{"range":[33859,34673],"filename":"BitmapData.js","lineno":967,"path":"src\\gameobjects"},"description":"Sets the color of the given pixel to the specified red, green and blue values.","kind":"function","name":"setPixel","params":[{"type":{"names":["number"]},"description":"The x coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData.","name":"y"},{"type":{"names":["number"]},"description":"The red color value, between 0 and 0xFF (255).","name":"red"},{"type":{"names":["number"]},"description":"The green color value, between 0 and 0xFF (255).","name":"green"},{"type":{"names":["number"]},"description":"The blue color value, between 0 and 0xFF (255).","name":"blue"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If `true` the context.putImageData will be called and the dirty flag set.","name":"immediate"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#setPixel","scope":"instance","___s":true},{"meta":{"range":[34828,35746],"filename":"BitmapData.js","lineno":985,"path":"src\\gameobjects"},"description":"Get the color of a specific pixel in the context into a color object.\rIf you have drawn anything to the BitmapData since it was created you must call BitmapData.update to refresh the array buffer,\rotherwise this may return out of date color values, or worse - throw a run-time error as it tries to access an array element that doesn't exist.","kind":"function","name":"getPixel","params":[{"type":{"names":["number"]},"description":"The x coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData.","name":"y"},{"type":{"names":["object"]},"optional":true,"description":"An object into which 4 properties will be created: r, g, b and a. If not provided a new object will be created.","name":"out"}],"returns":[{"type":{"names":["object"]},"description":"An object with the red, green, blue and alpha values set in the r, g, b and a properties."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#getPixel","scope":"instance","___s":true},{"meta":{"range":[36135,36974],"filename":"BitmapData.js","lineno":1016,"path":"src\\gameobjects"},"description":"Get the color of a specific pixel including its alpha value.\rIf you have drawn anything to the BitmapData since it was created you must call BitmapData.update to refresh the array buffer,\rotherwise this may return out of date color values, or worse - throw a run-time error as it tries to access an array element that doesn't exist.\rNote that on little-endian systems the format is 0xAABBGGRR and on big-endian the format is 0xRRGGBBAA.","kind":"function","name":"getPixel32","params":[{"type":{"names":["number"]},"description":"The x coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData.","name":"y"}],"returns":[{"type":{"names":["number"]},"description":"A native color value integer (format: 0xAARRGGBB)"}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#getPixel32","scope":"instance","___s":true},{"meta":{"range":[37174,38282],"filename":"BitmapData.js","lineno":1036,"path":"src\\gameobjects"},"description":"Get the color of a specific pixel including its alpha value as a color object containing r,g,b,a and rgba properties.\rIf you have drawn anything to the BitmapData since it was created you must call BitmapData.update to refresh the array buffer,\rotherwise this may return out of date color values, or worse - throw a run-time error as it tries to access an array element that doesn't exist.","kind":"function","name":"getPixelRGB","params":[{"type":{"names":["number"]},"description":"The x coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the pixel to be set. Must lay within the dimensions of this BitmapData.","name":"y"},{"type":{"names":["object"]},"optional":true,"description":"An object into which 3 properties will be created: r, g and b. If not provided a new object will be created.","name":"out"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Also convert the rgb values into hsl?","name":"hsl"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Also convert the rgb values into hsv?","name":"hsv"}],"returns":[{"type":{"names":["object"]},"description":"An object with the red, green and blue values set in the r, g and b properties."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#getPixelRGB","scope":"instance","___s":true},{"meta":{"range":[38433,38747],"filename":"BitmapData.js","lineno":1055,"path":"src\\gameobjects"},"description":"Gets all the pixels from the region specified by the given Rectangle object.","kind":"function","name":"getPixels","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle region to get.","name":"rect"}],"returns":[{"type":{"names":["ImageData"]},"description":"Returns a ImageData object containing a Uint8ClampedArray data property."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#getPixels","scope":"instance","___s":true},{"meta":{"range":[38885,39764],"filename":"BitmapData.js","lineno":1068,"path":"src\\gameobjects"},"description":"Scans the BitmapData, pixel by pixel, until it encounters a pixel that isn't transparent (i.e. has an alpha value > 0).\rIt then stops scanning and returns an object containing the color of the pixel in r, g and b properties and the location in the x and y properties.\r\rThe direction parameter controls from which direction it should start the scan:\r\r0 = top to bottom\r1 = bottom to top\r2 = left to right\r3 = right to left","kind":"function","name":"getFirstPixel","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The direction in which to scan for the first pixel. 0 = top to bottom, 1 = bottom to top, 2 = left to right and 3 = right to left.","name":"direction"}],"returns":[{"type":{"names":["object"]},"description":"Returns an object containing the color of the pixel in the `r`, `g` and `b` properties and the location in the `x` and `y` properties."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#getFirstPixel","scope":"instance","___s":true},{"meta":{"range":[41315,41916],"filename":"BitmapData.js","lineno":1151,"path":"src\\gameobjects"},"description":"Scans the BitmapData and calculates the bounds. This is a rectangle that defines the extent of all non-transparent pixels.\rThe rectangle returned will extend from the top-left of the image to the bottom-right, excluding transparent pixels.","kind":"function","name":"getBounds","params":[{"type":{"names":["Phaser.Rectangle"]},"optional":true,"description":"If provided this Rectangle object will be populated with the bounds, otherwise a new object will be created.","name":"rect"}],"returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"A Rectangle whose dimensions encompass the full extent of non-transparent pixels in this BitmapData."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#getBounds","scope":"instance","___s":true},{"meta":{"range":[42465,43436],"filename":"BitmapData.js","lineno":1179,"path":"src\\gameobjects"},"description":"Creates a new Phaser.Image object, assigns this BitmapData to be its texture, adds it to the world then returns it.","kind":"function","name":"addToWorld","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate to place the Image at.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate to place the Image at.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Set the x anchor point of the Image. A value between 0 and 1, where 0 is the top-left and 1 is bottom-right.","name":"anchorX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Set the y anchor point of the Image. A value between 0 and 1, where 0 is the top-left and 1 is bottom-right.","name":"anchorY"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The horizontal scale factor of the Image. A value of 1 means no scaling. 2 would be twice the size, and so on.","name":"scaleX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The vertical scale factor of the Image. A value of 1 means no scaling. 2 would be twice the size, and so on.","name":"scaleY"}],"returns":[{"type":{"names":["Phaser.Image"]},"description":"The newly added Image object."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#addToWorld","scope":"instance","___s":true},{"meta":{"range":[43757,47670],"filename":"BitmapData.js","lineno":1205,"path":"src\\gameobjects"},"description":"Copies a rectangular area from the source object to this BitmapData. If you give `null` as the source it will copy from itself.\r\rYou can optionally resize, translate, rotate, scale, alpha or blend as it's drawn.\r\rAll rotation, scaling and drawing takes place around the regions center point by default, but can be changed with the anchor parameters.\r\rNote that the source image can also be this BitmapData, which can create some interesting effects.\r\rThis method has a lot of parameters for maximum control.\rYou can use the more friendly methods like `copyRect` and `draw` to avoid having to remember them all.\r\rYou may prefer to use `copyTransform` if you're simply trying to draw a Sprite to this BitmapData,\rand don't wish to translate, scale or rotate it from its original values.","kind":"function","name":"copy","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapData","Phaser.RenderTexture","Image","HTMLCanvasElement","string"]},"optional":true,"description":"The source to copy from. If you give a string it will try and find the Image in the Game.Cache first. This is quite expensive so try to provide the image itself.","name":"source"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate representing the top-left of the region to copy from the source image.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate representing the top-left of the region to copy from the source image.","name":"y"},{"type":{"names":["number"]},"optional":true,"description":"The width of the region to copy from the source image. If not specified it will use the full source image width.","name":"width"},{"type":{"names":["number"]},"optional":true,"description":"The height of the region to copy from the source image. If not specified it will use the full source image height.","name":"height"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to translate to before drawing. If not specified it will default to the `x` parameter. If `null` and `source` is a Display Object, it will default to `source.x`.","name":"tx"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to translate to before drawing. If not specified it will default to the `y` parameter. If `null` and `source` is a Display Object, it will default to `source.y`.","name":"ty"},{"type":{"names":["number"]},"optional":true,"description":"The new width of the block being copied. If not specified it will default to the `width` parameter.","name":"newWidth"},{"type":{"names":["number"]},"optional":true,"description":"The new height of the block being copied. If not specified it will default to the `height` parameter.","name":"newHeight"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The angle in radians to rotate the block to before drawing. Rotation takes place around the center by default, but can be changed with the `anchor` parameters.","name":"rotate"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The anchor point around which the block is rotated and scaled. A value between 0 and 1, where 0 is the top-left and 1 is bottom-right.","name":"anchorX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The anchor point around which the block is rotated and scaled. A value between 0 and 1, where 0 is the top-left and 1 is bottom-right.","name":"anchorY"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The horizontal scale factor of the block. A value of 1 means no scaling. 2 would be twice the size, and so on.","name":"scaleX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The vertical scale factor of the block. A value of 1 means no scaling. 2 would be twice the size, and so on.","name":"scaleY"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The alpha that will be set on the context before drawing. A value between 0 (fully transparent) and 1, opaque.","name":"alpha"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"The composite blend mode that will be used when drawing. The default is no blend mode at all. This is a Canvas globalCompositeOperation value such as 'lighter' or 'xor'.","name":"blendMode"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the x and y values be rounded to integers before drawing? This prevents anti-aliasing in some instances.","name":"roundPx"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#copy","scope":"instance","___s":true},{"meta":{"range":[53549,54568],"filename":"BitmapData.js","lineno":1426,"path":"src\\gameobjects"},"description":"Draws the given `source` Game Object to this BitmapData, using its `worldTransform` property to set the\rposition, scale and rotation of where it is drawn. This function is used internally by `drawGroup`.\rIt takes the objects tint and scale mode into consideration before drawing.\r\rYou can optionally specify Blend Mode and Round Pixels arguments.","kind":"function","name":"copyTransform","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapData","Phaser.BitmapText"]},"optional":true,"description":"The Game Object to draw.","name":"source"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"The composite blend mode that will be used when drawing. The default is no blend mode at all. This is a Canvas globalCompositeOperation value such as 'lighter' or 'xor'.","name":"blendMode"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the x and y values be rounded to integers before drawing? This prevents anti-aliasing in some instances.","name":"roundPx"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#copyTransform","scope":"instance","___s":true},{"meta":{"range":[57258,58490],"filename":"BitmapData.js","lineno":1534,"path":"src\\gameobjects"},"description":"Copies the area defined by the Rectangle parameter from the source image to this BitmapData at the given location.","kind":"function","name":"copyRect","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapData","Phaser.RenderTexture","Image","string"]},"description":"The Image to copy from. If you give a string it will try and find the Image in the Game.Cache.","name":"source"},{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle region to copy from the source image.","name":"area"},{"type":{"names":["number"]},"description":"The destination x coordinate to copy the image to.","name":"x"},{"type":{"names":["number"]},"description":"The destination y coordinate to copy the image to.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The alpha that will be set on the context before drawing. A value between 0 (fully transparent) and 1, opaque.","name":"alpha"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"The composite blend mode that will be used when drawing. The default is no blend mode at all. This is a Canvas globalCompositeOperation value such as 'lighter' or 'xor'.","name":"blendMode"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the x and y values be rounded to integers before drawing? This prevents anti-aliasing in some instances.","name":"roundPx"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#copyRect","scope":"instance","___s":true},{"meta":{"range":[58733,60692],"filename":"BitmapData.js","lineno":1553,"path":"src\\gameobjects"},"description":"Draws the given Phaser.Sprite, Phaser.Image or Phaser.Text to this BitmapData at the coordinates specified.\rYou can use the optional width and height values to 'stretch' the sprite as it is drawn. This uses drawImage stretching, not scaling.\r\rThe children will be drawn at their `x` and `y` world space coordinates. If this is outside the bounds of the BitmapData they won't be visible.\rWhen drawing it will take into account the rotation, scale, scaleMode, alpha and tint values.\r\rNote: You should ensure that at least 1 full update has taken place before calling this, \rotherwise the objects are likely to render incorrectly, if at all.\rYou can trigger an update yourself by calling `stage.updateTransform()` before calling `draw`.","kind":"function","name":"draw","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.RenderTexture"]},"description":"The Sprite, Image or Text object to draw onto this BitmapData.","name":"source"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate to translate to before drawing. If not specified it will default to `source.x`.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate to translate to before drawing. If not specified it will default to `source.y`.","name":"y"},{"type":{"names":["number"]},"optional":true,"description":"The new width of the Sprite being copied. If not specified it will default to `source.width`.","name":"width"},{"type":{"names":["number"]},"optional":true,"description":"The new height of the Sprite being copied. If not specified it will default to `source.height`.","name":"height"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"The composite blend mode that will be used when drawing. The default is no blend mode at all. This is a Canvas globalCompositeOperation value such as 'lighter' or 'xor'.","name":"blendMode"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the x and y values be rounded to integers before drawing? This prevents anti-aliasing in some instances.","name":"roundPx"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#draw","scope":"instance","___s":true},{"meta":{"range":[61053,62552],"filename":"BitmapData.js","lineno":1581,"path":"src\\gameobjects"},"description":"Draws the immediate children of a Phaser.Group to this BitmapData.\r\rIt's perfectly valid to pass in `game.world` as the Group, and it will iterate through the entire display list.\r\rChildren are drawn _only_ if they have their `exists` property set to `true`, and have image, or RenderTexture, based Textures.\r\rThe children will be drawn at their `x` and `y` world space coordinates. If this is outside the bounds of the BitmapData they won't be visible.\rWhen drawing it will take into account the rotation, scale, scaleMode, alpha and tint values.\r\rNote: You should ensure that at least 1 full update has taken place before calling this, \rotherwise the objects are likely to render incorrectly, if at all.\rYou can trigger an update yourself by calling `stage.updateTransform()` before calling `drawGroup`.","kind":"function","name":"drawGroup","params":[{"type":{"names":["Phaser.Group"]},"description":"The Group to draw onto this BitmapData. Can also be Phaser.World.","name":"group"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"The composite blend mode that will be used when drawing. The default is no blend mode at all. This is a Canvas globalCompositeOperation value such as 'lighter' or 'xor'.","name":"blendMode"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the x and y values be rounded to integers before drawing? This prevents anti-aliasing in some instances.","name":"roundPx"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#drawGroup","scope":"instance","___s":true},{"meta":{"range":[64186,66035],"filename":"BitmapData.js","lineno":1648,"path":"src\\gameobjects"},"description":"Draws the Game Object or Group to this BitmapData and then recursively iterates through all of its children.\r\rIf a child has an `exists` property then it (and its children) will be only be drawn if exists is `true`.\r\rThe children will be drawn at their `x` and `y` world space coordinates. If this is outside the bounds of the BitmapData \rthey won't be drawn. Depending on your requirements you may need to resize the BitmapData in advance to match the \rbounds of the top-level Game Object.\r\rWhen drawing it will take into account the child's world rotation, scale and alpha values.\r\rIt's perfectly valid to pass in `game.world` as the parent object, and it will iterate through the entire display list.\r\rNote: If you are trying to grab your entire game at the start of a State then you should ensure that at least 1 full update\rhas taken place before doing so, otherwise all of the objects will render with incorrect positions and scales. You can \rtrigger an update yourself by calling `stage.updateTransform()` before calling `drawFull`.","kind":"function","name":"drawFull","params":[{"type":{"names":["Phaser.World","Phaser.Group","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText"]},"description":"The Game Object to draw onto this BitmapData and then recursively draw all of its children.","name":"parent"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"The composite blend mode that will be used when drawing. The default is no blend mode at all. This is a Canvas globalCompositeOperation value such as 'lighter' or 'xor'.","name":"blendMode"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the x and y values be rounded to integers before drawing? This prevents anti-aliasing in some instances.","name":"roundPx"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#drawFull","scope":"instance","___s":true},{"meta":{"range":[67285,68194],"filename":"BitmapData.js","lineno":1706,"path":"src\\gameobjects"},"description":"Sets the shadow properties of this BitmapDatas context which will affect all draw operations made to it.\rYou can cancel an existing shadow by calling this method and passing no parameters.\rNote: At the time of writing (October 2014) Chrome still doesn't support shadowBlur used with drawImage.","kind":"function","name":"shadow","params":[{"type":{"names":["string"]},"description":"The color of the shadow, given in a CSS format, i.e. `#000000` or `rgba(0,0,0,1)`. If `null` or `undefined` the shadow will be reset.","name":"color"},{"type":{"names":["number"]},"optional":true,"defaultvalue":5,"description":"The amount the shadow will be blurred by. Low values = a crisp shadow, high values = a softer shadow.","name":"blur"},{"type":{"names":["number"]},"optional":true,"defaultvalue":10,"description":"The horizontal offset of the shadow in pixels.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":10,"description":"The vertical offset of the shadow in pixels.","name":"y"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#shadow","scope":"instance","___s":true},{"meta":{"range":[68646,69798],"filename":"BitmapData.js","lineno":1738,"path":"src\\gameobjects"},"description":"Draws the image onto this BitmapData using an image as an alpha mask.","kind":"function","name":"alphaMask","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapData","Image","HTMLCanvasElement","string"]},"description":"The source to copy from. If you give a string it will try and find the Image in the Game.Cache first. This is quite expensive so try to provide the image itself.","name":"source"},{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapData","Image","HTMLCanvasElement","string"]},"optional":true,"description":"The object to be used as the mask. If you give a string it will try and find the Image in the Game.Cache first. This is quite expensive so try to provide the image itself. If you don't provide a mask it will use this BitmapData as the mask.","name":"mask"},{"type":{"names":["Phaser.Rectangle"]},"optional":true,"description":"A Rectangle where x/y define the coordinates to draw the Source image to and width/height define the size.","name":"sourceRect"},{"type":{"names":["Phaser.Rectangle"]},"optional":true,"description":"A Rectangle where x/y define the coordinates to draw the Mask image to and width/height define the size.","name":"maskRect"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#alphaMask","scope":"instance","___s":true},{"meta":{"range":[70452,72392],"filename":"BitmapData.js","lineno":1772,"path":"src\\gameobjects"},"description":"Scans this BitmapData for all pixels matching the given r,g,b values and then draws them into the given destination BitmapData.\rThe original BitmapData remains unchanged.\rThe destination BitmapData must be large enough to receive all of the pixels that are scanned unless the 'resize' parameter is true.\rAlthough the destination BitmapData is returned from this method, it's actually modified directly in place, meaning this call is perfectly valid:\r`picture.extract(mask, r, g, b)`\rYou can specify optional r2, g2, b2 color values. If given the pixel written to the destination bitmap will be of the r2, g2, b2 color.\rIf not given it will be written as the same color it was extracted. You can provide one or more alternative colors, allowing you to tint\rthe color during extraction.","kind":"function","name":"extract","params":[{"type":{"names":["Phaser.BitmapData"]},"description":"The BitmapData that the extracted pixels will be drawn to.","name":"destination"},{"type":{"names":["number"]},"description":"The red color component, in the range 0 - 255.","name":"r"},{"type":{"names":["number"]},"description":"The green color component, in the range 0 - 255.","name":"g"},{"type":{"names":["number"]},"description":"The blue color component, in the range 0 - 255.","name":"b"},{"type":{"names":["number"]},"optional":true,"defaultvalue":255,"description":"The alpha color component, in the range 0 - 255 that the new pixel will be drawn at.","name":"a"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the destination BitmapData be resized to match this one before the pixels are copied?","name":"resize"},{"type":{"names":["number"]},"optional":true,"description":"An alternative red color component to be written to the destination, in the range 0 - 255.","name":"r2"},{"type":{"names":["number"]},"optional":true,"description":"An alternative green color component to be written to the destination, in the range 0 - 255.","name":"g2"},{"type":{"names":["number"]},"optional":true,"description":"An alternative blue color component to be written to the destination, in the range 0 - 255.","name":"b2"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"The BitmapData that the extract pixels were drawn on."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#extract","scope":"instance","___s":true},{"meta":{"range":[73285,73922],"filename":"BitmapData.js","lineno":1825,"path":"src\\gameobjects"},"description":"Draws a filled Rectangle to the BitmapData at the given x, y coordinates and width / height in size.","kind":"function","name":"rect","params":[{"type":{"names":["number"]},"description":"The x coordinate of the top-left of the Rectangle.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the top-left of the Rectangle.","name":"y"},{"type":{"names":["number"]},"description":"The width of the Rectangle.","name":"width"},{"type":{"names":["number"]},"description":"The height of the Rectangle.","name":"height"},{"type":{"names":["string"]},"optional":true,"description":"If set the context fillStyle will be set to this value before the rect is drawn.","name":"fillStyle"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#rect","scope":"instance","___s":true},{"meta":{"range":[74194,75162],"filename":"BitmapData.js","lineno":1849,"path":"src\\gameobjects"},"description":"Draws text to the BitmapData in the given font and color.\rThe default font is 14px Courier, so useful for quickly drawing debug text.\rIf you need to do a lot of font work to this BitmapData we'd recommend implementing your own text draw method.","kind":"function","name":"text","params":[{"type":{"names":["string"]},"description":"The text to write to the BitmapData.","name":"text"},{"type":{"names":["number"]},"description":"The x coordinate of the top-left of the text string.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the top-left of the text string.","name":"y"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'14px Courier'","description":"The font. This is passed directly to Context.font, so anything that can support, this can.","name":"font"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgb(255,255,255)'","description":"The color the text will be drawn in.","name":"color"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Draw a single pixel black shadow below the text (offset by text.x/y + 1)","name":"shadow"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#text","scope":"instance","___s":true},{"meta":{"range":[75873,76530],"filename":"BitmapData.js","lineno":1891,"path":"src\\gameobjects"},"description":"Draws a filled Circle to the BitmapData at the given x, y coordinates and radius in size.","kind":"function","name":"circle","params":[{"type":{"names":["number"]},"description":"The x coordinate to draw the Circle at. This is the center of the circle.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to draw the Circle at. This is the center of the circle.","name":"y"},{"type":{"names":["number"]},"description":"The radius of the Circle in pixels. The radius is half the diameter.","name":"radius"},{"type":{"names":["string"]},"optional":true,"description":"If set the context fillStyle will be set to this value before the circle is drawn.","name":"fillStyle"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#circle","scope":"instance","___s":true},{"meta":{"range":[76891,77528],"filename":"BitmapData.js","lineno":1920,"path":"src\\gameobjects"},"description":"Draws a line between the coordinates given in the color and thickness specified.","kind":"function","name":"line","params":[{"type":{"names":["number"]},"description":"The x coordinate to start the line from.","name":"x1"},{"type":{"names":["number"]},"description":"The y coordinate to start the line from.","name":"y1"},{"type":{"names":["number"]},"description":"The x coordinate to draw the line to.","name":"x2"},{"type":{"names":["number"]},"description":"The y coordinate to draw the line to.","name":"y2"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'#fff'","description":"The stroke color that the line will be drawn in.","name":"color"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The line thickness.","name":"width"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#line","scope":"instance","___s":true},{"meta":{"range":[77970,78610],"filename":"BitmapData.js","lineno":1954,"path":"src\\gameobjects"},"description":"Takes the given Line object and image and renders it to this BitmapData as a repeating texture line.","kind":"function","name":"textureLine","params":[{"type":{"names":["Phaser.Line"]},"description":"A Phaser.Line object that will be used to plot the start and end of the line.","name":"line"},{"type":{"names":["string","Image"]},"description":"The key of an image in the Phaser.Cache to use as the texture for this line, or an actual Image.","name":"image"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'repeat-x'","description":"The pattern repeat mode to use when drawing the line. Either `repeat`, `repeat-x` or `no-repeat`.","name":"repeat"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#textureLine","scope":"instance","___s":true},{"meta":{"range":[79607,80084],"filename":"BitmapData.js","lineno":2004,"path":"src\\gameobjects"},"description":"If the game is running in WebGL this will push the texture up to the GPU if it's dirty.\rThis is called automatically if the BitmapData is being used by a Sprite, otherwise you need to remember to call it in your render function.\rIf you wish to suppress this functionality set BitmapData.disableTextureUpload to `true`.","kind":"function","name":"render","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#render","scope":"instance","___s":true},{"meta":{"range":[80304,80466],"filename":"BitmapData.js","lineno":2024,"path":"src\\gameobjects"},"description":"Destroys this BitmapData and puts the canvas it was using back into the canvas pool for re-use.","kind":"function","name":"destroy","memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#destroy","scope":"instance","___s":true},{"meta":{"range":[80629,80838],"filename":"BitmapData.js","lineno":2039,"path":"src\\gameobjects"},"description":"Resets the blend mode (effectively sets it to 'source-over')","kind":"function","name":"blendReset","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendReset","scope":"instance","___s":true},{"meta":{"range":[80945,81135],"filename":"BitmapData.js","lineno":2052,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'source-over'","kind":"function","name":"blendSourceOver","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendSourceOver","scope":"instance","___s":true},{"meta":{"range":[81247,81433],"filename":"BitmapData.js","lineno":2065,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'source-in'","kind":"function","name":"blendSourceIn","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendSourceIn","scope":"instance","___s":true},{"meta":{"range":[81541,81729],"filename":"BitmapData.js","lineno":2078,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'source-out'","kind":"function","name":"blendSourceOut","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendSourceOut","scope":"instance","___s":true},{"meta":{"range":[81839,82029],"filename":"BitmapData.js","lineno":2091,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'source-atop'","kind":"function","name":"blendSourceAtop","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendSourceAtop","scope":"instance","___s":true},{"meta":{"range":[82141,82341],"filename":"BitmapData.js","lineno":2104,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'destination-over'","kind":"function","name":"blendDestinationOver","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendDestinationOver","scope":"instance","___s":true},{"meta":{"range":[82463,82659],"filename":"BitmapData.js","lineno":2117,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'destination-in'","kind":"function","name":"blendDestinationIn","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendDestinationIn","scope":"instance","___s":true},{"meta":{"range":[82777,82975],"filename":"BitmapData.js","lineno":2130,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'destination-out'","kind":"function","name":"blendDestinationOut","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendDestinationOut","scope":"instance","___s":true},{"meta":{"range":[83095,83295],"filename":"BitmapData.js","lineno":2143,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'destination-atop'","kind":"function","name":"blendDestinationAtop","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendDestinationAtop","scope":"instance","___s":true},{"meta":{"range":[83417,83592],"filename":"BitmapData.js","lineno":2156,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'xor'","kind":"function","name":"blendXor","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendXor","scope":"instance","___s":true},{"meta":{"range":[83689,83868],"filename":"BitmapData.js","lineno":2169,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'lighter'","kind":"function","name":"blendAdd","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendAdd","scope":"instance","___s":true},{"meta":{"range":[83969,84154],"filename":"BitmapData.js","lineno":2182,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'multiply'","kind":"function","name":"blendMultiply","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendMultiply","scope":"instance","___s":true},{"meta":{"range":[84261,84442],"filename":"BitmapData.js","lineno":2195,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'screen'","kind":"function","name":"blendScreen","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendScreen","scope":"instance","___s":true},{"meta":{"range":[84545,84728],"filename":"BitmapData.js","lineno":2208,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'overlay'","kind":"function","name":"blendOverlay","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendOverlay","scope":"instance","___s":true},{"meta":{"range":[84833,85014],"filename":"BitmapData.js","lineno":2221,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'darken'","kind":"function","name":"blendDarken","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendDarken","scope":"instance","___s":true},{"meta":{"range":[85117,85300],"filename":"BitmapData.js","lineno":2234,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'lighten'","kind":"function","name":"blendLighten","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendLighten","scope":"instance","___s":true},{"meta":{"range":[85405,85595],"filename":"BitmapData.js","lineno":2247,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'color-dodge'","kind":"function","name":"blendColorDodge","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendColorDodge","scope":"instance","___s":true},{"meta":{"range":[85707,85895],"filename":"BitmapData.js","lineno":2260,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'color-burn'","kind":"function","name":"blendColorBurn","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendColorBurn","scope":"instance","___s":true},{"meta":{"range":[86005,86193],"filename":"BitmapData.js","lineno":2273,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'hard-light'","kind":"function","name":"blendHardLight","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendHardLight","scope":"instance","___s":true},{"meta":{"range":[86303,86491],"filename":"BitmapData.js","lineno":2286,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'soft-light'","kind":"function","name":"blendSoftLight","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendSoftLight","scope":"instance","___s":true},{"meta":{"range":[86601,86790],"filename":"BitmapData.js","lineno":2299,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'difference'","kind":"function","name":"blendDifference","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendDifference","scope":"instance","___s":true},{"meta":{"range":[86901,87088],"filename":"BitmapData.js","lineno":2312,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'exclusion'","kind":"function","name":"blendExclusion","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendExclusion","scope":"instance","___s":true},{"meta":{"range":[87197,87372],"filename":"BitmapData.js","lineno":2325,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'hue'","kind":"function","name":"blendHue","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendHue","scope":"instance","___s":true},{"meta":{"range":[87469,87658],"filename":"BitmapData.js","lineno":2338,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'saturation'","kind":"function","name":"blendSaturation","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendSaturation","scope":"instance","___s":true},{"meta":{"range":[87769,87948],"filename":"BitmapData.js","lineno":2351,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'color'","kind":"function","name":"blendColor","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendColor","scope":"instance","___s":true},{"meta":{"range":[88049,88238],"filename":"BitmapData.js","lineno":2364,"path":"src\\gameobjects"},"description":"Sets the blend mode to 'luminosity'","kind":"function","name":"blendLuminosity","returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"This BitmapData object for method chaining."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData#blendLuminosity","scope":"instance","___s":true},{"meta":{"range":[89182,89743],"filename":"BitmapData.js","lineno":2419,"path":"src\\gameobjects"},"description":"Gets a JavaScript object that has 6 properties set that are used by BitmapData in a transform.","kind":"function","name":"getTransform","params":[{"type":{"names":["number"]},"description":"The x translate value.","name":"translateX"},{"type":{"names":["number"]},"description":"The y translate value.","name":"translateY"},{"type":{"names":["number"]},"description":"The scale x value.","name":"scaleX"},{"type":{"names":["number"]},"description":"The scale y value.","name":"scaleY"},{"type":{"names":["number"]},"description":"The skew x value.","name":"skewX"},{"type":{"names":["number"]},"description":"The skew y value.","name":"skewY"}],"returns":[{"type":{"names":["object"]},"description":"A JavaScript object containing all of the properties BitmapData needs for transforms."}],"memberof":"Phaser.BitmapData","longname":"Phaser.BitmapData.getTransform","scope":"static","___s":true},{"meta":{"range":[2947,5364],"filename":"BitmapText.js","lineno":54,"path":"src\\gameobjects"},"description":"BitmapText objects work by taking a texture file and an XML or JSON file that describes the font structure.\rIt then generates a new Sprite object for each letter of the text, proportionally spaced out and aligned to \rmatch the font structure.\r\rBitmapText objects are less flexible than Text objects, in that they have less features such as shadows, fills and the ability \rto use Web Fonts, however you trade this flexibility for rendering speed. You can also create visually compelling BitmapTexts by\rprocessing the font texture in an image editor, applying fills and any other effects required.\r\rTo create multi-line text insert \\r, \\n or \\r\\n escape codes into the text string.\r\rIf you are having performance issues due to the volume of sprites being rendered, and do not require the text to be constantly\rupdating, you can use BitmapText.generateTexture to create a static texture from this BitmapText.\r\rTo create a BitmapText data files you can use:\r\rBMFont (Windows, free): http://www.angelcode.com/products/bmfont/\rGlyph Designer (OS X, commercial): http://www.71squared.com/en/glyphdesigner\rLittera (Web-based, free): http://kvazars.com/littera/\r\rFor most use cases it is recommended to use XML. If you wish to use JSON, the formatting should be equal to the result of\rconverting a valid XML file through the popular X2JS library. An online tool for conversion can be found here: http://codebeautify.org/xmltojson\r\rIf you were using an older version of Phaser (< 2.4) and using the DOMish parser hack, please remove this. It isn't required any longer.","kind":"class","classdesc":"Phaser.BitmapText","augments":["PIXI.DisplayObjectContainer","Phaser.Component.Core","Phaser.Component.Angle","Phaser.Component.AutoCull","Phaser.Component.Bounds","Phaser.Component.Destroy","Phaser.Component.FixedToCamera","Phaser.Component.InputEnabled","Phaser.Component.InWorld","Phaser.Component.LifeSpan","Phaser.Component.PhysicsBody","Phaser.Component.Reset"],"params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["number"]},"description":"X coordinate to display the BitmapText object at.","name":"x"},{"type":{"names":["number"]},"description":"Y coordinate to display the BitmapText object at.","name":"y"},{"type":{"names":["string"]},"description":"The key of the BitmapText as stored in Phaser.Cache.","name":"font"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"''","description":"The text that will be rendered. This can also be set later via BitmapText.text.","name":"text"},{"type":{"names":["number"]},"optional":true,"defaultvalue":32,"description":"The size the font will be rendered at in pixels.","name":"size"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'left'","description":"The alignment of multi-line text. Has no effect if there is only one line of text.","name":"align"}],"name":"BitmapText","longname":"Phaser.BitmapText","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[3306,3335],"filename":"BitmapText.js","lineno":69,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"readonly":true,"name":"type","longname":"Phaser.BitmapText#type","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","___s":true},{"meta":{"range":[3462,3494],"filename":"BitmapText.js","lineno":75,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const physics body type of this object.","name":"physicsType"}],"readonly":true,"name":"physicsType","longname":"Phaser.BitmapText#physicsType","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","___s":true},{"meta":{"range":[3664,3682],"filename":"BitmapText.js","lineno":81,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The width in pixels of the overall text area, taking into consideration multi-line text.","name":"textWidth"}],"readonly":true,"name":"textWidth","longname":"Phaser.BitmapText#textWidth","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","___s":true},{"meta":{"range":[3854,3873],"filename":"BitmapText.js","lineno":87,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The height in pixels of the overall text area, taking into consideration multi-line text.","name":"textHeight"}],"readonly":true,"name":"textHeight","longname":"Phaser.BitmapText#textHeight","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","___s":true},{"meta":{"range":[3977,4009],"filename":"BitmapText.js","lineno":92,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The anchor value of this BitmapText.","name":"anchor"}],"name":"anchor","longname":"Phaser.BitmapText#anchor","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","___s":true},{"meta":{"range":[5272,5290],"filename":"BitmapText.js","lineno":153,"path":"src\\gameobjects"},"properties":[{"type":{"names":["boolean"]},"description":"The dirty state of this object.","name":"dirty"}],"name":"dirty","longname":"Phaser.BitmapText#dirty","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","___s":true},{"meta":{"range":[6274,6499],"filename":"BitmapText.js","lineno":187,"path":"src\\gameobjects"},"description":"Automatically called by World.preUpdate.","kind":"function","memberof":"Phaser.BitmapText","returns":[{"type":{"names":["boolean"]},"description":"True if the BitmapText was rendered, otherwise false."}],"name":"preUpdate","longname":"Phaser.BitmapText#preUpdate","scope":"instance","___s":true},{"meta":{"range":[6504,6605],"filename":"BitmapText.js","lineno":198,"path":"src\\gameobjects"},"description":"Automatically called by World.preUpdate.","kind":"function","name":"postUpdate","memberof":"Phaser.BitmapText","longname":"Phaser.BitmapText#postUpdate","scope":"instance","overrides":"Phaser.Component.Core#postUpdate","___s":true},{"meta":{"range":[7061,7351],"filename":"BitmapText.js","lineno":217,"path":"src\\gameobjects"},"description":"The text to be displayed by this BitmapText object.\r\rIt's faster to use `BitmapText.text = string`, but this is kept for backwards compatibility.","kind":"function","name":"setText","params":[{"type":{"names":["string"]},"description":"The text to be displayed by this BitmapText object.","name":"text"}],"memberof":"Phaser.BitmapText","longname":"Phaser.BitmapText#setText","scope":"instance","___s":true},{"meta":{"range":[10367,10905],"filename":"BitmapText.js","lineno":312,"path":"src\\gameobjects"},"description":"Given a text string this will scan each character in the string to ensure it exists\rin the BitmapText font data. If it doesn't the character is removed, or replaced with the `replace` argument.\r\rIf no font data has been loaded at all this returns an empty string, as nothing can be rendered.","kind":"function","name":"cleanText","params":[{"type":{"names":["string"]},"description":"The text to parse.","name":"text"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"''","description":"The replacement string for any missing characters.","name":"replace"}],"returns":[{"type":{"names":["string"]},"description":"The cleaned text string."}],"memberof":"Phaser.BitmapText","longname":"Phaser.BitmapText#cleanText","scope":"instance","___s":true},{"meta":{"range":[14402,15098],"filename":"BitmapText.js","lineno":477,"path":"src\\gameobjects"},"description":"If a BitmapText changes from having a large number of characters to having very few characters it will cause lots of\rSprites to be retained in the BitmapText._glyphs array. Although they are not attached to the display list they\rstill take up memory while sat in the glyphs pool waiting to be re-used in the future.\r\rIf you know that the BitmapText will not grow any larger then you can purge out the excess glyphs from the pool \rby calling this method.\r\rCalling this doesn't prevent you from increasing the length of the text again in the future.","kind":"function","name":"purgeGlyphs","returns":[{"type":{"names":["integer"]},"description":"The amount of glyphs removed from the pool."}],"memberof":"Phaser.BitmapText","longname":"Phaser.BitmapText#purgeGlyphs","scope":"instance","___s":true},{"meta":{"range":[16032,16201],"filename":"BitmapText.js","lineno":535,"path":"src\\gameobjects"},"name":"align","properties":[{"type":{"names":["string"]},"description":"Alignment for multi-line text ('left', 'center' or 'right'), does not affect single lines of text.","name":"align"}],"memberof":"Phaser.BitmapText","longname":"Phaser.BitmapText#align","scope":"instance","kind":"member","___s":true},{"meta":{"range":[16567,16727],"filename":"BitmapText.js","lineno":557,"path":"src\\gameobjects"},"name":"tint","properties":[{"type":{"names":["number"]},"description":"The tint applied to the BitmapText. This is a hex value. Set to white to disable (0xFFFFFF)","name":"tint"}],"memberof":"Phaser.BitmapText","longname":"Phaser.BitmapText#tint","scope":"instance","kind":"member","___s":true},{"meta":{"range":[17024,17187],"filename":"BitmapText.js","lineno":579,"path":"src\\gameobjects"},"name":"font","properties":[{"type":{"names":["string"]},"description":"The font the text will be rendered in, i.e. 'Arial'. Must be loaded in the browser before use.","name":"font"}],"memberof":"Phaser.BitmapText","longname":"Phaser.BitmapText#font","scope":"instance","kind":"member","___s":true},{"meta":{"range":[17560,17668],"filename":"BitmapText.js","lineno":602,"path":"src\\gameobjects"},"name":"fontSize","properties":[{"type":{"names":["number"]},"description":"The size of the font in pixels.","name":"fontSize"}],"memberof":"Phaser.BitmapText","longname":"Phaser.BitmapText#fontSize","scope":"instance","kind":"member","___s":true},{"meta":{"range":[18034,18154],"filename":"BitmapText.js","lineno":626,"path":"src\\gameobjects"},"name":"text","properties":[{"type":{"names":["string"]},"description":"The text to be displayed by this BitmapText object.","name":"text"}],"memberof":"Phaser.BitmapText","longname":"Phaser.BitmapText#text","scope":"instance","kind":"member","___s":true},{"meta":{"range":[18468,18987],"filename":"BitmapText.js","lineno":648,"path":"src\\gameobjects"},"description":"The maximum display width of this BitmapText in pixels.\r\rIf BitmapText.text is longer than maxWidth then the lines will be automatically wrapped \rbased on the last whitespace character found in the line.\r\rIf no whitespace was found then no wrapping will take place and consequently the maxWidth value will not be honored.\r\rDisable maxWidth by setting the value to 0.","name":"maxWidth","properties":[{"type":{"names":["number"]},"description":"The maximum width of this BitmapText in pixels.","name":"maxWidth"}],"memberof":"Phaser.BitmapText","longname":"Phaser.BitmapText#maxWidth","scope":"instance","kind":"member","___s":true},{"meta":{"range":[19304,19588],"filename":"BitmapText.js","lineno":681,"path":"src\\gameobjects"},"description":"Enable or disable texture smoothing for this BitmapText.\r\rThe smoothing is applied to the BaseTexture of this font, which all letters of the text reference.\r\rSmoothing is enabled by default.","name":"smoothed","properties":[{"type":{"names":["boolean"]},"name":"smoothed"}],"memberof":"Phaser.BitmapText","longname":"Phaser.BitmapText#smoothed","scope":"instance","kind":"member","___s":true},{"meta":{"range":[1941,7424],"filename":"Button.js","lineno":35,"path":"src\\gameobjects"},"description":"Create a new `Button` object. A Button is a special type of Sprite that is set-up to handle Pointer events automatically.\r\rThe four states a Button responds to are:\r\r* 'Over' - when the Pointer moves over the Button. This is also commonly known as 'hover'.\r* 'Out' - when the Pointer that was previously over the Button moves out of it.\r* 'Down' - when the Pointer is pressed down on the Button. I.e. touched on a touch enabled device or clicked with the mouse.\r* 'Up' - when the Pointer that was pressed down on the Button is released again.\r\rA different texture/frame and activation sound can be specified for any of the states.\r\rFrames can be specified as either an integer (the frame ID) or a string (the frame name); the same values that can be used with a Sprite constructor.","kind":"class","classdesc":"Phaser.Button","augments":["Phaser.Image"],"params":[{"type":{"names":["Phaser.Game"]},"description":"Current game instance.","name":"game"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"X position of the Button.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Y position of the Button.","name":"y"},{"type":{"names":["string"]},"optional":true,"description":"The image key (in the Game.Cache) to use as the texture for this Button.","name":"key"},{"type":{"names":["function"]},"optional":true,"description":"The function to call when this Button is pressed.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the callback will be called (usually 'this').","name":"callbackContext"},{"type":{"names":["string","integer"]},"optional":true,"description":"The frame / frameName when the button is in the Over state.","name":"overFrame"},{"type":{"names":["string","integer"]},"optional":true,"description":"The frame / frameName when the button is in the Out state.","name":"outFrame"},{"type":{"names":["string","integer"]},"optional":true,"description":"The frame / frameName when the button is in the Down state.","name":"downFrame"},{"type":{"names":["string","integer"]},"optional":true,"description":"The frame / frameName when the button is in the Up state.","name":"upFrame"}],"name":"Button","longname":"Phaser.Button","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[2358,2383],"filename":"Button.js","lineno":50,"path":"src\\gameobjects"},"description":"The Phaser Object Type.","properties":[{"type":{"names":["number"]},"name":"type"}],"readonly":true,"name":"type","longname":"Phaser.Button#type","kind":"member","memberof":"Phaser.Button","scope":"instance","overrides":"Phaser.Image#type","___s":true},{"meta":{"range":[2510,2542],"filename":"Button.js","lineno":56,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const physics body type of this object.","name":"physicsType"}],"readonly":true,"name":"physicsType","longname":"Phaser.Button#physicsType","kind":"member","memberof":"Phaser.Button","scope":"instance","___s":true},{"meta":{"range":[3353,3376],"filename":"Button.js","lineno":91,"path":"src\\gameobjects"},"description":"The Sound to be played when this Buttons Over state is activated.","properties":[{"type":{"names":["Phaser.Sound","Phaser.AudioSprite","null"]},"name":"onOverSound"}],"readonly":true,"name":"onOverSound","longname":"Phaser.Button#onOverSound","kind":"member","memberof":"Phaser.Button","scope":"instance","___s":true},{"meta":{"range":[3558,3580],"filename":"Button.js","lineno":98,"path":"src\\gameobjects"},"description":"The Sound to be played when this Buttons Out state is activated.","properties":[{"type":{"names":["Phaser.Sound","Phaser.AudioSprite","null"]},"name":"onOutSound"}],"readonly":true,"name":"onOutSound","longname":"Phaser.Button#onOutSound","kind":"member","memberof":"Phaser.Button","scope":"instance","___s":true},{"meta":{"range":[3764,3787],"filename":"Button.js","lineno":105,"path":"src\\gameobjects"},"description":"The Sound to be played when this Buttons Down state is activated.","properties":[{"type":{"names":["Phaser.Sound","Phaser.AudioSprite","null"]},"name":"onDownSound"}],"readonly":true,"name":"onDownSound","longname":"Phaser.Button#onDownSound","kind":"member","memberof":"Phaser.Button","scope":"instance","___s":true},{"meta":{"range":[3967,3988],"filename":"Button.js","lineno":112,"path":"src\\gameobjects"},"description":"The Sound to be played when this Buttons Up state is activated.","properties":[{"type":{"names":["Phaser.Sound","Phaser.AudioSprite","null"]},"name":"onUpSound"}],"readonly":true,"name":"onUpSound","longname":"Phaser.Button#onUpSound","kind":"member","memberof":"Phaser.Button","scope":"instance","___s":true},{"meta":{"range":[4141,4168],"filename":"Button.js","lineno":119,"path":"src\\gameobjects"},"description":"The Sound Marker used in conjunction with the onOverSound.","properties":[{"type":{"names":["string"]},"name":"onOverSoundMarker"}],"readonly":true,"name":"onOverSoundMarker","longname":"Phaser.Button#onOverSoundMarker","kind":"member","memberof":"Phaser.Button","scope":"instance","___s":true},{"meta":{"range":[4319,4345],"filename":"Button.js","lineno":126,"path":"src\\gameobjects"},"description":"The Sound Marker used in conjunction with the onOutSound.","properties":[{"type":{"names":["string"]},"name":"onOutSoundMarker"}],"readonly":true,"name":"onOutSoundMarker","longname":"Phaser.Button#onOutSoundMarker","kind":"member","memberof":"Phaser.Button","scope":"instance","___s":true},{"meta":{"range":[4498,4525],"filename":"Button.js","lineno":133,"path":"src\\gameobjects"},"description":"The Sound Marker used in conjunction with the onDownSound.","properties":[{"type":{"names":["string"]},"name":"onDownSoundMarker"}],"readonly":true,"name":"onDownSoundMarker","longname":"Phaser.Button#onDownSoundMarker","kind":"member","memberof":"Phaser.Button","scope":"instance","___s":true},{"meta":{"range":[4674,4699],"filename":"Button.js","lineno":140,"path":"src\\gameobjects"},"description":"The Sound Marker used in conjunction with the onUpSound.","properties":[{"type":{"names":["string"]},"name":"onUpSoundMarker"}],"readonly":true,"name":"onUpSoundMarker","longname":"Phaser.Button#onUpSoundMarker","kind":"member","memberof":"Phaser.Button","scope":"instance","___s":true},{"meta":{"range":[4848,4886],"filename":"Button.js","lineno":146,"path":"src\\gameobjects"},"description":"The Signal (or event) dispatched when this Button is in an Over state.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onInputOver"}],"name":"onInputOver","longname":"Phaser.Button#onInputOver","kind":"member","memberof":"Phaser.Button","scope":"instance","___s":true},{"meta":{"range":[5033,5070],"filename":"Button.js","lineno":152,"path":"src\\gameobjects"},"description":"The Signal (or event) dispatched when this Button is in an Out state.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onInputOut"}],"name":"onInputOut","longname":"Phaser.Button#onInputOut","kind":"member","memberof":"Phaser.Button","scope":"instance","___s":true},{"meta":{"range":[5219,5257],"filename":"Button.js","lineno":158,"path":"src\\gameobjects"},"description":"The Signal (or event) dispatched when this Button is in an Down state.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onInputDown"}],"name":"onInputDown","longname":"Phaser.Button#onInputDown","kind":"member","memberof":"Phaser.Button","scope":"instance","___s":true},{"meta":{"range":[5402,5438],"filename":"Button.js","lineno":164,"path":"src\\gameobjects"},"description":"The Signal (or event) dispatched when this Button is in an Up state.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onInputUp"}],"name":"onInputUp","longname":"Phaser.Button#onInputUp","kind":"member","memberof":"Phaser.Button","scope":"instance","___s":true},{"meta":{"range":[5721,5748],"filename":"Button.js","lineno":173,"path":"src\\gameobjects"},"description":"If true then onOver events (such as onOverSound) will only be triggered if the Pointer object causing them was the Mouse Pointer.\rThe frame will still be changed as applicable.","properties":[{"type":{"names":["boolean"]},"name":"onOverMouseOnly"}],"defaultvalue":true,"name":"onOverMouseOnly","longname":"Phaser.Button#onOverMouseOnly","kind":"member","memberof":"Phaser.Button","scope":"instance","___s":true},{"meta":{"range":[6102,6158],"filename":"Button.js","lineno":182,"path":"src\\gameobjects"},"description":"Suppress the over event if a pointer was just released and it matches the given {@link Phaser.PointerModer pointer mode bitmask}.\r\rThis behavior was introduced in Phaser 2.3.1; this property is a soft-revert of the change.","properties":[{"type":{"names":["Phaser.PointerMode"]},"nullable":true,"defaultvalue":"ACTIVE_CURSOR","name":"justReleasedPreventsOver"}],"name":"justReleasedPreventsOver","longname":"Phaser.Button#justReleasedPreventsOver","kind":"member","memberof":"Phaser.Button","scope":"instance","___s":true},{"meta":{"range":[6346,6371],"filename":"Button.js","lineno":189,"path":"src\\gameobjects"},"description":"When true the the texture frame will not be automatically switched on up/down/over/out events.","properties":[{"type":{"names":["boolean"]},"name":"freezeFrames"}],"defaultvalue":false,"name":"freezeFrames","longname":"Phaser.Button#freezeFrames","kind":"member","memberof":"Phaser.Button","scope":"instance","___s":true},{"meta":{"range":[6715,6736],"filename":"Button.js","lineno":199,"path":"src\\gameobjects"},"description":"When the Button is touched / clicked and then released you can force it to enter a state of \"out\" instead of \"up\".\r\rThis can also accept a {@link Phaser.PointerModer pointer mode bitmask} for more refined control.","properties":[{"type":{"names":["boolean","Phaser.PointerMode"]},"defaultvalue":false,"name":"forceOut"}],"defaultvalue":false,"name":"forceOut","longname":"Phaser.Button#forceOut","kind":"member","memberof":"Phaser.Button","scope":"instance","___s":true},{"meta":{"range":[7736,7831],"filename":"Button.js","lineno":233,"path":"src\\gameobjects"},"description":"Clears all of the frames set on this Button.","kind":"function","name":"clearFrames","memberof":"Phaser.Button","longname":"Phaser.Button#clearFrames","scope":"instance","___s":true},{"meta":{"range":[7941,8061],"filename":"Button.js","lineno":244,"path":"src\\gameobjects"},"description":"Called when this Button is removed from the World.","kind":"function","name":"removedFromWorld","access":"protected","memberof":"Phaser.Button","longname":"Phaser.Button#removedFromWorld","scope":"instance","___s":true},{"meta":{"range":[9713,10426],"filename":"Button.js","lineno":320,"path":"src\\gameobjects"},"description":"Used to manually set the frames that will be used for the different states of the Button.\r\rFrames can be specified as either an integer (the frame ID) or a string (the frame name); these are the same values that can be used with a Sprite constructor.","kind":"function","name":"setFrames","access":"public","params":[{"type":{"names":["string","integer"]},"optional":true,"description":"The frame / frameName when the button is in the Over state.","name":"overFrame"},{"type":{"names":["string","integer"]},"optional":true,"description":"The frame / frameName when the button is in the Out state.","name":"outFrame"},{"type":{"names":["string","integer"]},"optional":true,"description":"The frame / frameName when the button is in the Down state.","name":"downFrame"},{"type":{"names":["string","integer"]},"optional":true,"description":"The frame / frameName when the button is in the Up state.","name":"upFrame"}],"memberof":"Phaser.Button","longname":"Phaser.Button#setFrames","scope":"instance","___s":true},{"meta":{"range":[12147,13131],"filename":"Button.js","lineno":396,"path":"src\\gameobjects"},"description":"Sets the sounds to be played whenever this Button is interacted with. Sounds can be either full Sound objects, or markers pointing to a section of a Sound object.\rThe most common forms of sounds are 'hover' effects and 'click' effects, which is why the order of the parameters is overSound then downSound.\r\rCall this function with no parameters to reset all sounds on this Button.","kind":"function","name":"setSounds","access":"public","params":[{"type":{"names":["Phaser.Sound","Phaser.AudioSprite"]},"optional":true,"description":"Over Button Sound.","name":"overSound"},{"type":{"names":["string"]},"optional":true,"description":"Over Button Sound Marker.","name":"overMarker"},{"type":{"names":["Phaser.Sound","Phaser.AudioSprite"]},"optional":true,"description":"Down Button Sound.","name":"downSound"},{"type":{"names":["string"]},"optional":true,"description":"Down Button Sound Marker.","name":"downMarker"},{"type":{"names":["Phaser.Sound","Phaser.AudioSprite"]},"optional":true,"description":"Out Button Sound.","name":"outSound"},{"type":{"names":["string"]},"optional":true,"description":"Out Button Sound Marker.","name":"outMarker"},{"type":{"names":["Phaser.Sound","Phaser.AudioSprite"]},"optional":true,"description":"Up Button Sound.","name":"upSound"},{"type":{"names":["string"]},"optional":true,"description":"Up Button Sound Marker.","name":"upMarker"}],"memberof":"Phaser.Button","longname":"Phaser.Button#setSounds","scope":"instance","___s":true},{"meta":{"range":[13509,13796],"filename":"Button.js","lineno":422,"path":"src\\gameobjects"},"description":"The Sound to be played when a Pointer moves over this Button.","kind":"function","name":"setOverSound","access":"public","params":[{"type":{"names":["Phaser.Sound","Phaser.AudioSprite"]},"description":"The Sound that will be played.","name":"sound"},{"type":{"names":["string"]},"optional":true,"description":"A Sound Marker that will be used in the playback.","name":"marker"}],"memberof":"Phaser.Button","longname":"Phaser.Button#setOverSound","scope":"instance","___s":true},{"meta":{"range":[13927,14215],"filename":"Button.js","lineno":436,"path":"src\\gameobjects"},"description":"The Sound to be played when a Pointer moves out of this Button.","kind":"function","name":"setOutSound","access":"public","params":[{"type":{"names":["Phaser.Sound","Phaser.AudioSprite"]},"description":"The Sound that will be played.","name":"sound"},{"type":{"names":["string"]},"optional":true,"description":"A Sound Marker that will be used in the playback.","name":"marker"}],"memberof":"Phaser.Button","longname":"Phaser.Button#setOutSound","scope":"instance","___s":true},{"meta":{"range":[14344,14636],"filename":"Button.js","lineno":450,"path":"src\\gameobjects"},"description":"The Sound to be played when a Pointer presses down on this Button.","kind":"function","name":"setDownSound","access":"public","params":[{"type":{"names":["Phaser.Sound","Phaser.AudioSprite"]},"description":"The Sound that will be played.","name":"sound"},{"type":{"names":["string"]},"optional":true,"description":"A Sound Marker that will be used in the playback.","name":"marker"}],"memberof":"Phaser.Button","longname":"Phaser.Button#setDownSound","scope":"instance","___s":true},{"meta":{"range":[14767,15079],"filename":"Button.js","lineno":464,"path":"src\\gameobjects"},"description":"The Sound to be played when a Pointer has pressed down and is released from this Button.","kind":"function","name":"setUpSound","access":"public","params":[{"type":{"names":["Phaser.Sound","Phaser.AudioSprite"]},"description":"The Sound that will be played.","name":"sound"},{"type":{"names":["string"]},"optional":true,"description":"A Sound Marker that will be used in the playback.","name":"marker"}],"memberof":"Phaser.Button","longname":"Phaser.Button#setUpSound","scope":"instance","___s":true},{"meta":{"range":[15206,15472],"filename":"Button.js","lineno":478,"path":"src\\gameobjects"},"description":"Internal function that handles input events.","kind":"function","name":"onInputOverHandler","access":"protected","params":[{"type":{"names":["Phaser.Button"]},"description":"The Button that the event occurred on.","name":"sprite"},{"type":{"names":["Phaser.Pointer"]},"description":"The Pointer that activated the Button.","name":"pointer"}],"memberof":"Phaser.Button","longname":"Phaser.Button#onInputOverHandler","scope":"instance","___s":true},{"meta":{"range":[16057,16322],"filename":"Button.js","lineno":511,"path":"src\\gameobjects"},"description":"Internal function that handles input events.","kind":"function","name":"onInputOutHandler","access":"protected","params":[{"type":{"names":["Phaser.Button"]},"description":"The Button that the event occurred on.","name":"sprite"},{"type":{"names":["Phaser.Pointer"]},"description":"The Pointer that activated the Button.","name":"pointer"}],"memberof":"Phaser.Button","longname":"Phaser.Button#onInputOutHandler","scope":"instance","___s":true},{"meta":{"range":[16576,16842],"filename":"Button.js","lineno":531,"path":"src\\gameobjects"},"description":"Internal function that handles input events.","kind":"function","name":"onInputDownHandler","access":"protected","params":[{"type":{"names":["Phaser.Button"]},"description":"The Button that the event occurred on.","name":"sprite"},{"type":{"names":["Phaser.Pointer"]},"description":"The Pointer that activated the Button.","name":"pointer"}],"memberof":"Phaser.Button","longname":"Phaser.Button#onInputDownHandler","scope":"instance","___s":true},{"meta":{"range":[17101,17365],"filename":"Button.js","lineno":551,"path":"src\\gameobjects"},"description":"Internal function that handles input events.","kind":"function","name":"onInputUpHandler","access":"protected","params":[{"type":{"names":["Phaser.Button"]},"description":"The Button that the event occurred on.","name":"sprite"},{"type":{"names":["Phaser.Pointer"]},"description":"The Pointer that activated the Button.","name":"pointer"}],"memberof":"Phaser.Button","longname":"Phaser.Button#onInputUpHandler","scope":"instance","___s":true},{"meta":{"range":[331,370],"filename":"Angle.js","lineno":12,"path":"src\\gameobjects\\components"},"description":"The Angle Component provides access to an `angle` property; the rotation of a Game Object in degrees.","kind":"class","name":"Angle","longname":"Phaser.Component.Angle","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[1110,1382],"filename":"Angle.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"The angle property is the rotation of the Game Object in *degrees* from its original orientation.\r\rValues from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\r\rValues outside this range are added to or subtracted from 360 to obtain a value within the range. \rFor example, the statement player.angle = 450 is the same as player.angle = 90.\r\rIf you wish to work in radians instead of degrees you can use the property `rotation` instead. \rWorking in radians is slightly faster as it doesn't have to perform any calculations.","properties":[{"type":{"names":["number"]},"name":"angle"}],"name":"angle","longname":"Phaser.Component.Angle#angle","kind":"member","memberof":"Phaser.Component.Angle","scope":"instance","___s":true},{"meta":{"range":[335,378],"filename":"Animation.js","lineno":12,"path":"src\\gameobjects\\components"},"description":"The Animation Component provides a `play` method, which is a proxy to the `AnimationManager.play` method.","kind":"class","name":"Animation","longname":"Phaser.Component.Animation","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[1545,1745],"filename":"Animation.js","lineno":31,"path":"src\\gameobjects\\components"},"description":"Plays an Animation.\r\rThe animation should have previously been created via `animations.add`.\r\rIf the animation is already playing calling this again won't do anything.\rIf you need to reset an already running animation do so directly on the Animation object itself or via `AnimationManager.stop`.","kind":"function","params":[{"type":{"names":["string"]},"description":"The name of the animation to be played, e.g. \"fire\", \"walk\", \"jump\". Must have been previously created via 'AnimationManager.add'.","name":"name"},{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"The framerate to play the animation at. The speed is given in frames per second. If not provided the previously set frameRate of the Animation is used.","name":"frameRate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the animation be looped after playback. If not provided the previously set loop value of the Animation is used.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set to true when the animation completes (only happens if loop=false) the parent Sprite will be killed.","name":"killOnComplete"}],"returns":[{"type":{"names":["Phaser.Animation"]},"description":"A reference to playing Animation."}],"name":"play","longname":"Phaser.Component.Animation#play","memberof":"Phaser.Component.Animation","scope":"instance","___s":true},{"meta":{"range":[399,441],"filename":"AutoCull.js","lineno":13,"path":"src\\gameobjects\\components"},"description":"The AutoCull Component is responsible for providing methods that check if a Game Object is within the bounds of the World Camera.\rIt is used by the InWorld component.","kind":"class","name":"AutoCull","longname":"Phaser.Component.AutoCull","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[1129,1144],"filename":"AutoCull.js","lineno":28,"path":"src\\gameobjects\\components"},"description":"A Game Object with `autoCull` set to true will check its bounds against the World Camera every frame.\rIf it is not intersecting the Camera bounds at any point then it has its `renderable` property set to `false`.\rThis keeps the Game Object alive and still processing updates, but forces it to skip the render step entirely.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"autoCull"}],"defaultvalue":false,"name":"autoCull","longname":"Phaser.Component.AutoCull#autoCull","kind":"member","memberof":"Phaser.Component.AutoCull","scope":"instance","___s":true},{"meta":{"range":[1402,1809],"filename":"AutoCull.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds intersect with the Game Camera bounds.\rReturns `true` if they do, otherwise `false` if fully outside of the Cameras bounds.","properties":[{"type":{"names":["boolean"]},"name":"inCamera"}],"readonly":true,"name":"inCamera","longname":"Phaser.Component.AutoCull#inCamera","kind":"member","memberof":"Phaser.Component.AutoCull","scope":"instance","___s":true},{"meta":{"range":[312,352],"filename":"Bounds.js","lineno":12,"path":"src\\gameobjects\\components"},"description":"The Bounds component contains properties related to the bounds of the Game Object.","kind":"class","name":"Bounds","longname":"Phaser.Component.Bounds","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[661,773],"filename":"Bounds.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its x coordinate.\rThis is the same as `width * anchor.x`.\rIt will only be > 0 if anchor.x is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetX"}],"readonly":true,"name":"offsetX","longname":"Phaser.Component.Bounds#offsetX","kind":"member","memberof":"Phaser.Component.Bounds","scope":"instance","___s":true},{"meta":{"range":[1042,1155],"filename":"Bounds.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its y coordinate.\rThis is the same as `height * anchor.y`.\rIt will only be > 0 if anchor.y is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetY"}],"readonly":true,"name":"offsetY","longname":"Phaser.Component.Bounds#offsetY","kind":"member","memberof":"Phaser.Component.Bounds","scope":"instance","___s":true},{"meta":{"range":[1331,1579],"filename":"Bounds.js","lineno":58,"path":"src\\gameobjects\\components"},"description":"The center x coordinate of the Game Object.\rThis is the same as `(x - offsetX) + (width / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerX"}],"name":"centerX","longname":"Phaser.Component.Bounds#centerX","kind":"member","memberof":"Phaser.Component.Bounds","scope":"instance","___s":true},{"meta":{"range":[1756,2006],"filename":"Bounds.js","lineno":80,"path":"src\\gameobjects\\components"},"description":"The center y coordinate of the Game Object.\rThis is the same as `(y - offsetY) + (height / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerY"}],"name":"centerY","longname":"Phaser.Component.Bounds#centerY","kind":"member","memberof":"Phaser.Component.Bounds","scope":"instance","___s":true},{"meta":{"range":[2159,2358],"filename":"Bounds.js","lineno":102,"path":"src\\gameobjects\\components"},"description":"The left coordinate of the Game Object.\rThis is the same as `x - offsetX`.","properties":[{"type":{"names":["number"]},"name":"left"}],"name":"left","longname":"Phaser.Component.Bounds#left","kind":"member","memberof":"Phaser.Component.Bounds","scope":"instance","___s":true},{"meta":{"range":[2521,2751],"filename":"Bounds.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The right coordinate of the Game Object.\rThis is the same as `x + width - offsetX`.","properties":[{"type":{"names":["number"]},"name":"right"}],"name":"right","longname":"Phaser.Component.Bounds#right","kind":"member","memberof":"Phaser.Component.Bounds","scope":"instance","___s":true},{"meta":{"range":[2900,3098],"filename":"Bounds.js","lineno":146,"path":"src\\gameobjects\\components"},"description":"The y coordinate of the Game Object.\rThis is the same as `y - offsetY`.","properties":[{"type":{"names":["number"]},"name":"top"}],"name":"top","longname":"Phaser.Component.Bounds#top","kind":"member","memberof":"Phaser.Component.Bounds","scope":"instance","___s":true},{"meta":{"range":[3262,3495],"filename":"Bounds.js","lineno":168,"path":"src\\gameobjects\\components"},"description":"The sum of the y and height properties.\rThis is the same as `y + height - offsetY`.","properties":[{"type":{"names":["number"]},"name":"bottom"}],"name":"bottom","longname":"Phaser.Component.Bounds#bottom","kind":"member","memberof":"Phaser.Component.Bounds","scope":"instance","___s":true},{"meta":{"range":[6346,8224],"filename":"Bounds.js","lineno":223,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object within another Game Object, or Rectangle, known as the\r'container', to one of 9 possible positions.\r\rThe container must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe container. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, \r`Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, \r`Phaser.BOTTOM_CENTER` and `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rcontainer, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignIn(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the containers bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the container bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"container"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignIn","longname":"Phaser.Component.Bounds#alignIn","memberof":"Phaser.Component.Bounds","scope":"instance","___s":true},{"meta":{"range":[11205,13527],"filename":"Bounds.js","lineno":321,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object to the side of another Game Object, or Rectangle, known as the\r'parent', in one of 11 possible positions.\r\rThe parent must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe parent. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, \r`Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, \r`Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` \rand `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rparent, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignTo(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the parents bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the parent bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"parent"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, `Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, `Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignTo","longname":"Phaser.Component.Bounds#alignTo","memberof":"Phaser.Component.Bounds","scope":"instance","___s":true},{"meta":{"range":[310,354],"filename":"BringToTop.js","lineno":12,"path":"src\\gameobjects\\components"},"description":"The BringToTop Component features quick access to Group sorting related methods.","kind":"class","name":"BringToTop","longname":"Phaser.Component.BringToTop","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[784,949],"filename":"BringToTop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"Brings this Game Object to the top of its parents display list.\rVisually this means it will render over the top of any old child in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will bring it to the top of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"bringToTop","longname":"Phaser.Component.BringToTop#bringToTop","memberof":"Phaser.Component.BringToTop","scope":"instance","___s":true},{"meta":{"range":[1378,1543],"filename":"BringToTop.js","lineno":45,"path":"src\\gameobjects\\components"},"description":"Sends this Game Object to the bottom of its parents display list.\rVisually this means it will render below all other children in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will send it to the bottom of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"sendToBack","longname":"Phaser.Component.BringToTop#sendToBack","memberof":"Phaser.Component.BringToTop","scope":"instance","___s":true},{"meta":{"range":[1982,2140],"filename":"BringToTop.js","lineno":66,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object up one place in its parents display list.\rThis call has no effect if the Game Object is already at the top of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object up within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveUp","longname":"Phaser.Component.BringToTop#moveUp","memberof":"Phaser.Component.BringToTop","scope":"instance","___s":true},{"meta":{"range":[2586,2748],"filename":"BringToTop.js","lineno":87,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object down one place in its parents display list.\rThis call has no effect if the Game Object is already at the bottom of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object down within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveDown","longname":"Phaser.Component.BringToTop#moveDown","memberof":"Phaser.Component.BringToTop","scope":"instance","___s":true},{"meta":{"range":[204,237],"filename":"Component.js","lineno":7,"path":"src\\gameobjects\\components"},"author":["Richard Davey <rich@photonstorm.com>"],"copyright":"2016 Photon Storm Ltd.","license":"{@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}","name":"Component","longname":"Phaser.Component","kind":"function","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[254,292],"filename":"Core.js","lineno":12,"path":"src\\gameobjects\\components"},"description":"Core Component Features.","kind":"class","name":"Core","longname":"Phaser.Component.Core","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[464,1002],"filename":"Core.js","lineno":22,"path":"src\\gameobjects\\components"},"description":"Installs / registers mixin components.\r\rThe `this` context should be that of the applicable object instance or prototype.","kind":"function","access":"protected","name":"install","longname":"Phaser.Component.Core.install","memberof":"Phaser.Component.Core","scope":"static","___s":true},{"meta":{"range":[1159,2031],"filename":"Core.js","lineno":54,"path":"src\\gameobjects\\components"},"description":"Initializes the mixin components.\r\rThe `this` context should be an instance of the component mixin target.","kind":"function","access":"protected","name":"init","longname":"Phaser.Component.Core.init","memberof":"Phaser.Component.Core","scope":"static","___s":true},{"meta":{"range":[3048,3058],"filename":"Core.js","lineno":142,"path":"src\\gameobjects\\components"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"name":"game","longname":"Phaser.Component.Core#game","kind":"member","memberof":"Phaser.Component.Core","scope":"instance","___s":true},{"meta":{"range":[3279,3287],"filename":"Core.js","lineno":150,"path":"src\\gameobjects\\components"},"description":"A user defined name given to this Game Object.\rThis value isn't ever used internally by Phaser, it is meant as a game level property.","properties":[{"type":{"names":["string"]},"name":"name"}],"defaultvalue":"","name":"name","longname":"Phaser.Component.Core#name","kind":"member","memberof":"Phaser.Component.Core","scope":"instance","___s":true},{"meta":{"range":[3651,3659],"filename":"Core.js","lineno":160,"path":"src\\gameobjects\\components"},"description":"An empty Object that belongs to this Game Object.\rThis value isn't ever used internally by Phaser, but may be used by your own code, or\rby Phaser Plugins, to store data that needs to be associated with the Game Object,\rwithout polluting the Game Object directly.","properties":[{"type":{"names":["Object"]},"name":"data"}],"defaultvalue":"{}","defaultvaluetype":"object","name":"data","longname":"Phaser.Component.Core#data","kind":"member","memberof":"Phaser.Component.Core","scope":"instance","___s":true},{"meta":{"range":[3794,3808],"filename":"Core.js","lineno":167,"path":"src\\gameobjects\\components"},"description":"The components this Game Object has installed.","properties":[{"type":{"names":["object"]},"name":"components"}],"access":"protected","name":"components","longname":"Phaser.Component.Core#components","kind":"member","memberof":"Phaser.Component.Core","scope":"instance","___s":true},{"meta":{"range":[4202,4206],"filename":"Core.js","lineno":177,"path":"src\\gameobjects\\components"},"description":"The z depth of this Game Object within its parent Group.\rNo two objects in a Group can have the same z value.\rThis value is adjusted automatically whenever the Group hierarchy changes.\rIf you wish to re-order the layering of a Game Object then see methods like Group.moveUp or Group.bringToTop.","properties":[{"type":{"names":["number"]},"name":"z"}],"readonly":true,"name":"z","longname":"Phaser.Component.Core#z","kind":"member","memberof":"Phaser.Component.Core","scope":"instance","___s":true},{"meta":{"range":[4484,4501],"filename":"Core.js","lineno":185,"path":"src\\gameobjects\\components"},"description":"All Phaser Game Objects have an Events class which contains all of the events that are dispatched when certain things happen to this\rGame Object, or any of its components.","see":["Phaser.Events"],"properties":[{"type":{"names":["Phaser.Events"]},"name":"events"}],"name":"events","longname":"Phaser.Component.Core#events","kind":"member","memberof":"Phaser.Component.Core","scope":"instance","___s":true},{"meta":{"range":[4815,4836],"filename":"Core.js","lineno":193,"path":"src\\gameobjects\\components"},"description":"If the Game Object is enabled for animation (such as a Phaser.Sprite) this is a reference to its AnimationManager instance.\rThrough it you can create, play, pause and stop animations.","see":["Phaser.AnimationManager"],"properties":[{"type":{"names":["Phaser.AnimationManager"]},"name":"animations"}],"name":"animations","longname":"Phaser.Component.Core#animations","kind":"member","memberof":"Phaser.Component.Core","scope":"instance","___s":true},{"meta":{"range":[5559,5566],"filename":"Core.js","lineno":203,"path":"src\\gameobjects\\components"},"description":"The key of the image or texture used by this Game Object during rendering.\rIf it is a string it's the string used to retrieve the texture from the Phaser Image Cache.\rIt can also be an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.\rIf a Game Object is created without a key it is automatically assigned the key `__default` which is a 32x32 transparent PNG stored within the Cache.\rIf a Game Object is given a key which doesn't exist in the Image Cache it is re-assigned the key `__missing` which is a 32x32 PNG of a green box with a line through it.","properties":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"name":"key"}],"name":"key","longname":"Phaser.Component.Core#key","kind":"member","memberof":"Phaser.Component.Core","scope":"instance","___s":true},{"meta":{"range":[5882,5893],"filename":"Core.js","lineno":211,"path":"src\\gameobjects\\components"},"description":"The world coordinates of this Game Object in pixels.\rDepending on where in the display list this Game Object is placed this value can differ from `position`, \rwhich contains the x/y coordinates relative to the Game Objects parent.","properties":[{"type":{"names":["Phaser.Point"]},"name":"world"}],"name":"world","longname":"Phaser.Component.Core#world","kind":"member","memberof":"Phaser.Component.Core","scope":"instance","___s":true},{"meta":{"range":[6029,6041],"filename":"Core.js","lineno":218,"path":"src\\gameobjects\\components"},"description":"A debug flag designed for use with `Game.enableStep`.","properties":[{"type":{"names":["boolean"]},"name":"debug"}],"defaultvalue":false,"name":"debug","longname":"Phaser.Component.Core#debug","kind":"member","memberof":"Phaser.Component.Core","scope":"instance","___s":true},{"meta":{"range":[6204,6226],"filename":"Core.js","lineno":225,"path":"src\\gameobjects\\components"},"description":"The position the Game Object was located in the previous frame.","properties":[{"type":{"names":["Phaser.Point"]},"name":"previousPosition"}],"readonly":true,"name":"previousPosition","longname":"Phaser.Component.Core#previousPosition","kind":"member","memberof":"Phaser.Component.Core","scope":"instance","___s":true},{"meta":{"range":[6406,6425],"filename":"Core.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"The rotation the Game Object was in set to in the previous frame. Value is in radians.","properties":[{"type":{"names":["number"]},"name":"previousRotation"}],"readonly":true,"name":"previousRotation","longname":"Phaser.Component.Core#previousRotation","kind":"member","memberof":"Phaser.Component.Core","scope":"instance","___s":true},{"meta":{"range":[6720,6736],"filename":"Core.js","lineno":240,"path":"src\\gameobjects\\components"},"description":"The render order ID is used internally by the renderer and Input Manager and should not be modified.\rThis property is mostly used internally by the renderers, but is exposed for the use of plugins.","properties":[{"type":{"names":["number"]},"name":"renderOrderID"}],"readonly":true,"name":"renderOrderID","longname":"Phaser.Component.Core#renderOrderID","kind":"member","memberof":"Phaser.Component.Core","scope":"instance","___s":true},{"meta":{"range":[7053,7064],"filename":"Core.js","lineno":248,"path":"src\\gameobjects\\components"},"description":"A Game Object is considered `fresh` if it has just been created or reset and is yet to receive a renderer transform update.\rThis property is mostly used internally by the physics systems, but is exposed for the use of plugins.","properties":[{"type":{"names":["boolean"]},"name":"fresh"}],"readonly":true,"name":"fresh","longname":"Phaser.Component.Core#fresh","kind":"member","memberof":"Phaser.Component.Core","scope":"instance","___s":true},{"meta":{"range":[7518,7539],"filename":"Core.js","lineno":259,"path":"src\\gameobjects\\components"},"description":"A Game Object is that is pendingDestroy is flagged to have its destroy method called on the next logic update.\rYou can set it directly to allow you to flag an object to be destroyed on its next update.\r\rThis is extremely useful if you wish to destroy an object from within one of its own callbacks \rsuch as with Buttons or other Input events.","properties":[{"type":{"names":["boolean"]},"name":"pendingDestroy"}],"name":"pendingDestroy","longname":"Phaser.Component.Core#pendingDestroy","kind":"member","memberof":"Phaser.Component.Core","scope":"instance","___s":true},{"meta":{"range":[8354,9085],"filename":"Core.js","lineno":284,"path":"src\\gameobjects\\components"},"description":"Controls if this Game Object is processed by the core game loop.\rIf this Game Object has a physics body it also controls if its physics body is updated or not.\rWhen `exists` is set to `false` it will remove its physics body from the physics world if it has one.\rIt also toggles the `visible` property to false as well.\r\rSetting `exists` to true will add its physics body back in to the physics world, if it has one.\rIt will also set the `visible` property to `true`.","properties":[{"type":{"names":["boolean"]},"name":"exists"}],"name":"exists","longname":"Phaser.Component.Core#exists","kind":"member","memberof":"Phaser.Component.Core","scope":"instance","___s":true},{"meta":{"range":[9388,9417],"filename":"Core.js","lineno":328,"path":"src\\gameobjects\\components"},"description":"Override this method in your own custom objects to handle any update requirements.\rIt is called immediately after `preUpdate` and before `postUpdate`.\rRemember if this Game Object has any children you should call update on those too.","kind":"function","name":"update","longname":"Phaser.Component.Core#update","memberof":"Phaser.Component.Core","scope":"instance","___s":true},{"meta":{"range":[9544,10055],"filename":"Core.js","lineno":338,"path":"src\\gameobjects\\components"},"description":"Internal method called by the World postUpdate cycle.","kind":"function","access":"protected","name":"postUpdate","longname":"Phaser.Component.Core#postUpdate","memberof":"Phaser.Component.Core","scope":"instance","___s":true},{"meta":{"range":[368,406],"filename":"Crop.js","lineno":13,"path":"src\\gameobjects\\components"},"description":"The Crop component provides the ability to crop a texture based Game Object to a defined rectangle, \rwhich can be updated in real-time.","kind":"class","name":"Crop","longname":"Phaser.Component.Crop","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[751,765],"filename":"Crop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Rectangle used to crop the texture this Game Object uses.\rSet this property via `crop`. \rIf you modify this property directly you must call `updateCrop` in order to have the change take effect.","properties":[{"type":{"names":["Phaser.Rectangle"]},"name":"cropRect"}],"defaultvalue":null,"name":"cropRect","longname":"Phaser.Component.Crop#cropRect","kind":"member","memberof":"Phaser.Component.Crop","scope":"instance","___s":true},{"meta":{"range":[2112,2842],"filename":"Crop.js","lineno":49,"path":"src\\gameobjects\\components"},"description":"Crop allows you to crop the texture being used to display this Game Object.\rSetting a crop rectangle modifies the core texture frame. The Game Object width and height properties will be adjusted accordingly.\r\rCropping takes place from the top-left and can be modified in real-time either by providing an updated rectangle object to this method,\ror by modifying `cropRect` property directly and then calling `updateCrop`.\r\rThe rectangle object given to this method can be either a `Phaser.Rectangle` or any other object \rso long as it has public `x`, `y`, `width`, `height`, `right` and `bottom` properties.\r\rA reference to the rectangle is stored in `cropRect` unless the `copy` parameter is `true`, \rin which case the values are duplicated to a local object.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle used during cropping. Pass null or no parameters to clear a previously set crop rectangle.","name":"rect"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If false `cropRect` will be stored as a reference to the given rect. If true it will copy the rect values into a local Phaser Rectangle object stored in cropRect.","name":"copy"}],"name":"crop","longname":"Phaser.Component.Crop#crop","memberof":"Phaser.Component.Crop","scope":"instance","___s":true},{"meta":{"range":[3107,4426],"filename":"Crop.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"If you have set a crop rectangle on this Game Object via `crop` and since modified the `cropRect` property,\ror the rectangle it references, then you need to update the crop frame by calling this method.","kind":"function","name":"updateCrop","longname":"Phaser.Component.Crop#updateCrop","memberof":"Phaser.Component.Crop","scope":"instance","___s":true},{"meta":{"range":[337,376],"filename":"Delta.js","lineno":12,"path":"src\\gameobjects\\components"},"description":"The Delta component provides access to delta values between the Game Objects current and previous position.","kind":"class","name":"Delta","longname":"Phaser.Component.Delta","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[707,829],"filename":"Delta.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"Returns the delta x value. The difference between world.x now and in the previous frame.\r\rThe value will be positive if the Game Object has moved to the right or negative if to the left.","properties":[{"type":{"names":["number"]},"name":"deltaX"}],"readonly":true,"name":"deltaX","longname":"Phaser.Component.Delta#deltaX","kind":"member","memberof":"Phaser.Component.Delta","scope":"instance","___s":true},{"meta":{"range":[1103,1225],"filename":"Delta.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"Returns the delta y value. The difference between world.y now and in the previous frame.\r\rThe value will be positive if the Game Object has moved down or negative if up.","properties":[{"type":{"names":["number"]},"name":"deltaY"}],"readonly":true,"name":"deltaY","longname":"Phaser.Component.Delta#deltaY","kind":"member","memberof":"Phaser.Component.Delta","scope":"instance","___s":true},{"meta":{"range":[1424,1545],"filename":"Delta.js","lineno":58,"path":"src\\gameobjects\\components"},"description":"Returns the delta z value. The difference between rotation now and in the previous frame.","properties":[{"type":{"names":["number"]},"description":"The delta value.","name":"deltaZ"}],"readonly":true,"name":"deltaZ","longname":"Phaser.Component.Delta#deltaZ","kind":"member","memberof":"Phaser.Component.Delta","scope":"instance","___s":true},{"meta":{"range":[296,337],"filename":"Destroy.js","lineno":12,"path":"src\\gameobjects\\components"},"description":"The Destroy component is responsible for destroying a Game Object.","kind":"class","name":"Destroy","longname":"Phaser.Component.Destroy","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[629,648],"filename":"Destroy.js","lineno":22,"path":"src\\gameobjects\\components"},"description":"As a Game Object runs through its destroy method this flag is set to true, \rand can be checked in any sub-systems or plugins it is being destroyed from.","properties":[{"type":{"names":["boolean"]},"name":"destroyPhase"}],"readonly":true,"name":"destroyPhase","longname":"Phaser.Component.Destroy#destroyPhase","kind":"member","memberof":"Phaser.Component.Destroy","scope":"instance","___s":true},{"meta":{"range":[1497,4401],"filename":"Destroy.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Destroys the Game Object. This removes it from its parent group, destroys the input, event and animation handlers if present\rand nulls its reference to `game`, freeing it up for garbage collection.\r\rIf this Game Object has the Events component it will also dispatch the `onDestroy` event.\r\rYou can optionally also destroy the BaseTexture this Game Object is using. Be careful if you've\rmore than one Game Object sharing the same BaseTexture.","kind":"function","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should every child of this object have its destroy method called as well?","name":"destroyChildren"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Destroy the BaseTexture this Game Object is using? Note that if another Game Object is sharing the same BaseTexture it will invalidate it.","name":"destroyTexture"}],"name":"destroy","longname":"Phaser.Component.Destroy#destroy","memberof":"Phaser.Component.Destroy","scope":"instance","___s":true},{"meta":{"range":[1208,1455],"filename":"Events.js","lineno":30,"path":"src\\gameobjects\\components"},"description":"The Events component is a collection of events fired by the parent Game Object.\r\rPhaser uses what are known as 'Signals' for all event handling. All of the events in\rthis class are signals you can subscribe to, much in the same way you'd \"listen\" for\ran event.\r\rFor example to tell when a Sprite has been added to a new group, you can bind a function\rto the `onAddedToGroup` signal:\r\r`sprite.events.onAddedToGroup.add(yourFunction, this);`\r\rWhere `yourFunction` is the function you want called when this event occurs.\r\rFor more details about how signals work please see the Phaser.Signal class.\r\rThe Input-related events will only be dispatched if the Sprite has had `inputEnabled` set to `true`\rand the Animation-related events only apply to game objects with animations like {@link Phaser.Sprite}.","kind":"class","classdesc":"Phaser.Events","params":[{"type":{"names":["Phaser.Sprite"]},"description":"A reference to the game object / Sprite that owns this Events object.","name":"sprite"}],"name":"Events","longname":"Phaser.Events","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1345,1365],"filename":"Events.js","lineno":35,"path":"src\\gameobjects\\components"},"properties":[{"type":{"names":["Phaser.Sprite"]},"description":"The Sprite that owns these events.","name":"parent"}],"name":"parent","longname":"Phaser.Events#parent","kind":"member","memberof":"Phaser.Events","scope":"instance","___s":true},{"meta":{"range":[1495,1581],"filename":"Events.js","lineno":43,"path":"src\\gameobjects\\components"},"description":"Removes all events.","kind":"function","name":"destroy","memberof":"Phaser.Events","longname":"Phaser.Events#destroy","scope":"instance","___s":true},{"meta":{"range":[3376,3396],"filename":"Events.js","lineno":84,"path":"src\\gameobjects\\components"},"description":"This signal is dispatched when this Game Object is added to a new Group.\rIt is sent two arguments:\r{any} The Game Object that was added to the Group.\r{Phaser.Group} The Group it was added to.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onAddedToGroup"}],"name":"onAddedToGroup","longname":"Phaser.Events#onAddedToGroup","kind":"member","memberof":"Phaser.Events","scope":"instance","___s":true},{"meta":{"range":[3701,3725],"filename":"Events.js","lineno":93,"path":"src\\gameobjects\\components"},"description":"This signal is dispatched when the Game Object is removed from a Group.\rIt is sent two arguments:\r{any} The Game Object that was removed from the Group.\r{Phaser.Group} The Group it was removed from.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onRemovedFromGroup"}],"name":"onRemovedFromGroup","longname":"Phaser.Events#onRemovedFromGroup","kind":"member","memberof":"Phaser.Events","scope":"instance","___s":true},{"meta":{"range":[3899,3923],"filename":"Events.js","lineno":100,"path":"src\\gameobjects\\components"},"description":"This Signal is never used internally by Phaser and is now deprecated.","deprecated":true,"properties":[{"type":{"names":["Phaser.Signal"]},"name":"onRemovedFromWorld"}],"name":"onRemovedFromWorld","longname":"Phaser.Events#onRemovedFromWorld","kind":"member","memberof":"Phaser.Events","scope":"instance","___s":true},{"meta":{"range":[4253,4268],"filename":"Events.js","lineno":109,"path":"src\\gameobjects\\components"},"description":"This signal is dispatched when the Game Object is destroyed.\rThis happens when `Sprite.destroy()` is called, or `Group.destroy()` with `destroyChildren` set to true.\rIt is sent one argument:\r{any} The Game Object that was destroyed.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onDestroy"}],"name":"onDestroy","longname":"Phaser.Events#onDestroy","kind":"member","memberof":"Phaser.Events","scope":"instance","___s":true},{"meta":{"range":[4640,4654],"filename":"Events.js","lineno":119,"path":"src\\gameobjects\\components"},"description":"This signal is dispatched when the Game Object is killed.\rThis happens when `Sprite.kill()` is called.\rPlease understand the difference between `kill` and `destroy` by looking at their respective methods.\rIt is sent one argument:\r{any} The Game Object that was killed.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onKilled"}],"name":"onKilled","longname":"Phaser.Events#onKilled","kind":"member","memberof":"Phaser.Events","scope":"instance","___s":true},{"meta":{"range":[4953,4968],"filename":"Events.js","lineno":128,"path":"src\\gameobjects\\components"},"description":"This signal is dispatched when the Game Object is revived from a previously killed state.\rThis happens when `Sprite.revive()` is called.\rIt is sent one argument:\r{any} The Game Object that was revived.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onRevived"}],"name":"onRevived","longname":"Phaser.Events#onRevived","kind":"member","memberof":"Phaser.Events","scope":"instance","___s":true},{"meta":{"range":[5290,5309],"filename":"Events.js","lineno":137,"path":"src\\gameobjects\\components"},"description":"This signal is dispatched when the Game Object leaves the Phaser.World bounds.\rThis signal is only if `Sprite.checkWorldBounds` is set to `true`.\rIt is sent one argument:\r{any} The Game Object that left the World bounds.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onOutOfBounds"}],"name":"onOutOfBounds","longname":"Phaser.Events#onOutOfBounds","kind":"member","memberof":"Phaser.Events","scope":"instance","___s":true},{"meta":{"range":[5682,5701],"filename":"Events.js","lineno":146,"path":"src\\gameobjects\\components"},"description":"This signal is dispatched when the Game Object returns within the Phaser.World bounds, having previously been outside of them.\rThis signal is only if `Sprite.checkWorldBounds` is set to `true`.\rIt is sent one argument:\r{any} The Game Object that entered the World bounds.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onEnterBounds"}],"name":"onEnterBounds","longname":"Phaser.Events#onEnterBounds","kind":"member","memberof":"Phaser.Events","scope":"instance","___s":true},{"meta":{"range":[6076,6093],"filename":"Events.js","lineno":156,"path":"src\\gameobjects\\components"},"description":"This signal is dispatched if the Game Object has `inputEnabled` set to `true`, \rand receives an over event from a Phaser.Pointer.\rIt is sent two arguments:\r{any} The Game Object that received the event.\r{Phaser.Pointer} The Phaser.Pointer object that caused the event.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onInputOver"}],"name":"onInputOver","longname":"Phaser.Events#onInputOver","kind":"member","memberof":"Phaser.Events","scope":"instance","___s":true},{"meta":{"range":[6496,6512],"filename":"Events.js","lineno":166,"path":"src\\gameobjects\\components"},"description":"This signal is dispatched if the Game Object has `inputEnabled` set to `true`, \rand receives an out event from a Phaser.Pointer, which was previously over it.\rIt is sent two arguments:\r{any} The Game Object that received the event.\r{Phaser.Pointer} The Phaser.Pointer object that caused the event.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onInputOut"}],"name":"onInputOut","longname":"Phaser.Events#onInputOut","kind":"member","memberof":"Phaser.Events","scope":"instance","___s":true},{"meta":{"range":[6993,7010],"filename":"Events.js","lineno":177,"path":"src\\gameobjects\\components"},"description":"This signal is dispatched if the Game Object has `inputEnabled` set to `true`, \rand receives a down event from a Phaser.Pointer. This effectively means the Pointer has been\rpressed down (but not yet released) on the Game Object.\rIt is sent two arguments:\r{any} The Game Object that received the event.\r{Phaser.Pointer} The Phaser.Pointer object that caused the event.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onInputDown"}],"name":"onInputDown","longname":"Phaser.Events#onInputDown","kind":"member","memberof":"Phaser.Events","scope":"instance","___s":true},{"meta":{"range":[7559,7574],"filename":"Events.js","lineno":189,"path":"src\\gameobjects\\components"},"description":"This signal is dispatched if the Game Object has `inputEnabled` set to `true`, \rand receives an up event from a Phaser.Pointer. This effectively means the Pointer had been\rpressed down, and was then released on the Game Object.\rIt is sent three arguments:\r{any} The Game Object that received the event.\r{Phaser.Pointer} The Phaser.Pointer object that caused the event.\r{boolean} isOver - Is the Pointer still over the Game Object?","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onInputUp"}],"name":"onInputUp","longname":"Phaser.Events#onInputUp","kind":"member","memberof":"Phaser.Events","scope":"instance","___s":true},{"meta":{"range":[8186,8203],"filename":"Events.js","lineno":202,"path":"src\\gameobjects\\components"},"description":"This signal is dispatched if the Game Object has been `inputEnabled` and `enableDrag` has been set.\rIt is sent when a Phaser.Pointer starts to drag the Game Object, taking into consideration the various\rdrag limitations that may be set.\rIt is sent four arguments:\r{any} The Game Object that received the event.\r{Phaser.Pointer} The Phaser.Pointer object that caused the event.\r{number} The x coordinate that the drag started from.\r{number} The y coordinate that the drag started from.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onDragStart"}],"name":"onDragStart","longname":"Phaser.Events#onDragStart","kind":"member","memberof":"Phaser.Events","scope":"instance","___s":true},{"meta":{"range":[9061,9079],"filename":"Events.js","lineno":217,"path":"src\\gameobjects\\components"},"description":"This signal is dispatched if the Game Object has been `inputEnabled` and `enableDrag` has been set.\rIt is sent when a Phaser.Pointer is actively dragging the Game Object.\rBe warned: This is a high volume Signal. Be careful what you bind to it.\rIt is sent six arguments:\r{any} The Game Object that received the event.\r{Phaser.Pointer} The Phaser.Pointer object that caused the event.\r{number} The new x coordinate of the Game Object.\r{number} The new y coordinate of the Game Object.\r{Phaser.Point} A Point object that contains the point the Game Object was snapped to, if `snapOnDrag` has been enabled.\r{boolean} The `fromStart` boolean, indicates if this is the first update immediately after the drag has started.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onDragUpdate"}],"name":"onDragUpdate","longname":"Phaser.Events#onDragUpdate","kind":"member","memberof":"Phaser.Events","scope":"instance","___s":true},{"meta":{"range":[9488,9504],"filename":"Events.js","lineno":227,"path":"src\\gameobjects\\components"},"description":"This signal is dispatched if the Game Object has been `inputEnabled` and `enableDrag` has been set.\rIt is sent when a Phaser.Pointer stops dragging the Game Object.\rIt is sent two arguments:\r{any} The Game Object that received the event.\r{Phaser.Pointer} The Phaser.Pointer object that caused the event.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onDragStop"}],"name":"onDragStop","longname":"Phaser.Events#onDragStop","kind":"member","memberof":"Phaser.Events","scope":"instance","___s":true},{"meta":{"range":[9953,9975],"filename":"Events.js","lineno":238,"path":"src\\gameobjects\\components"},"description":"This signal is dispatched if the Game Object has the AnimationManager component, \rand an Animation has been played.\rYou can also listen to `Animation.onStart` rather than via the Game Objects events.\rIt is sent two arguments:\r{any} The Game Object that received the event.\r{Phaser.Animation} The Phaser.Animation that was started.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onAnimationStart"}],"name":"onAnimationStart","longname":"Phaser.Events#onAnimationStart","kind":"member","memberof":"Phaser.Events","scope":"instance","___s":true},{"meta":{"range":[10504,10529],"filename":"Events.js","lineno":249,"path":"src\\gameobjects\\components"},"description":"This signal is dispatched if the Game Object has the AnimationManager component, \rand an Animation has been stopped (via `animation.stop()` and the `dispatchComplete` argument has been set.\rYou can also listen to `Animation.onComplete` rather than via the Game Objects events.\rIt is sent two arguments:\r{any} The Game Object that received the event.\r{Phaser.Animation} The Phaser.Animation that was stopped.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onAnimationComplete"}],"name":"onAnimationComplete","longname":"Phaser.Events#onAnimationComplete","kind":"member","memberof":"Phaser.Events","scope":"instance","___s":true},{"meta":{"range":[10975,10996],"filename":"Events.js","lineno":260,"path":"src\\gameobjects\\components"},"description":"This signal is dispatched if the Game Object has the AnimationManager component, \rand an Animation has looped playback.\rYou can also listen to `Animation.onLoop` rather than via the Game Objects events.\rIt is sent two arguments:\r{any} The Game Object that received the event.\r{Phaser.Animation} The Phaser.Animation that looped.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onAnimationLoop"}],"name":"onAnimationLoop","longname":"Phaser.Events#onAnimationLoop","kind":"member","memberof":"Phaser.Events","scope":"instance","___s":true},{"meta":{"range":[490,537],"filename":"FixedToCamera.js","lineno":13,"path":"src\\gameobjects\\components"},"description":"The FixedToCamera component enables a Game Object to be rendered relative to the game camera coordinates, regardless \rof where in the world the camera is. This is used for things like sticking game UI to the camera that scrolls as it moves around the world.","kind":"class","name":"FixedToCamera","longname":"Phaser.Component.FixedToCamera","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[665,978],"filename":"FixedToCamera.js","lineno":21,"path":"src\\gameobjects\\components"},"description":"The FixedToCamera component postUpdate handler.\rCalled automatically by the Game Object.","kind":"function","name":"postUpdate","longname":"Phaser.Component.FixedToCamera.postUpdate","memberof":"Phaser.Component.FixedToCamera","scope":"static","___s":true},{"meta":{"range":[2104,2515],"filename":"FixedToCamera.js","lineno":56,"path":"src\\gameobjects\\components"},"description":"A Game Object that is \"fixed\" to the camera uses its x/y coordinates as offsets from the top left of the camera during rendering.\r\rThe values are adjusted at the rendering stage, overriding the Game Objects actual world position.\r\rThe end result is that the Game Object will appear to be 'fixed' to the camera, regardless of where in the game world\rthe camera is viewing. This is useful if for example this Game Object is a UI item that you wish to be visible at all times \rregardless where in the world the camera is.\r\rThe offsets are stored in the `cameraOffset` property.\r\rNote that the `cameraOffset` values are in addition to any parent of this Game Object on the display list.\r\rBe careful not to set `fixedToCamera` on Game Objects which are in Groups that already have `fixedToCamera` enabled on them.","properties":[{"type":{"names":["boolean"]},"name":"fixedToCamera"}],"name":"fixedToCamera","longname":"Phaser.Component.FixedToCamera#fixedToCamera","kind":"member","memberof":"Phaser.Component.FixedToCamera","scope":"instance","___s":true},{"meta":{"range":[2868,2900],"filename":"FixedToCamera.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"The x/y coordinate offset applied to the top-left of the camera that this Game Object will be drawn at if `fixedToCamera` is true.\r\rThe values are relative to the top-left of the camera view and in addition to any parent of the Game Object on the display list.","properties":[{"type":{"names":["Phaser.Point"]},"name":"cameraOffset"}],"name":"cameraOffset","longname":"Phaser.Component.FixedToCamera#cameraOffset","kind":"member","memberof":"Phaser.Component.FixedToCamera","scope":"instance","___s":true},{"meta":{"range":[405,445],"filename":"Health.js","lineno":14,"path":"src\\gameobjects\\components"},"description":"The Health component provides the ability for Game Objects to have a `health` property \rthat can be damaged and reset through game code.\rRequires the LifeSpan component.","kind":"class","name":"Health","longname":"Phaser.Component.Health","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[778,787],"filename":"Health.js","lineno":26,"path":"src\\gameobjects\\components"},"description":"The Game Objects health value. This is a handy property for setting and manipulating health on a Game Object.\r\rIt can be used in combination with the `damage` method or modified directly.","properties":[{"type":{"names":["number"]},"name":"health"}],"defaultvalue":1,"name":"health","longname":"Phaser.Component.Health#health","kind":"member","memberof":"Phaser.Component.Health","scope":"instance","___s":true},{"meta":{"range":[1029,1043],"filename":"Health.js","lineno":35,"path":"src\\gameobjects\\components"},"description":"The Game Objects maximum health value. This works in combination with the `heal` method to ensure\rthe health value never exceeds the maximum.","properties":[{"type":{"names":["number"]},"name":"maxHealth"}],"defaultvalue":100,"name":"maxHealth","longname":"Phaser.Component.Health#maxHealth","kind":"member","memberof":"Phaser.Component.Health","scope":"instance","___s":true},{"meta":{"range":[1419,1661],"filename":"Health.js","lineno":46,"path":"src\\gameobjects\\components"},"description":"Damages the Game Object. This removes the given amount of health from the `health` property.\r\rIf health is taken below or is equal to zero then the `kill` method is called.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to subtract from the current `health` value.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"damage","longname":"Phaser.Component.Health#damage","memberof":"Phaser.Component.Health","scope":"instance","___s":true},{"meta":{"range":[1989,2195],"filename":"Health.js","lineno":70,"path":"src\\gameobjects\\components"},"description":"Sets the health property of the Game Object to the given amount.\rWill never exceed the `maxHealth` value.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to set the `health` value to. The total will never exceed `maxHealth`.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"setHealth","longname":"Phaser.Component.Health#setHealth","memberof":"Phaser.Component.Health","scope":"instance","___s":true},{"meta":{"range":[2503,2772],"filename":"Health.js","lineno":90,"path":"src\\gameobjects\\components"},"description":"Heal the Game Object. This adds the given amount of health to the `health` property.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to add to the current `health` value. The total will never exceed `maxHealth`.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"heal","longname":"Phaser.Component.Health#heal","memberof":"Phaser.Component.Health","scope":"instance","___s":true},{"meta":{"range":[311,353],"filename":"InCamera.js","lineno":12,"path":"src\\gameobjects\\components"},"description":"The InCamera component checks if the Game Object intersects with the Game Camera.","kind":"class","name":"InCamera","longname":"Phaser.Component.InCamera","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[802,940],"filename":"InCamera.js","lineno":26,"path":"src\\gameobjects\\components"},"description":"Checks if this Game Objects bounds intersects with the Game Cameras bounds.\r\rIt will be `true` if they intersect, or `false` if the Game Object is fully outside of the Cameras bounds.\r\rAn object outside the bounds can be considered for camera culling if it has the AutoCull component.","properties":[{"type":{"names":["boolean"]},"name":"inCamera"}],"readonly":true,"name":"inCamera","longname":"Phaser.Component.InCamera#inCamera","kind":"member","memberof":"Phaser.Component.InCamera","scope":"instance","___s":true},{"meta":{"range":[340,386],"filename":"InputEnabled.js","lineno":12,"path":"src\\gameobjects\\components"},"description":"The InputEnabled component allows a Game Object to have its own InputHandler and process input related events.","kind":"class","name":"InputEnabled","longname":"Phaser.Component.InputEnabled","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[805,816],"filename":"InputEnabled.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Input Handler for this Game Object.\r\rBy default it is disabled. If you wish this Game Object to process input events you should enable it with: `inputEnabled = true`.\r\rAfter you have done this, this property will be a reference to the Phaser InputHandler.","properties":[{"type":{"names":["Phaser.InputHandler","null"]},"name":"input"}],"name":"input","longname":"Phaser.Component.InputEnabled#input","kind":"member","memberof":"Phaser.Component.InputEnabled","scope":"instance","___s":true},{"meta":{"range":[1661,2398],"filename":"InputEnabled.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"By default a Game Object won't process any input events. By setting `inputEnabled` to true a Phaser.InputHandler is created\rfor this Game Object and it will then start to process click / touch events and more.\r\rYou can then access the Input Handler via `this.input`.\r\rNote that Input related events are dispatched from `this.events`, i.e.: `events.onInputDown`.\r\rIf you set this property to false it will stop the Input Handler from processing any more input events.\r\rIf you want to _temporarily_ disable input for a Game Object, then it's better to set\r`input.enabled = false`, as it won't reset any of the Input Handlers internal properties.\rYou can then toggle this back on as needed.","properties":[{"type":{"names":["boolean"]},"name":"inputEnabled"}],"name":"inputEnabled","longname":"Phaser.Component.InputEnabled#inputEnabled","kind":"member","memberof":"Phaser.Component.InputEnabled","scope":"instance","___s":true},{"meta":{"range":[558,599],"filename":"InWorld.js","lineno":14,"path":"src\\gameobjects\\components"},"description":"The InWorld component checks if a Game Object is within the Game World Bounds.\rAn object is considered as being \"in bounds\" so long as its own bounds intersects at any point with the World bounds.\rIf the AutoCull component is enabled on the Game Object then it will check the Game Object against the Camera bounds as well.","kind":"class","name":"InWorld","longname":"Phaser.Component.InWorld","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[720,2489],"filename":"InWorld.js","lineno":22,"path":"src\\gameobjects\\components"},"description":"The InWorld component preUpdate handler.\rCalled automatically by the Game Object.","kind":"function","name":"preUpdate","longname":"Phaser.Component.InWorld.preUpdate","memberof":"Phaser.Component.InWorld","scope":"static","___s":true},{"meta":{"range":[3394,3417],"filename":"InWorld.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"If this is set to `true` the Game Object checks if it is within the World bounds each frame. \r\rWhen it is no longer intersecting the world bounds it dispatches the `onOutOfBounds` event.\r\rIf it was *previously* out of bounds but is now intersecting the world bounds again it dispatches the `onEnterBounds` event.\r\rIt also optionally kills the Game Object if `outOfBoundsKill` is `true`.\r\rWhen `checkWorldBounds` is enabled it forces the Game Object to calculate its full bounds every frame.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"checkWorldBounds"}],"defaultvalue":false,"name":"checkWorldBounds","longname":"Phaser.Component.InWorld#checkWorldBounds","kind":"member","memberof":"Phaser.Component.InWorld","scope":"instance","___s":true},{"meta":{"range":[3653,3675],"filename":"InWorld.js","lineno":106,"path":"src\\gameobjects\\components"},"description":"If this and the `checkWorldBounds` property are both set to `true` then the `kill` method is called as soon as `inWorld` returns false.","properties":[{"type":{"names":["boolean"]},"name":"outOfBoundsKill"}],"defaultvalue":false,"name":"outOfBoundsKill","longname":"Phaser.Component.InWorld#outOfBoundsKill","kind":"member","memberof":"Phaser.Component.InWorld","scope":"instance","___s":true},{"meta":{"range":[3939,3967],"filename":"InWorld.js","lineno":115,"path":"src\\gameobjects\\components"},"description":"If this and the `autoCull` property are both set to `true`, then the `kill` method\ris called as soon as the Game Object leaves the camera bounds.","properties":[{"type":{"names":["boolean"]},"name":"outOfCameraBoundsKill"}],"defaultvalue":false,"name":"outOfCameraBoundsKill","longname":"Phaser.Component.InWorld#outOfCameraBoundsKill","kind":"member","memberof":"Phaser.Component.InWorld","scope":"instance","___s":true},{"meta":{"range":[4292,4429],"filename":"InWorld.js","lineno":129,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds are within, or intersect at any point with the Game World bounds.","properties":[{"type":{"names":["boolean"]},"name":"inWorld"}],"readonly":true,"name":"inWorld","longname":"Phaser.Component.InWorld#inWorld","kind":"member","memberof":"Phaser.Component.InWorld","scope":"instance","___s":true},{"meta":{"range":[258,300],"filename":"LifeSpan.js","lineno":12,"path":"src\\gameobjects\\components"},"description":"LifeSpan Component Features.","kind":"class","name":"LifeSpan","longname":"Phaser.Component.LifeSpan","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[422,711],"filename":"LifeSpan.js","lineno":20,"path":"src\\gameobjects\\components"},"description":"The LifeSpan component preUpdate handler.\rCalled automatically by the Game Object.","kind":"function","name":"preUpdate","longname":"Phaser.Component.LifeSpan.preUpdate","memberof":"Phaser.Component.LifeSpan","scope":"static","___s":true},{"meta":{"range":[1310,1321],"filename":"LifeSpan.js","lineno":50,"path":"src\\gameobjects\\components"},"description":"A useful flag to control if the Game Object is alive or dead.\r\rThis is set automatically by the Health components `damage` method should the object run out of health.\rOr you can toggle it via your game code.\r\rThis property is mostly just provided to be used by your game - it doesn't effect rendering or logic updates.\rHowever you can use `Group.getFirstAlive` in conjunction with this property for fast object pooling and recycling.","properties":[{"type":{"names":["boolean"]},"name":"alive"}],"defaultvalue":true,"name":"alive","longname":"Phaser.Component.LifeSpan#alive","kind":"member","memberof":"Phaser.Component.LifeSpan","scope":"instance","___s":true},{"meta":{"range":[1843,1854],"filename":"LifeSpan.js","lineno":65,"path":"src\\gameobjects\\components"},"description":"The lifespan allows you to give a Game Object a lifespan in milliseconds.\r\rOnce the Game Object is 'born' you can set this to a positive value.\r\rIt is automatically decremented by the millisecond equivalent of `game.time.physicsElapsed` each frame.\rWhen it reaches zero it will call the `kill` method.\r\rVery handy for particles, bullets, collectibles, or any other short-lived entity.","properties":[{"type":{"names":["number"]},"name":"lifespan"}],"defaultvalue":0,"name":"lifespan","longname":"Phaser.Component.LifeSpan#lifespan","kind":"member","memberof":"Phaser.Component.LifeSpan","scope":"instance","___s":true},{"meta":{"range":[2390,2807],"filename":"LifeSpan.js","lineno":78,"path":"src\\gameobjects\\components"},"description":"Brings a 'dead' Game Object back to life, optionally resetting its health value in the process.\r\rA resurrected Game Object has its `alive`, `exists` and `visible` properties all set to true.\r\rIt will dispatch the `onRevived` event. Listen to `events.onRevived` for the signal.","kind":"function","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"The health to give the Game Object. Only set if the GameObject has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"revive","longname":"Phaser.Component.LifeSpan#revive","memberof":"Phaser.Component.LifeSpan","scope":"instance","___s":true},{"meta":{"range":[3390,3634],"filename":"LifeSpan.js","lineno":113,"path":"src\\gameobjects\\components"},"description":"Kills a Game Object. A killed Game Object has its `alive`, `exists` and `visible` properties all set to false.\r\rIt will dispatch the `onKilled` event. You can listen to `events.onKilled` for the signal.\r\rNote that killing a Game Object is a way for you to quickly recycle it in an object pool,\rit doesn't destroy the object or free it up from memory.\r\rIf you don't need this Game Object any more you should call `destroy` instead.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"kill","longname":"Phaser.Component.LifeSpan#kill","memberof":"Phaser.Component.LifeSpan","scope":"instance","___s":true},{"meta":{"range":[337,382],"filename":"LoadTexture.js","lineno":12,"path":"src\\gameobjects\\components"},"description":"The LoadTexture component manages the loading of a texture into the Game Object and the changing of frames.","kind":"class","name":"LoadTexture","longname":"Phaser.Component.LoadTexture","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[2545,5312],"filename":"LoadTexture.js","lineno":51,"path":"src\\gameobjects\\components"},"description":"Changes the base texture the Game Object is using. The old texture is removed and the new one is referenced or fetched from the Cache.\r\rIf your Game Object is using a frame from a texture atlas and you just wish to change to another frame, then see the `frame` or `frameName` properties instead.\r\rYou should only use `loadTexture` if you want to replace the base texture entirely.\r\rCalling this method causes a WebGL texture update, so use sparingly or in low-intensity portions of your game, or if you know the new texture is already on the GPU.\r\rYou can use the new const `Phaser.PENDING_ATLAS` as the texture key for any sprite. \rDoing this then sets the key to be the `frame` argument (the frame is set to zero). \r\rThis allows you to create sprites using `load.image` during development, and then change them \rto use a Texture Atlas later in development by simply searching your code for 'PENDING_ATLAS' \rand swapping it to be the key of the atlas data.\r\rNote: You cannot use a RenderTexture as a texture for a TileSprite.","kind":"function","params":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If an animation is already playing on this Sprite you can choose to stop it or let it carry on playing.","name":"stopAnimation"}],"name":"loadTexture","longname":"Phaser.Component.LoadTexture#loadTexture","memberof":"Phaser.Component.LoadTexture","scope":"instance","___s":true},{"meta":{"range":[5633,7262],"filename":"LoadTexture.js","lineno":155,"path":"src\\gameobjects\\components"},"description":"Sets the texture frame the Game Object uses for rendering.\r\rThis is primarily an internal method used by `loadTexture`, but is exposed for the use of plugins and custom classes.","kind":"function","params":[{"type":{"names":["Phaser.Frame"]},"description":"The Frame to be used by the texture.","name":"frame"}],"name":"setFrame","longname":"Phaser.Component.LoadTexture#setFrame","memberof":"Phaser.Component.LoadTexture","scope":"instance","___s":true},{"meta":{"range":[7825,7986],"filename":"LoadTexture.js","lineno":220,"path":"src\\gameobjects\\components"},"description":"Resizes the Frame dimensions that the Game Object uses for rendering.\r\rYou shouldn't normally need to ever call this, but in the case of special texture types such as Video or BitmapData\rit can be useful to adjust the dimensions directly in this way.","kind":"function","params":[{"type":{"names":["object"]},"description":"The parent texture object that caused the resize, i.e. a Phaser.Video object.","name":"parent"},{"type":{"names":["integer"]},"description":"The new width of the texture.","name":"width"},{"type":{"names":["integer"]},"description":"The new height of the texture.","name":"height"}],"name":"resizeFrame","longname":"Phaser.Component.LoadTexture#resizeFrame","memberof":"Phaser.Component.LoadTexture","scope":"instance","___s":true},{"meta":{"range":[8118,8243],"filename":"LoadTexture.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"Resets the texture frame dimensions that the Game Object uses for rendering.","kind":"function","name":"resetFrame","longname":"Phaser.Component.LoadTexture#resetFrame","memberof":"Phaser.Component.LoadTexture","scope":"instance","___s":true},{"meta":{"range":[8868,9060],"filename":"LoadTexture.js","lineno":254,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame index of the texture being used to render this Game Object.\r\rTo change the frame set `frame` to the index of the new frame in the sprite sheet you wish this Game Object to use,\rfor example: `player.frame = 4`.\r\rIf the frame index given doesn't exist it will revert to the first frame found in the texture.\r\rIf you are using a texture atlas then you should use the `frameName` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["integer"]},"name":"frame"}],"name":"frame","longname":"Phaser.Component.LoadTexture#frame","kind":"member","memberof":"Phaser.Component.LoadTexture","scope":"instance","___s":true},{"meta":{"range":[9723,9927],"filename":"LoadTexture.js","lineno":279,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame name of the texture being used to render this Game Object.\r\rTo change the frame set `frameName` to the name of the new frame in the texture atlas you wish this Game Object to use, \rfor example: `player.frameName = \"idle\"`.\r\rIf the frame name given doesn't exist it will revert to the first frame found in the texture and throw a console warning.\r\rIf you are using a sprite sheet then you should use the `frame` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["string"]},"name":"frameName"}],"name":"frameName","longname":"Phaser.Component.LoadTexture#frameName","kind":"member","memberof":"Phaser.Component.LoadTexture","scope":"instance","___s":true},{"meta":{"range":[336,377],"filename":"Overlap.js","lineno":12,"path":"src\\gameobjects\\components"},"description":"The Overlap component allows a Game Object to check if it overlaps with the bounds of another Game Object.","kind":"class","name":"Overlap","longname":"Phaser.Component.Overlap","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[1339,1475],"filename":"Overlap.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"Checks to see if the bounds of this Game Object overlaps with the bounds of the given Display Object, \rwhich can be a Sprite, Image, TileSprite or anything that extends those such as Button or provides a `getBounds` method and result.\r\rThis check ignores the `hitArea` property if set and runs a `getBounds` comparison on both objects to determine the result.\r\rTherefore it's relatively expensive to use in large quantities, i.e. with lots of Sprites at a high frequency.\rIt should be fine for low-volume testing where physics isn't required.","kind":"function","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.TileSprite","Phaser.Button","PIXI.DisplayObject"]},"description":"The display object to check against.","name":"displayObject"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the bounds of this Game Object intersects at any point with the bounds of the given display object."}],"name":"overlap","longname":"Phaser.Component.Overlap#overlap","memberof":"Phaser.Component.Overlap","scope":"instance","___s":true},{"meta":{"range":[445,490],"filename":"PhysicsBody.js","lineno":13,"path":"src\\gameobjects\\components"},"description":"The PhysicsBody component manages the Game Objects physics body and physics enabling.\rIt also overrides the x and y properties, ensuring that any manual adjustment of them is reflected in the physics body itself.","kind":"class","name":"PhysicsBody","longname":"Phaser.Component.PhysicsBody","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[615,1433],"filename":"PhysicsBody.js","lineno":21,"path":"src\\gameobjects\\components"},"description":"The PhysicsBody component preUpdate handler.\rCalled automatically by the Game Object.","kind":"function","name":"preUpdate","longname":"Phaser.Component.PhysicsBody.preUpdate","memberof":"Phaser.Component.PhysicsBody","scope":"static","___s":true},{"meta":{"range":[1559,1703],"filename":"PhysicsBody.js","lineno":61,"path":"src\\gameobjects\\components"},"description":"The PhysicsBody component postUpdate handler.\rCalled automatically by the Game Object.","kind":"function","name":"postUpdate","longname":"Phaser.Component.PhysicsBody.postUpdate","memberof":"Phaser.Component.PhysicsBody","scope":"static","___s":true},{"meta":{"range":[2899,2909],"filename":"PhysicsBody.js","lineno":91,"path":"src\\gameobjects\\components"},"description":"`body` is the Game Objects physics body. Once a Game Object is enabled for physics you access all associated \rproperties and methods via it.\r\rBy default Game Objects won't add themselves to any physics system and their `body` property will be `null`.\r\rTo enable this Game Object for physics you need to call `game.physics.enable(object, system)` where `object` is this object\rand `system` is the Physics system you are using. If none is given it defaults to `Phaser.Physics.Arcade`.\r\rYou can alternatively call `game.physics.arcade.enable(object)`, or add this Game Object to a physics enabled Group.\r\rImportant: Enabling a Game Object for P2 or Ninja physics will automatically set its `anchor` property to 0.5, \rso the physics body is centered on the Game Object.\r\rIf you need a different result then adjust or re-create the Body shape offsets manually or reset the anchor after enabling physics.","properties":[{"type":{"names":["Phaser.Physics.Arcade.Body","Phaser.Physics.P2.Body","Phaser.Physics.Ninja.Body","null"]},"name":"body"}],"defaultvalue":null,"name":"body","longname":"Phaser.Component.PhysicsBody#body","kind":"member","memberof":"Phaser.Component.PhysicsBody","scope":"instance","___s":true},{"meta":{"range":[3072,3378],"filename":"PhysicsBody.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the x axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"x"}],"name":"x","longname":"Phaser.Component.PhysicsBody#x","kind":"member","memberof":"Phaser.Component.PhysicsBody","scope":"instance","___s":true},{"meta":{"range":[3541,3847],"filename":"PhysicsBody.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the y axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"y"}],"name":"y","longname":"Phaser.Component.PhysicsBody#y","kind":"member","memberof":"Phaser.Component.PhysicsBody","scope":"instance","___s":true},{"meta":{"range":[318,357],"filename":"Reset.js","lineno":12,"path":"src\\gameobjects\\components"},"description":"The Reset component allows a Game Object to be reset and repositioned to a new location.","kind":"class","name":"Reset","longname":"Phaser.Component.Reset","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[1061,1717],"filename":"Reset.js","lineno":30,"path":"src\\gameobjects\\components"},"description":"Resets the Game Object.\r\rThis moves the Game Object to the given x/y world coordinates and sets `fresh`, `exists`, \r`visible` and `renderable` to true.\r\rIf this Game Object has the LifeSpan component it will also set `alive` to true and `health` to the given value.\r\rIf this Game Object has a Physics Body it will reset the Body.","kind":"function","params":[{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the Game Object at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the Game Object at.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The health to give the Game Object if it has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"reset","longname":"Phaser.Component.Reset#reset","memberof":"Phaser.Component.Reset","scope":"instance","___s":true},{"meta":{"range":[325,370],"filename":"ScaleMinMax.js","lineno":12,"path":"src\\gameobjects\\components"},"description":"The ScaleMinMax component allows a Game Object to limit how far it can be scaled by its parent.","kind":"class","name":"ScaleMinMax","longname":"Phaser.Component.ScaleMinMax","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[566,589],"filename":"ScaleMinMax.js","lineno":20,"path":"src\\gameobjects\\components"},"description":"The callback that will apply any scale limiting to the worldTransform.","properties":[{"type":{"names":["function"]},"name":"transformCallback"}],"name":"transformCallback","longname":"Phaser.Component.ScaleMinMax#transformCallback","kind":"member","memberof":"Phaser.Component.ScaleMinMax","scope":"instance","___s":true},{"meta":{"range":[728,758],"filename":"ScaleMinMax.js","lineno":26,"path":"src\\gameobjects\\components"},"description":"The context under which `transformCallback` is called.","properties":[{"type":{"names":["object"]},"name":"transformCallbackContext"}],"name":"transformCallbackContext","longname":"Phaser.Component.ScaleMinMax#transformCallbackContext","kind":"member","memberof":"Phaser.Component.ScaleMinMax","scope":"instance","___s":true},{"meta":{"range":[1047,1061],"filename":"ScaleMinMax.js","lineno":36,"path":"src\\gameobjects\\components"},"description":"The minimum scale this Game Object will scale down to.\r\rIt allows you to prevent a parent from scaling this Game Object lower than the given value.\r\rSet it to `null` to remove the limit.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleMin"}],"name":"scaleMin","longname":"Phaser.Component.ScaleMinMax#scaleMin","kind":"member","memberof":"Phaser.Component.ScaleMinMax","scope":"instance","___s":true},{"meta":{"range":[1350,1364],"filename":"ScaleMinMax.js","lineno":46,"path":"src\\gameobjects\\components"},"description":"The maximum scale this Game Object will scale up to. \r\rIt allows you to prevent a parent from scaling this Game Object higher than the given value.\r\rSet it to `null` to remove the limit.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleMax"}],"name":"scaleMax","longname":"Phaser.Component.ScaleMinMax#scaleMax","kind":"member","memberof":"Phaser.Component.ScaleMinMax","scope":"instance","___s":true},{"meta":{"range":[3832,5155],"filename":"ScaleMinMax.js","lineno":110,"path":"src\\gameobjects\\components"},"description":"Sets the scaleMin and scaleMax values. These values are used to limit how far this Game Object will scale based on its parent.\r\rFor example if this Game Object has a `minScale` value of 1 and its parent has a `scale` value of 0.5, the 0.5 will be ignored \rand the scale value of 1 will be used, as the parents scale is lower than the minimum scale this Game Object should adhere to.\r\rBy setting these values you can carefully control how Game Objects deal with responsive scaling.\r\rIf only one parameter is given then that value will be used for both scaleMin and scaleMax:\r`setScaleMinMax(1)` = scaleMin.x, scaleMin.y, scaleMax.x and scaleMax.y all = 1\r\rIf only two parameters are given the first is set as scaleMin.x and y and the second as scaleMax.x and y:\r`setScaleMinMax(0.5, 2)` = scaleMin.x and y = 0.5 and scaleMax.x and y = 2\r\rIf you wish to set `scaleMin` with different values for x and y then either modify Game Object.scaleMin directly, \ror pass `null` for the `maxX` and `maxY` parameters.\r\rCall `setScaleMinMax(null)` to clear all previously set values.","kind":"function","params":[{"type":{"names":["number","null"]},"description":"The minimum horizontal scale value this Game Object can scale down to.","name":"minX"},{"type":{"names":["number","null"]},"description":"The minimum vertical scale value this Game Object can scale down to.","name":"minY"},{"type":{"names":["number","null"]},"description":"The maximum horizontal scale value this Game Object can scale up to.","name":"maxX"},{"type":{"names":["number","null"]},"description":"The maximum vertical scale value this Game Object can scale up to.","name":"maxY"}],"name":"setScaleMinMax","longname":"Phaser.Component.ScaleMinMax#setScaleMinMax","memberof":"Phaser.Component.ScaleMinMax","scope":"instance","___s":true},{"meta":{"range":[325,367],"filename":"Smoothed.js","lineno":12,"path":"src\\gameobjects\\components"},"description":"The Smoothed component allows a Game Object to control anti-aliasing of an image based texture.","kind":"class","name":"Smoothed","longname":"Phaser.Component.Smoothed","memberof":"Phaser.Component","scope":"static","___s":true},{"meta":{"range":[680,1221],"filename":"Smoothed.js","lineno":25,"path":"src\\gameobjects\\components"},"description":"Enable or disable texture smoothing for this Game Object.\r\rIt only takes effect if the Game Object is using an image based texture.\r\rSmoothing is enabled by default.","properties":[{"type":{"names":["boolean"]},"name":"smoothed"}],"name":"smoothed","longname":"Phaser.Component.Smoothed#smoothed","kind":"member","memberof":"Phaser.Component.Smoothed","scope":"instance","___s":true},{"meta":{"range":[2245,5166],"filename":"Creature.js","lineno":42,"path":"src\\gameobjects"},"description":"Creature is a custom Game Object used in conjunction with the Creature Runtime libraries by Kestrel Moon Studios.\r\rIt allows you to display animated Game Objects that were created with the [Creature Automated Animation Tool](http://www.kestrelmoon.com/creature/).\r\rNote 1: You can only use Phaser.Creature objects in WebGL enabled games. They do not work in Canvas mode games.\r\rNote 2: You must use a build of Phaser that includes the CreatureMeshBone.js runtime and gl-matrix.js, or have them\rloaded before your Phaser game boots.\r\rSee the Phaser custom build process for more details.\r\rBy default the Creature runtimes are NOT included in any pre-configured version of Phaser.\r\rSo you'll need to do `grunt custom` to create a build that includes them.","kind":"class","classdesc":"Phaser.Creature","augments":["PIXI.DisplayObjectContainer","Phaser.Component.Core","Phaser.Component.Angle","Phaser.Component.AutoCull","Phaser.Component.BringToTop","Phaser.Component.Destroy","Phaser.Component.FixedToCamera","Phaser.Component.LifeSpan","Phaser.Component.Reset"],"params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["number"]},"description":"The x coordinate of the Game Object. The coordinate is relative to any parent container this Game Object may be in.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the Game Object. The coordinate is relative to any parent container this Game Object may be in.","name":"y"},{"type":{"names":["string","PIXI.Texture"]},"description":"The texture used by the Creature Object during rendering. It can be a string which is a reference to the Cache entry, or an instance of a PIXI.Texture.","name":"key"},{"type":{"names":["string"]},"description":"The mesh data for the Creature Object. It should be a string which is a reference to the Cache JSON entry.","name":"mesh"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'default'","description":"The animation within the mesh data  to play.","name":"animation"}],"name":"Creature","longname":"Phaser.Creature","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[2477,2504],"filename":"Creature.js","lineno":50,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"readonly":true,"name":"type","longname":"Phaser.Creature#type","kind":"member","memberof":"Phaser.Creature","scope":"instance","___s":true},{"meta":{"range":[2970,3045],"filename":"Creature.js","lineno":69,"path":"src\\gameobjects"},"properties":[{"type":{"names":["CreatureAnimation"]},"description":"The CreatureAnimation instance.","name":"animation"}],"name":"animation","longname":"Phaser.Creature#animation","kind":"member","memberof":"Phaser.Creature","scope":"instance","___s":true},{"meta":{"range":[3162,3212],"filename":"Creature.js","lineno":74,"path":"src\\gameobjects"},"properties":[{"type":{"names":["CreatureManager"]},"description":"The CreatureManager instance for this object.","name":"manager"}],"name":"manager","longname":"Phaser.Creature#manager","kind":"member","memberof":"Phaser.Creature","scope":"instance","___s":true},{"meta":{"range":[3328,3349],"filename":"Creature.js","lineno":80,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"How quickly the animation advances.","name":"timeDelta"}],"defaultvalue":0.05,"name":"timeDelta","longname":"Phaser.Creature#timeDelta","kind":"member","memberof":"Phaser.Creature","scope":"instance","___s":true},{"meta":{"range":[3628,3650],"filename":"Creature.js","lineno":94,"path":"src\\gameobjects"},"properties":[{"type":{"names":["PIXI.Texture"]},"description":"The texture the animation is using.","name":"texture"}],"name":"texture","longname":"Phaser.Creature#texture","kind":"member","memberof":"Phaser.Creature","scope":"instance","___s":true},{"meta":{"range":[3891,3934],"filename":"Creature.js","lineno":105,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The minimum bounds point.","name":"creatureBoundsMin"}],"access":"protected","name":"creatureBoundsMin","longname":"Phaser.Creature#creatureBoundsMin","kind":"member","memberof":"Phaser.Creature","scope":"instance","___s":true},{"meta":{"range":[4056,4099],"filename":"Creature.js","lineno":111,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The maximum bounds point.","name":"creatureBoundsMax"}],"access":"protected","name":"creatureBoundsMax","longname":"Phaser.Creature#creatureBoundsMax","kind":"member","memberof":"Phaser.Creature","scope":"instance","___s":true},{"meta":{"range":[4264,4327],"filename":"Creature.js","lineno":119,"path":"src\\gameobjects"},"properties":[{"type":{"names":["PIXI.Float32Array"]},"description":"The vertices data.","name":"vertices"}],"access":"protected","name":"vertices","longname":"Phaser.Creature#vertices","kind":"member","memberof":"Phaser.Creature","scope":"instance","___s":true},{"meta":{"range":[4427,4485],"filename":"Creature.js","lineno":125,"path":"src\\gameobjects"},"properties":[{"type":{"names":["PIXI.Float32Array"]},"description":"The UV data.","name":"uvs"}],"access":"protected","name":"uvs","longname":"Phaser.Creature#uvs","kind":"member","memberof":"Phaser.Creature","scope":"instance","___s":true},{"meta":{"range":[4577,4642],"filename":"Creature.js","lineno":131,"path":"src\\gameobjects"},"properties":[{"type":{"names":["PIXI.Uint16Array"]},"name":"indices"}],"access":"protected","name":"indices","longname":"Phaser.Creature#indices","kind":"member","memberof":"Phaser.Creature","scope":"instance","___s":true},{"meta":{"range":[4875,4924],"filename":"Creature.js","lineno":142,"path":"src\\gameobjects"},"properties":[{"type":{"names":["PIXI.Uint16Array"]},"description":"The vertices colors","name":"colors"}],"access":"protected","name":"colors","longname":"Phaser.Creature#colors","kind":"member","memberof":"Phaser.Creature","scope":"instance","___s":true},{"meta":{"range":[5664,5784],"filename":"Creature.js","lineno":169,"path":"src\\gameobjects"},"description":"Automatically called by World.preUpdate.","kind":"function","name":"preUpdate","memberof":"Phaser.Creature","longname":"Phaser.Creature#preUpdate","scope":"instance","___s":true},{"meta":{"range":[12224,12473],"filename":"Creature.js","lineno":400,"path":"src\\gameobjects"},"description":"Sets the Animation this Creature object will play, as defined in the mesh data.","kind":"function","name":"setAnimation","memberof":"Phaser.Creature","params":[{"type":{"names":["string"]},"description":"The key of the animation to set, as defined in the mesh data.","name":"key"}],"longname":"Phaser.Creature#setAnimation","scope":"instance","___s":true},{"meta":{"range":[12597,12768],"filename":"Creature.js","lineno":413,"path":"src\\gameobjects"},"description":"Plays the currently set animation.","kind":"function","name":"play","memberof":"Phaser.Creature","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the animation loop?","name":"loop"}],"longname":"Phaser.Creature#play","scope":"instance","___s":true},{"meta":{"range":[12976,13089],"filename":"Creature.js","lineno":431,"path":"src\\gameobjects"},"description":"Stops the currently playing animation.","kind":"function","name":"stop","memberof":"Phaser.Creature","longname":"Phaser.Creature#stop","scope":"instance","___s":true},{"meta":{"range":[13188,13301],"filename":"Creature.js","lineno":443,"path":"src\\gameobjects"},"name":"isPlaying","properties":[{"type":{"names":["boolean"]},"description":"Is the _current_ animation playing?","name":"isPlaying"}],"memberof":"Phaser.Creature","longname":"Phaser.Creature#isPlaying","scope":"instance","kind":"member","___s":true},{"meta":{"range":[13543,13654],"filename":"Creature.js","lineno":463,"path":"src\\gameobjects"},"name":"loop","properties":[{"type":{"names":["boolean"]},"description":"Should the _current_ animation loop or not?","name":"loop"}],"memberof":"Phaser.Creature","longname":"Phaser.Creature#loop","scope":"instance","kind":"member","___s":true},{"meta":{"range":[537,870],"filename":"GameObjectCreator.js","lineno":15,"path":"src\\gameobjects"},"description":"The GameObjectCreator is a quick way to create common game objects _without_ adding them to the game world.\rThe object creator can be accessed with {@linkcode Phaser.Game#make `game.make`}.","kind":"class","classdesc":"Phaser.GameObjectCreator","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"GameObjectCreator","longname":"Phaser.GameObjectCreator","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[705,721],"filename":"GameObjectCreator.js","lineno":21,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running Game.","name":"game"}],"access":"protected","name":"game","longname":"Phaser.GameObjectCreator#game","kind":"member","memberof":"Phaser.GameObjectCreator","scope":"instance","___s":true},{"meta":{"range":[836,864],"filename":"GameObjectCreator.js","lineno":27,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.World"]},"description":"A reference to the game world.","name":"world"}],"access":"protected","name":"world","longname":"Phaser.GameObjectCreator#world","kind":"member","memberof":"Phaser.GameObjectCreator","scope":"instance","___s":true},{"meta":{"range":[921,1900],"filename":"GameObjectCreator.js","lineno":33,"path":"src\\gameobjects"},"description":"Create a new Image object.\r\rAn Image is a light-weight object you can use to display anything that doesn't need physics or animation.\rIt can still rotate, scale, crop and receive input events. This makes it perfect for logos, backgrounds, simple buttons and other non-Sprite graphics.","kind":"function","name":"image","params":[{"type":{"names":["number"]},"description":"X position of the image.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the image.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","PIXI.Texture"]},"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If the sprite uses an image from a texture atlas or sprite sheet you can pass the frame here. Either a number for a frame ID or a string for a frame name.","name":"frame"}],"returns":[{"type":{"names":["Phaser.Image"]},"description":"the newly created sprite object."}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#image","scope":"instance","___s":true},{"meta":{"range":[2025,2776],"filename":"GameObjectCreator.js","lineno":52,"path":"src\\gameobjects"},"description":"Create a new Sprite with specific position and sprite sheet key.","kind":"function","name":"sprite","params":[{"type":{"names":["number"]},"description":"X position of the new sprite.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the new sprite.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","PIXI.Texture"]},"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If the sprite uses an image from a texture atlas or sprite sheet you can pass the frame here. Either a number for a frame ID or a string for a frame name.","name":"frame"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"the newly created sprite object."}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#sprite","scope":"instance","___s":true},{"meta":{"range":[2903,3216],"filename":"GameObjectCreator.js","lineno":68,"path":"src\\gameobjects"},"description":"Create a tween object for a specific object.\r\rThe object can be any JavaScript object or Phaser object such as Sprite.","kind":"function","name":"tween","params":[{"type":{"names":["object"]},"description":"Object the tween will be run on.","name":"obj"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"The Tween object."}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#tween","scope":"instance","___s":true},{"meta":{"range":[3333,4320],"filename":"GameObjectCreator.js","lineno":83,"path":"src\\gameobjects"},"description":"A Group is a container for display objects that allows for fast pooling, recycling and collision checks.","kind":"function","name":"group","params":[{"type":{"names":["any"]},"description":"The parent Group or DisplayObjectContainer that will hold this group, if any.","name":"parent"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'group'","description":"A name for this Group. Not used internally but useful for debugging.","name":"name"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set to true this Group will be added directly to the Game.Stage instead of Game.World.","name":"addToStage"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true all Sprites created with `Group.create` or `Group.createMulitple` will have a physics body created on them. Change the body type with physicsBodyType.","name":"enableBody"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If enableBody is true this is the type of physics body that is created on new Sprites. Phaser.Physics.ARCADE, Phaser.Physics.P2, Phaser.Physics.NINJA, etc.","name":"physicsBodyType"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"The newly created Group."}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#group","scope":"instance","___s":true},{"meta":{"range":[4519,5034],"filename":"GameObjectCreator.js","lineno":100,"path":"src\\gameobjects"},"description":"Create a new SpriteBatch.","kind":"function","name":"spriteBatch","params":[{"type":{"names":["any"]},"description":"The parent Group or DisplayObjectContainer that will hold this group, if any.","name":"parent"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'group'","description":"A name for this Group. Not used internally but useful for debugging.","name":"name"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set to true this Group will be added directly to the Game.Stage instead of Game.World.","name":"addToStage"}],"returns":[{"type":{"names":["Phaser.SpriteBatch"]},"description":"The newly created group."}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#spriteBatch","scope":"instance","___s":true},{"meta":{"range":[5305,5873],"filename":"GameObjectCreator.js","lineno":118,"path":"src\\gameobjects"},"description":"Creates a new Sound object.","kind":"function","name":"audio","params":[{"type":{"names":["string"]},"description":"The Game.cache key of the sound that this object will use.","name":"key"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The volume at which the sound will be played.","name":"volume"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Whether or not the sound will loop.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Controls if the created Sound object will connect to the master gainNode of the SoundManager when running under WebAudio.","name":"connect"}],"returns":[{"type":{"names":["Phaser.Sound"]},"description":"The newly created text object."}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#audio","scope":"instance","___s":true},{"meta":{"range":[6010,6289],"filename":"GameObjectCreator.js","lineno":134,"path":"src\\gameobjects"},"description":"Creates a new AudioSprite object.","kind":"function","name":"audioSprite","params":[{"type":{"names":["string"]},"description":"The Game.cache key of the sound that this object will use.","name":"key"}],"returns":[{"type":{"names":["Phaser.AudioSprite"]},"description":"The newly created AudioSprite object."}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#audioSprite","scope":"instance","___s":true},{"meta":{"range":[6392,6960],"filename":"GameObjectCreator.js","lineno":147,"path":"src\\gameobjects"},"description":"Creates a new Sound object.","kind":"function","name":"sound","params":[{"type":{"names":["string"]},"description":"The Game.cache key of the sound that this object will use.","name":"key"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The volume at which the sound will be played.","name":"volume"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Whether or not the sound will loop.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Controls if the created Sound object will connect to the master gainNode of the SoundManager when running under WebAudio.","name":"connect"}],"returns":[{"type":{"names":["Phaser.Sound"]},"description":"The newly created text object."}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#sound","scope":"instance","___s":true},{"meta":{"range":[7097,8017],"filename":"GameObjectCreator.js","lineno":163,"path":"src\\gameobjects"},"description":"Creates a new TileSprite object.","kind":"function","name":"tileSprite","params":[{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the TileSprite at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the TileSprite at.","name":"y"},{"type":{"names":["number"]},"description":"The width of the TileSprite.","name":"width"},{"type":{"names":["number"]},"description":"The height of the TileSprite.","name":"height"},{"type":{"names":["string","Phaser.BitmapData","PIXI.Texture"]},"description":"This is the image or texture used by the TileSprite during rendering. It can be a string which is a reference to the Phaser Image Cache entry, or an instance of a PIXI.Texture or BitmapData.","name":"key"},{"type":{"names":["string","number"]},"description":"If this TileSprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["Phaser.TileSprite"]},"description":"The newly created tileSprite object."}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#tileSprite","scope":"instance","___s":true},{"meta":{"range":[8182,9059],"filename":"GameObjectCreator.js","lineno":181,"path":"src\\gameobjects"},"description":"Creates a new Rope object.","kind":"function","name":"rope","params":[{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the Rope at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the Rope at.","name":"y"},{"type":{"names":["number"]},"description":"The width of the Rope.","name":"width"},{"type":{"names":["number"]},"description":"The height of the Rope.","name":"height"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","PIXI.Texture"]},"description":"This is the image or texture used by the TileSprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"description":"If this Rope is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["Phaser.Rope"]},"description":"The newly created rope object."}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#rope","scope":"instance","___s":true},{"meta":{"range":[9198,9651],"filename":"GameObjectCreator.js","lineno":199,"path":"src\\gameobjects"},"description":"Creates a new Text object.","kind":"function","name":"text","params":[{"type":{"names":["number"]},"description":"X position of the new text object.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the new text object.","name":"y"},{"type":{"names":["string"]},"description":"The actual text that will be written.","name":"text"},{"type":{"names":["object"]},"description":"The style object containing style attributes like font, font size , etc.","name":"style"}],"returns":[{"type":{"names":["Phaser.Text"]},"description":"The newly created text object."}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#text","scope":"instance","___s":true},{"meta":{"range":[9776,11153],"filename":"GameObjectCreator.js","lineno":215,"path":"src\\gameobjects"},"description":"Creates a new Button object.","kind":"function","name":"button","params":[{"type":{"names":["number"]},"optional":true,"description":"X position of the new button object.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"Y position of the new button object.","name":"y"},{"type":{"names":["string"]},"optional":true,"description":"The image key as defined in the Game.Cache to use as the texture for this button.","name":"key"},{"type":{"names":["function"]},"optional":true,"description":"The function to call when this button is pressed","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the callback will be called (usually 'this')","name":"callbackContext"},{"type":{"names":["string","number"]},"optional":true,"description":"This is the frame or frameName that will be set when this button is in an over state. Give either a number to use a frame ID or a string for a frame name.","name":"overFrame"},{"type":{"names":["string","number"]},"optional":true,"description":"This is the frame or frameName that will be set when this button is in an out state. Give either a number to use a frame ID or a string for a frame name.","name":"outFrame"},{"type":{"names":["string","number"]},"optional":true,"description":"This is the frame or frameName that will be set when this button is in a down state. Give either a number to use a frame ID or a string for a frame name.","name":"downFrame"},{"type":{"names":["string","number"]},"optional":true,"description":"This is the frame or frameName that will be set when this button is in an up state. Give either a number to use a frame ID or a string for a frame name.","name":"upFrame"}],"returns":[{"type":{"names":["Phaser.Button"]},"description":"The newly created button object."}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#button","scope":"instance","___s":true},{"meta":{"range":[11402,11715],"filename":"GameObjectCreator.js","lineno":236,"path":"src\\gameobjects"},"description":"Creates a new Graphics object.","kind":"function","name":"graphics","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"X position of the new graphics object.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Y position of the new graphics object.","name":"y"}],"returns":[{"type":{"names":["Phaser.Graphics"]},"description":"The newly created graphics object."}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#graphics","scope":"instance","___s":true},{"meta":{"range":[11822,12561],"filename":"GameObjectCreator.js","lineno":250,"path":"src\\gameobjects"},"description":"Creat a new Emitter.\r\rAn Emitter is a lightweight particle emitter. It can be used for one-time explosions or for\rcontinuous effects like rain and fire. All it really does is launch Particle objects out\rat set intervals, and fixes their positions and velocities accorindgly.","kind":"function","name":"emitter","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate within the Emitter that the particles are emitted from.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate within the Emitter that the particles are emitted from.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":50,"description":"The total number of particles in this emitter.","name":"maxParticles"}],"returns":[{"type":{"names":["Phaser.Emitter"]},"description":"The newly created emitter object."}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#emitter","scope":"instance","___s":true},{"meta":{"range":[12711,14807],"filename":"GameObjectCreator.js","lineno":269,"path":"src\\gameobjects"},"description":"Create a new RetroFont object.\r\rA RetroFont can be used as a texture for an Image or Sprite and optionally add it to the Cache.\rA RetroFont uses a bitmap which contains fixed with characters for the font set. You use character spacing to define the set.\rIf you need variable width character support then use a BitmapText object instead. The main difference between a RetroFont and a BitmapText\ris that a RetroFont creates a single texture that you can apply to a game object, where-as a BitmapText creates one Sprite object per letter of text.\rThe texture can be asssigned or one or multiple images/sprites, but note that the text the RetroFont uses will be shared across them all,\ri.e. if you need each Image to have different text in it, then you need to create multiple RetroFont objects.","kind":"function","name":"retroFont","params":[{"type":{"names":["string"]},"description":"The key of the image in the Game.Cache that the RetroFont will use.","name":"font"},{"type":{"names":["number"]},"description":"The width of each character in the font set.","name":"characterWidth"},{"type":{"names":["number"]},"description":"The height of each character in the font set.","name":"characterHeight"},{"type":{"names":["string"]},"description":"The characters used in the font set, in display order. You can use the TEXT_SET consts for common font set arrangements.","name":"chars"},{"type":{"names":["number"]},"description":"The number of characters per row in the font set.","name":"charsPerRow"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the characters in the font set have horizontal spacing between them set the required amount here.","name":"xSpacing"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the characters in the font set have vertical spacing between them set the required amount here.","name":"ySpacing"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the font set doesn't start at the top left of the given image, specify the X coordinate offset here.","name":"xOffset"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the font set doesn't start at the top left of the given image, specify the Y coordinate offset here.","name":"yOffset"}],"returns":[{"type":{"names":["Phaser.RetroFont"]},"description":"The newly created RetroFont texture which can be applied to an Image or Sprite."}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#retroFont","scope":"instance","___s":true},{"meta":{"range":[15098,16877],"filename":"GameObjectCreator.js","lineno":297,"path":"src\\gameobjects"},"description":"Create a new BitmapText object.\r\rBitmapText objects work by taking a texture file and an XML file that describes the font structure.\rIt then generates a new Sprite object for each letter of the text, proportionally spaced out and aligned to \rmatch the font structure.\r\rBitmapText objects are less flexible than Text objects, in that they have less features such as shadows, fills and the ability \rto use Web Fonts. However you trade this flexibility for pure rendering speed. You can also create visually compelling BitmapTexts by \rprocessing the font texture in an image editor first, applying fills and any other effects required.\r\rTo create multi-line text insert \\r, \\n or \\r\\n escape codes into the text string.\r\rTo create a BitmapText data files you can use:\r\rBMFont (Windows, free): http://www.angelcode.com/products/bmfont/\rGlyph Designer (OS X, commercial): http://www.71squared.com/en/glyphdesigner\rLittera (Web-based, free): http://kvazars.com/littera/","kind":"function","name":"bitmapText","params":[{"type":{"names":["number"]},"description":"X coordinate to display the BitmapText object at.","name":"x"},{"type":{"names":["number"]},"description":"Y coordinate to display the BitmapText object at.","name":"y"},{"type":{"names":["string"]},"description":"The key of the BitmapText as stored in Phaser.Cache.","name":"font"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"''","description":"The text that will be rendered. This can also be set later via BitmapText.text.","name":"text"},{"type":{"names":["number"]},"optional":true,"defaultvalue":32,"description":"The size the font will be rendered at in pixels.","name":"size"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'left'","description":"The alignment of multi-line text. Has no effect if there is only one line of text.","name":"align"}],"returns":[{"type":{"names":["Phaser.BitmapText"]},"description":"The newly created bitmapText object."}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#bitmapText","scope":"instance","___s":true},{"meta":{"range":[17038,18560],"filename":"GameObjectCreator.js","lineno":331,"path":"src\\gameobjects"},"description":"Creates a new Phaser.Tilemap object.\r\rThe map can either be populated with data from a Tiled JSON file or from a CSV file.\rTo do this pass the Cache key as the first parameter. When using Tiled data you need only provide the key.\rWhen using CSV data you must provide the key and the tileWidth and tileHeight parameters.\rIf creating a blank tilemap to be populated later, you can either specify no parameters at all and then use `Tilemap.create` or pass the map and tile dimensions here.\rNote that all Tilemaps use a base tile size to calculate dimensions from, but that a TilemapLayer may have its own unique tile size that overrides it.","kind":"function","name":"tilemap","params":[{"type":{"names":["string"]},"optional":true,"description":"The key of the tilemap data as stored in the Cache. If you're creating a blank map either leave this parameter out or pass `null`.","name":"key"},{"type":{"names":["number"]},"optional":true,"defaultvalue":32,"description":"The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.","name":"tileWidth"},{"type":{"names":["number"]},"optional":true,"defaultvalue":32,"description":"The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.","name":"tileHeight"},{"type":{"names":["number"]},"optional":true,"defaultvalue":10,"description":"The width of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.","name":"width"},{"type":{"names":["number"]},"optional":true,"defaultvalue":10,"description":"The height of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.","name":"height"}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#tilemap","scope":"instance","___s":true},{"meta":{"range":[18739,19370],"filename":"GameObjectCreator.js","lineno":353,"path":"src\\gameobjects"},"description":"A dynamic initially blank canvas to which images can be drawn.","kind":"function","name":"renderTexture","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"the width of the RenderTexture.","name":"width"},{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"the height of the RenderTexture.","name":"height"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"''","description":"Asset key for the RenderTexture when stored in the Cache (see addToCache parameter).","name":"key"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should this RenderTexture be added to the Game.Cache? If so you can retrieve it with Cache.getTexture(key)","name":"addToCache"}],"returns":[{"type":{"names":["Phaser.RenderTexture"]},"description":"The newly created RenderTexture object."}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#renderTexture","scope":"instance","___s":true},{"meta":{"range":[19814,20540],"filename":"GameObjectCreator.js","lineno":379,"path":"src\\gameobjects"},"description":"Create a BitmpaData object.\r\rA BitmapData object can be manipulated and drawn to like a traditional Canvas object and used to texture Sprites.","kind":"function","name":"bitmapData","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":256,"description":"The width of the BitmapData in pixels.","name":"width"},{"type":{"names":["number"]},"optional":true,"defaultvalue":256,"description":"The height of the BitmapData in pixels.","name":"height"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"''","description":"Asset key for the BitmapData when stored in the Cache (see addToCache parameter).","name":"key"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should this BitmapData be added to the Game.Cache? If so you can retrieve it with Cache.getBitmapData(key)","name":"addToCache"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"The newly created BitmapData object."}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#bitmapData","scope":"instance","___s":true},{"meta":{"range":[20975,21377],"filename":"GameObjectCreator.js","lineno":407,"path":"src\\gameobjects"},"description":"A WebGL shader/filter that can be applied to Sprites.","kind":"function","name":"filter","params":[{"type":{"names":["string"]},"description":"The name of the filter you wish to create, for example HueRotate or SineWave.","name":"filter"},{"type":{"names":["any"]},"description":"Whatever parameters are needed to be passed to the filter init function."}],"returns":[{"type":{"names":["Phaser.Filter"]},"description":"The newly created Phaser.Filter object."}],"memberof":"Phaser.GameObjectCreator","longname":"Phaser.GameObjectCreator#filter","scope":"instance","___s":true},{"meta":{"range":[584,917],"filename":"GameObjectFactory.js","lineno":17,"path":"src\\gameobjects"},"description":"The GameObjectFactory is a quick way to create many common game objects\rusing {@linkcode Phaser.Game#add `game.add`}.\r\rCreated objects are _automatically added_ to the appropriate Manager, World, or manually specified parent Group.","kind":"class","classdesc":"Phaser.GameObjectFactory","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"GameObjectFactory","longname":"Phaser.GameObjectFactory","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[752,768],"filename":"GameObjectFactory.js","lineno":23,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running Game.","name":"game"}],"access":"protected","name":"game","longname":"Phaser.GameObjectFactory#game","kind":"member","memberof":"Phaser.GameObjectFactory","scope":"instance","___s":true},{"meta":{"range":[883,911],"filename":"GameObjectFactory.js","lineno":29,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.World"]},"description":"A reference to the game world.","name":"world"}],"access":"protected","name":"world","longname":"Phaser.GameObjectFactory#world","kind":"member","memberof":"Phaser.GameObjectFactory","scope":"instance","___s":true},{"meta":{"range":[968,1256],"filename":"GameObjectFactory.js","lineno":35,"path":"src\\gameobjects"},"description":"Adds an existing display object to the game world.","kind":"function","name":"existing","params":[{"type":{"names":["any"]},"description":"An instance of Phaser.Sprite, Phaser.Button or any other display object.","name":"object"}],"returns":[{"type":{"names":["any"]},"description":"The child that was added to the World."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#existing","scope":"instance","___s":true},{"meta":{"range":[1351,2980],"filename":"GameObjectFactory.js","lineno":48,"path":"src\\gameobjects"},"description":"Weapons provide the ability to easily create a bullet pool and manager.\r\rWeapons fire Phaser.Bullet objects, which are essentially Sprites with a few extra properties.\rThe Bullets are enabled for Arcade Physics. They do not currently work with P2 Physics.\r\rThe Bullets are created inside of `Weapon.bullets`, which is a Phaser.Group instance. Anything you\rcan usually do with a Group, such as move it around the display list, iterate it, etc can be done\rto the bullets Group too.\r\rBullets can have textures and even animations. You can control the speed at which they are fired,\rthe firing rate, the firing angle, and even set things like gravity for them.","kind":"function","name":"weapon","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":1,"description":"The quantity of bullets to seed the Weapon with. If -1 it will set the pool to automatically expand.","name":"quantity"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"The image used as a texture by the bullets during rendering. If a string Phaser will get for an entry in the Image Cache. Or it can be an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If a Texture Atlas or Sprite Sheet is used this allows you to specify the frame to be used by the bullets. Use either an integer for a Frame ID or a string for a frame name.","name":"frame"},{"type":{"names":["Phaser.Group"]},"optional":true,"description":"Optional Group to add the Weapon to. If not specified it will be added to the World group.","name":"group"}],"returns":[{"type":{"names":["Phaser.Weapon"]},"description":"A Weapon instance."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#weapon","scope":"instance","___s":true},{"meta":{"range":[3202,4565],"filename":"GameObjectFactory.js","lineno":78,"path":"src\\gameobjects"},"description":"Create a new `Image` object.\r\rAn Image is a light-weight object you can use to display anything that doesn't need physics or animation.\r\rIt can still rotate, scale, crop and receive input events. \rThis makes it perfect for logos, backgrounds, simple buttons and other non-Sprite graphics.","kind":"function","name":"image","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of the Image. The coordinate is relative to any parent container this Image may be in.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of the Image. The coordinate is relative to any parent container this Image may be in.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"The image used as a texture by this display object during rendering. If a string Phaser will get for an entry in the Image Cache. Or it can be an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If a Texture Atlas or Sprite Sheet is used this allows you to specify the frame to be used. Use either an integer for a Frame ID or a string for a frame name.","name":"frame"},{"type":{"names":["Phaser.Group"]},"optional":true,"description":"Optional Group to add the object to. If not specified it will be added to the World group.","name":"group"}],"returns":[{"type":{"names":["Phaser.Image"]},"description":"The newly created Image object."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#image","scope":"instance","___s":true},{"meta":{"range":[4768,6258],"filename":"GameObjectFactory.js","lineno":102,"path":"src\\gameobjects"},"description":"Create a new Sprite with specific position and sprite sheet key.\r\rAt its most basic a Sprite consists of a set of coordinates and a texture that is used when rendered.\rThey also contain additional properties allowing for physics motion (via Sprite.body), input handling (via Sprite.input),\revents (via Sprite.events), animation (via Sprite.animations), camera culling and more. Please see the Examples for use cases.","kind":"function","name":"sprite","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of the sprite. The coordinate is relative to any parent container this sprite may be in.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of the sprite. The coordinate is relative to any parent container this sprite may be in.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"The image used as a texture by this display object during rendering. If a string Phaser will get for an entry in the Image Cache. Or it can be an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If a Texture Atlas or Sprite Sheet is used this allows you to specify the frame to be used. Use either an integer for a Frame ID or a string for a frame name.","name":"frame"},{"type":{"names":["Phaser.Group"]},"optional":true,"description":"Optional Group to add the object to. If not specified it will be added to the World group.","name":"group"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"The newly created Sprite object."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#sprite","scope":"instance","___s":true},{"meta":{"range":[6436,7911],"filename":"GameObjectFactory.js","lineno":125,"path":"src\\gameobjects"},"description":"Create a new Creature Animation object.\r\rCreature is a custom Game Object used in conjunction with the Creature Runtime libraries by Kestrel Moon Studios.\r\rIt allows you to display animated Game Objects that were created with the [Creature Automated Animation Tool](http://www.kestrelmoon.com/creature/).\r\rNote 1: You can only use Phaser.Creature objects in WebGL enabled games. They do not work in Canvas mode games.\r\rNote 2: You must use a build of Phaser that includes the CreatureMeshBone.js runtime and gl-matrix.js, or have them\rloaded before your Phaser game boots.\r\rSee the Phaser custom build process for more details.","kind":"function","name":"creature","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of the creature. The coordinate is relative to any parent container this creature may be in.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of the creature. The coordinate is relative to any parent container this creature may be in.","name":"y"},{"type":{"names":["string","PIXI.Texture"]},"optional":true,"description":"The image used as a texture by this creature object during rendering. If a string Phaser will get for an entry in the Image Cache. Or it can be an instance of a PIXI.Texture.","name":"key"},{"type":{"names":["Phaser.Group"]},"optional":true,"description":"Optional Group to add the object to. If not specified it will be added to the World group.","name":"group"}],"returns":[{"type":{"names":["Phaser.Creature"]},"description":"The newly created Sprite object."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#creature","scope":"instance","___s":true},{"meta":{"range":[8160,8490],"filename":"GameObjectFactory.js","lineno":158,"path":"src\\gameobjects"},"description":"Create a tween on a specific object.\r\rThe object can be any JavaScript object or Phaser object such as Sprite.","kind":"function","name":"tween","params":[{"type":{"names":["object"]},"description":"Object the tween will be run on.","name":"object"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"The newly created Phaser.Tween object."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#tween","scope":"instance","___s":true},{"meta":{"range":[8591,9692],"filename":"GameObjectFactory.js","lineno":173,"path":"src\\gameobjects"},"description":"A Group is a container for display objects that allows for fast pooling, recycling and collision checks.","kind":"function","name":"group","params":[{"type":{"names":["any"]},"optional":true,"description":"The parent Group or DisplayObjectContainer that will hold this group, if any. If set to null the Group won't be added to the display list. If undefined it will be added to World by default.","name":"parent"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'group'","description":"A name for this Group. Not used internally but useful for debugging.","name":"name"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set to true this Group will be added directly to the Game.Stage instead of Game.World.","name":"addToStage"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true all Sprites created with `Group.create` or `Group.createMulitple` will have a physics body created on them. Change the body type with physicsBodyType.","name":"enableBody"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If enableBody is true this is the type of physics body that is created on new Sprites. Phaser.Physics.ARCADE, Phaser.Physics.P2, Phaser.Physics.NINJA, etc.","name":"physicsBodyType"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"The newly created Group."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#group","scope":"instance","___s":true},{"meta":{"range":[9891,11006],"filename":"GameObjectFactory.js","lineno":190,"path":"src\\gameobjects"},"description":"A Group is a container for display objects that allows for fast pooling, recycling and collision checks.\r\rA Physics Group is the same as an ordinary Group except that is has enableBody turned on by default, so any Sprites it creates\rare automatically given a physics body.","kind":"function","name":"physicsGroup","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":"Phaser.Physics.ARCADE","description":"If enableBody is true this is the type of physics body that is created on new Sprites. Phaser.Physics.ARCADE, Phaser.Physics.P2JS, Phaser.Physics.NINJA, etc.","name":"physicsBodyType"},{"type":{"names":["any"]},"optional":true,"description":"The parent Group or DisplayObjectContainer that will hold this group, if any. If set to null the Group won't be added to the display list. If undefined it will be added to World by default.","name":"parent"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'group'","description":"A name for this Group. Not used internally but useful for debugging.","name":"name"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set to true this Group will be added directly to the Game.Stage instead of Game.World.","name":"addToStage"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"The newly created Group."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#physicsGroup","scope":"instance","___s":true},{"meta":{"range":[11194,12018],"filename":"GameObjectFactory.js","lineno":209,"path":"src\\gameobjects"},"description":"A SpriteBatch is a really fast version of a Phaser Group built solely for speed.\rUse when you need a lot of sprites or particles all sharing the same texture.\rThe speed gains are specifically for WebGL. In Canvas mode you won't see any real difference.","kind":"function","name":"spriteBatch","params":[{"type":{"names":["Phaser.Group","null"]},"description":"The parent Group that will hold this Sprite Batch. Set to `undefined` or `null` to add directly to game.world.","name":"parent"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'group'","description":"A name for this Sprite Batch. Not used internally but useful for debugging.","name":"name"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set to true this Sprite Batch will be added directly to the Game.Stage instead of the parent.","name":"addToStage"}],"returns":[{"type":{"names":["Phaser.SpriteBatch"]},"description":"The newly created Sprite Batch."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#spriteBatch","scope":"instance","___s":true},{"meta":{"range":[12343,12912],"filename":"GameObjectFactory.js","lineno":230,"path":"src\\gameobjects"},"description":"Creates a new Sound object.","kind":"function","name":"audio","params":[{"type":{"names":["string"]},"description":"The Game.cache key of the sound that this object will use.","name":"key"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The volume at which the sound will be played.","name":"volume"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Whether or not the sound will loop.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Controls if the created Sound object will connect to the master gainNode of the SoundManager when running under WebAudio.","name":"connect"}],"returns":[{"type":{"names":["Phaser.Sound"]},"description":"The newly created sound object."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#audio","scope":"instance","___s":true},{"meta":{"range":[13049,13618],"filename":"GameObjectFactory.js","lineno":246,"path":"src\\gameobjects"},"description":"Creates a new Sound object.","kind":"function","name":"sound","params":[{"type":{"names":["string"]},"description":"The Game.cache key of the sound that this object will use.","name":"key"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The volume at which the sound will be played.","name":"volume"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Whether or not the sound will loop.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Controls if the created Sound object will connect to the master gainNode of the SoundManager when running under WebAudio.","name":"connect"}],"returns":[{"type":{"names":["Phaser.Sound"]},"description":"The newly created sound object."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#sound","scope":"instance","___s":true},{"meta":{"range":[13755,14034],"filename":"GameObjectFactory.js","lineno":262,"path":"src\\gameobjects"},"description":"Creates a new AudioSprite object.","kind":"function","name":"audioSprite","params":[{"type":{"names":["string"]},"description":"The Game.cache key of the sound that this object will use.","name":"key"}],"returns":[{"type":{"names":["Phaser.AudioSprite"]},"description":"The newly created AudioSprite object."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#audioSprite","scope":"instance","___s":true},{"meta":{"range":[14137,15302],"filename":"GameObjectFactory.js","lineno":275,"path":"src\\gameobjects"},"description":"Creates a new TileSprite object.","kind":"function","name":"tileSprite","params":[{"type":{"names":["number"]},"description":"The x coordinate of the TileSprite. The coordinate is relative to any parent container this TileSprite may be in.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the TileSprite. The coordinate is relative to any parent container this TileSprite may be in.","name":"y"},{"type":{"names":["number"]},"description":"The width of the TileSprite.","name":"width"},{"type":{"names":["number"]},"description":"The height of the TileSprite.","name":"height"},{"type":{"names":["string","Phaser.BitmapData","PIXI.Texture"]},"description":"This is the image or texture used by the TileSprite during rendering. It can be a string which is a reference to the Phaser Image Cache entry, or an instance of a PIXI.Texture or BitmapData.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If a Texture Atlas or Sprite Sheet is used this allows you to specify the frame to be used. Use either an integer for a Frame ID or a string for a frame name.","name":"frame"},{"type":{"names":["Phaser.Group"]},"optional":true,"description":"Optional Group to add the object to. If not specified it will be added to the World group.","name":"group"}],"returns":[{"type":{"names":["Phaser.TileSprite"]},"description":"The newly created TileSprite object."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#tileSprite","scope":"instance","___s":true},{"meta":{"range":[15545,16763],"filename":"GameObjectFactory.js","lineno":296,"path":"src\\gameobjects"},"description":"Creates a new Rope object.\r\rExample usage: https://github.com/codevinsky/phaser-rope-demo/blob/master/dist/demo.js","kind":"function","name":"rope","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of the Rope. The coordinate is relative to any parent container this rope may be in.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of the Rope. The coordinate is relative to any parent container this rope may be in.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"The image used as a texture by this display object during rendering. If a string Phaser will get for an entry in the Image Cache. Or it can be an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If a Texture Atlas or Sprite Sheet is used this allows you to specify the frame to be used. Use either an integer for a Frame ID or a string for a frame name.","name":"frame"},{"type":{"names":["Array"]},"description":"An array of {Phaser.Point}.","name":"points"},{"type":{"names":["Phaser.Group"]},"optional":true,"description":"Optional Group to add the object to. If not specified it will be added to the World group.","name":"group"}],"returns":[{"type":{"names":["Phaser.Rope"]},"description":"The newly created Rope object."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#rope","scope":"instance","___s":true},{"meta":{"range":[16980,17714],"filename":"GameObjectFactory.js","lineno":318,"path":"src\\gameobjects"},"description":"Creates a new Text object.","kind":"function","name":"text","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of the Text. The coordinate is relative to any parent container this text may be in.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of the Text. The coordinate is relative to any parent container this text may be in.","name":"y"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"''","description":"The text string that will be displayed.","name":"text"},{"type":{"names":["object"]},"optional":true,"description":"The style object containing style attributes like font, font size , etc.","name":"style"},{"type":{"names":["Phaser.Group"]},"optional":true,"description":"Optional Group to add the object to. If not specified it will be added to the World group.","name":"group"}],"returns":[{"type":{"names":["Phaser.Text"]},"description":"The newly created text object."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#text","scope":"instance","___s":true},{"meta":{"range":[17917,19584],"filename":"GameObjectFactory.js","lineno":337,"path":"src\\gameobjects"},"description":"Creates a new Button object.","kind":"function","name":"button","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of the Button. The coordinate is relative to any parent container this button may be in.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of the Button. The coordinate is relative to any parent container this button may be in.","name":"y"},{"type":{"names":["string"]},"optional":true,"description":"The image key as defined in the Game.Cache to use as the texture for this button.","name":"key"},{"type":{"names":["function"]},"optional":true,"description":"The function to call when this button is pressed","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the callback will be called (usually 'this')","name":"callbackContext"},{"type":{"names":["string","number"]},"optional":true,"description":"This is the frame or frameName that will be set when this button is in an over state. Give either a number to use a frame ID or a string for a frame name.","name":"overFrame"},{"type":{"names":["string","number"]},"optional":true,"description":"This is the frame or frameName that will be set when this button is in an out state. Give either a number to use a frame ID or a string for a frame name.","name":"outFrame"},{"type":{"names":["string","number"]},"optional":true,"description":"This is the frame or frameName that will be set when this button is in a down state. Give either a number to use a frame ID or a string for a frame name.","name":"downFrame"},{"type":{"names":["string","number"]},"optional":true,"description":"This is the frame or frameName that will be set when this button is in an up state. Give either a number to use a frame ID or a string for a frame name.","name":"upFrame"},{"type":{"names":["Phaser.Group"]},"optional":true,"description":"Optional Group to add the object to. If not specified it will be added to the World group.","name":"group"}],"returns":[{"type":{"names":["Phaser.Button"]},"description":"The newly created Button object."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#button","scope":"instance","___s":true},{"meta":{"range":[19911,20490],"filename":"GameObjectFactory.js","lineno":361,"path":"src\\gameobjects"},"description":"Creates a new Graphics object.","kind":"function","name":"graphics","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of the Graphic. The coordinate is relative to any parent container this object may be in.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of the Graphic. The coordinate is relative to any parent container this object may be in.","name":"y"},{"type":{"names":["Phaser.Group"]},"optional":true,"description":"Optional Group to add the object to. If not specified it will be added to the World group.","name":"group"}],"returns":[{"type":{"names":["Phaser.Graphics"]},"description":"The newly created graphics object."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#graphics","scope":"instance","___s":true},{"meta":{"range":[20675,21402],"filename":"GameObjectFactory.js","lineno":378,"path":"src\\gameobjects"},"description":"Create a new Emitter.\r\rA particle emitter can be used for one-time explosions or for\rcontinuous effects like rain and fire. All it really does is launch Particle objects out\rat set intervals, and fixes their positions and velocities accordingly.","kind":"function","name":"emitter","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate within the Emitter that the particles are emitted from.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate within the Emitter that the particles are emitted from.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":50,"description":"The total number of particles in this emitter.","name":"maxParticles"}],"returns":[{"type":{"names":["Phaser.Particles.Arcade.Emitter"]},"description":"The newly created emitter object."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#emitter","scope":"instance","___s":true},{"meta":{"range":[21577,23673],"filename":"GameObjectFactory.js","lineno":397,"path":"src\\gameobjects"},"description":"Create a new RetroFont object.\r\rA RetroFont can be used as a texture for an Image or Sprite and optionally add it to the Cache.\rA RetroFont uses a bitmap which contains fixed with characters for the font set. You use character spacing to define the set.\rIf you need variable width character support then use a BitmapText object instead. The main difference between a RetroFont and a BitmapText\ris that a RetroFont creates a single texture that you can apply to a game object, where-as a BitmapText creates one Sprite object per letter of text.\rThe texture can be asssigned or one or multiple images/sprites, but note that the text the RetroFont uses will be shared across them all,\ri.e. if you need each Image to have different text in it, then you need to create multiple RetroFont objects.","kind":"function","name":"retroFont","params":[{"type":{"names":["string"]},"description":"The key of the image in the Game.Cache that the RetroFont will use.","name":"font"},{"type":{"names":["number"]},"description":"The width of each character in the font set.","name":"characterWidth"},{"type":{"names":["number"]},"description":"The height of each character in the font set.","name":"characterHeight"},{"type":{"names":["string"]},"description":"The characters used in the font set, in display order. You can use the TEXT_SET consts for common font set arrangements.","name":"chars"},{"type":{"names":["number"]},"description":"The number of characters per row in the font set.","name":"charsPerRow"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the characters in the font set have horizontal spacing between them set the required amount here.","name":"xSpacing"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the characters in the font set have vertical spacing between them set the required amount here.","name":"ySpacing"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the font set doesn't start at the top left of the given image, specify the X coordinate offset here.","name":"xOffset"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the font set doesn't start at the top left of the given image, specify the Y coordinate offset here.","name":"yOffset"}],"returns":[{"type":{"names":["Phaser.RetroFont"]},"description":"The newly created RetroFont texture which can be applied to an Image or Sprite."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#retroFont","scope":"instance","___s":true},{"meta":{"range":[23964,25750],"filename":"GameObjectFactory.js","lineno":425,"path":"src\\gameobjects"},"description":"Create a new BitmapText object.\r\rBitmapText objects work by taking a texture file and an XML file that describes the font structure.\rIt then generates a new Sprite object for each letter of the text, proportionally spaced out and aligned to \rmatch the font structure.\r\rBitmapText objects are less flexible than Text objects, in that they have less features such as shadows, fills and the ability \rto use Web Fonts. However you trade this flexibility for pure rendering speed. You can also create visually compelling BitmapTexts by \rprocessing the font texture in an image editor first, applying fills and any other effects required.\r\rTo create multi-line text insert \\r, \\n or \\r\\n escape codes into the text string.\r\rTo create a BitmapText data files you can use:\r\rBMFont (Windows, free): http://www.angelcode.com/products/bmfont/\rGlyph Designer (OS X, commercial): http://www.71squared.com/en/glyphdesigner\rLittera (Web-based, free): http://kvazars.com/littera/","kind":"function","name":"bitmapText","params":[{"type":{"names":["number"]},"description":"X coordinate to display the BitmapText object at.","name":"x"},{"type":{"names":["number"]},"description":"Y coordinate to display the BitmapText object at.","name":"y"},{"type":{"names":["string"]},"description":"The key of the BitmapText as stored in Phaser.Cache.","name":"font"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"''","description":"The text that will be rendered. This can also be set later via BitmapText.text.","name":"text"},{"type":{"names":["number"]},"optional":true,"defaultvalue":32,"description":"The size the font will be rendered at in pixels.","name":"size"},{"type":{"names":["Phaser.Group"]},"optional":true,"description":"Optional Group to add the object to. If not specified it will be added to the World group.","name":"group"}],"returns":[{"type":{"names":["Phaser.BitmapText"]},"description":"The newly created bitmapText object."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#bitmapText","scope":"instance","___s":true},{"meta":{"range":[25975,27563],"filename":"GameObjectFactory.js","lineno":461,"path":"src\\gameobjects"},"description":"Creates a new Phaser.Tilemap object.\r\rThe map can either be populated with data from a Tiled JSON file or from a CSV file.\rTo do this pass the Cache key as the first parameter. When using Tiled data you need only provide the key.\rWhen using CSV data you must provide the key and the tileWidth and tileHeight parameters.\rIf creating a blank tilemap to be populated later, you can either specify no parameters at all and then use `Tilemap.create` or pass the map and tile dimensions here.\rNote that all Tilemaps use a base tile size to calculate dimensions from, but that a TilemapLayer may have its own unique tile size that overrides it.","kind":"function","name":"tilemap","params":[{"type":{"names":["string"]},"optional":true,"description":"The key of the tilemap data as stored in the Cache. If you're creating a blank map either leave this parameter out or pass `null`.","name":"key"},{"type":{"names":["number"]},"optional":true,"defaultvalue":32,"description":"The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.","name":"tileWidth"},{"type":{"names":["number"]},"optional":true,"defaultvalue":32,"description":"The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.","name":"tileHeight"},{"type":{"names":["number"]},"optional":true,"defaultvalue":10,"description":"The width of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.","name":"width"},{"type":{"names":["number"]},"optional":true,"defaultvalue":10,"description":"The height of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.","name":"height"}],"returns":[{"type":{"names":["Phaser.Tilemap"]},"description":"The newly created tilemap object."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#tilemap","scope":"instance","___s":true},{"meta":{"range":[27742,28373],"filename":"GameObjectFactory.js","lineno":484,"path":"src\\gameobjects"},"description":"A dynamic initially blank canvas to which images can be drawn.","kind":"function","name":"renderTexture","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"the width of the RenderTexture.","name":"width"},{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"the height of the RenderTexture.","name":"height"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"''","description":"Asset key for the RenderTexture when stored in the Cache (see addToCache parameter).","name":"key"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should this RenderTexture be added to the Game.Cache? If so you can retrieve it with Cache.getTexture(key)","name":"addToCache"}],"returns":[{"type":{"names":["Phaser.RenderTexture"]},"description":"The newly created RenderTexture object."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#renderTexture","scope":"instance","___s":true},{"meta":{"range":[28817,29480],"filename":"GameObjectFactory.js","lineno":510,"path":"src\\gameobjects"},"description":"Create a Video object.\r\rThis will return a Phaser.Video object which you can pass to a Sprite to be used as a texture.","kind":"function","name":"video","params":[{"type":{"names":["string","null"]},"optional":true,"defaultvalue":null,"description":"The key of the video file in the Phaser.Cache that this Video object will play. Set to `null` or leave undefined if you wish to use a webcam as the source. See `startMediaStream` to start webcam capture.","name":"key"},{"type":{"names":["string","null"]},"optional":true,"defaultvalue":null,"description":"If the video hasn't been loaded then you can provide a full URL to the file here (make sure to set key to null)","name":"url"}],"returns":[{"type":{"names":["Phaser.Video"]},"description":"The newly created Video object."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#video","scope":"instance","___s":true},{"meta":{"range":[29589,30315],"filename":"GameObjectFactory.js","lineno":526,"path":"src\\gameobjects"},"description":"Create a BitmapData object.\r\rA BitmapData object can be manipulated and drawn to like a traditional Canvas object and used to texture Sprites.","kind":"function","name":"bitmapData","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":256,"description":"The width of the BitmapData in pixels.","name":"width"},{"type":{"names":["number"]},"optional":true,"defaultvalue":256,"description":"The height of the BitmapData in pixels.","name":"height"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"''","description":"Asset key for the BitmapData when stored in the Cache (see addToCache parameter).","name":"key"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should this BitmapData be added to the Game.Cache? If so you can retrieve it with Cache.getBitmapData(key)","name":"addToCache"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"The newly created BitmapData object."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#bitmapData","scope":"instance","___s":true},{"meta":{"range":[30750,31152],"filename":"GameObjectFactory.js","lineno":554,"path":"src\\gameobjects"},"description":"A WebGL shader/filter that can be applied to Sprites.","kind":"function","name":"filter","params":[{"type":{"names":["string"]},"description":"The name of the filter you wish to create, for example HueRotate or SineWave.","name":"filter"},{"type":{"names":["any"]},"description":"Whatever parameters are needed to be passed to the filter init function."}],"returns":[{"type":{"names":["Phaser.Filter"]},"description":"The newly created Phaser.Filter object."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#filter","scope":"instance","___s":true},{"meta":{"range":[31399,31996],"filename":"GameObjectFactory.js","lineno":574,"path":"src\\gameobjects"},"description":"Add a new Plugin into the PluginManager.\r\rThe Plugin must have 2 properties: `game` and `parent`. Plugin.game is set to the game reference the PluginManager uses, and parent is set to the PluginManager.","kind":"function","name":"plugin","params":[{"type":{"names":["object","Phaser.Plugin"]},"description":"The Plugin to add into the PluginManager. This can be a function or an existing object.","name":"plugin"},{"type":{"names":["*"]},"variable":true,"description":"Additional parameters that will be passed to the Plugin.init method.","name":"parameter"}],"returns":[{"type":{"names":["Phaser.Plugin"]},"description":"The Plugin that was added to the manager."}],"memberof":"Phaser.GameObjectFactory","longname":"Phaser.GameObjectFactory#plugin","scope":"instance","___s":true},{"meta":{"range":[2453,3166],"filename":"Graphics.js","lineno":50,"path":"src\\gameobjects"},"description":"A Graphics object is a way to draw primitives to your game. Primitives include forms of geometry, such as Rectangles,\rCircles and Polygons. They also include lines, arcs and curves. When you initially create a Graphics object it will\rbe empty. To 'draw' to it you first specify a lineStyle or fillStyle (or both), and then draw a shape. For example:\r\r```\rgraphics.beginFill(0xff0000);\rgraphics.drawCircle(50, 50, 100);\rgraphics.endFill();\r```\r\rThis will draw a circle shape to the Graphics object, with a diameter of 100, located at x: 50, y: 50.\r\rWhen a Graphics object is rendered it will render differently based on if the game is running under Canvas or\rWebGL. Under Canvas it will use the HTML Canvas context drawing operations to draw the path. Under WebGL the\rgraphics data is decomposed into polygons. Both of these are expensive processes, especially with complex shapes.\r\rIf your Graphics object doesn't change much (or at all) once you've drawn your shape to it, then you will help\rperformance by calling `Graphics.generateTexture`. This will 'bake' the Graphics object into a Texture, and return it.\rYou can then use this Texture for Sprites or other display objects. If your Graphics object updates frequently then\ryou should avoid doing this, as it will constantly generate new textures, which will consume memory.\r\rAs you can tell, Graphics objects are a bit of a trade-off. While they are extremely useful, you need to be careful\rin their complexity and quantity of them in your game.","kind":"class","classdesc":"Phaser.Graphics","augments":["PIXI.Graphics","Phaser.Component.Core","Phaser.Component.Angle","Phaser.Component.AutoCull","Phaser.Component.Bounds","Phaser.Component.Destroy","Phaser.Component.FixedToCamera","Phaser.Component.InputEnabled","Phaser.Component.InWorld","Phaser.Component.LifeSpan","Phaser.Component.PhysicsBody","Phaser.Component.Reset"],"params":[{"type":{"names":["Phaser.Game"]},"description":"Current game instance.","name":"game"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"X position of the new graphics object.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Y position of the new graphics object.","name":"y"}],"name":"Graphics","longname":"Phaser.Graphics","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[2675,2702],"filename":"Graphics.js","lineno":59,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"name":"type","longname":"Phaser.Graphics#type","kind":"member","memberof":"Phaser.Graphics","scope":"instance","___s":true},{"meta":{"range":[2829,2861],"filename":"Graphics.js","lineno":65,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const physics body type of this object.","name":"physicsType"}],"readonly":true,"name":"physicsType","longname":"Phaser.Graphics#physicsType","kind":"member","memberof":"Phaser.Graphics","scope":"instance","___s":true},{"meta":{"range":[3970,4193],"filename":"Graphics.js","lineno":106,"path":"src\\gameobjects"},"description":"Automatically called by World.preUpdate.","kind":"function","memberof":"Phaser.Graphics","name":"preUpdate","longname":"Phaser.Graphics#preUpdate","scope":"instance","___s":true},{"meta":{"range":[4198,4286],"filename":"Graphics.js","lineno":117,"path":"src\\gameobjects"},"description":"Automatically called by World","kind":"function","name":"postUpdate","memberof":"Phaser.Graphics","longname":"Phaser.Graphics#postUpdate","scope":"instance","overrides":"Phaser.Component.Core#postUpdate","___s":true},{"meta":{"range":[4691,4892],"filename":"Graphics.js","lineno":139,"path":"src\\gameobjects"},"description":"Destroy this Graphics instance.","kind":"function","name":"destroy","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should every child of this object have its destroy method called?","name":"destroyChildren"}],"memberof":"Phaser.Graphics","longname":"Phaser.Graphics#destroy","scope":"instance","overrides":"Phaser.Component.Destroy#destroy","___s":true},{"meta":{"range":[1911,2308],"filename":"Image.js","lineno":36,"path":"src\\gameobjects"},"description":"An Image is a light-weight object you can use to display anything that doesn't need physics or animation.\rIt can still rotate, scale, crop and receive input events. This makes it perfect for logos, backgrounds, simple buttons and other non-Sprite graphics.","kind":"class","classdesc":"Phaser.Image","augments":["PIXI.Sprite","Phaser.Component.Core","Phaser.Component.Angle","Phaser.Component.Animation","Phaser.Component.AutoCull","Phaser.Component.Bounds","Phaser.Component.BringToTop","Phaser.Component.Crop","Phaser.Component.Destroy","Phaser.Component.FixedToCamera","Phaser.Component.InputEnabled","Phaser.Component.LifeSpan","Phaser.Component.LoadTexture","Phaser.Component.Overlap","Phaser.Component.Reset","Phaser.Component.ScaleMinMax","Phaser.Component.Smoothed"],"params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of the Image. The coordinate is relative to any parent container this Image may be in.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of the Image. The coordinate is relative to any parent container this Image may be in.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","PIXI.Texture"]},"optional":true,"description":"The texture used by the Image during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture, BitmapData or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Image is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"name":"Image","longname":"Phaser.Image","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[2155,2179],"filename":"Image.js","lineno":47,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"readonly":true,"name":"type","longname":"Phaser.Image#type","kind":"member","memberof":"Phaser.Image","scope":"instance","___s":true},{"meta":{"range":[2912,3026],"filename":"Image.js","lineno":79,"path":"src\\gameobjects"},"description":"Automatically called by World.preUpdate.","kind":"function","name":"preUpdate","memberof":"Phaser.Image","longname":"Phaser.Image#preUpdate","scope":"instance","___s":true},{"meta":{"range":[1109,2237],"filename":"Particle.js","lineno":19,"path":"src\\gameobjects"},"description":"Create a new `Particle` object. Particles are extended Sprites that are emitted by a particle emitter such as Phaser.Particles.Arcade.Emitter.","kind":"class","classdesc":"Phaser.Particle","augments":["Phaser.Sprite"],"params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the Particle at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the Particle at.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","PIXI.Texture"]},"description":"This is the image or texture used by the Particle during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"description":"If this Particle is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"name":"Particle","longname":"Phaser.Particle","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1385,1407],"filename":"Particle.js","lineno":27,"path":"src\\gameobjects"},"properties":[{"type":{"names":["boolean"]},"description":"If this Particle automatically scales this is set to true by Particle.setScaleData.","name":"autoScale"}],"access":"protected","name":"autoScale","longname":"Phaser.Particle#autoScale","kind":"member","memberof":"Phaser.Particle","scope":"instance","___s":true},{"meta":{"range":[1572,1593],"filename":"Particle.js","lineno":33,"path":"src\\gameobjects"},"properties":[{"type":{"names":["array"]},"description":"A reference to the scaleData array owned by the Emitter that emitted this Particle.","name":"scaleData"}],"access":"protected","name":"scaleData","longname":"Phaser.Particle#scaleData","kind":"member","memberof":"Phaser.Particle","scope":"instance","___s":true},{"meta":{"range":[1895,1917],"filename":"Particle.js","lineno":45,"path":"src\\gameobjects"},"properties":[{"type":{"names":["boolean"]},"description":"If this Particle automatically changes alpha this is set to true by Particle.setAlphaData.","name":"autoAlpha"}],"access":"protected","name":"autoAlpha","longname":"Phaser.Particle#autoAlpha","kind":"member","memberof":"Phaser.Particle","scope":"instance","___s":true},{"meta":{"range":[2082,2103],"filename":"Particle.js","lineno":51,"path":"src\\gameobjects"},"properties":[{"type":{"names":["array"]},"description":"A reference to the alphaData array owned by the Emitter that emitted this Particle.","name":"alphaData"}],"access":"protected","name":"alphaData","longname":"Phaser.Particle#alphaData","kind":"member","memberof":"Phaser.Particle","scope":"instance","___s":true},{"meta":{"range":[2371,2519],"filename":"Particle.js","lineno":64,"path":"src\\gameobjects"},"description":"Updates the Particle scale or alpha if autoScale and autoAlpha are set.","kind":"function","name":"update","memberof":"Phaser.Particle","longname":"Phaser.Particle#update","scope":"instance","overrides":"Phaser.Sprite#update","___s":true},{"meta":{"range":[3074,3248],"filename":"Particle.js","lineno":102,"path":"src\\gameobjects"},"description":"Called by the Emitter when this particle is emitted. Left empty for you to over-ride as required.","kind":"function","name":"onEmit","memberof":"Phaser.Particle","longname":"Phaser.Particle#onEmit","scope":"instance","___s":true},{"meta":{"range":[3305,3502],"filename":"Particle.js","lineno":111,"path":"src\\gameobjects"},"description":"Called by the Emitter if autoAlpha has been enabled. Passes over the alpha ease data and resets the alpha counter.","kind":"function","name":"setAlphaData","memberof":"Phaser.Particle","longname":"Phaser.Particle#setAlphaData","scope":"instance","___s":true},{"meta":{"range":[3706,3903],"filename":"Particle.js","lineno":126,"path":"src\\gameobjects"},"description":"Called by the Emitter if autoScale has been enabled. Passes over the scale ease data and resets the scale counter.","kind":"function","name":"setScaleData","memberof":"Phaser.Particle","longname":"Phaser.Particle#setScaleData","scope":"instance","___s":true},{"meta":{"range":[4137,4752],"filename":"Particle.js","lineno":141,"path":"src\\gameobjects"},"description":"Resets the Particle. This places the Particle at the given x/y world coordinates and then\rsets alive, exists, visible and renderable all to true. Also resets the outOfBounds state and health values.\rIf the Particle has a physics body that too is reset.","kind":"function","name":"reset","memberof":"Phaser.Particle","params":[{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the Particle at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the Particle at.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The health to give the Particle.","name":"health"}],"returns":[{"type":{"names":["Phaser.Particle"]},"description":"This instance."}],"longname":"Phaser.Particle#reset","scope":"instance","overrides":"Phaser.Sprite#reset","___s":true},{"meta":{"range":[1045,2043],"filename":"RenderTexture.js","lineno":21,"path":"src\\gameobjects"},"description":"A RenderTexture is a special texture that allows any displayObject to be rendered to it. It allows you to take many complex objects and\rrender them down into a single quad (on WebGL) which can then be used to texture other display objects with. A way of generating textures at run-time.","kind":"class","classdesc":"Phaser.RenderTexture","augments":["PIXI.RenderTexture"],"params":[{"type":{"names":["Phaser.Game"]},"description":"Current game instance.","name":"game"},{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"The width of the render texture.","name":"width"},{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"The height of the render texture.","name":"height"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"''","description":"The key of the RenderTexture in the Cache, if stored there.","name":"key"},{"type":{"names":["number"]},"optional":true,"defaultvalue":"Phaser.scaleModes.DEFAULT","description":"One of the Phaser.scaleModes consts.","name":"scaleMode"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The resolution of the texture being generated.","name":"resolution"}],"name":"RenderTexture","longname":"Phaser.RenderTexture","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1410,1426],"filename":"RenderTexture.js","lineno":30,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"game","longname":"Phaser.RenderTexture#game","kind":"member","memberof":"Phaser.RenderTexture","scope":"instance","___s":true},{"meta":{"range":[1544,1558],"filename":"RenderTexture.js","lineno":35,"path":"src\\gameobjects"},"properties":[{"type":{"names":["string"]},"description":"The key of the RenderTexture in the Cache, if stored there.","name":"key"}],"name":"key","longname":"Phaser.RenderTexture#key","kind":"member","memberof":"Phaser.RenderTexture","scope":"instance","___s":true},{"meta":{"range":[1642,1674],"filename":"RenderTexture.js","lineno":40,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"Base Phaser object type.","name":"type"}],"name":"type","longname":"Phaser.RenderTexture#type","kind":"member","memberof":"Phaser.RenderTexture","scope":"instance","___s":true},{"meta":{"range":[2197,2884],"filename":"RenderTexture.js","lineno":57,"path":"src\\gameobjects"},"description":"This function will draw the display object to the RenderTexture at the given coordinates.\r\rWhen the display object is drawn it takes into account scale and rotation.\r\rIf you don't want those then use RenderTexture.renderRawXY instead.","kind":"function","name":"renderXY","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Group"]},"description":"The display object to render to this texture.","name":"displayObject"},{"type":{"names":["number"]},"description":"The x position to render the object at.","name":"x"},{"type":{"names":["number"]},"description":"The y position to render the object at.","name":"y"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the texture will be cleared before the display object is drawn.","name":"clear"}],"memberof":"Phaser.RenderTexture","longname":"Phaser.RenderTexture#renderXY","scope":"instance","___s":true},{"meta":{"range":[3369,4069],"filename":"RenderTexture.js","lineno":89,"path":"src\\gameobjects"},"description":"This function will draw the display object to the RenderTexture at the given coordinates.\r\rWhen the display object is drawn it doesn't take into account scale, rotation or translation.\r\rIf you need those then use RenderTexture.renderXY instead.","kind":"function","name":"renderRawXY","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Group"]},"description":"The display object to render to this texture.","name":"displayObject"},{"type":{"names":["number"]},"description":"The x position to render the object at.","name":"x"},{"type":{"names":["number"]},"description":"The y position to render the object at.","name":"y"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the texture will be cleared before the display object is drawn.","name":"clear"}],"memberof":"Phaser.RenderTexture","longname":"Phaser.RenderTexture#renderRawXY","scope":"instance","___s":true},{"meta":{"range":[4445,5527],"filename":"RenderTexture.js","lineno":117,"path":"src\\gameobjects"},"description":"This function will draw the display object to the RenderTexture.\r\rIn versions of Phaser prior to 2.4.0 the second parameter was a Phaser.Point object. \rThis is now a Matrix allowing you much more control over how the Display Object is rendered.\rIf you need to replicate the earlier behavior please use Phaser.RenderTexture.renderXY instead.\r\rIf you wish for the displayObject to be rendered taking its current scale, rotation and translation into account then either\rpass `null`, leave it undefined or pass `displayObject.worldTransform` as the matrix value.","kind":"function","name":"render","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Group"]},"description":"The display object to render to this texture.","name":"displayObject"},{"type":{"names":["Phaser.Matrix"]},"optional":true,"description":"Optional matrix to apply to the display object before rendering. If null or undefined it will use the worldTransform matrix of the given display object.","name":"matrix"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the texture will be cleared before the display object is drawn.","name":"clear"}],"memberof":"Phaser.RenderTexture","longname":"Phaser.RenderTexture#render","scope":"instance","___s":true},{"meta":{"range":[1719,6503],"filename":"RetroFont.js","lineno":25,"path":"src\\gameobjects"},"description":"A Retro Font is similar to a BitmapFont, in that it uses a texture to render the text. However unlike a BitmapFont every character in a RetroFont\ris the same size. This makes it similar to a sprite sheet. You typically find font sheets like this from old 8/16-bit games and demos.","kind":"class","classdesc":"Phaser.RetroFont","augments":["Phaser.RenderTexture"],"params":[{"type":{"names":["Phaser.Game"]},"description":"Current game instance.","name":"game"},{"type":{"names":["string"]},"description":"The font set graphic set as stored in the Game.Cache.","name":"key"},{"type":{"names":["number"]},"description":"The width of each character in the font set.","name":"characterWidth"},{"type":{"names":["number"]},"description":"The height of each character in the font set.","name":"characterHeight"},{"type":{"names":["string"]},"description":"The characters used in the font set, in display order. You can use the TEXT_SET consts for common font set arrangements.","name":"chars"},{"type":{"names":["number"]},"optional":true,"description":"The number of characters per row in the font set. If not given charsPerRow will be the image width / characterWidth.","name":"charsPerRow"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the characters in the font set have horizontal spacing between them set the required amount here.","name":"xSpacing"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the characters in the font set have vertical spacing between them set the required amount here.","name":"ySpacing"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the font set doesn't start at the top left of the given image, specify the X coordinate offset here.","name":"xOffset"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the font set doesn't start at the top left of the given image, specify the Y coordinate offset here.","name":"yOffset"}],"name":"RetroFont","longname":"Phaser.RetroFont","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[2192,2228],"filename":"RetroFont.js","lineno":40,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The width of each character in the font set.","name":"characterWidth"}],"name":"characterWidth","longname":"Phaser.RetroFont#characterWidth","kind":"member","memberof":"Phaser.RetroFont","scope":"instance","___s":true},{"meta":{"range":[2344,2382],"filename":"RetroFont.js","lineno":45,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The height of each character in the font set.","name":"characterHeight"}],"name":"characterHeight","longname":"Phaser.RetroFont#characterHeight","kind":"member","memberof":"Phaser.RetroFont","scope":"instance","___s":true},{"meta":{"range":[2555,2593],"filename":"RetroFont.js","lineno":50,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"If the characters in the font set have horizontal spacing between them set the required amount here.","name":"characterSpacingX"}],"name":"characterSpacingX","longname":"Phaser.RetroFont#characterSpacingX","kind":"member","memberof":"Phaser.RetroFont","scope":"instance","___s":true},{"meta":{"range":[2764,2802],"filename":"RetroFont.js","lineno":55,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"If the characters in the font set have vertical spacing between them set the required amount here.","name":"characterSpacingY"}],"name":"characterSpacingY","longname":"Phaser.RetroFont#characterSpacingY","kind":"member","memberof":"Phaser.RetroFont","scope":"instance","___s":true},{"meta":{"range":[2922,2956],"filename":"RetroFont.js","lineno":60,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The number of characters per row in the font set.","name":"characterPerRow"}],"name":"characterPerRow","longname":"Phaser.RetroFont#characterPerRow","kind":"member","memberof":"Phaser.RetroFont","scope":"instance","___s":true},{"meta":{"range":[3139,3166],"filename":"RetroFont.js","lineno":66,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"If the font set doesn't start at the top left of the given image, specify the X coordinate offset here.","name":"offsetX"}],"readonly":true,"name":"offsetX","longname":"Phaser.RetroFont#offsetX","kind":"member","memberof":"Phaser.RetroFont","scope":"instance","___s":true},{"meta":{"range":[3349,3376],"filename":"RetroFont.js","lineno":72,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"If the font set doesn't start at the top left of the given image, specify the Y coordinate offset here.","name":"offsetY"}],"readonly":true,"name":"offsetY","longname":"Phaser.RetroFont#offsetY","kind":"member","memberof":"Phaser.RetroFont","scope":"instance","___s":true},{"meta":{"range":[3592,3611],"filename":"RetroFont.js","lineno":77,"path":"src\\gameobjects"},"properties":[{"type":{"names":["string"]},"description":"Alignment of the text when multiLine = true or a fixedWidth is set. Set to RetroFont.ALIGN_LEFT (default), RetroFont.ALIGN_RIGHT or RetroFont.ALIGN_CENTER.","name":"align"}],"name":"align","longname":"Phaser.RetroFont#align","kind":"member","memberof":"Phaser.RetroFont","scope":"instance","___s":true},{"meta":{"range":[3843,3865],"filename":"RetroFont.js","lineno":83,"path":"src\\gameobjects"},"properties":[{"type":{"names":["boolean"]},"description":"If set to true all carriage-returns in text will form new lines (see align). If false the font will only contain one single line of text (the default)","name":"multiLine"}],"defaultvalue":false,"name":"multiLine","longname":"Phaser.RetroFont#multiLine","kind":"member","memberof":"Phaser.RetroFont","scope":"instance","___s":true},{"meta":{"range":[4081,4106],"filename":"RetroFont.js","lineno":89,"path":"src\\gameobjects"},"properties":[{"type":{"names":["boolean"]},"description":"Automatically convert any text to upper case. Lots of old bitmap fonts only contain upper-case characters, so the default is true.","name":"autoUpperCase"}],"defaultvalue":true,"name":"autoUpperCase","longname":"Phaser.RetroFont#autoUpperCase","kind":"member","memberof":"Phaser.RetroFont","scope":"instance","___s":true},{"meta":{"range":[4262,4285],"filename":"RetroFont.js","lineno":95,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"Adds horizontal spacing between each character of the font, in pixels.","name":"customSpacingX"}],"defaultvalue":0,"name":"customSpacingX","longname":"Phaser.RetroFont#customSpacingX","kind":"member","memberof":"Phaser.RetroFont","scope":"instance","___s":true},{"meta":{"range":[4445,4468],"filename":"RetroFont.js","lineno":101,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"Adds vertical spacing between each line of multi-line text, set in pixels.","name":"customSpacingY"}],"defaultvalue":0,"name":"customSpacingY","longname":"Phaser.RetroFont#customSpacingY","kind":"member","memberof":"Phaser.RetroFont","scope":"instance","___s":true},{"meta":{"range":[4703,4722],"filename":"RetroFont.js","lineno":108,"path":"src\\gameobjects"},"description":"If you need this RetroFont image to have a fixed width you can set the width in this value.\rIf text is wider than the width specified it will be cropped off.","properties":[{"type":{"names":["number"]},"name":"fixedWidth"}],"name":"fixedWidth","longname":"Phaser.RetroFont#fixedWidth","kind":"member","memberof":"Phaser.RetroFont","scope":"instance","___s":true},{"meta":{"range":[4857,4896],"filename":"RetroFont.js","lineno":113,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Image"]},"description":"A reference to the image stored in the Game.Cache that contains the font.","name":"fontSet"}],"name":"fontSet","longname":"Phaser.RetroFont#fontSet","kind":"member","memberof":"Phaser.RetroFont","scope":"instance","___s":true},{"meta":{"range":[5277,5316],"filename":"RetroFont.js","lineno":130,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.FrameData"]},"description":"The FrameData representing this Retro Font.","name":"frameData"}],"name":"frameData","longname":"Phaser.RetroFont#frameData","kind":"member","memberof":"Phaser.RetroFont","scope":"instance","___s":true},{"meta":{"range":[6249,6298],"filename":"RetroFont.js","lineno":163,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.Image"]},"description":"The image that is stamped to the RenderTexture for each character in the font.","name":"stamp"}],"readonly":true,"name":"stamp","longname":"Phaser.RetroFont#stamp","kind":"member","memberof":"Phaser.RetroFont","scope":"instance","___s":true},{"meta":{"range":[6469,6497],"filename":"RetroFont.js","lineno":170,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"Base Phaser object type.","name":"type"}],"name":"type","longname":"Phaser.RetroFont#type","kind":"member","memberof":"Phaser.RetroFont","scope":"instance","overrides":"Phaser.RenderTexture#type","___s":true},{"meta":{"range":[6738,6774],"filename":"RetroFont.js","lineno":182,"path":"src\\gameobjects"},"description":"Align each line of multi-line text to the left.","kind":"constant","type":{"names":["string"]},"name":"ALIGN_LEFT","longname":"Phaser.RetroFont.ALIGN_LEFT","memberof":"Phaser.RetroFont","scope":"static","___s":true},{"meta":{"range":[6871,6909],"filename":"RetroFont.js","lineno":189,"path":"src\\gameobjects"},"description":"Align each line of multi-line text to the right.","kind":"constant","type":{"names":["string"]},"name":"ALIGN_RIGHT","longname":"Phaser.RetroFont.ALIGN_RIGHT","memberof":"Phaser.RetroFont","scope":"static","___s":true},{"meta":{"range":[7007,7047],"filename":"RetroFont.js","lineno":196,"path":"src\\gameobjects"},"description":"Align each line of multi-line text in the center.","kind":"constant","type":{"names":["string"]},"name":"ALIGN_CENTER","longname":"Phaser.RetroFont.ALIGN_CENTER","memberof":"Phaser.RetroFont","scope":"static","___s":true},{"meta":{"range":[7204,7332],"filename":"RetroFont.js","lineno":203,"path":"src\\gameobjects"},"description":"Text Set 1 =  !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~","kind":"constant","type":{"names":["string"]},"name":"TEXT_SET1","longname":"Phaser.RetroFont.TEXT_SET1","memberof":"Phaser.RetroFont","scope":"static","___s":true},{"meta":{"range":[7453,7544],"filename":"RetroFont.js","lineno":210,"path":"src\\gameobjects"},"description":"Text Set 2 =  !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ","kind":"constant","type":{"names":["string"]},"name":"TEXT_SET2","longname":"Phaser.RetroFont.TEXT_SET2","memberof":"Phaser.RetroFont","scope":"static","___s":true},{"meta":{"range":[7643,7711],"filename":"RetroFont.js","lineno":217,"path":"src\\gameobjects"},"description":"Text Set 3 = ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789","kind":"constant","type":{"names":["string"]},"name":"TEXT_SET3","longname":"Phaser.RetroFont.TEXT_SET3","memberof":"Phaser.RetroFont","scope":"static","___s":true},{"meta":{"range":[7810,7878],"filename":"RetroFont.js","lineno":224,"path":"src\\gameobjects"},"description":"Text Set 4 = ABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789","kind":"constant","type":{"names":["string"]},"name":"TEXT_SET4","longname":"Phaser.RetroFont.TEXT_SET4","memberof":"Phaser.RetroFont","scope":"static","___s":true},{"meta":{"range":[7988,8067],"filename":"RetroFont.js","lineno":231,"path":"src\\gameobjects"},"description":"Text Set 5 = ABCDEFGHIJKLMNOPQRSTUVWXYZ.,/() '!?-*:0123456789","kind":"constant","type":{"names":["string"]},"name":"TEXT_SET5","longname":"Phaser.RetroFont.TEXT_SET5","memberof":"Phaser.RetroFont","scope":"static","___s":true},{"meta":{"range":[8177,8257],"filename":"RetroFont.js","lineno":238,"path":"src\\gameobjects"},"description":"Text Set 6 = ABCDEFGHIJKLMNOPQRSTUVWXYZ!?:;0123456789\"(),-.'","kind":"constant","type":{"names":["string"]},"name":"TEXT_SET6","longname":"Phaser.RetroFont.TEXT_SET6","memberof":"Phaser.RetroFont","scope":"static","___s":true},{"meta":{"range":[8367,8447],"filename":"RetroFont.js","lineno":245,"path":"src\\gameobjects"},"description":"Text Set 7 = AGMSY+:4BHNTZ!;5CIOU.?06DJPV,(17EKQW\")28FLRX-'39","kind":"constant","type":{"names":["string"]},"name":"TEXT_SET7","longname":"Phaser.RetroFont.TEXT_SET7","memberof":"Phaser.RetroFont","scope":"static","___s":true},{"meta":{"range":[8547,8616],"filename":"RetroFont.js","lineno":252,"path":"src\\gameobjects"},"description":"Text Set 8 = 0123456789 .ABCDEFGHIJKLMNOPQRSTUVWXYZ","kind":"constant","type":{"names":["string"]},"name":"TEXT_SET8","longname":"Phaser.RetroFont.TEXT_SET8","memberof":"Phaser.RetroFont","scope":"static","___s":true},{"meta":{"range":[8724,8802],"filename":"RetroFont.js","lineno":259,"path":"src\\gameobjects"},"description":"Text Set 9 = ABCDEFGHIJKLMNOPQRSTUVWXYZ()-0123456789.:,'\"?!","kind":"constant","type":{"names":["string"]},"name":"TEXT_SET9","longname":"Phaser.RetroFont.TEXT_SET9","memberof":"Phaser.RetroFont","scope":"static","___s":true},{"meta":{"range":[8891,8949],"filename":"RetroFont.js","lineno":266,"path":"src\\gameobjects"},"description":"Text Set 10 = ABCDEFGHIJKLMNOPQRSTUVWXYZ","kind":"constant","type":{"names":["string"]},"name":"TEXT_SET10","longname":"Phaser.RetroFont.TEXT_SET10","memberof":"Phaser.RetroFont","scope":"static","___s":true},{"meta":{"range":[9060,9141],"filename":"RetroFont.js","lineno":273,"path":"src\\gameobjects"},"description":"Text Set 11 = ABCDEFGHIJKLMNOPQRSTUVWXYZ.,\"-+!?()':;0123456789","kind":"constant","type":{"names":["string"]},"name":"TEXT_SET11","longname":"Phaser.RetroFont.TEXT_SET11","memberof":"Phaser.RetroFont","scope":"static","___s":true},{"meta":{"range":[9146,9683],"filename":"RetroFont.js","lineno":275,"path":"src\\gameobjects"},"description":"If you need this RetroFont to have a fixed width and custom alignment you can set the width here.\rIf text is wider than the width specified it will be cropped off.","kind":"function","name":"setFixedWidth","memberof":"Phaser.RetroFont","params":[{"type":{"names":["number"]},"description":"Width in pixels of this RetroFont. Set to zero to disable and re-enable automatic resizing.","name":"width"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'left'","description":"Align the text within this width. Set to RetroFont.ALIGN_LEFT (default), RetroFont.ALIGN_RIGHT or RetroFont.ALIGN_CENTER.","name":"lineAlignment"}],"longname":"Phaser.RetroFont#setFixedWidth","scope":"instance","___s":true},{"meta":{"range":[9904,10847],"filename":"RetroFont.js","lineno":293,"path":"src\\gameobjects"},"description":"A helper function that quickly sets lots of variables at once, and then updates the text.","kind":"function","name":"setText","memberof":"Phaser.RetroFont","params":[{"type":{"names":["string"]},"description":"The text of this sprite.","name":"content"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Set to true if you want to support carriage-returns in the text and create a multi-line sprite instead of a single line.","name":"multiLine"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"To add horizontal spacing between each character specify the amount in pixels.","name":"characterSpacing"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"To add vertical spacing between each line of text, set the amount in pixels.","name":"lineSpacing"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'left'","description":"Align each line of multi-line text. Set to RetroFont.ALIGN_LEFT, RetroFont.ALIGN_RIGHT or RetroFont.ALIGN_CENTER.","name":"lineAlignment"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Lots of bitmap font sets only include upper-case characters, if yours needs to support lower case then set this to true.","name":"allowLowerCase"}],"longname":"Phaser.RetroFont#setText","scope":"instance","___s":true},{"meta":{"range":[11384,11513],"filename":"RetroFont.js","lineno":328,"path":"src\\gameobjects"},"description":"Updates the texture with the new text.","kind":"function","name":"buildRetroFontText","memberof":"Phaser.RetroFont","longname":"Phaser.RetroFont#buildRetroFontText","scope":"instance","___s":true},{"meta":{"range":[14128,14568],"filename":"RetroFont.js","lineno":420,"path":"src\\gameobjects"},"description":"Internal function that takes a single line of text (2nd parameter) and pastes it into the BitmapData at the given coordinates.\rUsed by getLine and getMultiLine","kind":"function","name":"pasteLine","memberof":"Phaser.RetroFont","params":[{"type":{"names":["string"]},"description":"The single line of text to paste.","name":"line"},{"type":{"names":["number"]},"description":"The x coordinate.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate.","name":"y"},{"type":{"names":["number"]},"description":"Custom X spacing.","name":"customSpacingX"}],"longname":"Phaser.RetroFont#pasteLine","scope":"instance","___s":true},{"meta":{"range":[15450,15663],"filename":"RetroFont.js","lineno":459,"path":"src\\gameobjects"},"description":"Works out the longest line of text in _text and returns its length","kind":"function","name":"getLongestLine","memberof":"Phaser.RetroFont","returns":[{"type":{"names":["number"]},"description":"The length of the longest line of text."}],"longname":"Phaser.RetroFont#getLongestLine","scope":"instance","___s":true},{"meta":{"range":[16076,16459],"filename":"RetroFont.js","lineno":486,"path":"src\\gameobjects"},"description":"Internal helper function that removes all unsupported characters from the _text String, leaving only characters contained in the font set.","kind":"function","name":"removeUnsupportedCharacters","memberof":"Phaser.RetroFont","access":"protected","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should it strip carriage returns as well?","name":"stripCR"}],"returns":[{"type":{"names":["string"]},"description":"A clean version of the string."}],"longname":"Phaser.RetroFont#removeUnsupportedCharacters","scope":"instance","___s":true},{"meta":{"range":[16887,17690],"filename":"RetroFont.js","lineno":514,"path":"src\\gameobjects"},"description":"Updates the x and/or y offset that the font is rendered from. This updates all of the texture frames, so be careful how often it is called.\rNote that the values given for the x and y properties are either ADDED to or SUBTRACTED from (if negative) the existing offsetX/Y values of the characters.\rSo if the current offsetY is 8 and you want it to start rendering from y16 you would call updateOffset(0, 8) to add 8 to the current y offset.","kind":"function","name":"updateOffset","memberof":"Phaser.RetroFont","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the font set doesn't start at the top left of the given image, specify the X coordinate offset here.","name":"xOffset"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the font set doesn't start at the top left of the given image, specify the Y coordinate offset here.","name":"yOffset"}],"longname":"Phaser.RetroFont#updateOffset","scope":"instance","___s":true},{"meta":{"range":[18152,18398],"filename":"RetroFont.js","lineno":547,"path":"src\\gameobjects"},"name":"text","properties":[{"type":{"names":["string"]},"description":"Set this value to update the text in this sprite. Carriage returns are automatically stripped out if multiLine is false. Text is converted to upper case if autoUpperCase is true.","name":"text"}],"memberof":"Phaser.RetroFont","longname":"Phaser.RetroFont#text","scope":"instance","kind":"member","___s":true},{"meta":{"range":[18970,19084],"filename":"RetroFont.js","lineno":585,"path":"src\\gameobjects"},"name":"smoothed","properties":[{"type":{"names":["boolean"]},"description":"Sets if the stamp is smoothed or not.","name":"smoothed"}],"memberof":"Phaser.RetroFont","longname":"Phaser.RetroFont#smoothed","scope":"instance","kind":"member","___s":true},{"meta":{"range":[1867,2413],"filename":"Rope.js","lineno":42,"path":"src\\gameobjects"},"description":"A Rope is a Sprite that has a repeating texture.\r\rThe texture will automatically wrap on the edges as it moves.\r\rPlease note that Ropes cannot have an input handler.","kind":"class","classdesc":"Phaser.Rope","augments":["PIXI.Rope","Phaser.Component.Core","Phaser.Component.Angle","Phaser.Component.Animation","Phaser.Component.AutoCull","Phaser.Component.Bounds","Phaser.Component.BringToTop","Phaser.Component.Crop","Phaser.Component.Delta","Phaser.Component.Destroy","Phaser.Component.FixedToCamera","Phaser.Component.InWorld","Phaser.Component.LifeSpan","Phaser.Component.LoadTexture","Phaser.Component.Overlap","Phaser.Component.PhysicsBody","Phaser.Component.Reset","Phaser.Component.ScaleMinMax","Phaser.Component.Smoothed"],"params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the Rope at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the Rope at.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","PIXI.Texture"]},"description":"This is the image or texture used by the Rope during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"description":"If this Rope is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"},{"type":{"names":["Array"]},"description":"An array of {Phaser.Point}.","name":"points"}],"name":"Rope","longname":"Phaser.Rope","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[2250,2273],"filename":"Rope.js","lineno":57,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"readonly":true,"name":"type","longname":"Phaser.Rope#type","kind":"member","memberof":"Phaser.Rope","scope":"instance","___s":true},{"meta":{"range":[3200,3312],"filename":"Rope.js","lineno":93,"path":"src\\gameobjects"},"description":"Automatically called by World.preUpdate.","kind":"function","name":"preUpdate","memberof":"Phaser.Rope","longname":"Phaser.Rope#preUpdate","scope":"instance","___s":true},{"meta":{"range":[3537,3711],"filename":"Rope.js","lineno":110,"path":"src\\gameobjects"},"description":"Override and use this function in your own custom objects to handle any update requirements you may have.","kind":"function","name":"update","memberof":"Phaser.Rope","longname":"Phaser.Rope#update","scope":"instance","overrides":"Phaser.Component.Core#update","___s":true},{"meta":{"range":[3859,4363],"filename":"Rope.js","lineno":125,"path":"src\\gameobjects"},"description":"Resets the Rope. This places the Rope at the given x/y world coordinates and then\rsets alive, exists, visible and renderable all to true. Also resets the outOfBounds state.\rIf the Rope has a physics body that too is reset.","kind":"function","name":"reset","memberof":"Phaser.Rope","params":[{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the Sprite at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the Sprite at.","name":"y"}],"returns":[{"type":{"names":["Phaser.Rope"]},"description":"This instance."}],"longname":"Phaser.Rope#reset","scope":"instance","overrides":"Phaser.Component.Reset#reset","___s":true},{"meta":{"range":[4505,4790],"filename":"Rope.js","lineno":144,"path":"src\\gameobjects"},"description":"A Rope will call its updateAnimation function on each update loop if it has one.","name":"updateAnimation","properties":[{"type":{"names":["function"]},"description":"Set to a function if you'd like the rope to animate during the update phase. Set to false or null to remove it.","name":"updateAnimation"}],"memberof":"Phaser.Rope","longname":"Phaser.Rope#updateAnimation","scope":"instance","kind":"member","___s":true},{"meta":{"range":[5276,5529],"filename":"Rope.js","lineno":175,"path":"src\\gameobjects"},"description":"The segments that make up the rope body as an array of Phaser.Rectangles","name":"segments","properties":[{"type":{"names":["Array.<Phaser.Rectangles>"]},"description":"Returns an array of Phaser.Rectangles that represent the segments of the given rope","name":"updateAnimation"}],"memberof":"Phaser.Rope","longname":"Phaser.Rope#segments","scope":"instance","kind":"member","___s":true},{"meta":{"range":[2190,2748],"filename":"Sprite.js","lineno":44,"path":"src\\gameobjects"},"description":"Sprites are the lifeblood of your game, used for nearly everything visual.\r\rAt its most basic a Sprite consists of a set of coordinates and a texture that is rendered to the canvas.\rThey also contain additional properties allowing for physics motion (via Sprite.body), input handling (via Sprite.input),\revents (via Sprite.events), animation (via Sprite.animations), camera culling and more. Please see the Examples for use cases.","kind":"class","classdesc":"Phaser.Sprite","augments":["PIXI.Sprite","Phaser.Component.Core","Phaser.Component.Angle","Phaser.Component.Animation","Phaser.Component.AutoCull","Phaser.Component.Bounds","Phaser.Component.BringToTop","Phaser.Component.Crop","Phaser.Component.Delta","Phaser.Component.Destroy","Phaser.Component.FixedToCamera","Phaser.Component.Health","Phaser.Component.InCamera","Phaser.Component.InputEnabled","Phaser.Component.InWorld","Phaser.Component.LifeSpan","Phaser.Component.LoadTexture","Phaser.Component.Overlap","Phaser.Component.PhysicsBody","Phaser.Component.Reset","Phaser.Component.ScaleMinMax","Phaser.Component.Smoothed"],"params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the Sprite at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the Sprite at.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","PIXI.Texture"]},"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"name":"Sprite","longname":"Phaser.Sprite","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[2435,2460],"filename":"Sprite.js","lineno":55,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"readonly":true,"name":"type","longname":"Phaser.Sprite#type","kind":"member","memberof":"Phaser.Sprite","scope":"instance","___s":true},{"meta":{"range":[2587,2619],"filename":"Sprite.js","lineno":61,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const physics body type of this object.","name":"physicsType"}],"readonly":true,"name":"physicsType","longname":"Phaser.Sprite#physicsType","kind":"member","memberof":"Phaser.Sprite","scope":"instance","___s":true},{"meta":{"range":[3771,3991],"filename":"Sprite.js","lineno":107,"path":"src\\gameobjects"},"description":"Automatically called by World.preUpdate.","kind":"function","memberof":"Phaser.Sprite","returns":[{"type":{"names":["boolean"]},"description":"True if the Sprite was rendered, otherwise false."}],"name":"preUpdate","longname":"Phaser.Sprite#preUpdate","scope":"instance","___s":true},{"meta":{"range":[1509,1890],"filename":"SpriteBatch.js","lineno":23,"path":"src\\gameobjects"},"description":"The SpriteBatch class is a really fast version of the DisplayObjectContainer built purely for speed, so use when you need a lot of sprites or particles.\rIt's worth mentioning that by default sprite batches are used through-out the renderer, so you only really need to use a SpriteBatch if you have over\r1000 sprites that all share the same texture (or texture atlas). It's also useful if running in Canvas mode and you have a lot of un-rotated or un-scaled\rSprites as it skips all of the Canvas setTransform calls, which helps performance, especially on mobile devices.\r\rPlease note that any Sprite that is part of a SpriteBatch will not have its bounds updated, so will fail checks such as outOfBounds.","kind":"class","classdesc":"Phaser.SpriteBatch","augments":["Phaser.Group"],"params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["Phaser.Group","Phaser.Sprite","null"]},"description":"The parent Group, DisplayObject or DisplayObjectContainer that this Group will be added to. If `undefined` or `null` it will use game.world.","name":"parent"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"group","description":"A name for this Group. Not used internally but useful for debugging.","name":"name"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set to true this Group will be added directly to the Game.Stage instead of Game.World.","name":"addToStage"}],"name":"SpriteBatch","longname":"Phaser.SpriteBatch","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1854,1884],"filename":"SpriteBatch.js","lineno":35,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"Internal Phaser Type value.","name":"type"}],"access":"protected","name":"type","longname":"Phaser.SpriteBatch#type","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","overrides":"Phaser.Group#type","___s":true},{"meta":{"range":[3113,7318],"filename":"Text.js","lineno":40,"path":"src\\gameobjects"},"description":"Create a new game object for displaying Text.\r\rThis uses a local hidden Canvas object and renders the type into it. It then makes a texture from this for rendering to the view.\rBecause of this you can only display fonts that are currently loaded and available to the browser: fonts must be pre-loaded.\r\rSee {@link http://www.jordanm.co.uk/tinytype this compatibility table} for the available default fonts across mobile browsers.","kind":"class","classdesc":"Phaser.Text","augments":["Phaser.Sprite"],"params":[{"type":{"names":["Phaser.Game"]},"description":"Current game instance.","name":"game"},{"type":{"names":["number"]},"description":"X position of the new text object.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the new text object.","name":"y"},{"type":{"names":["string"]},"description":"The actual text that will be written.","name":"text"},{"type":{"names":["object"]},"optional":true,"description":"The style properties to be set on the Text.","name":"style"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'bold 20pt Arial'","description":"The style and size of the font.","name":"style.font"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"(from font)","description":"The style of the font (eg. 'italic'): overrides the value in `style.font`.","name":"style.fontStyle"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"(from font)","description":"The variant of the font (eg. 'small-caps'): overrides the value in `style.font`.","name":"style.fontVariant"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"(from font)","description":"The weight of the font (eg. 'bold'): overrides the value in `style.font`.","name":"style.fontWeight"},{"type":{"names":["string","number"]},"optional":true,"defaultvalue":"(from font)","description":"The size of the font (eg. 32 or '32px'): overrides the value in `style.font`.","name":"style.fontSize"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"A canvas fillstyle that will be used as the background for the whole Text object. Set to `null` to disable.","name":"style.backgroundColor"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'black'","description":"A canvas fillstyle that will be used on the text eg 'red', '#00FF00'.","name":"style.fill"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'left'","description":"Horizontal alignment of each line in multiline text. Can be: 'left', 'center' or 'right'. Does not affect single lines of text (see `textBounds` and `boundsAlignH` for that).","name":"style.align"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'left'","description":"Horizontal alignment of the text within the `textBounds`. Can be: 'left', 'center' or 'right'.","name":"style.boundsAlignH"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'top'","description":"Vertical alignment of the text within the `textBounds`. Can be: 'top', 'middle' or 'bottom'.","name":"style.boundsAlignV"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'black'","description":"A canvas stroke style that will be used on the text stroke eg 'blue', '#FCFF00'.","name":"style.stroke"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"A number that represents the thickness of the stroke. Default is 0 (no stroke).","name":"style.strokeThickness"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Indicates if word wrap should be used.","name":"style.wordWrap"},{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"The width in pixels at which text will wrap.","name":"style.wordWrapWidth"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The maximum number of lines to be shown for wrapped text.","name":"style.maxLines"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The size (in pixels) of the tabs, for when text includes tab characters. 0 disables. Can be an array of varying tab sizes, one per tab stop.","name":"style.tabs"}],"name":"Text","longname":"Phaser.Text","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[3490,3513],"filename":"Text.js","lineno":60,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"name":"type","longname":"Phaser.Text#type","kind":"member","memberof":"Phaser.Text","scope":"instance","overrides":"Phaser.Sprite#type","___s":true},{"meta":{"range":[3640,3672],"filename":"Text.js","lineno":66,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const physics body type of this object.","name":"physicsType"}],"readonly":true,"name":"physicsType","longname":"Phaser.Text#physicsType","kind":"member","memberof":"Phaser.Text","scope":"instance","overrides":"Phaser.Sprite#physicsType","___s":true},{"meta":{"range":[3954,3987],"filename":"Text.js","lineno":73,"path":"src\\gameobjects"},"description":"Specify a padding value which is added to the line width and height when calculating the Text size.\rALlows you to add extra spacing if Phaser is unable to accurately determine the true font dimensions.","properties":[{"type":{"names":["Phaser.Point"]},"name":"padding"}],"name":"padding","longname":"Phaser.Text#padding","kind":"member","memberof":"Phaser.Text","scope":"instance","___s":true},{"meta":{"range":[4237,4259],"filename":"Text.js","lineno":81,"path":"src\\gameobjects"},"description":"The textBounds property allows you to specify a rectangular region upon which text alignment is based.\rSee `Text.setTextBounds` for more details.","properties":[{"type":{"names":["Phaser.Rectangle"]},"name":"textBounds"}],"readonly":true,"name":"textBounds","longname":"Phaser.Text#textBounds","kind":"member","memberof":"Phaser.Text","scope":"instance","___s":true},{"meta":{"range":[4379,4421],"filename":"Text.js","lineno":86,"path":"src\\gameobjects"},"properties":[{"type":{"names":["HTMLCanvasElement"]},"description":"The canvas element that the text is rendered.","name":"canvas"}],"name":"canvas","longname":"Phaser.Text#canvas","kind":"member","memberof":"Phaser.Text","scope":"instance","___s":true},{"meta":{"range":[4560,4603],"filename":"Text.js","lineno":91,"path":"src\\gameobjects"},"properties":[{"type":{"names":["HTMLCanvasElement"]},"description":"The context of the canvas element that the text is rendered to.","name":"context"}],"name":"context","longname":"Phaser.Text#context","kind":"member","memberof":"Phaser.Text","scope":"instance","___s":true},{"meta":{"range":[4747,4763],"filename":"Text.js","lineno":96,"path":"src\\gameobjects"},"properties":[{"type":{"names":["array"]},"description":"An array of the color values as specified by {@link Phaser.Text#addColor addColor}.","name":"colors"}],"name":"colors","longname":"Phaser.Text#colors","kind":"member","memberof":"Phaser.Text","scope":"instance","___s":true},{"meta":{"range":[4932,4954],"filename":"Text.js","lineno":101,"path":"src\\gameobjects"},"properties":[{"type":{"names":["array"]},"description":"An array of the stroke color values as specified by {@link Phaser.Text#addStrokeColor addStrokeColor}.","name":"strokeColors"}],"name":"strokeColors","longname":"Phaser.Text#strokeColors","kind":"member","memberof":"Phaser.Text","scope":"instance","___s":true},{"meta":{"range":[5116,5136],"filename":"Text.js","lineno":106,"path":"src\\gameobjects"},"properties":[{"type":{"names":["array"]},"description":"An array of the font styles values as specified by {@link Phaser.Text#addFontStyle addFontStyle}.","name":"fontStyles"}],"name":"fontStyles","longname":"Phaser.Text#fontStyles","kind":"member","memberof":"Phaser.Text","scope":"instance","___s":true},{"meta":{"range":[5302,5323],"filename":"Text.js","lineno":111,"path":"src\\gameobjects"},"properties":[{"type":{"names":["array"]},"description":"An array of the font weights values as specified by {@link Phaser.Text#addFontWeight addFontWeight}.","name":"fontWeights"}],"name":"fontWeights","longname":"Phaser.Text#fontWeights","kind":"member","memberof":"Phaser.Text","scope":"instance","___s":true},{"meta":{"range":[5600,5622],"filename":"Text.js","lineno":119,"path":"src\\gameobjects"},"description":"Should the linePositionX and Y values be automatically rounded before rendering the Text?\rYou may wish to enable this if you want to remove the effect of sub-pixel aliasing from text.","properties":[{"type":{"names":["boolean"]},"name":"autoRound"}],"defaultvalue":false,"name":"autoRound","longname":"Phaser.Text#autoRound","kind":"member","memberof":"Phaser.Text","scope":"instance","___s":true},{"meta":{"range":[6120,6148],"filename":"Text.js","lineno":132,"path":"src\\gameobjects"},"description":"Will this Text object use Basic or Advanced Word Wrapping?\r\rAdvanced wrapping breaks long words if they are the first of a line, and repeats the process as necessary.\rWhite space is condensed (e.g., consecutive spaces are replaced with one).\rLines are trimmed of white space before processing.\r\rIt throws an error if wordWrapWidth is less than a single character.","properties":[{"type":{"names":["boolean"]},"name":"useAdvancedWrap"}],"defaultvalue":false,"name":"useAdvancedWrap","longname":"Phaser.Text#useAdvancedWrap","kind":"member","memberof":"Phaser.Text","scope":"instance","___s":true},{"meta":{"range":[7440,7542],"filename":"Text.js","lineno":190,"path":"src\\gameobjects"},"description":"Automatically called by World.preUpdate.","kind":"function","name":"preUpdate","access":"protected","memberof":"Phaser.Text","longname":"Phaser.Text#preUpdate","scope":"instance","overrides":"Phaser.Sprite#preUpdate","___s":true},{"meta":{"range":[7768,7891],"filename":"Text.js","lineno":207,"path":"src\\gameobjects"},"description":"Override this function to handle any special update requirements.","kind":"function","name":"update","access":"protected","memberof":"Phaser.Text","longname":"Phaser.Text#update","scope":"instance","overrides":"Phaser.Sprite#update","___s":true},{"meta":{"range":[7946,8169],"filename":"Text.js","lineno":217,"path":"src\\gameobjects"},"description":"Destroy this Text object, removing it from the group it belongs to.","kind":"function","name":"destroy","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should every child of this object have its destroy method called?","name":"destroyChildren"}],"memberof":"Phaser.Text","longname":"Phaser.Text#destroy","scope":"instance","overrides":"Phaser.Sprite#destroy","___s":true},{"meta":{"range":[8355,9671],"filename":"Text.js","lineno":231,"path":"src\\gameobjects"},"description":"Sets a drop shadow effect on the Text. You can specify the horizontal and vertical distance of the drop shadow with the `x` and `y` parameters.\rThe color controls the shade of the shadow (default is black) and can be either an `rgba` or `hex` value.\rThe blur is the strength of the shadow. A value of zero means a hard shadow, a value of 10 means a very soft shadow.\rTo remove a shadow already in place you can call this method with no parameters set.","kind":"function","name":"setShadow","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The shadowOffsetX value in pixels. This is how far offset horizontally the shadow effect will be.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The shadowOffsetY value in pixels. This is how far offset vertically the shadow effect will be.","name":"y"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgba(0,0,0,1)'","description":"The color of the shadow, as given in CSS rgba or hex format. Set the alpha component to 0 to disable the shadow.","name":"color"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The shadowBlur value. Make the shadow softer by applying a Gaussian blur to it. A number from 0 (no blur) up to approx. 10 (depending on scene).","name":"blur"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Apply the drop shadow to the Text stroke (if set).","name":"shadowStroke"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Apply the drop shadow to the Text fill (if set).","name":"shadowFill"}],"returns":[{"type":{"names":["Phaser.Text"]},"description":"This Text instance."}],"memberof":"Phaser.Text","longname":"Phaser.Text#setShadow","scope":"instance","___s":true},{"meta":{"range":[10348,12792],"filename":"Text.js","lineno":267,"path":"src\\gameobjects"},"description":"Set the style of the text by passing a single style object to it.","kind":"function","name":"setStyle","params":[{"type":{"names":["object"]},"optional":true,"description":"The style properties to be set on the Text.","name":"style"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'bold 20pt Arial'","description":"The style and size of the font.","name":"style.font"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"(from font)","description":"The style of the font (eg. 'italic'): overrides the value in `style.font`.","name":"style.fontStyle"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"(from font)","description":"The variant of the font (eg. 'small-caps'): overrides the value in `style.font`.","name":"style.fontVariant"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"(from font)","description":"The weight of the font (eg. 'bold'): overrides the value in `style.font`.","name":"style.fontWeight"},{"type":{"names":["string","number"]},"optional":true,"defaultvalue":"(from font)","description":"The size of the font (eg. 32 or '32px'): overrides the value in `style.font`.","name":"style.fontSize"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"A canvas fillstyle that will be used as the background for the whole Text object. Set to `null` to disable.","name":"style.backgroundColor"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'black'","description":"A canvas fillstyle that will be used on the text eg 'red', '#00FF00'.","name":"style.fill"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'left'","description":"Horizontal alignment of each line in multiline text. Can be: 'left', 'center' or 'right'. Does not affect single lines of text (see `textBounds` and `boundsAlignH` for that).","name":"style.align"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'left'","description":"Horizontal alignment of the text within the `textBounds`. Can be: 'left', 'center' or 'right'.","name":"style.boundsAlignH"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'top'","description":"Vertical alignment of the text within the `textBounds`. Can be: 'top', 'middle' or 'bottom'.","name":"style.boundsAlignV"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'black'","description":"A canvas stroke style that will be used on the text stroke eg 'blue', '#FCFF00'.","name":"style.stroke"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"A number that represents the thickness of the stroke. Default is 0 (no stroke).","name":"style.strokeThickness"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Indicates if word wrap should be used.","name":"style.wordWrap"},{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"The width in pixels at which text will wrap.","name":"style.wordWrapWidth"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The maximum number of lines to be shown for wrapped text.","name":"style.maxLines"},{"type":{"names":["number","array"]},"optional":true,"defaultvalue":0,"description":"The size (in pixels) of the tabs, for when text includes tab characters. 0 disables. Can be an array of varying tab sizes, one per tab stop.","name":"style.tabs"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Immediately update the Text object after setting the new style? Or wait for the next frame.","name":"update"}],"returns":[{"type":{"names":["Phaser.Text"]},"description":"This Text instance."}],"memberof":"Phaser.Text","longname":"Phaser.Text#setStyle","scope":"instance","___s":true},{"meta":{"range":[23157,23468],"filename":"Text.js","lineno":652,"path":"src\\gameobjects"},"description":"Sets the Shadow on the Text.context based on the Style settings, or disables it if not enabled.\rThis is called automatically by Text.updateText.","kind":"function","name":"updateShadow","params":[{"type":{"names":["boolean"]},"description":"If true the shadow will be set to the Style values, otherwise it will be set to zero.","name":"state"}],"memberof":"Phaser.Text","longname":"Phaser.Text#updateShadow","scope":"instance","___s":true},{"meta":{"range":[27358,27538],"filename":"Text.js","lineno":797,"path":"src\\gameobjects"},"description":"Clears any text fill or stroke colors that were set by `addColor` or `addStrokeColor`.","kind":"function","name":"clearColors","returns":[{"type":{"names":["Phaser.Text"]},"description":"This Text instance."}],"memberof":"Phaser.Text","longname":"Phaser.Text#clearColors","scope":"instance","___s":true},{"meta":{"range":[27697,27885],"filename":"Text.js","lineno":813,"path":"src\\gameobjects"},"description":"Clears any text styles or weights font that were set by `addFontStyle` or `addFontWeight`.","kind":"function","name":"clearFontValues","returns":[{"type":{"names":["Phaser.Text"]},"description":"This Text instance."}],"memberof":"Phaser.Text","longname":"Phaser.Text#clearFontValues","scope":"instance","___s":true},{"meta":{"range":[28051,28959],"filename":"Text.js","lineno":829,"path":"src\\gameobjects"},"description":"Set specific colors for certain characters within the Text.\r\rIt works by taking a color value, which is a typical HTML string such as `#ff0000` or `rgb(255,0,0)` and a position.\rThe position value is the index of the character in the Text string to start applying this color to.\rOnce set the color remains in use until either another color or the end of the string is encountered.\rFor example if the Text was `Photon Storm` and you did `Text.addColor('#ffff00', 6)` it would color in the word `Storm` in yellow.\r\rIf you wish to change the stroke color see addStrokeColor instead.","kind":"function","name":"addColor","params":[{"type":{"names":["string"]},"description":"A canvas fillstyle that will be used on the text eg `red`, `#00FF00`, `rgba()`.","name":"color"},{"type":{"names":["number"]},"description":"The index of the character in the string to start applying this color value from.","name":"position"}],"returns":[{"type":{"names":["Phaser.Text"]},"description":"This Text instance."}],"memberof":"Phaser.Text","longname":"Phaser.Text#addColor","scope":"instance","___s":true},{"meta":{"range":[29114,30111],"filename":"Text.js","lineno":853,"path":"src\\gameobjects"},"description":"Set specific stroke colors for certain characters within the Text.\r\rIt works by taking a color value, which is a typical HTML string such as `#ff0000` or `rgb(255,0,0)` and a position.\rThe position value is the index of the character in the Text string to start applying this color to.\rOnce set the color remains in use until either another color or the end of the string is encountered.\rFor example if the Text was `Photon Storm` and you did `Text.addColor('#ffff00', 6)` it would color in the word `Storm` in yellow.\r\rThis has no effect if stroke is disabled or has a thickness of 0.\r\rIf you wish to change the text fill color see addColor instead.","kind":"function","name":"addStrokeColor","params":[{"type":{"names":["string"]},"description":"A canvas fillstyle that will be used on the text stroke eg `red`, `#00FF00`, `rgba()`.","name":"color"},{"type":{"names":["number"]},"description":"The index of the character in the string to start applying this color value from.","name":"position"}],"returns":[{"type":{"names":["Phaser.Text"]},"description":"This Text instance."}],"memberof":"Phaser.Text","longname":"Phaser.Text#addStrokeColor","scope":"instance","___s":true},{"meta":{"range":[30278,31225],"filename":"Text.js","lineno":879,"path":"src\\gameobjects"},"description":"Set specific font styles for certain characters within the Text.\r\rIt works by taking a font style value, which is a typical string such as `normal`, `italic` or `oblique`.\rThe position value is the index of the character in the Text string to start applying this font style to.\rOnce set the font style remains in use until either another font style or the end of the string is encountered.\rFor example if the Text was `Photon Storm` and you did `Text.addFontStyle('italic', 6)` it would font style in the word `Storm` in italic.\r\rIf you wish to change the text font weight see addFontWeight instead.","kind":"function","name":"addFontStyle","params":[{"type":{"names":["string"]},"description":"A canvas font-style that will be used on the text style eg `normal`, `italic`, `oblique`.","name":"style"},{"type":{"names":["number"]},"description":"The index of the character in the string to start applying this font style value from.","name":"position"}],"returns":[{"type":{"names":["Phaser.Text"]},"description":"This Text instance."}],"memberof":"Phaser.Text","longname":"Phaser.Text#addFontStyle","scope":"instance","___s":true},{"meta":{"range":[31388,32353],"filename":"Text.js","lineno":903,"path":"src\\gameobjects"},"description":"Set specific font weights for certain characters within the Text.\r\rIt works by taking a font weight value, which is a typical string such as `normal`, `bold`, `bolder`, etc.\rThe position value is the index of the character in the Text string to start applying this font weight to.\rOnce set the font weight remains in use until either another font weight or the end of the string is encountered.\rFor example if the Text was `Photon Storm` and you did `Text.addFontWeight('bold', 6)` it would font weight in the word `Storm` in bold.\r\rIf you wish to change the text font style see addFontStyle instead.","kind":"function","name":"addFontWeight","params":[{"type":{"names":["string"]},"description":"A canvas font-weight that will be used on the text weight eg `normal`, `bold`, `bolder`, `lighter`, etc.","name":"style"},{"type":{"names":["number"]},"description":"The index of the character in the string to start applying this font weight value from.","name":"position"}],"returns":[{"type":{"names":["Phaser.Text"]},"description":"This Text instance."}],"memberof":"Phaser.Text","longname":"Phaser.Text#addFontWeight","scope":"instance","___s":true},{"meta":{"range":[32520,32973],"filename":"Text.js","lineno":927,"path":"src\\gameobjects"},"description":"Runs the given text through the Text.runWordWrap function and returns\rthe results as an array, where each element of the array corresponds to a wrapped\rline of text.\r\rUseful if you wish to control pagination on long pieces of content.","kind":"function","name":"precalculateWordWrap","params":[{"type":{"names":["string"]},"description":"The text for which the wrapping will be calculated.","name":"text"}],"returns":[{"type":{"names":["array"]},"description":"An array of strings with the pieces of wrapped text."}],"memberof":"Phaser.Text","longname":"Phaser.Text#precalculateWordWrap","scope":"instance","___s":true},{"meta":{"range":[42365,43103],"filename":"Text.js","lineno":1252,"path":"src\\gameobjects"},"description":"The text to be displayed by this Text object.\rUse a \\n to insert a carriage return and split the text.\rThe text will be rendered with any style currently set.\r\rUse the optional `immediate` argument if you need the Text display to update immediately.\r\rIf not it will re-create the texture of this Text object during the next time the render\rloop is called.","kind":"function","name":"setText","params":[{"type":{"names":["string"]},"optional":true,"description":"The text to be displayed. Set to an empty string to clear text that is already present.","name":"text"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Update the texture used by this Text object immediately (true) or automatically during the next render loop (false).","name":"immediate"}],"returns":[{"type":{"names":["Phaser.Text"]},"description":"This Text instance."}],"memberof":"Phaser.Text","longname":"Phaser.Text#setText","scope":"instance","___s":true},{"meta":{"range":[43412,44041],"filename":"Text.js","lineno":1286,"path":"src\\gameobjects"},"description":"Converts the given array into a tab delimited string and then updates this Text object.\rThis is mostly used when you want to display external data using tab stops.\r\rThe array can be either single or multi dimensional depending on the result you need:\r\r`[ 'a', 'b', 'c' ]` would convert in to `\"a\\tb\\tc\"`.\r\rWhere as:\r\r`[\r     [ 'a', 'b', 'c' ],\r     [ 'd', 'e', 'f']\r]`\r\rwould convert in to: `\"a\\tb\\tc\\nd\\te\\tf\"`","kind":"function","name":"parseList","params":[{"type":{"names":["array"]},"description":"The array of data to convert into a string.","name":"list"}],"returns":[{"type":{"names":["Phaser.Text"]},"description":"This Text instance."}],"memberof":"Phaser.Text","longname":"Phaser.Text#parseList","scope":"instance","___s":true},{"meta":{"range":[44775,46967],"filename":"Text.js","lineno":1347,"path":"src\\gameobjects"},"description":"The Text Bounds is a rectangular region that you control the dimensions of into which the Text object itself is positioned,\rregardless of the number of lines in the text, the font size or any other attribute.\r\rAlignment is controlled via the properties `boundsAlignH` and `boundsAlignV` within the Text.style object, or can be directly\rset through the setters `Text.boundsAlignH` and `Text.boundsAlignV`. Bounds alignment is independent of text alignment.\r\rFor example: If your game is 800x600 in size and you set the text bounds to be 0,0,800,600 then by setting boundsAlignH to\r'center' and boundsAlignV to 'bottom' the text will render in the center and at the bottom of your game window, regardless of\rhow many lines of text there may be. Even if you adjust the text content or change the style it will remain at the bottom center\rof the text bounds.\r\rThis is especially powerful when you need to align text against specific coordinates in your game, but the actual text dimensions\rmay vary based on font (say for multi-lingual games).\r\rIf `Text.wordWrapWidth` is greater than the width of the text bounds it is clamped to match the bounds width.\r\rCall this method with no arguments given to reset an existing textBounds.\r\rIt works by calculating the final position based on the Text.canvas size, which is modified as the text is updated. Some fonts\rhave additional padding around them which you can mitigate by tweaking the Text.padding property. It then adjusts the `pivot`\rproperty based on the given bounds and canvas size. This means if you need to set the pivot property directly in your game then\ryou either cannot use `setTextBounds` or you must place the Text object inside another DisplayObject on which you set the pivot.","kind":"function","name":"setTextBounds","params":[{"type":{"names":["number"]},"optional":true,"description":"The x coordinate of the Text Bounds region.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate of the Text Bounds region.","name":"y"},{"type":{"names":["number"]},"optional":true,"description":"The width of the Text Bounds region.","name":"width"},{"type":{"names":["number"]},"optional":true,"description":"The height of the Text Bounds region.","name":"height"}],"returns":[{"type":{"names":["Phaser.Text"]},"description":"This Text instance."}],"memberof":"Phaser.Text","longname":"Phaser.Text#setTextBounds","scope":"instance","___s":true},{"meta":{"range":[53169,53453],"filename":"Text.js","lineno":1631,"path":"src\\gameobjects"},"description":"Returns the bounds of the Text as a rectangle.\rThe bounds calculation takes the worldTransform into account.","kind":"function","name":"getBounds","params":[{"type":{"names":["Phaser.Matrix"]},"description":"The transformation matrix of the Text.","name":"matrix"}],"returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"The framing rectangle"}],"memberof":"Phaser.Text","longname":"Phaser.Text#getBounds","scope":"instance","___s":true},{"meta":{"range":[53678,53909],"filename":"Text.js","lineno":1651,"path":"src\\gameobjects"},"description":"The text to be displayed by this Text object.\rUse a \\n to insert a carriage return and split the text.\rThe text will be rendered with any style currently set.","name":"text","properties":[{"type":{"names":["string"]},"name":"text"}],"memberof":"Phaser.Text","longname":"Phaser.Text#text","scope":"instance","kind":"member","___s":true},{"meta":{"range":[54320,54757],"filename":"Text.js","lineno":1682,"path":"src\\gameobjects"},"description":"Change the font used.\r\rThis is equivalent of the `font` property specified to {@link Phaser.Text#setStyle setStyle}, except\rthat unlike using `setStyle` this will not change any current font fill/color settings.\r\rThe CSS font string can also be individually altered with the `font`, `fontSize`, `fontWeight`, `fontStyle`, and `fontVariant` properties.","name":"cssFont","properties":[{"type":{"names":["string"]},"name":"cssFont"}],"memberof":"Phaser.Text","longname":"Phaser.Text#cssFont","scope":"instance","kind":"member","___s":true},{"meta":{"range":[55119,55575],"filename":"Text.js","lineno":1708,"path":"src\\gameobjects"},"description":"Change the font family that the text will be rendered in, such as 'Arial'.\r\rMultiple CSS font families and generic fallbacks can be specified as long as\r{@link http://www.w3.org/TR/CSS2/fonts.html#propdef-font-family CSS font-family rules} are followed.\r\rTo change the entire font string use {@link Phaser.Text#cssFont cssFont} instead: eg. `text.cssFont = 'bold 20pt Arial'`.","name":"font","properties":[{"type":{"names":["string"]},"name":"font"}],"memberof":"Phaser.Text","longname":"Phaser.Text#font","scope":"instance","kind":"member","___s":true},{"meta":{"range":[56188,56512],"filename":"Text.js","lineno":1743,"path":"src\\gameobjects"},"description":"The size of the font.\r\rIf the font size is specified in pixels (eg. `32` or `'32px`') then a number (ie. `32`) representing\rthe font size in pixels is returned; otherwise the value with CSS unit is returned as a string (eg. `'12pt'`).","name":"fontSize","properties":[{"type":{"names":["number","string"]},"name":"fontSize"}],"memberof":"Phaser.Text","longname":"Phaser.Text#fontSize","scope":"instance","kind":"member","___s":true},{"meta":{"range":[57121,57331],"filename":"Text.js","lineno":1785,"path":"src\\gameobjects"},"description":"The weight of the font: 'normal', 'bold', or {@link http://www.w3.org/TR/CSS2/fonts.html#propdef-font-weight a valid CSS font weight}.","name":"fontWeight","properties":[{"type":{"names":["string"]},"name":"fontWeight"}],"memberof":"Phaser.Text","longname":"Phaser.Text#fontWeight","scope":"instance","kind":"member","___s":true},{"meta":{"range":[57673,57799],"filename":"Text.js","lineno":1806,"path":"src\\gameobjects"},"description":"The style of the font: 'normal', 'italic', 'oblique'","name":"fontStyle","properties":[{"type":{"names":["string"]},"name":"fontStyle"}],"memberof":"Phaser.Text","longname":"Phaser.Text#fontStyle","scope":"instance","kind":"member","___s":true},{"meta":{"range":[58138,58260],"filename":"Text.js","lineno":1827,"path":"src\\gameobjects"},"description":"The variant the font: 'normal', 'small-caps'","name":"fontVariant","properties":[{"type":{"names":["string"]},"name":"fontVariant"}],"memberof":"Phaser.Text","longname":"Phaser.Text#fontVariant","scope":"instance","kind":"member","___s":true},{"meta":{"range":[58605,58737],"filename":"Text.js","lineno":1848,"path":"src\\gameobjects"},"name":"fill","properties":[{"type":{"names":["object"]},"description":"A canvas fillstyle that will be used on the text eg 'red', '#00FF00'.","name":"fill"}],"memberof":"Phaser.Text","longname":"Phaser.Text#fill","scope":"instance","kind":"member","___s":true},{"meta":{"range":[59043,59280],"filename":"Text.js","lineno":1870,"path":"src\\gameobjects"},"description":"Controls the horizontal alignment for multiline text.\rCan be: 'left', 'center' or 'right'.\rDoes not affect single lines of text. For that please see `setTextBounds`.","name":"align","properties":[{"type":{"names":["string"]},"name":"align"}],"memberof":"Phaser.Text","longname":"Phaser.Text#align","scope":"instance","kind":"member","___s":true},{"meta":{"range":[59590,59825],"filename":"Text.js","lineno":1895,"path":"src\\gameobjects"},"description":"The resolution of the canvas the text is rendered to.\rThis defaults to match the resolution of the renderer, but can be changed on a per Text object basis.","name":"resolution","properties":[{"type":{"names":["integer"]},"name":"resolution"}],"memberof":"Phaser.Text","longname":"Phaser.Text#resolution","scope":"instance","kind":"member","___s":true},{"meta":{"range":[60119,60558],"filename":"Text.js","lineno":1919,"path":"src\\gameobjects"},"description":"The size (in pixels) of the tabs, for when text includes tab characters. 0 disables. \rCan be an integer or an array of varying tab sizes, one tab per element.\rFor example if you set tabs to 100 then when Text encounters a tab it will jump ahead 100 pixels.\rIf you set tabs to be `[100,200]` then it will set the first tab at 100px and the second at 200px.","name":"tabs","properties":[{"type":{"names":["integer","array"]},"name":"tabs"}],"memberof":"Phaser.Text","longname":"Phaser.Text#tabs","scope":"instance","kind":"member","___s":true},{"meta":{"range":[60864,61038],"filename":"Text.js","lineno":1946,"path":"src\\gameobjects"},"description":"Horizontal alignment of the text within the `textBounds`. Can be: 'left', 'center' or 'right'.","name":"boundsAlignH","properties":[{"type":{"names":["string"]},"name":"boundsAlignH"}],"memberof":"Phaser.Text","longname":"Phaser.Text#boundsAlignH","scope":"instance","kind":"member","___s":true},{"meta":{"range":[61376,61548],"filename":"Text.js","lineno":1969,"path":"src\\gameobjects"},"description":"Vertical alignment of the text within the `textBounds`. Can be: 'top', 'middle' or 'bottom'.","name":"boundsAlignV","properties":[{"type":{"names":["string"]},"name":"boundsAlignV"}],"memberof":"Phaser.Text","longname":"Phaser.Text#boundsAlignV","scope":"instance","kind":"member","___s":true},{"meta":{"range":[61886,62030],"filename":"Text.js","lineno":1992,"path":"src\\gameobjects"},"name":"stroke","properties":[{"type":{"names":["string"]},"description":"A canvas fillstyle that will be used on the text stroke eg 'blue', '#FCFF00'.","name":"stroke"}],"memberof":"Phaser.Text","longname":"Phaser.Text#stroke","scope":"instance","kind":"member","___s":true},{"meta":{"range":[62344,62507],"filename":"Text.js","lineno":2014,"path":"src\\gameobjects"},"name":"strokeThickness","properties":[{"type":{"names":["number"]},"description":"A number that represents the thickness of the stroke. Default is 0 (no stroke)","name":"strokeThickness"}],"memberof":"Phaser.Text","longname":"Phaser.Text#strokeThickness","scope":"instance","kind":"member","___s":true},{"meta":{"range":[62857,62967],"filename":"Text.js","lineno":2036,"path":"src\\gameobjects"},"name":"wordWrap","properties":[{"type":{"names":["boolean"]},"description":"Indicates if word wrap should be used.","name":"wordWrap"}],"memberof":"Phaser.Text","longname":"Phaser.Text#wordWrap","scope":"instance","kind":"member","___s":true},{"meta":{"range":[63289,63404],"filename":"Text.js","lineno":2058,"path":"src\\gameobjects"},"name":"wordWrapWidth","properties":[{"type":{"names":["number"]},"description":"The width at which text will wrap.","name":"wordWrapWidth"}],"memberof":"Phaser.Text","longname":"Phaser.Text#wordWrapWidth","scope":"instance","kind":"member","___s":true},{"meta":{"range":[63746,63894],"filename":"Text.js","lineno":2080,"path":"src\\gameobjects"},"name":"lineSpacing","properties":[{"type":{"names":["number"]},"description":"Additional spacing (in pixels) between each line of text if multi-line.","name":"lineSpacing"}],"memberof":"Phaser.Text","longname":"Phaser.Text#lineSpacing","scope":"instance","kind":"member","___s":true},{"meta":{"range":[64328,64506],"filename":"Text.js","lineno":2107,"path":"src\\gameobjects"},"name":"shadowOffsetX","properties":[{"type":{"names":["number"]},"description":"The shadowOffsetX value in pixels. This is how far offset horizontally the shadow effect will be.","name":"shadowOffsetX"}],"memberof":"Phaser.Text","longname":"Phaser.Text#shadowOffsetX","scope":"instance","kind":"member","___s":true},{"meta":{"range":[64848,65024],"filename":"Text.js","lineno":2129,"path":"src\\gameobjects"},"name":"shadowOffsetY","properties":[{"type":{"names":["number"]},"description":"The shadowOffsetY value in pixels. This is how far offset vertically the shadow effect will be.","name":"shadowOffsetY"}],"memberof":"Phaser.Text","longname":"Phaser.Text#shadowOffsetY","scope":"instance","kind":"member","___s":true},{"meta":{"range":[65366,65548],"filename":"Text.js","lineno":2151,"path":"src\\gameobjects"},"name":"shadowColor","properties":[{"type":{"names":["string"]},"description":"The color of the shadow, as given in CSS rgba format. Set the alpha component to 0 to disable the shadow.","name":"shadowColor"}],"memberof":"Phaser.Text","longname":"Phaser.Text#shadowColor","scope":"instance","kind":"member","___s":true},{"meta":{"range":[65882,66101],"filename":"Text.js","lineno":2173,"path":"src\\gameobjects"},"name":"shadowBlur","properties":[{"type":{"names":["number"]},"description":"The shadowBlur value. Make the shadow softer by applying a Gaussian blur to it. A number from 0 (no blur) up to approx. 10 (depending on scene).","name":"shadowBlur"}],"memberof":"Phaser.Text","longname":"Phaser.Text#shadowBlur","scope":"instance","kind":"member","___s":true},{"meta":{"range":[66431,66565],"filename":"Text.js","lineno":2195,"path":"src\\gameobjects"},"name":"shadowStroke","properties":[{"type":{"names":["boolean"]},"description":"Sets if the drop shadow is applied to the Text stroke.","name":"shadowStroke"}],"memberof":"Phaser.Text","longname":"Phaser.Text#shadowStroke","scope":"instance","kind":"member","___s":true},{"meta":{"range":[66903,67031],"filename":"Text.js","lineno":2217,"path":"src\\gameobjects"},"name":"shadowFill","properties":[{"type":{"names":["boolean"]},"description":"Sets if the drop shadow is applied to the Text fill.","name":"shadowFill"}],"memberof":"Phaser.Text","longname":"Phaser.Text#shadowFill","scope":"instance","kind":"member","___s":true},{"meta":{"range":[67361,67515],"filename":"Text.js","lineno":2239,"path":"src\\gameobjects"},"name":"width","properties":[{"type":{"names":["number"]},"description":"The width of the Text. Setting this will modify the scale to achieve the value requested.","name":"width"}],"memberof":"Phaser.Text","longname":"Phaser.Text#width","scope":"instance","kind":"member","___s":true},{"meta":{"range":[67916,68073],"filename":"Text.js","lineno":2264,"path":"src\\gameobjects"},"name":"height","properties":[{"type":{"names":["number"]},"description":"The height of the Text. Setting this will modify the scale to achieve the value requested.","name":"height"}],"memberof":"Phaser.Text","longname":"Phaser.Text#height","scope":"instance","kind":"member","___s":true},{"meta":{"range":[3657,4515],"filename":"TileSprite.js","lineno":59,"path":"src\\gameobjects"},"description":"A TileSprite is a Sprite that has a repeating texture. The texture can be scrolled and scaled independently of the TileSprite itself.\rTextures will automatically wrap and are designed so that you can create game backdrops using seamless textures as a source.\r\rTileSprites have no input handler or physics bodies by default, both need enabling in the same way as for normal Sprites.\r\rYou shouldn't ever create a TileSprite any larger than your actual screen size. If you want to create a large repeating background\rthat scrolls across the whole map of your game, then you create a TileSprite that fits the screen size and then use the `tilePosition`\rproperty to scroll the texture as the player moves. If you create a TileSprite that is thousands of pixels in size then it will \rconsume huge amounts of memory and cause performance issues. Remember: use `tilePosition` to scroll your texture and `tileScale` to\radjust the scale of the texture - don't resize the sprite itself or make it larger than it needs.\r\rAn important note about texture dimensions:\r\rWhen running under Canvas a TileSprite can use any texture size without issue. When running under WebGL the texture should ideally be\ra power of two in size (i.e. 4, 8, 16, 32, 64, 128, 256, 512, etc pixels width by height). If the texture isn't a power of two\rit will be rendered to a blank canvas that is the correct size, which means you may have 'blank' areas appearing to the right and\rbottom of your frame. To avoid this ensure your textures are perfect powers of two.\r\rTileSprites support animations in the same way that Sprites do. You add and play animations using the AnimationManager. However\rif your game is running under WebGL please note that each frame of the animation must be a power of two in size, or it will receive\radditional padding to enforce it to be so.","kind":"class","classdesc":"Phaser.TileSprite","augments":["PIXI.TilingSprite","Phaser.Component.Core","Phaser.Component.Angle","Phaser.Component.Animation","Phaser.Component.AutoCull","Phaser.Component.Bounds","Phaser.Component.BringToTop","Phaser.Component.Destroy","Phaser.Component.FixedToCamera","Phaser.Component.Health","Phaser.Component.InCamera","Phaser.Component.InputEnabled","Phaser.Component.InWorld","Phaser.Component.LifeSpan","Phaser.Component.LoadTexture","Phaser.Component.Overlap","Phaser.Component.PhysicsBody","Phaser.Component.Reset","Phaser.Component.Smoothed"],"params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the TileSprite at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the TileSprite at.","name":"y"},{"type":{"names":["number"]},"description":"The width of the TileSprite.","name":"width"},{"type":{"names":["number"]},"description":"The height of the TileSprite.","name":"height"},{"type":{"names":["string","Phaser.BitmapData","PIXI.Texture"]},"description":"This is the image or texture used by the TileSprite during rendering. It can be a string which is a reference to the Phaser Image Cache entry, or an instance of a PIXI.Texture or BitmapData.","name":"key"},{"type":{"names":["string","number"]},"description":"If this TileSprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"name":"TileSprite","longname":"Phaser.TileSprite","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[3977,4006],"filename":"TileSprite.js","lineno":72,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"readonly":true,"name":"type","longname":"Phaser.TileSprite#type","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","___s":true},{"meta":{"range":[4133,4165],"filename":"TileSprite.js","lineno":78,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const physics body type of this object.","name":"physicsType"}],"readonly":true,"name":"physicsType","longname":"Phaser.TileSprite#physicsType","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","___s":true},{"meta":{"range":[5364,5488],"filename":"TileSprite.js","lineno":122,"path":"src\\gameobjects"},"description":"Automatically called by World.preUpdate.","kind":"function","name":"preUpdate","memberof":"Phaser.TileSprite","longname":"Phaser.TileSprite#preUpdate","scope":"instance","___s":true},{"meta":{"range":[5973,6526],"filename":"TileSprite.js","lineno":149,"path":"src\\gameobjects"},"description":"Sets this TileSprite to automatically scroll in the given direction until stopped via TileSprite.stopScroll().\rThe scroll speed is specified in pixels per second.\rA negative x value will scroll to the left. A positive x value will scroll to the right.\rA negative y value will scroll up. A positive y value will scroll down.","kind":"function","name":"autoScroll","memberof":"Phaser.TileSprite","params":[{"type":{"names":["number"]},"description":"Horizontal scroll speed in pixels per second.","name":"x"},{"type":{"names":["number"]},"description":"Vertical scroll speed in pixels per second.","name":"y"}],"longname":"Phaser.TileSprite#autoScroll","scope":"instance","___s":true},{"meta":{"range":[6626,6755],"filename":"TileSprite.js","lineno":166,"path":"src\\gameobjects"},"description":"Stops an automatically scrolling TileSprite.","kind":"function","name":"stopScroll","memberof":"Phaser.TileSprite","longname":"Phaser.TileSprite#stopScroll","scope":"instance","___s":true},{"meta":{"range":[6851,7234],"filename":"TileSprite.js","lineno":178,"path":"src\\gameobjects"},"description":"Destroys the TileSprite. This removes it from its parent group, destroys the event and animation handlers if present\rand nulls its reference to game, freeing it up for garbage collection.","kind":"function","name":"destroy","memberof":"Phaser.TileSprite","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should every child of this object have its destroy method called?","name":"destroyChildren"}],"longname":"Phaser.TileSprite#destroy","scope":"instance","overrides":"Phaser.Component.Destroy#destroy","___s":true},{"meta":{"range":[7445,8010],"filename":"TileSprite.js","lineno":194,"path":"src\\gameobjects"},"description":"Resets the TileSprite. This places the TileSprite at the given x/y world coordinates, resets the tilePosition and then\rsets alive, exists, visible and renderable all to true. Also resets the outOfBounds state.\rIf the TileSprite has a physics body that too is reset.","kind":"function","name":"reset","memberof":"Phaser.TileSprite","params":[{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the Sprite at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the Sprite at.","name":"y"}],"returns":[{"type":{"names":["Phaser.TileSprite"]},"description":"This instance."}],"longname":"Phaser.TileSprite#reset","scope":"instance","overrides":"Phaser.Component.Reset#reset","___s":true},{"meta":{"range":[2412,10638],"filename":"Video.js","lineno":38,"path":"src\\gameobjects"},"description":"A Video object that takes a previously loaded Video from the Phaser Cache and handles playback of it.\r\rAlternatively it takes a getUserMedia feed from an active webcam and streams the contents of that to\rthe Video instead (see `startMediaStream` method)\r\rThe video can then be applied to a Sprite as a texture. If multiple Sprites share the same Video texture and playback\rchanges (i.e. you pause the video, or seek to a new time) then this change will be seen across all Sprites simultaneously.\r\rDue to a bug in IE11 you cannot play a video texture to a Sprite in WebGL. For IE11 force Canvas mode.\r\rIf you need each Sprite to be able to play a video fully independently then you will need one Video object per Sprite.\rPlease understand the obvious performance implications of doing this, and the memory required to hold videos in RAM.\r\rOn some mobile browsers such as iOS Safari, you cannot play a video until the user has explicitly touched the screen.\rThis works in the same way as audio unlocking. Phaser will handle the touch unlocking for you, however unlike with audio\rit's worth noting that every single Video needs to be touch unlocked, not just the first one. You can use the `changeSource`\rmethod to try and work around this limitation, but see the method help for details.\r\rSmall screen devices, especially iPod and iPhone will launch the video in its own native video player,\routside of the Safari browser. There is no way to avoid this, it's a device imposed limitation.\r\rNote: On iOS if you need to detect when the user presses the 'Done' button (before the video ends)\rthen you need to add your own event listener","kind":"class","classdesc":"Phaser.Video","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["string","null"]},"optional":true,"defaultvalue":null,"description":"The key of the video file in the Phaser.Cache that this Video object will play. Set to `null` or leave undefined if you wish to use a webcam as the source. See `startMediaStream` to start webcam capture.","name":"key"},{"type":{"names":["string","null"]},"optional":true,"defaultvalue":null,"description":"If the video hasn't been loaded then you can provide a full URL to the file here (make sure to set key to null)","name":"url"}],"name":"Video","longname":"Phaser.Video","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[2650,2666],"filename":"Video.js","lineno":46,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"game","longname":"Phaser.Video#game","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[2855,2869],"filename":"Video.js","lineno":52,"path":"src\\gameobjects"},"properties":[{"type":{"names":["string"]},"description":"The key of the Video in the Cache, if stored there. Will be `null` if this Video is using the webcam instead.","name":"key"}],"defaultvalue":"null","name":"key","longname":"Phaser.Video#key","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[2979,2993],"filename":"Video.js","lineno":58,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The width of the video in pixels.","name":"width"}],"defaultvalue":0,"name":"width","longname":"Phaser.Video#width","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[3105,3120],"filename":"Video.js","lineno":64,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The height of the video in pixels.","name":"height"}],"defaultvalue":0,"name":"height","longname":"Phaser.Video#height","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[3226,3250],"filename":"Video.js","lineno":70,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"name":"type","longname":"Phaser.Video#type","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[3444,3477],"filename":"Video.js","lineno":75,"path":"src\\gameobjects"},"properties":[{"type":{"names":["boolean"]},"description":"If true this video will never send its image data to the GPU when its dirty flag is true. This only applies in WebGL.","name":"disableTextureUpload"}],"name":"disableTextureUpload","longname":"Phaser.Video#disableTextureUpload","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[3673,3697],"filename":"Video.js","lineno":81,"path":"src\\gameobjects"},"properties":[{"type":{"names":["boolean"]},"description":"true if this video is currently locked awaiting a touch event. This happens on some mobile devices, such as iOS.","name":"touchLocked"}],"defaultvalue":false,"name":"touchLocked","longname":"Phaser.Video#touchLocked","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[3936,3969],"filename":"Video.js","lineno":86,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"This signal is dispatched when the Video starts to play. It sends 3 parameters: a reference to the Video object, if the video is set to loop or not and the playback rate.","name":"onPlay"}],"name":"onPlay","longname":"Phaser.Video#onPlay","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[4212,4253],"filename":"Video.js","lineno":91,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"This signal is dispatched if the Video source is changed. It sends 3 parameters: a reference to the Video object and the new width and height of the new video source.","name":"onChangeSource"}],"name":"onChangeSource","longname":"Phaser.Video#onChangeSource","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[4567,4604],"filename":"Video.js","lineno":96,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"This signal is dispatched when the Video completes playback, i.e. enters an 'ended' state. On iOS specifically it also fires if the user hits the 'Done' button at any point during playback. Videos set to loop will never dispatch this signal.","name":"onComplete"}],"name":"onComplete","longname":"Phaser.Video#onComplete","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[4743,4778],"filename":"Video.js","lineno":101,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"This signal is dispatched if the user allows access to their webcam.","name":"onAccess"}],"name":"onAccess","longname":"Phaser.Video#onAccess","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[4999,5033],"filename":"Video.js","lineno":106,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"This signal is dispatched if an error occurs either getting permission to use the webcam (for a Video Stream) or when trying to play back a video file.","name":"onError"}],"name":"onError","longname":"Phaser.Video#onError","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[5380,5416],"filename":"Video.js","lineno":113,"path":"src\\gameobjects"},"description":"This signal is dispatched if when asking for permission to use the webcam no response is given within a the Video.timeout limit.\rThis may be because the user has picked `Not now` in the permissions window, or there is a delay in establishing the LocalMediaStream.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onTimeout"}],"name":"onTimeout","longname":"Phaser.Video#onTimeout","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[5612,5632],"filename":"Video.js","lineno":119,"path":"src\\gameobjects"},"properties":[{"type":{"names":["integer"]},"description":"The amount of ms allowed to elapsed before the Video.onTimeout signal is dispatched while waiting for webcam access.","name":"timeout"}],"defaultvalue":15000,"name":"timeout","longname":"Phaser.Video#timeout","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[5875,5892],"filename":"Video.js","lineno":130,"path":"src\\gameobjects"},"properties":[{"type":{"names":["HTMLVideoElement"]},"description":"The HTML Video Element that is added to the document.","name":"video"}],"name":"video","longname":"Phaser.Video#video","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[6062,6085],"filename":"Video.js","lineno":135,"path":"src\\gameobjects"},"properties":[{"type":{"names":["MediaStream"]},"description":"The Video Stream data. Only set if this Video is streaming from the webcam via `startMediaStream`.","name":"videoStream"}],"name":"videoStream","longname":"Phaser.Video#videoStream","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[6207,6231],"filename":"Video.js","lineno":140,"path":"src\\gameobjects"},"properties":[{"type":{"names":["boolean"]},"description":"Is there a streaming video source? I.e. from a webcam.","name":"isStreaming"}],"name":"isStreaming","longname":"Phaser.Video#isStreaming","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[6595,6615],"filename":"Video.js","lineno":149,"path":"src\\gameobjects"},"description":"When starting playback of a video Phaser will monitor its readyState using a setTimeout call.\rThe setTimeout happens once every `Video.retryInterval` ms. It will carry on monitoring the video\rstate in this manner until the `retryLimit` is reached and then abort.","properties":[{"type":{"names":["integer"]},"name":"retryLimit"}],"defaultvalue":20,"name":"retryLimit","longname":"Phaser.Video#retryLimit","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[6719,6733],"filename":"Video.js","lineno":155,"path":"src\\gameobjects"},"properties":[{"type":{"names":["integer"]},"description":"The current retry attempt.","name":"retry"}],"defaultvalue":0,"name":"retry","longname":"Phaser.Video#retry","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[6903,6927],"filename":"Video.js","lineno":161,"path":"src\\gameobjects"},"properties":[{"type":{"names":["integer"]},"description":"The number of ms between each retry at monitoring the status of a downloading video.","name":"retryInterval"}],"defaultvalue":500,"name":"retryInterval","longname":"Phaser.Video#retryInterval","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[9307,9356],"filename":"Video.js","lineno":263,"path":"src\\gameobjects"},"properties":[{"type":{"names":["PIXI.Texture"]},"description":"The PIXI.Texture.","name":"texture"}],"name":"texture","longname":"Phaser.Video#texture","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[9486,9565],"filename":"Video.js","lineno":269,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.Frame"]},"description":"The Frame this video uses for rendering.","name":"textureFrame"}],"name":"textureFrame","longname":"Phaser.Video#textureFrame","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[10169,10189],"filename":"Video.js","lineno":288,"path":"src\\gameobjects"},"description":"A snapshot grabbed from the video. This is initially black. Populate it by calling Video.grab().\rWhen called the BitmapData is updated with a grab taken from the current video playing or active video stream.\rIf Phaser has been compiled without BitmapData support this property will always be `null`.","properties":[{"type":{"names":["Phaser.BitmapData"]},"name":"snapshot"}],"readonly":true,"name":"snapshot","longname":"Phaser.Video#snapshot","kind":"member","memberof":"Phaser.Video","scope":"instance","___s":true},{"meta":{"range":[10677,11057],"filename":"Video.js","lineno":311,"path":"src\\gameobjects"},"description":"Connects to an external media stream for the webcam, rather than using a local one.","kind":"function","name":"connectToMediaStream","params":[{"type":{"names":["HTMLVideoElement"]},"description":"The HTML Video Element that the stream uses.","name":"video"},{"type":{"names":["MediaStream"]},"description":"The Video Stream data.","name":"stream"}],"returns":[{"type":{"names":["Phaser.Video"]},"description":"This Video object for method chaining."}],"memberof":"Phaser.Video","longname":"Phaser.Video#connectToMediaStream","scope":"instance","___s":true},{"meta":{"range":[11502,12964],"filename":"Video.js","lineno":337,"path":"src\\gameobjects"},"description":"Instead of playing a video file this method allows you to stream video data from an attached webcam.\r\rAs soon as this method is called the user will be prompted by their browser to \"Allow\" access to the webcam.\rIf they allow it the webcam feed is directed to this Video. Call `Video.play` to start the stream.\r\rIf they block the webcam the onError signal will be dispatched containing the NavigatorUserMediaError\ror MediaStreamError event.\r\rYou can optionally set a width and height for the stream. If set the input will be cropped to these dimensions.\rIf not given then as soon as the stream has enough data the video dimensions will be changed to match the webcam device.\rYou can listen for this with the onChangeSource signal.","kind":"function","name":"startMediaStream","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Controls if audio should be captured along with video in the video stream.","name":"captureAudio"},{"type":{"names":["integer"]},"optional":true,"description":"The width is used to create the video stream. If not provided the video width will be set to the width of the webcam input source.","name":"width"},{"type":{"names":["integer"]},"optional":true,"description":"The height is used to create the video stream. If not provided the video height will be set to the height of the webcam input source.","name":"height"}],"returns":[{"type":{"names":["Phaser.Video"]},"description":"This Video object for method chaining or false if the device doesn't support getUserMedia."}],"memberof":"Phaser.Video","longname":"Phaser.Video#startMediaStream","scope":"instance","___s":true},{"meta":{"range":[16898,17386],"filename":"Video.js","lineno":507,"path":"src\\gameobjects"},"description":"Creates a new Video element from the given Blob. The Blob must contain the video data in the correct encoded format.\rThis method is typically called by the Phaser.Loader and Phaser.Cache for you, but is exposed publicly for convenience.","kind":"function","name":"createVideoFromBlob","params":[{"type":{"names":["Blob"]},"description":"The Blob containing the video data: `Blob([new Uint8Array(data)])`","name":"blob"}],"returns":[{"type":{"names":["Phaser.Video"]},"description":"This Video object for method chaining."}],"memberof":"Phaser.Video","longname":"Phaser.Video#createVideoFromBlob","scope":"instance","___s":true},{"meta":{"range":[17858,18179],"filename":"Video.js","lineno":530,"path":"src\\gameobjects"},"description":"Creates a new Video element from the given URL.","kind":"function","name":"createVideoFromURL","params":[{"type":{"names":["string"]},"description":"The URL of the video.","name":"url"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Automatically start the video?","name":"autoplay"}],"returns":[{"type":{"names":["Phaser.Video"]},"description":"This Video object for method chaining."}],"memberof":"Phaser.Video","longname":"Phaser.Video#createVideoFromURL","scope":"instance","___s":true},{"meta":{"range":[19000,19507],"filename":"Video.js","lineno":572,"path":"src\\gameobjects"},"description":"Called automatically if the video source changes and updates the internal texture dimensions.\rThen dispatches the onChangeSource signal.","kind":"function","name":"updateTexture","params":[{"type":{"names":["object"]},"optional":true,"description":"The event which triggered the texture update.","name":"event"},{"type":{"names":["integer"]},"optional":true,"description":"The new width of the video. If undefined `video.videoWidth` is used.","name":"width"},{"type":{"names":["integer"]},"optional":true,"description":"The new height of the video. If undefined `video.videoHeight` is used.","name":"height"}],"memberof":"Phaser.Video","longname":"Phaser.Video#updateTexture","scope":"instance","___s":true},{"meta":{"range":[20628,20810],"filename":"Video.js","lineno":623,"path":"src\\gameobjects"},"description":"Called when the video completes playback (reaches and ended state).\rDispatches the Video.onComplete signal.","kind":"function","name":"complete","memberof":"Phaser.Video","longname":"Phaser.Video#complete","scope":"instance","___s":true},{"meta":{"range":[20900,21447],"filename":"Video.js","lineno":635,"path":"src\\gameobjects"},"description":"Starts this video playing if it's not already doing so.","kind":"function","name":"play","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the video loop automatically when it reaches the end? Please note that at present some browsers (i.e. Chrome) do not support *seamless* video looping.","name":"loop"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The playback rate of the video. 1 is normal speed, 2 is x2 speed, and so on. You cannot set a negative playback rate.","name":"playbackRate"}],"returns":[{"type":{"names":["Phaser.Video"]},"description":"This Video object for method chaining."}],"memberof":"Phaser.Video","longname":"Phaser.Video#play","scope":"instance","___s":true},{"meta":{"range":[23574,24216],"filename":"Video.js","lineno":723,"path":"src\\gameobjects"},"description":"Stops the video playing.\r\rThis removes all locally set signals.\r\rIf you only wish to pause playback of the video, to resume at a later time, use `Video.paused = true` instead.\rIf the video hasn't finished downloading calling `Video.stop` will not abort the download. To do that you need to\rcall `Video.destroy` instead.\r\rIf you are using a video stream from a webcam then calling Stop will disconnect the MediaStream session and disable the webcam.","kind":"function","name":"stop","returns":[{"type":{"names":["Phaser.Video"]},"description":"This Video object for method chaining."}],"memberof":"Phaser.Video","longname":"Phaser.Video#stop","scope":"instance","___s":true},{"meta":{"range":[26065,26476],"filename":"Video.js","lineno":804,"path":"src\\gameobjects"},"description":"Updates the given Display Objects so they use this Video as their texture.\rThis will replace any texture they will currently have set.","kind":"function","name":"add","params":[{"type":{"names":["Phaser.Sprite","Array.<Phaser.Sprite>","Phaser.Image","Array.<Phaser.Image>"]},"description":"Either a single Sprite/Image or an Array of Sprites/Images.","name":"object"}],"returns":[{"type":{"names":["Phaser.Video"]},"description":"This Video object for method chaining."}],"memberof":"Phaser.Video","longname":"Phaser.Video#add","scope":"instance","___s":true},{"meta":{"range":[26901,27862],"filename":"Video.js","lineno":833,"path":"src\\gameobjects"},"description":"Creates a new Phaser.Image object, assigns this Video to be its texture, adds it to the world then returns it.","kind":"function","name":"addToWorld","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate to place the Image at.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate to place the Image at.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Set the x anchor point of the Image. A value between 0 and 1, where 0 is the top-left and 1 is bottom-right.","name":"anchorX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Set the y anchor point of the Image. A value between 0 and 1, where 0 is the top-left and 1 is bottom-right.","name":"anchorY"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The horizontal scale factor of the Image. A value of 1 means no scaling. 2 would be twice the size, and so on.","name":"scaleX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The vertical scale factor of the Image. A value of 1 means no scaling. 2 would be twice the size, and so on.","name":"scaleY"}],"returns":[{"type":{"names":["Phaser.Image"]},"description":"The newly added Image object."}],"memberof":"Phaser.Video","longname":"Phaser.Video#addToWorld","scope":"instance","___s":true},{"meta":{"range":[28183,28566],"filename":"Video.js","lineno":859,"path":"src\\gameobjects"},"description":"If the game is running in WebGL this will push the texture up to the GPU if it's dirty.\rThis is called automatically if the Video is being used by a Sprite, otherwise you need to remember to call it in your render function.\rIf you wish to suppress this functionality set Video.disableTextureUpload to `true`.","kind":"function","name":"render","memberof":"Phaser.Video","longname":"Phaser.Video#render","scope":"instance","___s":true},{"meta":{"range":[30180,31845],"filename":"Video.js","lineno":954,"path":"src\\gameobjects"},"description":"On some mobile browsers you cannot play a video until the user has explicitly touched the video to allow it.\rPhaser handles this via the `setTouchLock` method. However if you have 3 different videos, maybe an \"Intro\", \"Start\" and \"Game Over\"\rsplit into three different Video objects, then you will need the user to touch-unlock every single one of them.\r\rYou can avoid this by using just one Video object and simply changing the video source. Once a Video element is unlocked it remains\runlocked, even if the source changes. So you can use this to your benefit to avoid forcing the user to 'touch' the video yet again.\r\rAs you'd expect there are limitations. So far we've found that the videos need to be in the same encoding format and bitrate.\rThis method will automatically handle a change in video dimensions, but if you try swapping to a different bitrate we've found it\rcannot render the new video on iOS (desktop browsers cope better).\r\rWhen the video source is changed the video file is requested over the network. Listen for the `onChangeSource` signal to know\rwhen the new video has downloaded enough content to be able to be played. Previous settings such as the volume and loop state\rare adopted automatically by the new video.","kind":"function","name":"changeSource","params":[{"type":{"names":["string"]},"description":"The new URL to change the video.src to.","name":"src"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should the video play automatically after the source has been updated?","name":"autoplay"}],"returns":[{"type":{"names":["Phaser.Video"]},"description":"This Video object for method chaining."}],"memberof":"Phaser.Video","longname":"Phaser.Video#changeSource","scope":"instance","___s":true},{"meta":{"range":[33367,33564],"filename":"Video.js","lineno":1033,"path":"src\\gameobjects"},"description":"Sets the Input Manager touch callback to be Video.unlock.\rRequired for mobile video unlocking. Mostly just used internally.","kind":"function","name":"setTouchLock","memberof":"Phaser.Video","longname":"Phaser.Video#setTouchLock","scope":"instance","___s":true},{"meta":{"range":[33723,34010],"filename":"Video.js","lineno":1046,"path":"src\\gameobjects"},"description":"Enables the video on mobile devices, usually after the first touch.\rIf the SoundManager hasn't been unlocked then this will automatically unlock that as well.\rOnly one video can be pending unlock at any one time.","kind":"function","name":"unlock","memberof":"Phaser.Video","longname":"Phaser.Video#unlock","scope":"instance","___s":true},{"meta":{"range":[34439,35546],"filename":"Video.js","lineno":1075,"path":"src\\gameobjects"},"description":"Grabs the current frame from the Video or Video Stream and renders it to the Video.snapshot BitmapData.\r\rYou can optionally set if the BitmapData should be cleared or not, the alpha and the blend mode of the draw.\r\rIf you need more advanced control over the grabbing them call `Video.snapshot.copy` directly with the same parameters as BitmapData.copy.","kind":"function","name":"grab","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the BitmapData be cleared before the Video is grabbed? Unless you are using alpha or a blend mode you can usually leave this set to false.","name":"clear"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The alpha that will be set on the video before drawing. A value between 0 (fully transparent) and 1, opaque.","name":"alpha"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"The composite blend mode that will be used when drawing. The default is no blend mode at all. This is a Canvas globalCompositeOperation value such as 'lighter' or 'xor'.","name":"blendMode"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"A reference to the Video.snapshot BitmapData object for further method chaining."}],"memberof":"Phaser.Video","longname":"Phaser.Video#grab","scope":"instance","___s":true},{"meta":{"range":[36200,36438],"filename":"Video.js","lineno":1111,"path":"src\\gameobjects"},"description":"Removes the Video element from the DOM by calling parentNode.removeChild on itself.\rAlso removes the autoplay and src attributes and nulls the reference.","kind":"function","name":"removeVideoElement","memberof":"Phaser.Video","longname":"Phaser.Video#removeVideoElement","scope":"instance","___s":true},{"meta":{"range":[36939,37186],"filename":"Video.js","lineno":1141,"path":"src\\gameobjects"},"description":"Destroys the Video object. This calls `Video.stop` and then `Video.removeVideoElement`.\rIf any Sprites are using this Video as their texture it is up to you to manage those.","kind":"function","name":"destroy","memberof":"Phaser.Video","longname":"Phaser.Video#destroy","scope":"instance","___s":true},{"meta":{"range":[37530,37710],"filename":"Video.js","lineno":1167,"path":"src\\gameobjects"},"name":"currentTime","properties":[{"type":{"names":["number"]},"description":"The current time of the video in seconds. If set the video will attempt to seek to that point in time.","name":"currentTime"}],"memberof":"Phaser.Video","longname":"Phaser.Video#currentTime","scope":"instance","kind":"member","___s":true},{"meta":{"range":[37965,38087],"filename":"Video.js","lineno":1187,"path":"src\\gameobjects"},"name":"duration","properties":[{"type":{"names":["number"]},"description":"The duration of the video in seconds.","name":"duration"}],"readonly":true,"memberof":"Phaser.Video","longname":"Phaser.Video#duration","scope":"instance","kind":"member","___s":true},{"meta":{"range":[38252,38449],"filename":"Video.js","lineno":1202,"path":"src\\gameobjects"},"name":"progress","properties":[{"type":{"names":["number"]},"description":"The progress of this video. This is a value between 0 and 1, where 0 is the start and 1 is the end of the video.","name":"progress"}],"readonly":true,"memberof":"Phaser.Video","longname":"Phaser.Video#progress","scope":"instance","kind":"member","___s":true},{"meta":{"range":[38641,38748],"filename":"Video.js","lineno":1217,"path":"src\\gameobjects"},"name":"mute","properties":[{"type":{"names":["boolean"]},"description":"Gets or sets the muted state of the Video.","name":"mute"}],"memberof":"Phaser.Video","longname":"Phaser.Video#mute","scope":"instance","kind":"member","___s":true},{"meta":{"range":[39345,39549],"filename":"Video.js","lineno":1257,"path":"src\\gameobjects"},"description":"Gets or sets the paused state of the Video.\rIf the video is still touch locked (such as on iOS devices) this call has no effect.","name":"paused","properties":[{"type":{"names":["boolean"]},"name":"paused"}],"memberof":"Phaser.Video","longname":"Phaser.Video#paused","scope":"instance","kind":"member","___s":true},{"meta":{"range":[40230,40408],"filename":"Video.js","lineno":1305,"path":"src\\gameobjects"},"name":"volume","properties":[{"type":{"names":["number"]},"description":"Gets or sets the volume of the Video, a value between 0 and 1. The value given is clamped to the range 0 to 1.","name":"volume"}],"memberof":"Phaser.Video","longname":"Phaser.Video#volume","scope":"instance","kind":"member","___s":true},{"meta":{"range":[40846,41019],"filename":"Video.js","lineno":1337,"path":"src\\gameobjects"},"name":"playbackRate","properties":[{"type":{"names":["number"]},"description":"Gets or sets the playback rate of the Video. This is the speed at which the video is playing.","name":"playbackRate"}],"memberof":"Phaser.Video","longname":"Phaser.Video#playbackRate","scope":"instance","kind":"member","___s":true},{"meta":{"range":[41328,41599],"filename":"Video.js","lineno":1360,"path":"src\\gameobjects"},"description":"Gets or sets if the Video is set to loop.\rPlease note that at present some browsers (i.e. Chrome) do not support *seamless* video looping.\rIf the video isn't yet set this will always return false.","name":"loop","properties":[{"type":{"names":["boolean"]},"name":"loop"}],"memberof":"Phaser.Video","longname":"Phaser.Video#loop","scope":"instance","kind":"member","___s":true},{"meta":{"range":[41985,42151],"filename":"Video.js","lineno":1391,"path":"src\\gameobjects"},"name":"playing","properties":[{"type":{"names":["boolean"]},"description":"True if the video is currently playing (and not paused or ended), otherwise false.","name":"playing"}],"readonly":true,"memberof":"Phaser.Video","longname":"Phaser.Video#playing","scope":"instance","kind":"member","___s":true},{"meta":{"range":[734,1534],"filename":"Circle.js","lineno":17,"path":"src\\geom"},"description":"Creates a new Circle object with the center coordinate specified by the x and y parameters and the diameter specified by the diameter parameter.\rIf you call this function without parameters, a circle with x, y, diameter and radius properties set to 0 is created.","kind":"class","classdesc":"Phaser.Circle","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of the center of the circle.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of the center of the circle.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The diameter of the circle.","name":"diameter"}],"name":"Circle","longname":"Phaser.Circle","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[945,955],"filename":"Circle.js","lineno":26,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The x coordinate of the center of the circle.","name":"x"}],"name":"x","longname":"Phaser.Circle#x","kind":"member","memberof":"Phaser.Circle","scope":"instance","___s":true},{"meta":{"range":[1057,1067],"filename":"Circle.js","lineno":31,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The y coordinate of the center of the circle.","name":"y"}],"name":"y","longname":"Phaser.Circle#y","kind":"member","memberof":"Phaser.Circle","scope":"instance","___s":true},{"meta":{"range":[1503,1528],"filename":"Circle.js","lineno":54,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"readonly":true,"name":"type","longname":"Phaser.Circle#type","kind":"member","memberof":"Phaser.Circle","scope":"instance","___s":true},{"meta":{"range":[1574,1733],"filename":"Circle.js","lineno":60,"path":"src\\geom"},"description":"The circumference of the circle.","kind":"function","name":"circumference","returns":[{"type":{"names":["number"]},"description":"The circumference of the circle."}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#circumference","scope":"instance","___s":true},{"meta":{"range":[1833,2355],"filename":"Circle.js","lineno":72,"path":"src\\geom"},"description":"Returns a uniformly distributed random point from anywhere within this Circle.","kind":"function","name":"random","params":[{"type":{"names":["Phaser.Point","object"]},"optional":true,"description":"A Phaser.Point, or any object with public x/y properties, that the values will be set in.\r    If no object is provided a new Phaser.Point object will be created. In high performance areas avoid this by re-using an existing object.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"An object containing the random point in its `x` and `y` properties."}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#random","scope":"instance","___s":true},{"meta":{"range":[2784,2983],"filename":"Circle.js","lineno":97,"path":"src\\geom"},"description":"Returns the framing rectangle of the circle as a Phaser.Rectangle object.","kind":"function","name":"getBounds","returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"The bounds of the Circle."}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#getBounds","scope":"instance","___s":true},{"meta":{"range":[3145,3502],"filename":"Circle.js","lineno":109,"path":"src\\geom"},"description":"Sets the members of Circle to the specified values.","kind":"function","name":"setTo","params":[{"type":{"names":["number"]},"description":"The x coordinate of the center of the circle.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the center of the circle.","name":"y"},{"type":{"names":["number"]},"description":"The diameter of the circle.","name":"diameter"}],"returns":[{"type":{"names":["Circle"]},"description":"This circle object."}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#setTo","scope":"instance","___s":true},{"meta":{"range":[3704,3936],"filename":"Circle.js","lineno":128,"path":"src\\geom"},"description":"Copies the x, y and diameter properties from any given object to this Circle.","kind":"function","name":"copyFrom","params":[{"type":{"names":["any"]},"description":"The object to copy from.","name":"source"}],"returns":[{"type":{"names":["Circle"]},"description":"This Circle object."}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#copyFrom","scope":"instance","___s":true},{"meta":{"range":[4056,4280],"filename":"Circle.js","lineno":140,"path":"src\\geom"},"description":"Copies the x, y and diameter properties from this Circle to any given object.","kind":"function","name":"copyTo","params":[{"type":{"names":["any"]},"description":"The object to copy to.","name":"dest"}],"returns":[{"type":{"names":["object"]},"description":"This dest object."}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#copyTo","scope":"instance","___s":true},{"meta":{"range":[4448,4951],"filename":"Circle.js","lineno":156,"path":"src\\geom"},"description":"Returns the distance from the center of the Circle object to the given object\r(can be Circle, Point or anything with x/y properties)","kind":"function","name":"distance","params":[{"type":{"names":["object"]},"description":"The target object. Must have visible x and y properties that represent the center of the object.","name":"dest"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Round the distance to the nearest integer.","name":"round"}],"returns":[{"type":{"names":["number"]},"description":"The distance between this Point object and the destination Point object."}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#distance","scope":"instance","___s":true},{"meta":{"range":[5146,5549],"filename":"Circle.js","lineno":171,"path":"src\\geom"},"description":"Returns a new Circle object with the same values for the x, y, width, and height properties as this Circle object.","kind":"function","name":"clone","params":[{"type":{"names":["Phaser.Circle"]},"description":"Optional Circle object. If given the values will be set into the object, otherwise a brand new Circle object will be created and returned.","name":"output"}],"returns":[{"type":{"names":["Phaser.Circle"]},"description":"The cloned Circle object."}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#clone","scope":"instance","___s":true},{"meta":{"range":[5869,6219],"filename":"Circle.js","lineno":192,"path":"src\\geom"},"description":"Return true if the given x/y coordinates are within this Circle object.","kind":"function","name":"contains","params":[{"type":{"names":["number"]},"description":"The X value of the coordinate to test.","name":"x"},{"type":{"names":["number"]},"description":"The Y value of the coordinate to test.","name":"y"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the coordinates are within this circle, otherwise false."}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#contains","scope":"instance","___s":true},{"meta":{"range":[6324,6926],"filename":"Circle.js","lineno":205,"path":"src\\geom"},"description":"Returns a Point object containing the coordinates of a point on the circumference of the Circle based on the given angle.","kind":"function","name":"circumferencePoint","params":[{"type":{"names":["number"]},"description":"The angle in radians (unless asDegrees is true) to return the point from.","name":"angle"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Is the given angle in radians (false) or degrees (true)?","name":"asDegrees"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"An optional Point object to put the result in to. If none specified a new Point object will be created.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The Point object holding the result."}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#circumferencePoint","scope":"instance","___s":true},{"meta":{"range":[7085,7458],"filename":"Circle.js","lineno":219,"path":"src\\geom"},"description":"Adjusts the location of the Circle object, as determined by its center coordinate, by the specified amounts.","kind":"function","name":"offset","params":[{"type":{"names":["number"]},"description":"Moves the x value of the Circle object by this amount.","name":"dx"},{"type":{"names":["number"]},"description":"Moves the y value of the Circle object by this amount.","name":"dy"}],"returns":[{"type":{"names":["Circle"]},"description":"This Circle object."}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#offset","scope":"instance","___s":true},{"meta":{"range":[7581,8003],"filename":"Circle.js","lineno":235,"path":"src\\geom"},"description":"Adjusts the location of the Circle object using a Point object as a parameter. This method is similar to the Circle.offset() method, except that it takes a Point object as a parameter.","kind":"function","name":"offsetPoint","params":[{"type":{"names":["Point"]},"description":"A Point object to use to offset this Circle object (or any valid object with exposed x and y properties).","name":"point"}],"returns":[{"type":{"names":["Circle"]},"description":"This Circle object."}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#offsetPoint","scope":"instance","___s":true},{"meta":{"range":[8103,8272],"filename":"Circle.js","lineno":245,"path":"src\\geom"},"description":"Returns a string representation of this object.","kind":"function","name":"toString","returns":[{"type":{"names":["string"]},"description":"a string representation of the instance."}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#toString","scope":"instance","___s":true},{"meta":{"range":[8505,8712],"filename":"Circle.js","lineno":258,"path":"src\\geom"},"description":"The largest distance between any two points on the circle. The same as the radius * 2.","name":"diameter","properties":[{"type":{"names":["number"]},"description":"Gets or sets the diameter of the circle.","name":"diameter"}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#diameter","scope":"instance","kind":"member","___s":true},{"meta":{"range":[9015,9252],"filename":"Circle.js","lineno":281,"path":"src\\geom"},"description":"The length of a line extending from the center of the circle to any point on the circle itself. The same as half the diameter.","name":"radius","properties":[{"type":{"names":["number"]},"description":"Gets or sets the radius of the circle.","name":"radius"}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#radius","scope":"instance","kind":"member","___s":true},{"meta":{"range":[9551,9923],"filename":"Circle.js","lineno":304,"path":"src\\geom"},"description":"The x coordinate of the leftmost point of the circle. Changing the left property of a Circle object has no effect on the x and y properties. However it does affect the diameter, whereas changing the x value does not affect the diameter property.","name":"left","tags":[{"originalTitle":"propety","title":"propety","text":"{number} left - Gets or sets the value of the leftmost point of the circle.","value":"{number} left - Gets or sets the value of the leftmost point of the circle."}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#left","scope":"instance","kind":"member","___s":true},{"meta":{"range":[10301,10679],"filename":"Circle.js","lineno":331,"path":"src\\geom"},"description":"The x coordinate of the rightmost point of the circle. Changing the right property of a Circle object has no effect on the x and y properties. However it does affect the diameter, whereas changing the x value does not affect the diameter property.","name":"right","properties":[{"type":{"names":["number"]},"description":"Gets or sets the value of the rightmost point of the circle.","name":"right"}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#right","scope":"instance","kind":"member","___s":true},{"meta":{"range":[11058,11319],"filename":"Circle.js","lineno":358,"path":"src\\geom"},"description":"The sum of the y minus the radius property. Changing the top property of a Circle object has no effect on the x and y properties, but does change the diameter.","name":"top","properties":[{"type":{"names":["number"]},"description":"Gets or sets the top of the circle.","name":"top"}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#top","scope":"instance","kind":"member","___s":true},{"meta":{"range":[11696,11965],"filename":"Circle.js","lineno":385,"path":"src\\geom"},"description":"The sum of the y and radius properties. Changing the bottom property of a Circle object has no effect on the x and y properties, but does change the diameter.","name":"bottom","properties":[{"type":{"names":["number"]},"description":"Gets or sets the bottom of the circle.","name":"bottom"}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#bottom","scope":"instance","kind":"member","___s":true},{"meta":{"range":[12345,12475],"filename":"Circle.js","lineno":412,"path":"src\\geom"},"description":"The area of this Circle.","name":"area","properties":[{"type":{"names":["number"]},"description":"The area of this circle.","name":"area"}],"readonly":true,"memberof":"Phaser.Circle","longname":"Phaser.Circle#area","scope":"instance","kind":"member","___s":true},{"meta":{"range":[12752,13169],"filename":"Circle.js","lineno":435,"path":"src\\geom"},"description":"Determines whether or not this Circle object is empty. Will return a value of true if the Circle objects diameter is less than or equal to 0; otherwise false.\rIf set to true it will reset all of the Circle objects properties to 0. A Circle object is empty if its diameter is less than or equal to 0.","name":"empty","properties":[{"type":{"names":["boolean"]},"description":"Gets or sets the empty state of the circle.","name":"empty"}],"memberof":"Phaser.Circle","longname":"Phaser.Circle#empty","scope":"instance","kind":"member","___s":true},{"meta":{"range":[13440,13821],"filename":"Circle.js","lineno":458,"path":"src\\geom"},"description":"Return true if the given x/y coordinates are within the Circle object.","kind":"function","name":"contains","params":[{"type":{"names":["Phaser.Circle"]},"description":"The Circle to be checked.","name":"a"},{"type":{"names":["number"]},"description":"The X value of the coordinate to test.","name":"x"},{"type":{"names":["number"]},"description":"The Y value of the coordinate to test.","name":"y"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the coordinates are within this circle, otherwise false."}],"memberof":"Phaser.Circle","longname":"Phaser.Circle.contains","scope":"static","___s":true},{"meta":{"range":[14212,14625],"filename":"Circle.js","lineno":483,"path":"src\\geom"},"description":"Determines whether the two Circle objects match. This method compares the x, y and diameter properties.","kind":"function","name":"equals","params":[{"type":{"names":["Phaser.Circle"]},"description":"The first Circle object.","name":"a"},{"type":{"names":["Phaser.Circle"]},"description":"The second Circle object.","name":"b"}],"returns":[{"type":{"names":["boolean"]},"description":"A value of true if the object has exactly the same values for the x, y and diameter properties as this Circle object; otherwise false."}],"memberof":"Phaser.Circle","longname":"Phaser.Circle.equals","scope":"static","___s":true},{"meta":{"range":[14750,15174],"filename":"Circle.js","lineno":496,"path":"src\\geom"},"description":"Determines whether the two Circle objects intersect.\rThis method checks the radius distances between the two Circle objects to see if they intersect.","kind":"function","name":"intersects","params":[{"type":{"names":["Phaser.Circle"]},"description":"The first Circle object.","name":"a"},{"type":{"names":["Phaser.Circle"]},"description":"The second Circle object.","name":"b"}],"returns":[{"type":{"names":["boolean"]},"description":"A value of true if the specified object intersects with this Circle object; otherwise false."}],"memberof":"Phaser.Circle","longname":"Phaser.Circle.intersects","scope":"static","___s":true},{"meta":{"range":[15313,15942],"filename":"Circle.js","lineno":510,"path":"src\\geom"},"description":"Returns a Point object containing the coordinates of a point on the circumference of the Circle based on the given angle.","kind":"function","name":"circumferencePoint","params":[{"type":{"names":["Phaser.Circle"]},"description":"The first Circle object.","name":"a"},{"type":{"names":["number"]},"description":"The angle in radians (unless asDegrees is true) to return the point from.","name":"angle"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Is the given angle in radians (false) or degrees (true)?","name":"asDegrees"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"An optional Point object to put the result in to. If none specified a new Point object will be created.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The Point object holding the result."}],"memberof":"Phaser.Circle","longname":"Phaser.Circle.circumferencePoint","scope":"static","___s":true},{"meta":{"range":[16349,16657],"filename":"Circle.js","lineno":536,"path":"src\\geom"},"description":"Checks if the given Circle and Rectangle objects intersect.","kind":"function","name":"intersectsRectangle","params":[{"type":{"names":["Phaser.Circle"]},"description":"The Circle object to test.","name":"c"},{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle object to test.","name":"r"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the two objects intersect, otherwise false."}],"memberof":"Phaser.Circle","longname":"Phaser.Circle.intersectsRectangle","scope":"static","___s":true},{"meta":{"range":[743,1548],"filename":"Ellipse.js","lineno":18,"path":"src\\geom"},"description":"Creates a Ellipse object. A curve on a plane surrounding two focal points.","kind":"class","classdesc":"Phaser.Ellipse","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The X coordinate of the upper-left corner of the framing rectangle of this ellipse.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The Y coordinate of the upper-left corner of the framing rectangle of this ellipse.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The overall width of this ellipse.","name":"width"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The overall height of this ellipse.","name":"height"}],"name":"Ellipse","longname":"Phaser.Ellipse","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1019,1029],"filename":"Ellipse.js","lineno":28,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The X coordinate of the upper-left corner of the framing rectangle of this ellipse.","name":"x"}],"name":"x","longname":"Phaser.Ellipse#x","kind":"member","memberof":"Phaser.Ellipse","scope":"instance","___s":true},{"meta":{"range":[1169,1179],"filename":"Ellipse.js","lineno":33,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The Y coordinate of the upper-left corner of the framing rectangle of this ellipse.","name":"y"}],"name":"y","longname":"Phaser.Ellipse#y","kind":"member","memberof":"Phaser.Ellipse","scope":"instance","___s":true},{"meta":{"range":[1274,1292],"filename":"Ellipse.js","lineno":38,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The overall width of this ellipse.","name":"width"}],"name":"width","longname":"Phaser.Ellipse#width","kind":"member","memberof":"Phaser.Ellipse","scope":"instance","___s":true},{"meta":{"range":[1389,1409],"filename":"Ellipse.js","lineno":43,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The overall height of this ellipse.","name":"height"}],"name":"height","longname":"Phaser.Ellipse#height","kind":"member","memberof":"Phaser.Ellipse","scope":"instance","___s":true},{"meta":{"range":[1516,1542],"filename":"Ellipse.js","lineno":49,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"readonly":true,"name":"type","longname":"Phaser.Ellipse#type","kind":"member","memberof":"Phaser.Ellipse","scope":"instance","___s":true},{"meta":{"range":[1589,2109],"filename":"Ellipse.js","lineno":55,"path":"src\\geom"},"description":"Sets the members of the Ellipse to the specified values.","kind":"function","name":"setTo","params":[{"type":{"names":["number"]},"description":"The X coordinate of the upper-left corner of the framing rectangle of this ellipse.","name":"x"},{"type":{"names":["number"]},"description":"The Y coordinate of the upper-left corner of the framing rectangle of this ellipse.","name":"y"},{"type":{"names":["number"]},"description":"The overall width of this ellipse.","name":"width"},{"type":{"names":["number"]},"description":"The overall height of this ellipse.","name":"height"}],"returns":[{"type":{"names":["Phaser.Ellipse"]},"description":"This Ellipse object."}],"memberof":"Phaser.Ellipse","longname":"Phaser.Ellipse#setTo","scope":"instance","___s":true},{"meta":{"range":[2300,2502],"filename":"Ellipse.js","lineno":75,"path":"src\\geom"},"description":"Returns the framing rectangle of the ellipse as a Phaser.Rectangle object.","kind":"function","name":"getBounds","returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"The bounds of the Ellipse."}],"memberof":"Phaser.Ellipse","longname":"Phaser.Ellipse#getBounds","scope":"instance","___s":true},{"meta":{"range":[2658,2914],"filename":"Ellipse.js","lineno":87,"path":"src\\geom"},"description":"Copies the x, y, width and height properties from any given object to this Ellipse.","kind":"function","name":"copyFrom","params":[{"type":{"names":["any"]},"description":"The object to copy from.","name":"source"}],"returns":[{"type":{"names":["Phaser.Ellipse"]},"description":"This Ellipse object."}],"memberof":"Phaser.Ellipse","longname":"Phaser.Ellipse#copyFrom","scope":"instance","___s":true},{"meta":{"range":[3046,3277],"filename":"Ellipse.js","lineno":100,"path":"src\\geom"},"description":"Copies the x, y, width and height properties from this Ellipse to any given object.","kind":"function","name":"copyTo","params":[{"type":{"names":["any"]},"description":"The object to copy to.","name":"dest"}],"returns":[{"type":{"names":["object"]},"description":"This dest object."}],"memberof":"Phaser.Ellipse","longname":"Phaser.Ellipse#copyTo","scope":"instance","___s":true},{"meta":{"range":[3473,3884],"filename":"Ellipse.js","lineno":117,"path":"src\\geom"},"description":"Returns a new Ellipse object with the same values for the x, y, width, and height properties as this Ellipse object.","kind":"function","name":"clone","params":[{"type":{"names":["Phaser.Ellipse"]},"description":"Optional Ellipse object. If given the values will be set into the object, otherwise a brand new Ellipse object will be created and returned.","name":"output"}],"returns":[{"type":{"names":["Phaser.Ellipse"]},"description":"The cloned Ellipse object."}],"memberof":"Phaser.Ellipse","longname":"Phaser.Ellipse#clone","scope":"instance","___s":true},{"meta":{"range":[4224,4585],"filename":"Ellipse.js","lineno":138,"path":"src\\geom"},"description":"Return true if the given x/y coordinates are within this Ellipse object.","kind":"function","name":"contains","params":[{"type":{"names":["number"]},"description":"The X value of the coordinate to test.","name":"x"},{"type":{"names":["number"]},"description":"The Y value of the coordinate to test.","name":"y"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the coordinates are within this ellipse, otherwise false."}],"memberof":"Phaser.Ellipse","longname":"Phaser.Ellipse#contains","scope":"instance","___s":true},{"meta":{"range":[4691,5215],"filename":"Ellipse.js","lineno":152,"path":"src\\geom"},"description":"Returns a uniformly distributed random point from anywhere within this Ellipse.","kind":"function","name":"random","params":[{"type":{"names":["Phaser.Point","object"]},"optional":true,"description":"A Phaser.Point, or any object with public x/y properties, that the values will be set in.\r    If no object is provided a new Phaser.Point object will be created. In high performance areas avoid this by re-using an existing object.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"An object containing the random point in its `x` and `y` properties."}],"memberof":"Phaser.Ellipse","longname":"Phaser.Ellipse#random","scope":"instance","___s":true},{"meta":{"range":[5633,5803],"filename":"Ellipse.js","lineno":177,"path":"src\\geom"},"description":"Returns a string representation of this object.","kind":"function","name":"toString","returns":[{"type":{"names":["string"]},"description":"A string representation of the instance."}],"memberof":"Phaser.Ellipse","longname":"Phaser.Ellipse#toString","scope":"instance","___s":true},{"meta":{"range":[6033,6227],"filename":"Ellipse.js","lineno":190,"path":"src\\geom"},"description":"The left coordinate of the Ellipse. The same as the X coordinate.","name":"left","tags":[{"originalTitle":"propety","title":"propety","text":"{number} left - Gets or sets the value of the leftmost point of the ellipse.","value":"{number} left - Gets or sets the value of the leftmost point of the ellipse."}],"memberof":"Phaser.Ellipse","longname":"Phaser.Ellipse#left","scope":"instance","kind":"member","___s":true},{"meta":{"range":[6422,6719],"filename":"Ellipse.js","lineno":209,"path":"src\\geom"},"description":"The x coordinate of the rightmost point of the Ellipse. Changing the right property of an Ellipse object has no effect on the x property, but does adjust the width.","name":"right","properties":[{"type":{"names":["number"]},"description":"Gets or sets the value of the rightmost point of the ellipse.","name":"right"}],"memberof":"Phaser.Ellipse","longname":"Phaser.Ellipse#right","scope":"instance","kind":"member","___s":true},{"meta":{"range":[7059,7214],"filename":"Ellipse.js","lineno":234,"path":"src\\geom"},"description":"The top of the Ellipse. The same as its y property.","name":"top","properties":[{"type":{"names":["number"]},"description":"Gets or sets the top of the ellipse.","name":"top"}],"memberof":"Phaser.Ellipse","longname":"Phaser.Ellipse#top","scope":"instance","kind":"member","___s":true},{"meta":{"range":[7404,7658],"filename":"Ellipse.js","lineno":251,"path":"src\\geom"},"description":"The sum of the y and height properties. Changing the bottom property of an Ellipse doesn't adjust the y property, but does change the height.","name":"bottom","properties":[{"type":{"names":["number"]},"description":"Gets or sets the bottom of the ellipse.","name":"bottom"}],"memberof":"Phaser.Ellipse","longname":"Phaser.Ellipse#bottom","scope":"instance","kind":"member","___s":true},{"meta":{"range":[8002,8436],"filename":"Ellipse.js","lineno":276,"path":"src\\geom"},"description":"Determines whether or not this Ellipse object is empty. Will return a value of true if the Ellipse objects dimensions are less than or equal to 0; otherwise false.\rIf set to true it will reset all of the Ellipse objects properties to 0. An Ellipse object is empty if its width or height is less than or equal to 0.","name":"empty","properties":[{"type":{"names":["boolean"]},"description":"Gets or sets the empty state of the ellipse.","name":"empty"}],"memberof":"Phaser.Ellipse","longname":"Phaser.Ellipse#empty","scope":"instance","kind":"member","___s":true},{"meta":{"range":[8728,9118],"filename":"Ellipse.js","lineno":299,"path":"src\\geom"},"description":"Return true if the given x/y coordinates are within the Ellipse object.","kind":"function","name":"contains","params":[{"type":{"names":["Phaser.Ellipse"]},"description":"The Ellipse to be checked.","name":"a"},{"type":{"names":["number"]},"description":"The X value of the coordinate to test.","name":"x"},{"type":{"names":["number"]},"description":"The Y value of the coordinate to test.","name":"y"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the coordinates are within this ellipse, otherwise false."}],"memberof":"Phaser.Ellipse","longname":"Phaser.Ellipse.contains","scope":"static","___s":true},{"meta":{"range":[2227,4118],"filename":"Hermite.js","lineno":39,"path":"src\\geom"},"description":"A data representation of a Hermite Curve (see http://en.wikipedia.org/wiki/Cubic_Hermite_spline)\r\rA Hermite curve has a start and end point and tangent vectors for both of them.\rThe curve will always pass through the two control points and the shape of it is controlled\rby the length and direction of the tangent vectors.  At the control points the curve will\rbe facing exactly in the vector direction.\r\rAs these curves change speed (speed = distance between points separated by an equal change in\r't' value - see Hermite.getPoint) this class attempts to reduce the variation by pre-calculating\rthe `accuracy` number of points on the curve. The straight-line distances to these points are stored\rin the private 'points' array, and this information is used by Hermite.findT() to convert a pixel\rdistance along the curve into a 'time' value.\r\rHigher `accuracy` values will result in more even movement, but require more memory for the points\rlist. 5 works, but 10 seems to be an ideal value for the length of curves found in most games on\ra desktop screen. If you use very long curves (more than 400 pixels) you may need to increase\rthis value further.","kind":"class","classdesc":"Phaser.Hermite","params":[{"type":{"names":["number"]},"description":"The x coordinate of the start of the curve.","name":"p1x"},{"type":{"names":["number"]},"description":"The y coordinate of the start of the curve.","name":"p1y"},{"type":{"names":["number"]},"description":"The x coordinate of the end of the curve.","name":"p2x"},{"type":{"names":["number"]},"description":"The y coordinate of the end of the curve.","name":"p2y"},{"type":{"names":["number"]},"description":"The x component of the tangent vector for the start of the curve.","name":"v1x"},{"type":{"names":["number"]},"description":"The y component of the tangent vector for the start of the curve.","name":"v1y"},{"type":{"names":["number"]},"description":"The x component of the tangent vector for the end of the curve.","name":"v2x"},{"type":{"names":["number"]},"description":"The y component of the tangent vector for the end of the curve.","name":"v2y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":10,"description":"The amount of points to pre-calculate on the curve.","name":"accuracy"}],"name":"Hermite","longname":"Phaser.Hermite","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[4217,4597],"filename":"Hermite.js","lineno":123,"path":"src\\geom"},"description":"Performs the curve calculations.\r\rThis is called automatically if you change any of the curves public properties, such as `Hermite.p1x` or `Hermite.v2y`.\r\rIf you adjust any of the internal private values, then call this to update the points.","kind":"function","name":"recalculate","returns":[{"type":{"names":["Phaser.Hermite"]},"description":"This object."}],"memberof":"Phaser.Hermite","longname":"Phaser.Hermite#recalculate","scope":"instance","___s":true},{"meta":{"range":[5044,5356],"filename":"Hermite.js","lineno":146,"path":"src\\geom"},"description":"Calculate a number of points along the curve, based on `Hermite.accuracy`, and stores them in the private `_points` array.","kind":"function","name":"calculateEvenPoints","returns":[{"type":{"names":["number"]},"description":"The total length of the curve approximated as straight line distances between the points."}],"memberof":"Phaser.Hermite","longname":"Phaser.Hermite#calculateEvenPoints","scope":"instance","___s":true},{"meta":{"range":[5928,6356],"filename":"Hermite.js","lineno":173,"path":"src\\geom"},"description":"Convert a distance along this curve into a `time` value which will be between 0 and 1.\r\rFor example if this curve has a length of 100 pixels then `findT(50)` would return `0.5`.","kind":"function","name":"findT","params":[{"type":{"names":["integer"]},"description":"The distance into the curve in pixels. Should be a positive integer.","name":"distance"}],"returns":[{"type":{"names":["number"]},"description":"The time (`t`) value, a float between 0 and 1."}],"memberof":"Phaser.Hermite","longname":"Phaser.Hermite#findT","scope":"instance","___s":true},{"meta":{"range":[7075,7519],"filename":"Hermite.js","lineno":210,"path":"src\\geom"},"description":"Get the X component of a point on the curve based on the `t` (time) value, which must be between 0 and 1.","kind":"function","name":"getX","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The time value along the curve from which to extract a point. This is a value between 0 and 1, where 0 represents the start of the curve and 1 the end.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The X component of a point on the curve based on the `t` (time) value."}],"memberof":"Phaser.Hermite","longname":"Phaser.Hermite#getX","scope":"instance","___s":true},{"meta":{"range":[7963,8407],"filename":"Hermite.js","lineno":243,"path":"src\\geom"},"description":"Get the Y component of a point on the curve based on the `t` (time) value, which must be between 0 and 1.","kind":"function","name":"getY","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The time value along the curve from which to extract a point. This is a value between 0 and 1, where 0 represents the start of the curve and 1 the end.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The Y component of a point on the curve based on the `t` (time) value."}],"memberof":"Phaser.Hermite","longname":"Phaser.Hermite#getY","scope":"instance","___s":true},{"meta":{"range":[8851,9579],"filename":"Hermite.js","lineno":276,"path":"src\\geom"},"description":"Get a point on the curve using the `t` (time) value, which must be between 0 and 1.","kind":"function","name":"getPoint","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The time value along the curve from which to extract a point. This is a value between 0 and 1, where 0 represents the start of the curve and 1 the end.","name":"t"},{"type":{"names":["Phaser.Point","Object"]},"optional":true,"description":"An optional Phaser.Point, or Object containing public `x` and `y` properties. If given the resulting values will be stored in the Objects `x` and `y` properties. If omitted a new Phaser.Point object is created.","name":"point"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"An Object with the x, y coordinate of the curve at the specified `t` value set in its `x` and `y` properties."}],"memberof":"Phaser.Hermite","longname":"Phaser.Hermite#getPoint","scope":"instance","___s":true},{"meta":{"range":[10107,10718],"filename":"Hermite.js","lineno":309,"path":"src\\geom"},"description":"Get a point on the curve using the distance, in pixels, along the curve.","kind":"function","name":"getPointWithDistance","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The distance along the curve to get the point from, given in pixels.","name":"distance"},{"type":{"names":["Phaser.Point","Object"]},"optional":true,"description":"An optional Phaser.Point, or Object containing public `x` and `y` properties. If given the resulting values will be stored in the Objects `x` and `y` properties. If omitted a new Phaser.Point object is created.","name":"point"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The point on the line at the specified 'distance' along the curve."}],"memberof":"Phaser.Hermite","longname":"Phaser.Hermite#getPointWithDistance","scope":"instance","___s":true},{"meta":{"range":[11161,11531],"filename":"Hermite.js","lineno":336,"path":"src\\geom"},"description":"Calculate and return the angle, in radians, of the curves tangent based on time.","kind":"function","name":"getAngle","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The `t` (time) value at which to find the angle. Must be between 0 and 1.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The angle of the line at the specified `t` time value along the curve. The value is in radians."}],"memberof":"Phaser.Hermite","longname":"Phaser.Hermite#getAngle","scope":"instance","___s":true},{"meta":{"range":[11810,12220],"filename":"Hermite.js","lineno":354,"path":"src\\geom"},"description":"Calculate and return the angle, in radians, of the curves tangent at the given pixel distance along the curves length.","kind":"function","name":"getAngleWithDistance","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The distance along the curve to get the angle from, in pixels.","name":"distance"}],"returns":[{"type":{"names":["number"]},"description":"The angle of the line at the specified distance along the curve. The value is in radians."}],"memberof":"Phaser.Hermite","longname":"Phaser.Hermite#getAngleWithDistance","scope":"instance","___s":true},{"meta":{"range":[12543,12922],"filename":"Hermite.js","lineno":376,"path":"src\\geom"},"description":"Get the angle of the curves entry point.","kind":"function","name":"getEntryTangent","params":[{"type":{"names":["Phaser.Point","Object"]},"description":"The Phaser.Point object, or an Object with public `x` and `y` properties, in which the tangent vector values will be stored.","name":"point"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"A Point object containing the tangent vector of this Hermite curve."}],"memberof":"Phaser.Hermite","longname":"Phaser.Hermite#getEntryTangent","scope":"instance","___s":true},{"meta":{"range":[13128,13265],"filename":"Hermite.js","lineno":396,"path":"src\\geom"},"name":"accuracy","properties":[{"type":{"names":["number"]},"description":"The amount of points to pre-calculate on the curve.","name":"accuracy"}],"memberof":"Phaser.Hermite","longname":"Phaser.Hermite#accuracy","scope":"instance","kind":"member","___s":true},{"meta":{"range":[13583,13749],"filename":"Hermite.js","lineno":420,"path":"src\\geom"},"name":"p1x","properties":[{"type":{"names":["number"]},"description":"The x coordinate of the start of the curve. Setting this value will recalculate the curve.","name":"p1x"}],"memberof":"Phaser.Hermite","longname":"Phaser.Hermite#p1x","scope":"instance","kind":"member","___s":true},{"meta":{"range":[14047,14213],"filename":"Hermite.js","lineno":444,"path":"src\\geom"},"name":"p1y","properties":[{"type":{"names":["number"]},"description":"The y coordinate of the start of the curve. Setting this value will recalculate the curve.","name":"p1y"}],"memberof":"Phaser.Hermite","longname":"Phaser.Hermite#p1y","scope":"instance","kind":"member","___s":true},{"meta":{"range":[14511,14675],"filename":"Hermite.js","lineno":468,"path":"src\\geom"},"name":"p2x","properties":[{"type":{"names":["number"]},"description":"The x coordinate of the end of the curve. Setting this value will recalculate the curve.","name":"p2x"}],"memberof":"Phaser.Hermite","longname":"Phaser.Hermite#p2x","scope":"instance","kind":"member","___s":true},{"meta":{"range":[14973,15137],"filename":"Hermite.js","lineno":492,"path":"src\\geom"},"name":"p2y","properties":[{"type":{"names":["number"]},"description":"The y coordinate of the end of the curve. Setting this value will recalculate the curve.","name":"p2y"}],"memberof":"Phaser.Hermite","longname":"Phaser.Hermite#p2y","scope":"instance","kind":"member","___s":true},{"meta":{"range":[15435,15623],"filename":"Hermite.js","lineno":516,"path":"src\\geom"},"name":"v1x","properties":[{"type":{"names":["number"]},"description":"The x component of the tangent vector for the start of the curve. Setting this value will recalculate the curve.","name":"v1x"}],"memberof":"Phaser.Hermite","longname":"Phaser.Hermite#v1x","scope":"instance","kind":"member","___s":true},{"meta":{"range":[15921,16109],"filename":"Hermite.js","lineno":540,"path":"src\\geom"},"name":"v1y","properties":[{"type":{"names":["number"]},"description":"The y component of the tangent vector for the start of the curve. Setting this value will recalculate the curve.","name":"v1y"}],"memberof":"Phaser.Hermite","longname":"Phaser.Hermite#v1y","scope":"instance","kind":"member","___s":true},{"meta":{"range":[16407,16593],"filename":"Hermite.js","lineno":564,"path":"src\\geom"},"name":"v2x","properties":[{"type":{"names":["number"]},"description":"The x component of the tangent vector for the end of the curve. Setting this value will recalculate the curve.","name":"v2x"}],"memberof":"Phaser.Hermite","longname":"Phaser.Hermite#v2x","scope":"instance","kind":"member","___s":true},{"meta":{"range":[16891,17077],"filename":"Hermite.js","lineno":588,"path":"src\\geom"},"name":"v2y","properties":[{"type":{"names":["number"]},"description":"The y component of the tangent vector for the end of the curve. Setting this value will recalculate the curve.","name":"v2y"}],"memberof":"Phaser.Hermite","longname":"Phaser.Hermite#v2y","scope":"instance","kind":"member","___s":true},{"meta":{"range":[594,1106],"filename":"Line.js","lineno":17,"path":"src\\geom"},"description":"Creates a new Line object with a start and an end point.","kind":"class","classdesc":"Phaser.Line","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of the start of the line.","name":"x1"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of the start of the line.","name":"y1"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of the end of the line.","name":"x2"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of the end of the line.","name":"y2"}],"name":"Line","longname":"Phaser.Line","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[807,844],"filename":"Line.js","lineno":27,"path":"src\\geom"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The start point of the line.","name":"start"}],"name":"start","longname":"Phaser.Line#start","kind":"member","memberof":"Phaser.Line","scope":"instance","___s":true},{"meta":{"range":[935,970],"filename":"Line.js","lineno":32,"path":"src\\geom"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The end point of the line.","name":"end"}],"name":"end","longname":"Phaser.Line#end","kind":"member","memberof":"Phaser.Line","scope":"instance","___s":true},{"meta":{"range":[1077,1100],"filename":"Line.js","lineno":38,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"readonly":true,"name":"type","longname":"Phaser.Line#type","kind":"member","memberof":"Phaser.Line","scope":"instance","___s":true},{"meta":{"range":[1144,1601],"filename":"Line.js","lineno":44,"path":"src\\geom"},"description":"Sets the components of the Line to the specified values.","kind":"function","name":"setTo","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of the start of the line.","name":"x1"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of the start of the line.","name":"y1"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of the end of the line.","name":"x2"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of the end of the line.","name":"y2"}],"returns":[{"type":{"names":["Phaser.Line"]},"description":"This line object"}],"memberof":"Phaser.Line","longname":"Phaser.Line#setTo","scope":"instance","___s":true},{"meta":{"range":[1753,2459],"filename":"Line.js","lineno":63,"path":"src\\geom"},"description":"Sets the line to match the x/y coordinates of the two given sprites.\rCan optionally be calculated from their center coordinates.","kind":"function","name":"fromSprite","params":[{"type":{"names":["Phaser.Sprite"]},"description":"The coordinates of this Sprite will be set to the Line.start point.","name":"startSprite"},{"type":{"names":["Phaser.Sprite"]},"description":"The coordinates of this Sprite will be set to the Line.start point.","name":"endSprite"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true it will use startSprite.center.x, if false startSprite.x. Note that Sprites don't have a center property by default, so only enable if you've over-ridden your Sprite with a custom class.","name":"useCenter"}],"returns":[{"type":{"names":["Phaser.Line"]},"description":"This line object"}],"memberof":"Phaser.Line","longname":"Phaser.Line#fromSprite","scope":"instance","___s":true},{"meta":{"range":[2854,3359],"filename":"Line.js","lineno":86,"path":"src\\geom"},"description":"Sets this line to start at the given `x` and `y` coordinates and for the segment to extend at `angle` for the given `length`.","kind":"function","name":"fromAngle","params":[{"type":{"names":["number"]},"description":"The x coordinate of the start of the line.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the start of the line.","name":"y"},{"type":{"names":["number"]},"description":"The angle of the line in radians.","name":"angle"},{"type":{"names":["number"]},"description":"The length of the line in pixels.","name":"length"}],"returns":[{"type":{"names":["Phaser.Line"]},"description":"This line object"}],"memberof":"Phaser.Line","longname":"Phaser.Line#fromAngle","scope":"instance","___s":true},{"meta":{"range":[3574,4180],"filename":"Line.js","lineno":105,"path":"src\\geom"},"description":"Rotates the line by the amount specified in `angle`.\r\rRotation takes place from the center of the line.\rIf you wish to rotate around a different point see Line.rotateAround.\r\rIf you wish to rotate the ends of the Line then see Line.start.rotate or Line.end.rotate.","kind":"function","name":"rotate","params":[{"type":{"names":["number"]},"description":"The angle in radians (unless asDegrees is true) to rotate the line by.","name":"angle"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Is the given angle in radians (false) or degrees (true)?","name":"asDegrees"}],"returns":[{"type":{"names":["Phaser.Line"]},"description":"This line object"}],"memberof":"Phaser.Line","longname":"Phaser.Line#rotate","scope":"instance","___s":true},{"meta":{"range":[4477,5055],"filename":"Line.js","lineno":130,"path":"src\\geom"},"description":"Rotates the line by the amount specified in `angle`.\r\rRotation takes place around the coordinates given.","kind":"function","name":"rotateAround","params":[{"type":{"names":["number"]},"description":"The x coordinate to offset the rotation from.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to offset the rotation from.","name":"y"},{"type":{"names":["number"]},"description":"The angle in radians (unless asDegrees is true) to rotate the line by.","name":"angle"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Is the given angle in radians (false) or degrees (true)?","name":"asDegrees"}],"returns":[{"type":{"names":["Phaser.Line"]},"description":"This line object"}],"memberof":"Phaser.Line","longname":"Phaser.Line#rotateAround","scope":"instance","___s":true},{"meta":{"range":[5256,6044],"filename":"Line.js","lineno":151,"path":"src\\geom"},"description":"Checks for intersection between this line and another Line.\rIf asSegment is true it will check for segment intersection. If asSegment is false it will check for line intersection.\rReturns the intersection segment of AB and EF as a Point, or null if there is no intersection.","kind":"function","name":"intersects","params":[{"type":{"names":["Phaser.Line"]},"description":"The line to check against this one.","name":"line"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true it will check for segment intersection, otherwise full line intersection.","name":"asSegment"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"A Point object to store the result in, if not given a new one will be created.","name":"result"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The intersection segment of the two lines as a Point, or null if there is no intersection."}],"memberof":"Phaser.Line","longname":"Phaser.Line#intersects","scope":"instance","___s":true},{"meta":{"range":[6227,6565],"filename":"Line.js","lineno":168,"path":"src\\geom"},"description":"Returns the reflected angle between two lines.\rThis is the outgoing angle based on the angle of this line and the normalAngle of the given line.","kind":"function","name":"reflect","params":[{"type":{"names":["Phaser.Line"]},"description":"The line to reflect off this line.","name":"line"}],"returns":[{"type":{"names":["number"]},"description":"The reflected angle in radians."}],"memberof":"Phaser.Line","longname":"Phaser.Line#reflect","scope":"instance","___s":true},{"meta":{"range":[6666,7094],"filename":"Line.js","lineno":182,"path":"src\\geom"},"description":"Returns a Point object where the x and y values correspond to the center (or midpoint) of the Line segment.","kind":"function","name":"midPoint","params":[{"type":{"names":["Phaser.Point"]},"optional":true,"description":"A Phaser.Point object into which the result will be populated. If not given a new Point object is created.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"A Phaser.Point object with the x and y values set to the center of the line segment."}],"memberof":"Phaser.Line","longname":"Phaser.Line#midPoint","scope":"instance","___s":true},{"meta":{"range":[7333,7754],"filename":"Line.js","lineno":200,"path":"src\\geom"},"description":"Centers this Line on the given coordinates.\r\rThe line is centered by positioning the start and end points so that the lines midpoint matches\rthe coordinates given.","kind":"function","name":"centerOn","params":[{"type":{"names":["number"]},"description":"The x position to center the line on.","name":"x"},{"type":{"names":["number"]},"description":"The y position to center the line on.","name":"y"}],"returns":[{"type":{"names":["Phaser.Line"]},"description":"This line object"}],"memberof":"Phaser.Line","longname":"Phaser.Line#centerOn","scope":"instance","___s":true},{"meta":{"range":[8029,8400],"filename":"Line.js","lineno":224,"path":"src\\geom"},"description":"Tests if the given coordinates fall on this line. See pointOnSegment to test against just the line segment.","kind":"function","name":"pointOnLine","params":[{"type":{"names":["number"]},"description":"The line to check against this one.","name":"x"},{"type":{"names":["number"]},"description":"The line to check against this one.","name":"y"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the point is on the line, false if not."}],"memberof":"Phaser.Line","longname":"Phaser.Line#pointOnLine","scope":"instance","___s":true},{"meta":{"range":[8577,8975],"filename":"Line.js","lineno":238,"path":"src\\geom"},"description":"Tests if the given coordinates fall on this line and within the segment. See pointOnLine to test against just the line.","kind":"function","name":"pointOnSegment","params":[{"type":{"names":["number"]},"description":"The line to check against this one.","name":"x"},{"type":{"names":["number"]},"description":"The line to check against this one.","name":"y"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the point is on the line and segment, false if not."}],"memberof":"Phaser.Line","longname":"Phaser.Line#pointOnSegment","scope":"instance","___s":true},{"meta":{"range":[9358,9860],"filename":"Line.js","lineno":257,"path":"src\\geom"},"description":"Picks a random point from anywhere on the Line segment and returns it.","kind":"function","name":"random","params":[{"type":{"names":["Phaser.Point","object"]},"optional":true,"description":"A Phaser.Point, or any object with public x/y properties, that the values will be set in.\r    If no object is provided a new Phaser.Point object will be created. In high performance areas avoid this by re-using an object.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"An object containing the random point in its `x` and `y` properties."}],"memberof":"Phaser.Line","longname":"Phaser.Line#random","scope":"instance","___s":true},{"meta":{"range":[10161,10718],"filename":"Line.js","lineno":278,"path":"src\\geom"},"description":"Using Bresenham's line algorithm this will return an array of all coordinates on this line.\rThe start and end points are rounded before this runs as the algorithm works on integers.","kind":"function","name":"coordinatesOnLine","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"How many steps will we return? 1 = every coordinate on the line, 2 = every other coordinate, etc.","name":"stepRate"},{"type":{"names":["array"]},"optional":true,"description":"The array to store the results in. If not provided a new one will be generated.","name":"results"}],"returns":[{"type":{"names":["array"]},"description":"An array of coordinates."}],"memberof":"Phaser.Line","longname":"Phaser.Line#coordinatesOnLine","scope":"instance","___s":true},{"meta":{"range":[11802,12184],"filename":"Line.js","lineno":336,"path":"src\\geom"},"description":"Returns a new Line object with the same values for the start and end properties as this Line object.","kind":"function","name":"clone","params":[{"type":{"names":["Phaser.Line"]},"description":"Optional Line object. If given the values will be set into the object, otherwise a brand new Line object will be created and returned.","name":"output"}],"returns":[{"type":{"names":["Phaser.Line"]},"description":"The cloned Line object."}],"memberof":"Phaser.Line","longname":"Phaser.Line#clone","scope":"instance","___s":true},{"meta":{"range":[12545,12661],"filename":"Line.js","lineno":359,"path":"src\\geom"},"name":"length","properties":[{"type":{"names":["number"]},"description":"Gets the length of the line segment.","name":"length"}],"readonly":true,"memberof":"Phaser.Line","longname":"Phaser.Line#length","scope":"instance","kind":"member","___s":true},{"meta":{"range":[12909,13025],"filename":"Line.js","lineno":372,"path":"src\\geom"},"name":"angle","properties":[{"type":{"names":["number"]},"description":"Gets the angle of the line in radians.","name":"angle"}],"readonly":true,"memberof":"Phaser.Line","longname":"Phaser.Line#angle","scope":"instance","kind":"member","___s":true},{"meta":{"range":[13208,13319],"filename":"Line.js","lineno":385,"path":"src\\geom"},"name":"slope","properties":[{"type":{"names":["number"]},"description":"Gets the slope of the line (y/x).","name":"slope"}],"readonly":true,"memberof":"Phaser.Line","longname":"Phaser.Line#slope","scope":"instance","kind":"member","___s":true},{"meta":{"range":[13495,13628],"filename":"Line.js","lineno":398,"path":"src\\geom"},"name":"perpSlope","properties":[{"type":{"names":["number"]},"description":"Gets the perpendicular slope of the line (x/y).","name":"perpSlope"}],"readonly":true,"memberof":"Phaser.Line","longname":"Phaser.Line#perpSlope","scope":"instance","kind":"member","___s":true},{"meta":{"range":[13811,13950],"filename":"Line.js","lineno":411,"path":"src\\geom"},"name":"x","properties":[{"type":{"names":["number"]},"description":"Gets the x coordinate of the top left of the bounds around this line.","name":"x"}],"readonly":true,"memberof":"Phaser.Line","longname":"Phaser.Line#x","scope":"instance","kind":"member","___s":true},{"meta":{"range":[14099,14238],"filename":"Line.js","lineno":424,"path":"src\\geom"},"name":"y","properties":[{"type":{"names":["number"]},"description":"Gets the y coordinate of the top left of the bounds around this line.","name":"y"}],"readonly":true,"memberof":"Phaser.Line","longname":"Phaser.Line#y","scope":"instance","kind":"member","___s":true},{"meta":{"range":[14387,14501],"filename":"Line.js","lineno":437,"path":"src\\geom"},"name":"left","properties":[{"type":{"names":["number"]},"description":"Gets the left-most point of this line.","name":"left"}],"readonly":true,"memberof":"Phaser.Line","longname":"Phaser.Line#left","scope":"instance","kind":"member","___s":true},{"meta":{"range":[14653,14770],"filename":"Line.js","lineno":450,"path":"src\\geom"},"name":"right","properties":[{"type":{"names":["number"]},"description":"Gets the right-most point of this line.","name":"right"}],"readonly":true,"memberof":"Phaser.Line","longname":"Phaser.Line#right","scope":"instance","kind":"member","___s":true},{"meta":{"range":[14923,15034],"filename":"Line.js","lineno":463,"path":"src\\geom"},"name":"top","properties":[{"type":{"names":["number"]},"description":"Gets the top-most point of this line.","name":"top"}],"readonly":true,"memberof":"Phaser.Line","longname":"Phaser.Line#top","scope":"instance","kind":"member","___s":true},{"meta":{"range":[15185,15305],"filename":"Line.js","lineno":476,"path":"src\\geom"},"name":"bottom","properties":[{"type":{"names":["number"]},"description":"Gets the bottom-most point of this line.","name":"bottom"}],"readonly":true,"memberof":"Phaser.Line","longname":"Phaser.Line#bottom","scope":"instance","kind":"member","___s":true},{"meta":{"range":[15459,15580],"filename":"Line.js","lineno":489,"path":"src\\geom"},"name":"width","properties":[{"type":{"names":["number"]},"description":"Gets the width of this bounds of this line.","name":"width"}],"readonly":true,"memberof":"Phaser.Line","longname":"Phaser.Line#width","scope":"instance","kind":"member","___s":true},{"meta":{"range":[15734,15858],"filename":"Line.js","lineno":502,"path":"src\\geom"},"name":"height","properties":[{"type":{"names":["number"]},"description":"Gets the height of this bounds of this line.","name":"height"}],"readonly":true,"memberof":"Phaser.Line","longname":"Phaser.Line#height","scope":"instance","kind":"member","___s":true},{"meta":{"range":[16013,16153],"filename":"Line.js","lineno":515,"path":"src\\geom"},"name":"normalX","properties":[{"type":{"names":["number"]},"description":"Gets the x component of the left-hand normal of this line.","name":"normalX"}],"readonly":true,"memberof":"Phaser.Line","longname":"Phaser.Line#normalX","scope":"instance","kind":"member","___s":true},{"meta":{"range":[16315,16455],"filename":"Line.js","lineno":528,"path":"src\\geom"},"name":"normalY","properties":[{"type":{"names":["number"]},"description":"Gets the y component of the left-hand normal of this line.","name":"normalY"}],"readonly":true,"memberof":"Phaser.Line","longname":"Phaser.Line#normalY","scope":"instance","kind":"member","___s":true},{"meta":{"range":[16617,16786],"filename":"Line.js","lineno":541,"path":"src\\geom"},"name":"normalAngle","properties":[{"type":{"names":["number"]},"description":"Gets the angle in radians of the normal of this line (line.angle - 90 degrees.)","name":"normalAngle"}],"readonly":true,"memberof":"Phaser.Line","longname":"Phaser.Line#normalAngle","scope":"instance","kind":"member","___s":true},{"meta":{"range":[16979,18027],"filename":"Line.js","lineno":554,"path":"src\\geom"},"description":"Checks for intersection between two lines as defined by the given start and end points.\rIf asSegment is true it will check for line segment intersection. If asSegment is false it will check for line intersection.\rReturns the intersection segment of AB and EF as a Point, or null if there is no intersection.\rAdapted from code by Keith Hair","kind":"function","name":"intersectsPoints","params":[{"type":{"names":["Phaser.Point"]},"description":"The start of the first Line to be checked.","name":"a"},{"type":{"names":["Phaser.Point"]},"description":"The end of the first line to be checked.","name":"b"},{"type":{"names":["Phaser.Point"]},"description":"The start of the second Line to be checked.","name":"e"},{"type":{"names":["Phaser.Point"]},"description":"The end of the second line to be checked.","name":"f"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true it will check for segment intersection, otherwise full line intersection.","name":"asSegment"},{"type":{"names":["Phaser.Point","object"]},"optional":true,"description":"A Point object to store the result in, if not given a new one will be created.","name":"result"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The intersection segment of the two lines as a Point, or null if there is no intersection."}],"memberof":"Phaser.Line","longname":"Phaser.Line.intersectsPoints","scope":"static","___s":true},{"meta":{"range":[19086,19905],"filename":"Line.js","lineno":610,"path":"src\\geom"},"description":"Checks for intersection between two lines.\rIf asSegment is true it will check for segment intersection.\rIf asSegment is false it will check for line intersection.\rReturns the intersection segment of AB and EF as a Point, or null if there is no intersection.\rAdapted from code by Keith Hair","kind":"function","name":"intersects","params":[{"type":{"names":["Phaser.Line"]},"description":"The first Line to be checked.","name":"a"},{"type":{"names":["Phaser.Line"]},"description":"The second Line to be checked.","name":"b"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true it will check for segment intersection, otherwise full line intersection.","name":"asSegment"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"A Point object to store the result in, if not given a new one will be created.","name":"result"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The intersection segment of the two lines as a Point, or null if there is no intersection."}],"memberof":"Phaser.Line","longname":"Phaser.Line.intersects","scope":"static","___s":true},{"meta":{"range":[20073,20855],"filename":"Line.js","lineno":630,"path":"src\\geom"},"description":"Checks for intersection between the Line and a Rectangle shape, or a rectangle-like\robject, with public `x`, `y`, `right` and `bottom` properties, such as a Sprite or Body.\r\rAn intersection is considered valid if:\r\rThe line starts within, or ends within, the Rectangle.\rThe line segment intersects one of the 4 rectangle edges.\r\rThe for the purposes of this function rectangles are considered 'solid'.","kind":"function","name":"intersectsRectangle","params":[{"type":{"names":["Phaser.Line"]},"description":"The line to check for intersection with.","name":"line"},{"type":{"names":["Phaser.Rectangle","object"]},"description":"The rectangle, or rectangle-like object, to check for intersection with.","name":"rect"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the line intersects with the rectangle edges, or starts or ends within the rectangle."}],"memberof":"Phaser.Line","longname":"Phaser.Line.intersectsRectangle","scope":"static","___s":true},{"meta":{"range":[22479,22828],"filename":"Line.js","lineno":722,"path":"src\\geom"},"description":"Returns the reflected angle between two lines.\rThis is the outgoing angle based on the angle of Line 1 and the normalAngle of Line 2.","kind":"function","name":"reflect","params":[{"type":{"names":["Phaser.Line"]},"description":"The base line.","name":"a"},{"type":{"names":["Phaser.Line"]},"description":"The line to be reflected from the base line.","name":"b"}],"returns":[{"type":{"names":["number"]},"description":"The reflected angle in radians."}],"memberof":"Phaser.Line","longname":"Phaser.Line.reflect","scope":"static","___s":true},{"meta":{"range":[774,1770],"filename":"Matrix.js","lineno":26,"path":"src\\geom"},"description":"The Matrix is a 3x3 matrix mostly used for display transforms within the renderer.\r\rIt is represented like so:\r\r| a | b | tx |\r| c | d | ty |\r| 0 | 0 | 1 |","kind":"class","classdesc":"Phaser.Matrix","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"Horizontal scaling","name":"a"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Horizontal skewing","name":"b"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Vertical skewing","name":"c"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"Vertical scaling","name":"d"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Horizontal translation","name":"tx"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Vertical translation","name":"ty"}],"name":"Matrix","longname":"Phaser.Matrix","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1206,1216],"filename":"Matrix.js","lineno":39,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"name":"a"}],"defaultvalue":"1","name":"a","longname":"Phaser.Matrix#a","kind":"member","memberof":"Phaser.Matrix","scope":"instance","___s":true},{"meta":{"range":[1288,1298],"filename":"Matrix.js","lineno":45,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"name":"b"}],"defaultvalue":"0","name":"b","longname":"Phaser.Matrix#b","kind":"member","memberof":"Phaser.Matrix","scope":"instance","___s":true},{"meta":{"range":[1370,1380],"filename":"Matrix.js","lineno":51,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"name":"c"}],"defaultvalue":"0","name":"c","longname":"Phaser.Matrix#c","kind":"member","memberof":"Phaser.Matrix","scope":"instance","___s":true},{"meta":{"range":[1452,1462],"filename":"Matrix.js","lineno":57,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"name":"d"}],"defaultvalue":"1","name":"d","longname":"Phaser.Matrix#d","kind":"member","memberof":"Phaser.Matrix","scope":"instance","___s":true},{"meta":{"range":[1535,1547],"filename":"Matrix.js","lineno":63,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"name":"tx"}],"defaultvalue":"0","name":"tx","longname":"Phaser.Matrix#tx","kind":"member","memberof":"Phaser.Matrix","scope":"instance","___s":true},{"meta":{"range":[1620,1632],"filename":"Matrix.js","lineno":69,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"name":"ty"}],"defaultvalue":"0","name":"ty","longname":"Phaser.Matrix#ty","kind":"member","memberof":"Phaser.Matrix","scope":"instance","___s":true},{"meta":{"range":[1739,1764],"filename":"Matrix.js","lineno":75,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"readonly":true,"name":"type","longname":"Phaser.Matrix#type","kind":"member","memberof":"Phaser.Matrix","scope":"instance","___s":true},{"meta":{"range":[1810,2233],"filename":"Matrix.js","lineno":81,"path":"src\\geom"},"description":"Sets the values of this Matrix to the values in the given array.\r\rThe Array elements should be set as follows:\r\ra = array[0]\rb = array[1]\rc = array[3]\rd = array[4]\rtx = array[2]\rty = array[5]","kind":"function","name":"fromArray","params":[{"type":{"names":["Array"]},"description":"The array to copy from.","name":"array"}],"returns":[{"type":{"names":["Phaser.Matrix"]},"description":"This Matrix object."}],"memberof":"Phaser.Matrix","longname":"Phaser.Matrix#fromArray","scope":"instance","___s":true},{"meta":{"range":[2376,2819],"filename":"Matrix.js","lineno":103,"path":"src\\geom"},"description":"Sets the values of this Matrix to the given values.","kind":"function","name":"setTo","params":[{"type":{"names":["number"]},"description":"Horizontal scaling","name":"a"},{"type":{"names":["number"]},"description":"Horizontal skewing","name":"b"},{"type":{"names":["number"]},"description":"Vertical skewing","name":"c"},{"type":{"names":["number"]},"description":"Vertical scaling","name":"d"},{"type":{"names":["number"]},"description":"Horizontal translation","name":"tx"},{"type":{"names":["number"]},"description":"Vertical translation","name":"ty"}],"returns":[{"type":{"names":["Phaser.Matrix"]},"description":"This Matrix object."}],"memberof":"Phaser.Matrix","longname":"Phaser.Matrix#setTo","scope":"instance","___s":true},{"meta":{"range":[3037,3540],"filename":"Matrix.js","lineno":128,"path":"src\\geom"},"description":"Creates a new Matrix object based on the values of this Matrix.\rIf you provide the output parameter the values of this Matrix will be copied over to it.\rIf the output parameter is blank a new Matrix object will be created.","kind":"function","name":"clone","params":[{"type":{"names":["Phaser.Matrix"]},"optional":true,"description":"If provided the values of this Matrix will be copied to it, otherwise a new Matrix object is created.","name":"output"}],"returns":[{"type":{"names":["Phaser.Matrix"]},"description":"A clone of this Matrix."}],"memberof":"Phaser.Matrix","longname":"Phaser.Matrix#clone","scope":"instance","___s":true},{"meta":{"range":[4017,4264],"filename":"Matrix.js","lineno":157,"path":"src\\geom"},"description":"Copies the properties from this Matrix to the given Matrix.","kind":"function","name":"copyTo","params":[{"type":{"names":["Phaser.Matrix"]},"description":"The Matrix to copy from.","name":"matrix"}],"returns":[{"type":{"names":["Phaser.Matrix"]},"description":"The destination Matrix object."}],"memberof":"Phaser.Matrix","longname":"Phaser.Matrix#copyTo","scope":"instance","___s":true},{"meta":{"range":[4375,4615],"filename":"Matrix.js","lineno":172,"path":"src\\geom"},"description":"Copies the properties from the given Matrix into this Matrix.","kind":"function","name":"copyFrom","params":[{"type":{"names":["Phaser.Matrix"]},"description":"The Matrix to copy from.","name":"matrix"}],"returns":[{"type":{"names":["Phaser.Matrix"]},"description":"This Matrix object."}],"memberof":"Phaser.Matrix","longname":"Phaser.Matrix#copyFrom","scope":"instance","___s":true},{"meta":{"range":[4866,5321],"filename":"Matrix.js","lineno":192,"path":"src\\geom"},"description":"Creates a Float32 Array with values populated from this Matrix object.","kind":"function","name":"toArray","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Whether the values in the array are transposed or not.","name":"transpose"},{"type":{"names":["PIXI.Float32Array"]},"optional":true,"description":"If provided the values will be set into this array, otherwise a new Float32Array is created.","name":"array"}],"returns":[{"type":{"names":["PIXI.Float32Array"]},"description":"The newly created array which contains the matrix."}],"memberof":"Phaser.Matrix","longname":"Phaser.Matrix#toArray","scope":"instance","___s":true},{"meta":{"range":[6116,6599],"filename":"Matrix.js","lineno":233,"path":"src\\geom"},"description":"Get a new position with the current transformation applied.\r\rCan be used to go from a childs coordinate space to the world coordinate space (e.g. rendering)","kind":"function","name":"apply","params":[{"type":{"names":["Phaser.Point"]},"description":"The origin Point.","name":"pos"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"The point that the new position is assigned to. This can be same as input point.","name":"newPos"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The new point, transformed through this matrix."}],"memberof":"Phaser.Matrix","longname":"Phaser.Matrix#apply","scope":"instance","___s":true},{"meta":{"range":[6878,7388],"filename":"Matrix.js","lineno":254,"path":"src\\geom"},"description":"Get a new position with the inverse of the current transformation applied.\r\rCan be used to go from the world coordinate space to a childs coordinate space. (e.g. input)","kind":"function","name":"applyInverse","params":[{"type":{"names":["Phaser.Point"]},"description":"The origin Point.","name":"pos"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"The point that the new position is assigned to. This can be same as input point.","name":"newPos"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The new point, inverse transformed through this matrix."}],"memberof":"Phaser.Matrix","longname":"Phaser.Matrix#applyInverse","scope":"instance","___s":true},{"meta":{"range":[7861,8170],"filename":"Matrix.js","lineno":279,"path":"src\\geom"},"description":"Translates the matrix on the x and y.\rThis is the same as Matrix.tx += x.","kind":"function","name":"translate","params":[{"type":{"names":["number"]},"description":"The x value to translate on.","name":"x"},{"type":{"names":["number"]},"description":"The y value to translate on.","name":"y"}],"returns":[{"type":{"names":["Phaser.Matrix"]},"description":"This Matrix object."}],"memberof":"Phaser.Matrix","longname":"Phaser.Matrix#translate","scope":"instance","___s":true},{"meta":{"range":[8302,8581],"filename":"Matrix.js","lineno":297,"path":"src\\geom"},"description":"Applies a scale transformation to this matrix.","kind":"function","name":"scale","params":[{"type":{"names":["number"]},"description":"The amount to scale horizontally.","name":"x"},{"type":{"names":["number"]},"description":"The amount to scale vertically.","name":"y"}],"returns":[{"type":{"names":["Phaser.Matrix"]},"description":"This Matrix object."}],"memberof":"Phaser.Matrix","longname":"Phaser.Matrix#scale","scope":"instance","___s":true},{"meta":{"range":[8789,9025],"filename":"Matrix.js","lineno":318,"path":"src\\geom"},"description":"Applies a rotation transformation to this matrix.","kind":"function","name":"rotate","params":[{"type":{"names":["number"]},"description":"The angle to rotate by, given in radians.","name":"angle"}],"returns":[{"type":{"names":["Phaser.Matrix"]},"description":"This Matrix object."}],"memberof":"Phaser.Matrix","longname":"Phaser.Matrix#rotate","scope":"instance","___s":true},{"meta":{"range":[9518,9745],"filename":"Matrix.js","lineno":345,"path":"src\\geom"},"description":"Appends the given Matrix to this Matrix.","kind":"function","name":"append","params":[{"type":{"names":["Phaser.Matrix"]},"description":"The matrix to append to this one.","name":"matrix"}],"returns":[{"type":{"names":["Phaser.Matrix"]},"description":"This Matrix object."}],"memberof":"Phaser.Matrix","longname":"Phaser.Matrix#append","scope":"instance","___s":true},{"meta":{"range":[10262,10429],"filename":"Matrix.js","lineno":371,"path":"src\\geom"},"description":"Resets this Matrix to an identity (default) matrix.","kind":"function","name":"identity","returns":[{"type":{"names":["Phaser.Matrix"]},"description":"This Matrix object."}],"memberof":"Phaser.Matrix","longname":"Phaser.Matrix#identity","scope":"instance","___s":true},{"meta":{"range":[731,1119],"filename":"Point.js","lineno":18,"path":"src\\geom"},"description":"A Point object represents a location in a two-dimensional coordinate system, where x represents the horizontal axis and y represents the vertical axis.\rThe following code creates a point at (0,0):\r`var myPoint = new Phaser.Point();`\rYou can also use them as 2D Vectors and you'll find different vector related methods in this class.","kind":"class","classdesc":"Phaser.Point","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The horizontal position of this Point.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The vertical position of this Point.","name":"y"}],"name":"Point","longname":"Phaser.Point","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[880,890],"filename":"Point.js","lineno":26,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The x value of the point.","name":"x"}],"name":"x","longname":"Phaser.Point#x","kind":"member","memberof":"Phaser.Point","scope":"instance","___s":true},{"meta":{"range":[972,982],"filename":"Point.js","lineno":31,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The y value of the point.","name":"y"}],"name":"y","longname":"Phaser.Point#y","kind":"member","memberof":"Phaser.Point","scope":"instance","___s":true},{"meta":{"range":[1089,1113],"filename":"Point.js","lineno":37,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"readonly":true,"name":"type","longname":"Phaser.Point#type","kind":"member","memberof":"Phaser.Point","scope":"instance","___s":true},{"meta":{"range":[1158,1390],"filename":"Point.js","lineno":43,"path":"src\\geom"},"description":"Copies the x and y properties from any given object to this Point.","kind":"function","name":"copyFrom","params":[{"type":{"names":["any"]},"description":"The object to copy from.","name":"source"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"This Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point#copyFrom","scope":"instance","___s":true},{"meta":{"range":[1493,1643],"filename":"Point.js","lineno":56,"path":"src\\geom"},"description":"Inverts the x and y values of this Point","kind":"function","name":"invert","returns":[{"type":{"names":["Phaser.Point"]},"description":"This Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point#invert","scope":"instance","___s":true},{"meta":{"range":[1734,2273],"filename":"Point.js","lineno":68,"path":"src\\geom"},"description":"Sets the `x` and `y` values of this Point object to the given values.\rIf you omit the `y` value then the `x` value will be applied to both, for example:\r`Point.setTo(2)` is the same as `Point.setTo(2, 2)`","kind":"function","name":"setTo","params":[{"type":{"names":["number"]},"description":"The horizontal value of this point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The vertical value of this point. If not given the x value will be used in its place.","name":"y"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"This Point object. Useful for chaining method calls."}],"memberof":"Phaser.Point","longname":"Phaser.Point#setTo","scope":"instance","___s":true},{"meta":{"range":[2424,2957],"filename":"Point.js","lineno":87,"path":"src\\geom"},"description":"Sets the `x` and `y` values of this Point object to the given values.\rIf you omit the `y` value then the `x` value will be applied to both, for example:\r`Point.set(2)` is the same as `Point.set(2, 2)`","kind":"function","name":"set","params":[{"type":{"names":["number"]},"description":"The horizontal value of this point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The vertical value of this point. If not given the x value will be used in its place.","name":"y"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"This Point object. Useful for chaining method calls."}],"memberof":"Phaser.Point","longname":"Phaser.Point#set","scope":"instance","___s":true},{"meta":{"range":[3106,3403],"filename":"Point.js","lineno":106,"path":"src\\geom"},"description":"Adds the given x and y values to this Point.","kind":"function","name":"add","params":[{"type":{"names":["number"]},"description":"The value to add to Point.x.","name":"x"},{"type":{"names":["number"]},"description":"The value to add to Point.y.","name":"y"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"This Point object. Useful for chaining method calls."}],"memberof":"Phaser.Point","longname":"Phaser.Point#add","scope":"instance","___s":true},{"meta":{"range":[3517,3840],"filename":"Point.js","lineno":122,"path":"src\\geom"},"description":"Subtracts the given x and y values from this Point.","kind":"function","name":"subtract","params":[{"type":{"names":["number"]},"description":"The value to subtract from Point.x.","name":"x"},{"type":{"names":["number"]},"description":"The value to subtract from Point.y.","name":"y"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"This Point object. Useful for chaining method calls."}],"memberof":"Phaser.Point","longname":"Phaser.Point#subtract","scope":"instance","___s":true},{"meta":{"range":[3959,4314],"filename":"Point.js","lineno":138,"path":"src\\geom"},"description":"Multiplies Point.x and Point.y by the given x and y values. Sometimes known as `Scale`.","kind":"function","name":"multiply","params":[{"type":{"names":["number"]},"description":"The value to multiply Point.x by.","name":"x"},{"type":{"names":["number"]},"description":"The value to multiply Point.x by.","name":"y"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"This Point object. Useful for chaining method calls."}],"memberof":"Phaser.Point","longname":"Phaser.Point#multiply","scope":"instance","___s":true},{"meta":{"range":[4433,4751],"filename":"Point.js","lineno":154,"path":"src\\geom"},"description":"Divides Point.x and Point.y by the given x and y values.","kind":"function","name":"divide","params":[{"type":{"names":["number"]},"description":"The value to divide Point.x by.","name":"x"},{"type":{"names":["number"]},"description":"The value to divide Point.x by.","name":"y"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"This Point object. Useful for chaining method calls."}],"memberof":"Phaser.Point","longname":"Phaser.Point#divide","scope":"instance","___s":true},{"meta":{"range":[4868,5189],"filename":"Point.js","lineno":170,"path":"src\\geom"},"description":"Clamps the x value of this Point to be between the given min and max.","kind":"function","name":"clampX","params":[{"type":{"names":["number"]},"description":"The minimum value to clamp this Point to.","name":"min"},{"type":{"names":["number"]},"description":"The maximum value to clamp this Point to.","name":"max"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"This Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point#clampX","scope":"instance","___s":true},{"meta":{"range":[5321,5641],"filename":"Point.js","lineno":185,"path":"src\\geom"},"description":"Clamps the y value of this Point to be between the given min and max","kind":"function","name":"clampY","params":[{"type":{"names":["number"]},"description":"The minimum value to clamp this Point to.","name":"min"},{"type":{"names":["number"]},"description":"The maximum value to clamp this Point to.","name":"max"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"This Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point#clampY","scope":"instance","___s":true},{"meta":{"range":[5773,6092],"filename":"Point.js","lineno":200,"path":"src\\geom"},"description":"Clamps this Point object values to be between the given min and max.","kind":"function","name":"clamp","params":[{"type":{"names":["number"]},"description":"The minimum value to clamp this Point to.","name":"min"},{"type":{"names":["number"]},"description":"The maximum value to clamp this Point to.","name":"max"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"This Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point#clamp","scope":"instance","___s":true},{"meta":{"range":[6278,6600],"filename":"Point.js","lineno":216,"path":"src\\geom"},"description":"Creates a copy of the given Point.","kind":"function","name":"clone","params":[{"type":{"names":["Phaser.Point"]},"optional":true,"description":"Optional Point object. If given the values will be set into this object, otherwise a brand new Point object will be created and returned.","name":"output"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The new Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point#clone","scope":"instance","___s":true},{"meta":{"range":[6889,7107],"filename":"Point.js","lineno":238,"path":"src\\geom"},"description":"Copies the x and y properties from this Point to any given object.","kind":"function","name":"copyTo","params":[{"type":{"names":["any"]},"description":"The object to copy to.","name":"dest"}],"returns":[{"type":{"names":["object"]},"description":"The dest object."}],"memberof":"Phaser.Point","longname":"Phaser.Point#copyTo","scope":"instance","___s":true},{"meta":{"range":[7234,7732],"filename":"Point.js","lineno":254,"path":"src\\geom"},"description":"Returns the distance of this Point object to the given object (can be a Circle, Point or anything with x/y properties)","kind":"function","name":"distance","params":[{"type":{"names":["object"]},"description":"The target object. Must have visible x and y properties that represent the center of the object.","name":"dest"},{"type":{"names":["boolean"]},"optional":true,"description":"Round the distance to the nearest integer (default false).","name":"round"}],"returns":[{"type":{"names":["number"]},"description":"The distance between this Point object and the destination Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point#distance","scope":"instance","___s":true},{"meta":{"range":[7850,8157],"filename":"Point.js","lineno":268,"path":"src\\geom"},"description":"Determines whether the given objects x/y values are equal to this Point object.","kind":"function","name":"equals","params":[{"type":{"names":["Phaser.Point","any"]},"description":"The object to compare with this Point.","name":"a"}],"returns":[{"type":{"names":["boolean"]},"description":"A value of true if the x and y points are equal, otherwise false."}],"memberof":"Phaser.Point","longname":"Phaser.Point#equals","scope":"instance","___s":true},{"meta":{"range":[8257,8656],"filename":"Point.js","lineno":281,"path":"src\\geom"},"description":"Returns the angle between this Point object and another object with public x and y properties.","kind":"function","name":"angle","params":[{"type":{"names":["Phaser.Point","any"]},"description":"The object to get the angle from this Point to.","name":"a"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Is the given angle in radians (false) or degrees (true)?","name":"asDegrees"}],"returns":[{"type":{"names":["number"]},"description":"The angle between the two objects."}],"memberof":"Phaser.Point","longname":"Phaser.Point#angle","scope":"instance","___s":true},{"meta":{"range":[9001,9628],"filename":"Point.js","lineno":304,"path":"src\\geom"},"description":"Rotates this Point around the x/y coordinates given to the desired angle.","kind":"function","name":"rotate","params":[{"type":{"names":["number"]},"description":"The x coordinate of the anchor point.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the anchor point.","name":"y"},{"type":{"names":["number"]},"description":"The angle in radians (unless asDegrees is true) to rotate the Point to.","name":"angle"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Is the given angle in radians (false) or degrees (true)?","name":"asDegrees"},{"type":{"names":["number"]},"optional":true,"description":"An optional distance constraint between the Point and the anchor.","name":"distance"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The modified point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point#rotate","scope":"instance","___s":true},{"meta":{"range":[9784,9942],"filename":"Point.js","lineno":321,"path":"src\\geom"},"description":"Calculates the length of the Point object.","kind":"function","name":"getMagnitude","returns":[{"type":{"names":["number"]},"description":"The length of the Point."}],"memberof":"Phaser.Point","longname":"Phaser.Point#getMagnitude","scope":"instance","___s":true},{"meta":{"range":[10061,10233],"filename":"Point.js","lineno":333,"path":"src\\geom"},"description":"Calculates the length squared of the Point object.","kind":"function","name":"getMagnitudeSq","returns":[{"type":{"names":["number"]},"description":"The length ^ 2 of the Point."}],"memberof":"Phaser.Point","longname":"Phaser.Point#getMagnitudeSq","scope":"instance","___s":true},{"meta":{"range":[10343,10602],"filename":"Point.js","lineno":345,"path":"src\\geom"},"description":"Alters the length of the Point without changing the direction.","kind":"function","name":"setMagnitude","params":[{"type":{"names":["number"]},"description":"The desired magnitude of the resulting Point.","name":"magnitude"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"This Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point#setMagnitude","scope":"instance","___s":true},{"meta":{"range":[10729,10925],"filename":"Point.js","lineno":358,"path":"src\\geom"},"description":"Alters the Point object so that its length is 1, but it retains the same direction.","kind":"function","name":"normalize","returns":[{"type":{"names":["Phaser.Point"]},"description":"This Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point#normalize","scope":"instance","___s":true},{"meta":{"range":[11144,11308],"filename":"Point.js","lineno":377,"path":"src\\geom"},"description":"Determine if this point is at 0,0.","kind":"function","name":"isZero","returns":[{"type":{"names":["boolean"]},"description":"True if this Point is 0,0, otherwise false."}],"memberof":"Phaser.Point","longname":"Phaser.Point#isZero","scope":"instance","___s":true},{"meta":{"range":[11403,11646],"filename":"Point.js","lineno":389,"path":"src\\geom"},"description":"The dot product of this and another Point object.","kind":"function","name":"dot","params":[{"type":{"names":["Phaser.Point"]},"description":"The Point object to get the dot product combined with this Point.","name":"a"}],"returns":[{"type":{"names":["number"]},"description":"The result."}],"memberof":"Phaser.Point","longname":"Phaser.Point#dot","scope":"instance","___s":true},{"meta":{"range":[11742,11991],"filename":"Point.js","lineno":402,"path":"src\\geom"},"description":"The cross product of this and another Point object.","kind":"function","name":"cross","params":[{"type":{"names":["Phaser.Point"]},"description":"The Point object to get the cross product combined with this Point.","name":"a"}],"returns":[{"type":{"names":["number"]},"description":"The result."}],"memberof":"Phaser.Point","longname":"Phaser.Point#cross","scope":"instance","___s":true},{"meta":{"range":[12089,12249],"filename":"Point.js","lineno":415,"path":"src\\geom"},"description":"Make this Point perpendicular (90 degrees rotation)","kind":"function","name":"perp","returns":[{"type":{"names":["Phaser.Point"]},"description":"This Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point#perp","scope":"instance","___s":true},{"meta":{"range":[12339,12501],"filename":"Point.js","lineno":427,"path":"src\\geom"},"description":"Make this Point perpendicular (-90 degrees rotation)","kind":"function","name":"rperp","returns":[{"type":{"names":["Phaser.Point"]},"description":"This Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point#rperp","scope":"instance","___s":true},{"meta":{"range":[12592,12762],"filename":"Point.js","lineno":439,"path":"src\\geom"},"description":"Right-hand normalize (make unit length) this Point.","kind":"function","name":"normalRightHand","returns":[{"type":{"names":["Phaser.Point"]},"description":"This Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point#normalRightHand","scope":"instance","___s":true},{"meta":{"range":[12867,13031],"filename":"Point.js","lineno":451,"path":"src\\geom"},"description":"Math.floor() both the x and y properties of this Point.","kind":"function","name":"floor","returns":[{"type":{"names":["Phaser.Point"]},"description":"This Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point#floor","scope":"instance","___s":true},{"meta":{"range":[13145,13307],"filename":"Point.js","lineno":463,"path":"src\\geom"},"description":"Math.ceil() both the x and y properties of this Point.","kind":"function","name":"ceil","returns":[{"type":{"names":["Phaser.Point"]},"description":"This Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point#ceil","scope":"instance","___s":true},{"meta":{"range":[13418,13593],"filename":"Point.js","lineno":475,"path":"src\\geom"},"description":"Returns a string representation of this object.","kind":"function","name":"toString","returns":[{"type":{"names":["string"]},"description":"A string representation of the instance."}],"memberof":"Phaser.Point","longname":"Phaser.Point#toString","scope":"instance","___s":true},{"meta":{"range":[13762,14148],"filename":"Point.js","lineno":491,"path":"src\\geom"},"description":"Adds the coordinates of two points together to create a new point.","kind":"function","name":"add","params":[{"type":{"names":["Phaser.Point"]},"description":"The first Point object.","name":"a"},{"type":{"names":["Phaser.Point"]},"description":"The second Point object.","name":"b"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"Optional Point to store the value in, if not supplied a new Point object will be created.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The new Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point.add","scope":"static","___s":true},{"meta":{"range":[14330,14717],"filename":"Point.js","lineno":511,"path":"src\\geom"},"description":"Subtracts the coordinates of two points to create a new point.","kind":"function","name":"subtract","params":[{"type":{"names":["Phaser.Point"]},"description":"The first Point object.","name":"a"},{"type":{"names":["Phaser.Point"]},"description":"The second Point object.","name":"b"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"Optional Point to store the value in, if not supplied a new Point object will be created.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The new Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point.subtract","scope":"static","___s":true},{"meta":{"range":[14904,15292],"filename":"Point.js","lineno":531,"path":"src\\geom"},"description":"Multiplies the coordinates of two points to create a new point.","kind":"function","name":"multiply","params":[{"type":{"names":["Phaser.Point"]},"description":"The first Point object.","name":"a"},{"type":{"names":["Phaser.Point"]},"description":"The second Point object.","name":"b"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"Optional Point to store the value in, if not supplied a new Point object will be created.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The new Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point.multiply","scope":"static","___s":true},{"meta":{"range":[15479,15862],"filename":"Point.js","lineno":551,"path":"src\\geom"},"description":"Divides the coordinates of two points to create a new point.","kind":"function","name":"divide","params":[{"type":{"names":["Phaser.Point"]},"description":"The first Point object.","name":"a"},{"type":{"names":["Phaser.Point"]},"description":"The second Point object.","name":"b"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"Optional Point to store the value in, if not supplied a new Point object will be created.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The new Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point.divide","scope":"static","___s":true},{"meta":{"range":[16047,16399],"filename":"Point.js","lineno":571,"path":"src\\geom"},"description":"Determines whether the two given Point objects are equal. They are considered equal if they have the same x and y values.","kind":"function","name":"equals","params":[{"type":{"names":["Phaser.Point"]},"description":"The first Point object.","name":"a"},{"type":{"names":["Phaser.Point"]},"description":"The second Point object.","name":"b"}],"returns":[{"type":{"names":["boolean"]},"description":"A value of true if the Points are equal, otherwise false."}],"memberof":"Phaser.Point","longname":"Phaser.Point.equals","scope":"static","___s":true},{"meta":{"range":[16494,16743],"filename":"Point.js","lineno":585,"path":"src\\geom"},"description":"Returns the angle between two Point objects.","kind":"function","name":"angle","params":[{"type":{"names":["Phaser.Point"]},"description":"The first Point object.","name":"a"},{"type":{"names":["Phaser.Point"]},"description":"The second Point object.","name":"b"}],"returns":[{"type":{"names":["number"]},"description":"The angle between the two Points."}],"memberof":"Phaser.Point","longname":"Phaser.Point.angle","scope":"static","___s":true},{"meta":{"range":[16914,17210],"filename":"Point.js","lineno":600,"path":"src\\geom"},"description":"Creates a negative Point.","kind":"function","name":"negative","params":[{"type":{"names":["Phaser.Point"]},"description":"The first Point object.","name":"a"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"Optional Point to store the value in, if not supplied a new Point object will be created.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The new Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point.negative","scope":"static","___s":true},{"meta":{"range":[17362,17807],"filename":"Point.js","lineno":616,"path":"src\\geom"},"description":"Adds two 2D Points together and multiplies the result by the given scalar.","kind":"function","name":"multiplyAdd","params":[{"type":{"names":["Phaser.Point"]},"description":"The first Point object.","name":"a"},{"type":{"names":["Phaser.Point"]},"description":"The second Point object.","name":"b"},{"type":{"names":["number"]},"description":"The scaling value.","name":"s"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"Optional Point to store the value in, if not supplied a new Point object will be created.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The new Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point.multiplyAdd","scope":"static","___s":true},{"meta":{"range":[17986,18614],"filename":"Point.js","lineno":634,"path":"src\\geom"},"description":"Interpolates the two given Points, based on the `f` value (between 0 and 1) and returns a new Point.","kind":"function","name":"interpolate","params":[{"type":{"names":["Phaser.Point"]},"description":"The first Point object.","name":"a"},{"type":{"names":["Phaser.Point"]},"description":"The second Point object.","name":"b"},{"type":{"names":["number"]},"description":"The level of interpolation between the two points. Indicates where the new point will be, along the line between pt1 and pt2. If f=1, pt1 is returned; if f=0, pt2 is returned.","name":"f"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"Optional Point to store the value in, if not supplied a new Point object will be created.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The new Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point.interpolate","scope":"static","___s":true},{"meta":{"range":[18809,19121],"filename":"Point.js","lineno":652,"path":"src\\geom"},"description":"Return a perpendicular vector (90 degrees rotation)","kind":"function","name":"perp","params":[{"type":{"names":["Phaser.Point"]},"description":"The Point object.","name":"a"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"Optional Point to store the value in, if not supplied a new Point object will be created.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The new Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point.perp","scope":"static","___s":true},{"meta":{"range":[19268,19582],"filename":"Point.js","lineno":668,"path":"src\\geom"},"description":"Return a perpendicular vector (-90 degrees rotation)","kind":"function","name":"rperp","params":[{"type":{"names":["Phaser.Point"]},"description":"The Point object.","name":"a"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"Optional Point to store the value in, if not supplied a new Point object will be created.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The new Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point.rperp","scope":"static","___s":true},{"meta":{"range":[19730,20318],"filename":"Point.js","lineno":684,"path":"src\\geom"},"description":"Returns the euclidian distance of this Point object to the given object (can be a Circle, Point or anything with x/y properties).","kind":"function","name":"distance","params":[{"type":{"names":["object"]},"description":"The target object. Must have visible x and y properties that represent the center of the object.","name":"a"},{"type":{"names":["object"]},"description":"The target object. Must have visible x and y properties that represent the center of the object.","name":"b"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Round the distance to the nearest integer.","name":"round"}],"returns":[{"type":{"names":["number"]},"description":"The distance between this Point object and the destination Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point.distance","scope":"static","___s":true},{"meta":{"range":[20495,20858],"filename":"Point.js","lineno":700,"path":"src\\geom"},"description":"Project two Points onto another Point.","kind":"function","name":"project","params":[{"type":{"names":["Phaser.Point"]},"description":"The first Point object.","name":"a"},{"type":{"names":["Phaser.Point"]},"description":"The second Point object.","name":"b"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"Optional Point to store the value in, if not supplied a new Point object will be created.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The new Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point.project","scope":"static","___s":true},{"meta":{"range":[21120,21496],"filename":"Point.js","lineno":724,"path":"src\\geom"},"description":"Project two Points onto a Point of unit length.","kind":"function","name":"projectUnit","params":[{"type":{"names":["Phaser.Point"]},"description":"The first Point object.","name":"a"},{"type":{"names":["Phaser.Point"]},"description":"The second Point object.","name":"b"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"Optional Point to store the value in, if not supplied a new Point object will be created.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The new Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point.projectUnit","scope":"static","___s":true},{"meta":{"range":[21741,22061],"filename":"Point.js","lineno":748,"path":"src\\geom"},"description":"Right-hand normalize (make unit length) a Point.","kind":"function","name":"normalRightHand","params":[{"type":{"names":["Phaser.Point"]},"description":"The Point object.","name":"a"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"Optional Point to store the value in, if not supplied a new Point object will be created.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The new Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point.normalRightHand","scope":"static","___s":true},{"meta":{"range":[22223,22526],"filename":"Point.js","lineno":764,"path":"src\\geom"},"description":"Normalize (make unit length) a Point.","kind":"function","name":"normalize","params":[{"type":{"names":["Phaser.Point"]},"description":"The Point object.","name":"a"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"Optional Point to store the value in, if not supplied a new Point object will be created.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The new Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point.normalize","scope":"static","___s":true},{"meta":{"range":[22766,23838],"filename":"Point.js","lineno":787,"path":"src\\geom"},"description":"Rotates a Point object, or any object with exposed x/y properties, around the given coordinates by\rthe angle specified. If the angle between the point and coordinates was 45 deg and the angle argument\ris 45 deg then the resulting angle will be 90 deg, as the angle argument is added to the current angle.\r\rThe distance allows you to specify a distance constraint for the rotation between the point and the \rcoordinates. If none is given the distance between the two is calculated and used.","kind":"function","name":"rotate","params":[{"type":{"names":["Phaser.Point"]},"description":"The Point object to rotate.","name":"a"},{"type":{"names":["number"]},"description":"The x coordinate of the anchor point","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the anchor point","name":"y"},{"type":{"names":["number"]},"description":"The angle in radians (unless asDegrees is true) to rotate the Point by.","name":"angle"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Is the given angle in radians (false) or degrees (true)?","name":"asDegrees"},{"type":{"names":["number"]},"optional":true,"description":"An optional distance constraint between the Point and the anchor.","name":"distance"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The modified point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point.rotate","scope":"static","___s":true},{"meta":{"range":[24435,24835],"filename":"Point.js","lineno":832,"path":"src\\geom"},"description":"Calculates centroid (or midpoint) from an array of points. If only one point is provided, that point is returned.","kind":"function","name":"centroid","params":[{"type":{"names":["Array.<Phaser.Point>"]},"description":"The array of one or more points.","name":"points"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"Optional Point to store the value in, if not supplied a new Point object will be created.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The new Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point.centroid","scope":"static","___s":true},{"meta":{"range":[25564,26055],"filename":"Point.js","lineno":873,"path":"src\\geom"},"description":"Parses an object for x and/or y properties and returns a new Phaser.Point with matching values.\rIf the object doesn't contain those properties a Point with x/y of zero will be returned.","kind":"function","name":"parse","scope":"static","params":[{"type":{"names":["object"]},"description":"The object to parse.","name":"obj"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'x'","description":"The property used to set the Point.x value.","name":"xProp"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'y'","description":"The property used to set the Point.y value.","name":"yProp"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The new Point object."}],"memberof":"Phaser.Point","longname":"Phaser.Point.parse","___s":true},{"meta":{"range":[963,1698],"filename":"Polygon.js","lineno":24,"path":"src\\geom"},"description":"Creates a new Polygon.\r\rThe points can be set from a variety of formats:\r\r- An array of Point objects: `[new Phaser.Point(x1, y1), ...]`\r- An array of objects with public x/y properties: `[obj1, obj2, ...]`\r- An array of paired numbers that represent point coordinates: `[x1,y1, x2,y2, ...]`\r- As separate Point arguments: `setTo(new Phaser.Point(x1, y1), ...)`\r- As separate objects with public x/y properties arguments: `setTo(obj1, obj2, ...)`\r- As separate arguments representing point coordinates: `setTo(x1,y1, x2,y2, ...)`","kind":"class","classdesc":"Phaser.Polygon","params":[{"type":{"names":["Array.<Phaser.Point>","Array.<number>","Phaser.Point","number"]},"description":"The points to set.","name":"points"}],"name":"Polygon","longname":"Phaser.Polygon","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1077,1090],"filename":"Polygon.js","lineno":29,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The area of this Polygon.","name":"area"}],"name":"area","longname":"Phaser.Polygon#area","kind":"member","memberof":"Phaser.Polygon","scope":"instance","___s":true},{"meta":{"range":[1413,1431],"filename":"Polygon.js","lineno":45,"path":"src\\geom"},"properties":[{"type":{"names":["boolean"]},"description":"Is the Polygon closed or not?","name":"closed"}],"name":"closed","longname":"Phaser.Polygon#closed","kind":"member","memberof":"Phaser.Polygon","scope":"instance","___s":true},{"meta":{"range":[1561,1583],"filename":"Polygon.js","lineno":50,"path":"src\\geom"},"properties":[{"type":{"names":["boolean"]},"description":"Has this Polygon been flattened by a call to `Polygon.flatten` ?","name":"flattened"}],"name":"flattened","longname":"Phaser.Polygon#flattened","kind":"member","memberof":"Phaser.Polygon","scope":"instance","___s":true},{"meta":{"range":[1666,1692],"filename":"Polygon.js","lineno":55,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The base object type.","name":"type"}],"name":"type","longname":"Phaser.Polygon#type","kind":"member","memberof":"Phaser.Polygon","scope":"instance","___s":true},{"meta":{"range":[1739,2060],"filename":"Polygon.js","lineno":61,"path":"src\\geom"},"description":"Export the points as an array of flat numbers, following the sequence [ x,y, x,y, x,y ]","kind":"function","name":"toNumberArray","params":[{"type":{"names":["array"]},"optional":true,"description":"The array to append the points to. If not specified a new array will be created.","name":"output"}],"returns":[{"type":{"names":["array"]},"description":"The flattened array."}],"memberof":"Phaser.Polygon","longname":"Phaser.Polygon#toNumberArray","scope":"instance","___s":true},{"meta":{"range":[2627,2945],"filename":"Polygon.js","lineno":91,"path":"src\\geom"},"description":"Flattens this Polygon so the points are a sequence of numbers.\rAny Point objects found are removed and replaced with two numbers.\rAlso sets the Polygon.flattened property to `true`.","kind":"function","name":"flatten","returns":[{"type":{"names":["Phaser.Polygon"]},"description":"This Polygon object"}],"memberof":"Phaser.Polygon","longname":"Phaser.Polygon#flatten","scope":"instance","___s":true},{"meta":{"range":[3097,3481],"filename":"Polygon.js","lineno":109,"path":"src\\geom"},"description":"Creates a copy of the given Polygon.\rThis is a deep clone, the resulting copy contains new Phaser.Point objects","kind":"function","name":"clone","params":[{"type":{"names":["Phaser.Polygon"]},"optional":true,"defaultvalue":"(new Polygon)","description":"The polygon to update. If not specified a new polygon will be created.","name":"output"}],"returns":[{"type":{"names":["Phaser.Polygon"]},"description":"The cloned (`output`) polygon object."}],"memberof":"Phaser.Polygon","longname":"Phaser.Polygon#clone","scope":"instance","___s":true},{"meta":{"range":[3802,4163],"filename":"Polygon.js","lineno":134,"path":"src\\geom"},"description":"Checks whether the x and y coordinates are contained within this polygon.","kind":"function","name":"contains","params":[{"type":{"names":["number"]},"description":"The X value of the coordinate to test.","name":"x"},{"type":{"names":["number"]},"description":"The Y value of the coordinate to test.","name":"y"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the coordinates are within this polygon, otherwise false."}],"memberof":"Phaser.Polygon","longname":"Phaser.Polygon#contains","scope":"instance","___s":true},{"meta":{"range":[5490,6511],"filename":"Polygon.js","lineno":186,"path":"src\\geom"},"description":"Sets this Polygon to the given points.\r\rThe points can be set from a variety of formats:\r\r- An array of Point objects: `[new Phaser.Point(x1, y1), ...]`\r- An array of objects with public x/y properties: `[obj1, obj2, ...]`\r- An array of paired numbers that represent point coordinates: `[x1,y1, x2,y2, ...]`\r- An array of arrays with two elements representing x/y coordinates: `[[x1, y1], [x2, y2], ...]`\r- As separate Point arguments: `setTo(new Phaser.Point(x1, y1), ...)`\r- As separate objects with public x/y properties arguments: `setTo(obj1, obj2, ...)`\r- As separate arguments representing point coordinates: `setTo(x1,y1, x2,y2, ...)`\r\r`setTo` may also be called without any arguments to remove all points.","kind":"function","name":"setTo","params":[{"type":{"names":["Array.<Phaser.Point>","Array.<number>","Phaser.Point","number"]},"description":"The points to set.","name":"points"}],"returns":[{"type":{"names":["Phaser.Polygon"]},"description":"This Polygon object"}],"memberof":"Phaser.Polygon","longname":"Phaser.Polygon#setTo","scope":"instance","___s":true},{"meta":{"range":[8742,9036],"filename":"Polygon.js","lineno":294,"path":"src\\geom"},"description":"Sets and modifies the points of this polygon.\r\rSee {@link Phaser.Polygon#setTo setTo} for the different kinds of arrays formats that can be assigned.","name":"points","properties":[{"type":{"names":["Array.<Phaser.Point>"]},"description":"The array of vertex points.","name":"points"}],"deprecated":"Use `setTo`.","memberof":"Phaser.Polygon","longname":"Phaser.Polygon#points","scope":"instance","kind":"member","___s":true},{"meta":{"range":[902,1737],"filename":"Rectangle.js","lineno":18,"path":"src\\geom"},"description":"Creates a new Rectangle object with the top-left corner specified by the x and y parameters and with the specified width and height parameters.\rIf you call this function without parameters, a Rectangle with x, y, width, and height properties set to 0 is created.","kind":"class","classdesc":"Phaser.Rectangle","params":[{"type":{"names":["number"]},"description":"The x coordinate of the top-left corner of the Rectangle.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the top-left corner of the Rectangle.","name":"y"},{"type":{"names":["number"]},"description":"The width of the Rectangle. Should always be either zero or a positive value.","name":"width"},{"type":{"names":["number"]},"description":"The height of the Rectangle. Should always be either zero or a positive value.","name":"height"}],"name":"Rectangle","longname":"Phaser.Rectangle","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1154,1164],"filename":"Rectangle.js","lineno":28,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The x coordinate of the top-left corner of the Rectangle.","name":"x"}],"name":"x","longname":"Phaser.Rectangle#x","kind":"member","memberof":"Phaser.Rectangle","scope":"instance","___s":true},{"meta":{"range":[1278,1288],"filename":"Rectangle.js","lineno":33,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The y coordinate of the top-left corner of the Rectangle.","name":"y"}],"name":"y","longname":"Phaser.Rectangle#y","kind":"member","memberof":"Phaser.Rectangle","scope":"instance","___s":true},{"meta":{"range":[1422,1440],"filename":"Rectangle.js","lineno":38,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The width of the Rectangle. This value should never be set to a negative.","name":"width"}],"name":"width","longname":"Phaser.Rectangle#width","kind":"member","memberof":"Phaser.Rectangle","scope":"instance","___s":true},{"meta":{"range":[1576,1596],"filename":"Rectangle.js","lineno":43,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The height of the Rectangle. This value should never be set to a negative.","name":"height"}],"name":"height","longname":"Phaser.Rectangle#height","kind":"member","memberof":"Phaser.Rectangle","scope":"instance","___s":true},{"meta":{"range":[1703,1731],"filename":"Rectangle.js","lineno":49,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"readonly":true,"name":"type","longname":"Phaser.Rectangle#type","kind":"member","memberof":"Phaser.Rectangle","scope":"instance","___s":true},{"meta":{"range":[1780,2176],"filename":"Rectangle.js","lineno":55,"path":"src\\geom"},"description":"Adjusts the location of the Rectangle object, as determined by its top-left corner, by the specified amounts.","kind":"function","name":"offset","params":[{"type":{"names":["number"]},"description":"Moves the x value of the Rectangle object by this amount.","name":"dx"},{"type":{"names":["number"]},"description":"Moves the y value of the Rectangle object by this amount.","name":"dy"}],"returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"This Rectangle object."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#offset","scope":"instance","___s":true},{"meta":{"range":[2299,2701],"filename":"Rectangle.js","lineno":71,"path":"src\\geom"},"description":"Adjusts the location of the Rectangle object using a Point object as a parameter. This method is similar to the Rectangle.offset() method, except that it takes a Point object as a parameter.","kind":"function","name":"offsetPoint","params":[{"type":{"names":["Phaser.Point"]},"description":"A Point object to use to offset this Rectangle object.","name":"point"}],"returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"This Rectangle object."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#offsetPoint","scope":"instance","___s":true},{"meta":{"range":[2805,3362],"filename":"Rectangle.js","lineno":83,"path":"src\\geom"},"description":"Sets the members of Rectangle to the specified values.","kind":"function","name":"setTo","params":[{"type":{"names":["number"]},"description":"The x coordinate of the top-left corner of the Rectangle.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the top-left corner of the Rectangle.","name":"y"},{"type":{"names":["number"]},"description":"The width of the Rectangle. Should always be either zero or a positive value.","name":"width"},{"type":{"names":["number"]},"description":"The height of the Rectangle. Should always be either zero or a positive value.","name":"height"}],"returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"This Rectangle object"}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#setTo","scope":"instance","___s":true},{"meta":{"range":[3553,4059],"filename":"Rectangle.js","lineno":103,"path":"src\\geom"},"description":"Scales the width and height of this Rectangle by the given amounts.","kind":"function","name":"scale","params":[{"type":{"names":["number"]},"description":"The amount to scale the width of the Rectangle by. A value of 0.5 would reduce by half, a value of 2 would double the width, etc.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The amount to scale the height of the Rectangle by. A value of 0.5 would reduce by half, a value of 2 would double the height, etc.","name":"y"}],"returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"This Rectangle object"}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#scale","scope":"instance","___s":true},{"meta":{"range":[4229,4607],"filename":"Rectangle.js","lineno":122,"path":"src\\geom"},"description":"Centers this Rectangle so that the center coordinates match the given x and y values.","kind":"function","name":"centerOn","params":[{"type":{"names":["number"]},"description":"The x coordinate to place the center of the Rectangle at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to place the center of the Rectangle at.","name":"y"}],"returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"This Rectangle object"}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#centerOn","scope":"instance","___s":true},{"meta":{"range":[4738,4858],"filename":"Rectangle.js","lineno":139,"path":"src\\geom"},"description":"Runs Math.floor() on both the x and y values of this Rectangle.","kind":"function","name":"floor","memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#floor","scope":"instance","___s":true},{"meta":{"range":[4980,5113],"filename":"Rectangle.js","lineno":150,"path":"src\\geom"},"description":"Runs Math.floor() on the x, y, width and height values of this Rectangle.","kind":"function","name":"floorAll","memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#floorAll","scope":"instance","___s":true},{"meta":{"range":[5332,5450],"filename":"Rectangle.js","lineno":163,"path":"src\\geom"},"description":"Runs Math.ceil() on both the x and y values of this Rectangle.","kind":"function","name":"ceil","memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#ceil","scope":"instance","___s":true},{"meta":{"range":[5569,5700],"filename":"Rectangle.js","lineno":174,"path":"src\\geom"},"description":"Runs Math.ceil() on the x, y, width and height values of this Rectangle.","kind":"function","name":"ceilAll","memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#ceilAll","scope":"instance","___s":true},{"meta":{"range":[5914,6170],"filename":"Rectangle.js","lineno":187,"path":"src\\geom"},"description":"Copies the x, y, width and height properties from any given object to this Rectangle.","kind":"function","name":"copyFrom","params":[{"type":{"names":["any"]},"description":"The object to copy from.","name":"source"}],"returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"This Rectangle object."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#copyFrom","scope":"instance","___s":true},{"meta":{"range":[6302,6534],"filename":"Rectangle.js","lineno":199,"path":"src\\geom"},"description":"Copies the x, y, width and height properties from this Rectangle to any given object.","kind":"function","name":"copyTo","params":[{"type":{"names":["any"]},"description":"The object to copy to.","name":"source"}],"returns":[{"type":{"names":["object"]},"description":"This object."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#copyTo","scope":"instance","___s":true},{"meta":{"range":[6731,7255],"filename":"Rectangle.js","lineno":216,"path":"src\\geom"},"description":"Increases the size of the Rectangle object by the specified amounts. The center point of the Rectangle object stays the same, and its size increases to the left and right by the dx value, and to the top and the bottom by the dy value.","kind":"function","name":"inflate","params":[{"type":{"names":["number"]},"description":"The amount to be added to the left side of the Rectangle.","name":"dx"},{"type":{"names":["number"]},"description":"The amount to be added to the bottom side of the Rectangle.","name":"dy"}],"returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"This Rectangle object."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#inflate","scope":"instance","___s":true},{"meta":{"range":[7365,7775],"filename":"Rectangle.js","lineno":229,"path":"src\\geom"},"description":"The size of the Rectangle object, expressed as a Point object with the values of the width and height properties.","kind":"function","name":"size","params":[{"type":{"names":["Phaser.Point"]},"optional":true,"description":"Optional Point object. If given the values will be set into the object, otherwise a brand new Point object will be created and returned.","name":"output"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The size of the Rectangle object."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#size","scope":"instance","___s":true},{"meta":{"range":[7879,8325],"filename":"Rectangle.js","lineno":241,"path":"src\\geom"},"description":"Resize the Rectangle by providing a new width and height.\rThe x and y positions remain unchanged.","kind":"function","name":"resize","params":[{"type":{"names":["number"]},"description":"The width of the Rectangle. Should always be either zero or a positive value.","name":"width"},{"type":{"names":["number"]},"description":"The height of the Rectangle. Should always be either zero or a positive value.","name":"height"}],"returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"This Rectangle object"}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#resize","scope":"instance","___s":true},{"meta":{"range":[8469,8877],"filename":"Rectangle.js","lineno":259,"path":"src\\geom"},"description":"Returns a new Rectangle object with the same values for the x, y, width, and height properties as the original Rectangle object.","kind":"function","name":"clone","params":[{"type":{"names":["Phaser.Rectangle"]},"optional":true,"description":"Optional Rectangle object. If given the values will be set into the object, otherwise a brand new Rectangle object will be created and returned.","name":"output"}],"returns":[{"type":{"names":["Phaser.Rectangle"]}}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#clone","scope":"instance","___s":true},{"meta":{"range":[8983,9397],"filename":"Rectangle.js","lineno":271,"path":"src\\geom"},"description":"Determines whether the specified coordinates are contained within the region defined by this Rectangle object.","kind":"function","name":"contains","params":[{"type":{"names":["number"]},"description":"The x coordinate of the point to test.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the point to test.","name":"y"}],"returns":[{"type":{"names":["boolean"]},"description":"A value of true if the Rectangle object contains the specified point; otherwise false."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#contains","scope":"instance","___s":true},{"meta":{"range":[9505,9982],"filename":"Rectangle.js","lineno":284,"path":"src\\geom"},"description":"Determines whether the first Rectangle object is fully contained within the second Rectangle object.\rA Rectangle object is said to contain another if the second Rectangle object falls entirely within the boundaries of the first.","kind":"function","name":"containsRect","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The second Rectangle object.","name":"b"}],"returns":[{"type":{"names":["boolean"]},"description":"A value of true if the Rectangle object contains the specified point; otherwise false."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#containsRect","scope":"instance","___s":true},{"meta":{"range":[10092,10501],"filename":"Rectangle.js","lineno":297,"path":"src\\geom"},"description":"Determines whether the two Rectangles are equal.\rThis method compares the x, y, width and height properties of each Rectangle.","kind":"function","name":"equals","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The second Rectangle object.","name":"b"}],"returns":[{"type":{"names":["boolean"]},"description":"A value of true if the two Rectangles have exactly the same values for the x, y, width and height properties; otherwise false."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#equals","scope":"instance","___s":true},{"meta":{"range":[10599,11445],"filename":"Rectangle.js","lineno":310,"path":"src\\geom"},"description":"If the Rectangle object specified in the toIntersect parameter intersects with this Rectangle object, returns the area of intersection as a Rectangle object. If the Rectangles do not intersect, this method returns an empty Rectangle object with its properties set to 0.","kind":"function","name":"intersection","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The second Rectangle object.","name":"b"},{"type":{"names":["Phaser.Rectangle"]},"description":"Optional Rectangle object. If given the intersection values will be set into this object, otherwise a brand new Rectangle object will be created and returned.","name":"out"}],"returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"A Rectangle object that equals the area of intersection. If the Rectangles do not intersect, this method returns an empty Rectangle object; that is, a Rectangle with its x, y, width, and height properties set to 0."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#intersection","scope":"instance","___s":true},{"meta":{"range":[11565,11998],"filename":"Rectangle.js","lineno":323,"path":"src\\geom"},"description":"Determines whether this Rectangle and another given Rectangle intersect with each other.\rThis method checks the x, y, width, and height properties of the two Rectangles.","kind":"function","name":"intersects","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The second Rectangle object.","name":"b"}],"returns":[{"type":{"names":["boolean"]},"description":"A value of true if the specified object intersects with this Rectangle object; otherwise false."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#intersects","scope":"instance","___s":true},{"meta":{"range":[12104,12749],"filename":"Rectangle.js","lineno":337,"path":"src\\geom"},"description":"Determines whether the coordinates given intersects (overlaps) with this Rectangle.","kind":"function","name":"intersectsRaw","params":[{"type":{"names":["number"]},"description":"The x coordinate of the left of the area.","name":"left"},{"type":{"names":["number"]},"description":"The right coordinate of the area.","name":"right"},{"type":{"names":["number"]},"description":"The y coordinate of the area.","name":"top"},{"type":{"names":["number"]},"description":"The bottom coordinate of the area.","name":"bottom"},{"type":{"names":["number"]},"description":"A tolerance value to allow for an intersection test with padding, default to 0","name":"tolerance"}],"returns":[{"type":{"names":["boolean"]},"description":"A value of true if the specified object intersects with the Rectangle; otherwise false."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#intersectsRaw","scope":"instance","___s":true},{"meta":{"range":[12929,13475],"filename":"Rectangle.js","lineno":354,"path":"src\\geom"},"description":"Adds two Rectangles together to create a new Rectangle object, by filling in the horizontal and vertical space between the two Rectangles.","kind":"function","name":"union","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The second Rectangle object.","name":"b"},{"type":{"names":["Phaser.Rectangle"]},"optional":true,"description":"Optional Rectangle object. If given the new values will be set into this object, otherwise a brand new Rectangle object will be created and returned.","name":"out"}],"returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"A Rectangle object that is the union of the two Rectangles."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#union","scope":"instance","___s":true},{"meta":{"range":[13581,14109],"filename":"Rectangle.js","lineno":367,"path":"src\\geom"},"description":"Returns a uniformly distributed random point from anywhere within this Rectangle.","kind":"function","name":"random","params":[{"type":{"names":["Phaser.Point","object"]},"optional":true,"description":"A Phaser.Point, or any object with public x/y properties, that the values will be set in.\r    If no object is provided a new Phaser.Point object will be created. In high performance areas avoid this by re-using an existing object.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"An object containing the random point in its `x` and `y` properties."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#random","scope":"instance","___s":true},{"meta":{"range":[14308,15292],"filename":"Rectangle.js","lineno":386,"path":"src\\geom"},"description":"Returns a point based on the given position constant, which can be one of:\r\r`Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`,\r`Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` \rand `Phaser.BOTTOM_RIGHT`.\r\rThis method returns the same values as calling Rectangle.bottomLeft, etc, but those\rcalls always create a new Point object, where-as this one allows you to use your own.","kind":"function","name":"getPoint","params":[{"type":{"names":["integer"]},"optional":true,"description":"One of the Phaser position constants, such as `Phaser.TOP_RIGHT`.","name":"position"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"A Phaser.Point that the values will be set in.\r    If no object is provided a new Phaser.Point object will be created. In high performance areas avoid this by re-using an existing object.","name":"out"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"An object containing the point in its `x` and `y` properties."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#getPoint","scope":"instance","___s":true},{"meta":{"range":[16344,16516],"filename":"Rectangle.js","lineno":439,"path":"src\\geom"},"description":"Returns a string representation of this object.","kind":"function","name":"toString","returns":[{"type":{"names":["string"]},"description":"A string representation of the instance."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#toString","scope":"instance","___s":true},{"meta":{"range":[16712,16838],"filename":"Rectangle.js","lineno":452,"path":"src\\geom"},"name":"halfWidth","properties":[{"type":{"names":["number"]},"description":"Half of the width of the Rectangle.","name":"halfWidth"}],"readonly":true,"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#halfWidth","scope":"instance","kind":"member","___s":true},{"meta":{"range":[16992,17121],"filename":"Rectangle.js","lineno":465,"path":"src\\geom"},"name":"halfHeight","properties":[{"type":{"names":["number"]},"description":"Half of the height of the Rectangle.","name":"halfHeight"}],"readonly":true,"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#halfHeight","scope":"instance","kind":"member","___s":true},{"meta":{"range":[17277,17567],"filename":"Rectangle.js","lineno":478,"path":"src\\geom"},"description":"The sum of the y and height properties. Changing the bottom property of a Rectangle object has no effect on the x, y and width properties, but does change the height property.","name":"bottom","properties":[{"type":{"names":["number"]},"description":"The sum of the y and height properties.","name":"bottom"}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#bottom","scope":"instance","kind":"member","___s":true},{"meta":{"range":[17916,18155],"filename":"Rectangle.js","lineno":504,"path":"src\\geom"},"description":"The location of the Rectangles bottom left corner as a Point object.","name":"bottomLeft","properties":[{"type":{"names":["Phaser.Point"]},"description":"Gets or sets the location of the Rectangles bottom left corner as a Point object.","name":"bottomLeft"}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#bottomLeft","scope":"instance","kind":"member","___s":true},{"meta":{"range":[18419,18662],"filename":"Rectangle.js","lineno":522,"path":"src\\geom"},"description":"The location of the Rectangles bottom right corner as a Point object.","name":"bottomRight","properties":[{"type":{"names":["Phaser.Point"]},"description":"Gets or sets the location of the Rectangles bottom right corner as a Point object.","name":"bottomRight"}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#bottomRight","scope":"instance","kind":"member","___s":true},{"meta":{"range":[18935,19302],"filename":"Rectangle.js","lineno":540,"path":"src\\geom"},"description":"The x coordinate of the left of the Rectangle. Changing the left property of a Rectangle object has no effect on the y and height properties. However it does affect the width property, whereas changing the x value does not affect the width property.","name":"left","properties":[{"type":{"names":["number"]},"description":"The x coordinate of the left of the Rectangle.","name":"left"}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#left","scope":"instance","kind":"member","___s":true},{"meta":{"range":[19635,19927],"filename":"Rectangle.js","lineno":562,"path":"src\\geom"},"description":"The sum of the x and width properties. Changing the right property of a Rectangle object has no effect on the x, y and height properties, however it does affect the width property.","name":"right","properties":[{"type":{"names":["number"]},"description":"The sum of the x and width properties.","name":"right"}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#right","scope":"instance","kind":"member","___s":true},{"meta":{"range":[20241,20442],"filename":"Rectangle.js","lineno":583,"path":"src\\geom"},"description":"The volume of the Rectangle derived from width * height.","name":"volume","properties":[{"type":{"names":["number"]},"description":"The volume of the Rectangle derived from width * height.","name":"volume"}],"readonly":true,"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#volume","scope":"instance","kind":"member","___s":true},{"meta":{"range":[20591,20822],"filename":"Rectangle.js","lineno":597,"path":"src\\geom"},"description":"The perimeter size of the Rectangle. This is the sum of all 4 sides.","name":"perimeter","properties":[{"type":{"names":["number"]},"description":"The perimeter size of the Rectangle. This is the sum of all 4 sides.","name":"perimeter"}],"readonly":true,"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#perimeter","scope":"instance","kind":"member","___s":true},{"meta":{"range":[20986,21160],"filename":"Rectangle.js","lineno":611,"path":"src\\geom"},"description":"The x coordinate of the center of the Rectangle.","name":"centerX","properties":[{"type":{"names":["number"]},"description":"The x coordinate of the center of the Rectangle.","name":"centerX"}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#centerX","scope":"instance","kind":"member","___s":true},{"meta":{"range":[21390,21564],"filename":"Rectangle.js","lineno":628,"path":"src\\geom"},"description":"The y coordinate of the center of the Rectangle.","name":"centerY","properties":[{"type":{"names":["number"]},"description":"The y coordinate of the center of the Rectangle.","name":"centerY"}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#centerY","scope":"instance","kind":"member","___s":true},{"meta":{"range":[21796,22033],"filename":"Rectangle.js","lineno":645,"path":"src\\geom"},"description":"A random value between the left and right values (inclusive) of the Rectangle.","name":"randomX","properties":[{"type":{"names":["number"]},"description":"A random value between the left and right values (inclusive) of the Rectangle.","name":"randomX"}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#randomX","scope":"instance","kind":"member","___s":true},{"meta":{"range":[22200,22437],"filename":"Rectangle.js","lineno":661,"path":"src\\geom"},"description":"A random value between the top and bottom values (inclusive) of the Rectangle.","name":"randomY","properties":[{"type":{"names":["number"]},"description":"A random value between the top and bottom values (inclusive) of the Rectangle.","name":"randomY"}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#randomY","scope":"instance","kind":"member","___s":true},{"meta":{"range":[22605,22971],"filename":"Rectangle.js","lineno":677,"path":"src\\geom"},"description":"The y coordinate of the top of the Rectangle. Changing the top property of a Rectangle object has no effect on the x and width properties.\rHowever it does affect the height property, whereas changing the y value does not affect the height property.","name":"top","properties":[{"type":{"names":["number"]},"description":"The y coordinate of the top of the Rectangle.","name":"top"}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#top","scope":"instance","kind":"member","___s":true},{"meta":{"range":[23313,23527],"filename":"Rectangle.js","lineno":700,"path":"src\\geom"},"description":"The location of the Rectangles top left corner as a Point object.","name":"topLeft","properties":[{"type":{"names":["Phaser.Point"]},"description":"The location of the Rectangles top left corner as a Point object.","name":"topLeft"}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#topLeft","scope":"instance","kind":"member","___s":true},{"meta":{"range":[23778,23995],"filename":"Rectangle.js","lineno":718,"path":"src\\geom"},"description":"The location of the Rectangles top right corner as a Point object.","name":"topRight","properties":[{"type":{"names":["Phaser.Point"]},"description":"The location of the Rectangles top left corner as a Point object.","name":"topRight"}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#topRight","scope":"instance","kind":"member","___s":true},{"meta":{"range":[24264,24584],"filename":"Rectangle.js","lineno":736,"path":"src\\geom"},"description":"Determines whether or not this Rectangle object is empty. A Rectangle object is empty if its width or height is less than or equal to 0.\rIf set to true then all of the Rectangle properties are set to 0.","name":"empty","properties":[{"type":{"names":["boolean"]},"description":"Gets or sets the Rectangles empty state.","name":"empty"}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#empty","scope":"instance","kind":"member","___s":true},{"meta":{"range":[24930,25485],"filename":"Rectangle.js","lineno":761,"path":"src\\geom"},"description":"Increases the size of the Rectangle object by the specified amounts. The center point of the Rectangle object stays the same, and its size increases to the left and right by the dx value, and to the top and the bottom by the dy value.","kind":"function","name":"inflate","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle object.","name":"a"},{"type":{"names":["number"]},"description":"The amount to be added to the left side of the Rectangle.","name":"dx"},{"type":{"names":["number"]},"description":"The amount to be added to the bottom side of the Rectangle.","name":"dy"}],"returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"This Rectangle object."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle.inflate","scope":"static","___s":true},{"meta":{"range":[25646,26174],"filename":"Rectangle.js","lineno":780,"path":"src\\geom"},"description":"Increases the size of the Rectangle object. This method is similar to the Rectangle.inflate() method except it takes a Point object as a parameter.","kind":"function","name":"inflatePoint","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle object.","name":"a"},{"type":{"names":["Phaser.Point"]},"description":"The x property of this Point object is used to increase the horizontal dimension of the Rectangle object. The y property is used to increase the vertical dimension of the Rectangle object.","name":"point"}],"returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle object."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle.inflatePoint","scope":"static","___s":true},{"meta":{"range":[26300,26744],"filename":"Rectangle.js","lineno":793,"path":"src\\geom"},"description":"The size of the Rectangle object, expressed as a Point object with the values of the width and height properties.","kind":"function","name":"size","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle object.","name":"a"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"Optional Point object. If given the values will be set into the object, otherwise a brand new Point object will be created and returned.","name":"output"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"The size of the Rectangle object"}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle.size","scope":"static","___s":true},{"meta":{"range":[27011,27454],"filename":"Rectangle.js","lineno":815,"path":"src\\geom"},"description":"Returns a new Rectangle object with the same values for the x, y, width, and height properties as the original Rectangle object.","kind":"function","name":"clone","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle object.","name":"a"},{"type":{"names":["Phaser.Rectangle"]},"optional":true,"description":"Optional Rectangle object. If given the values will be set into the object, otherwise a brand new Rectangle object will be created and returned.","name":"output"}],"returns":[{"type":{"names":["Phaser.Rectangle"]}}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle.clone","scope":"static","___s":true},{"meta":{"range":[27746,28191],"filename":"Rectangle.js","lineno":837,"path":"src\\geom"},"description":"Determines whether the specified coordinates are contained within the region defined by this Rectangle object.","kind":"function","name":"contains","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle object.","name":"a"},{"type":{"names":["number"]},"description":"The x coordinate of the point to test.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the point to test.","name":"y"}],"returns":[{"type":{"names":["boolean"]},"description":"A value of true if the Rectangle object contains the specified point; otherwise false."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle.contains","scope":"static","___s":true},{"meta":{"range":[28399,29026],"filename":"Rectangle.js","lineno":856,"path":"src\\geom"},"description":"Determines whether the specified coordinates are contained within the region defined by the given raw values.","kind":"function","name":"containsRaw","params":[{"type":{"names":["number"]},"description":"The x coordinate of the top left of the area.","name":"rx"},{"type":{"names":["number"]},"description":"The y coordinate of the top left of the area.","name":"ry"},{"type":{"names":["number"]},"description":"The width of the area.","name":"rw"},{"type":{"names":["number"]},"description":"The height of the area.","name":"rh"},{"type":{"names":["number"]},"description":"The x coordinate of the point to test.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the point to test.","name":"y"}],"returns":[{"type":{"names":["boolean"]},"description":"A value of true if the Rectangle object contains the specified point; otherwise false."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle.containsRaw","scope":"static","___s":true},{"meta":{"range":[29172,29729],"filename":"Rectangle.js","lineno":873,"path":"src\\geom"},"description":"Determines whether the specified point is contained within the rectangular region defined by this Rectangle object. This method is similar to the Rectangle.contains() method, except that it takes a Point object as a parameter.","kind":"function","name":"containsPoint","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle object.","name":"a"},{"type":{"names":["Phaser.Point"]},"description":"The point object being checked. Can be Point or any object with .x and .y values.","name":"point"}],"returns":[{"type":{"names":["boolean"]},"description":"A value of true if the Rectangle object contains the specified point; otherwise false."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle.containsPoint","scope":"static","___s":true},{"meta":{"range":[29857,30371],"filename":"Rectangle.js","lineno":886,"path":"src\\geom"},"description":"Determines whether the first Rectangle object is fully contained within the second Rectangle object.\rA Rectangle object is said to contain another if the second Rectangle object falls entirely within the boundaries of the first.","kind":"function","name":"containsRect","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The first Rectangle object.","name":"a"},{"type":{"names":["Phaser.Rectangle"]},"description":"The second Rectangle object.","name":"b"}],"returns":[{"type":{"names":["boolean"]},"description":"A value of true if the Rectangle object contains the specified point; otherwise false."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle.containsRect","scope":"static","___s":true},{"meta":{"range":[30677,31123],"filename":"Rectangle.js","lineno":906,"path":"src\\geom"},"description":"Determines whether the two Rectangles are equal.\rThis method compares the x, y, width and height properties of each Rectangle.","kind":"function","name":"equals","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The first Rectangle object.","name":"a"},{"type":{"names":["Phaser.Rectangle"]},"description":"The second Rectangle object.","name":"b"}],"returns":[{"type":{"names":["boolean"]},"description":"A value of true if the two Rectangles have exactly the same values for the x, y, width and height properties; otherwise false."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle.equals","scope":"static","___s":true},{"meta":{"range":[31270,31671],"filename":"Rectangle.js","lineno":920,"path":"src\\geom"},"description":"Determines if the two objects (either Rectangles or Rectangle-like) have the same width and height values under strict equality.","kind":"function","name":"sameDimensions","params":[{"type":{"names":["Rectangle-like"]},"description":"The first Rectangle object.","name":"a"},{"type":{"names":["Rectangle-like"]},"description":"The second Rectangle object.","name":"b"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the object have equivalent values for the width and height properties."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle.sameDimensions","scope":"static","___s":true},{"meta":{"range":[31796,32684],"filename":"Rectangle.js","lineno":933,"path":"src\\geom"},"description":"If the Rectangle object specified in the toIntersect parameter intersects with this Rectangle object, returns the area of intersection as a Rectangle object. If the Rectangles do not intersect, this method returns an empty Rectangle object with its properties set to 0.","kind":"function","name":"intersection","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The first Rectangle object.","name":"a"},{"type":{"names":["Phaser.Rectangle"]},"description":"The second Rectangle object.","name":"b"},{"type":{"names":["Phaser.Rectangle"]},"optional":true,"description":"Optional Rectangle object. If given the intersection values will be set into this object, otherwise a brand new Rectangle object will be created and returned.","name":"output"}],"returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"A Rectangle object that equals the area of intersection. If the Rectangles do not intersect, this method returns an empty Rectangle object; that is, a Rectangle with its x, y, width, and height properties set to 0."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle.intersection","scope":"static","___s":true},{"meta":{"range":[33133,33567],"filename":"Rectangle.js","lineno":960,"path":"src\\geom"},"description":"Determines whether the two Rectangles intersect with each other.\rThis method checks the x, y, width, and height properties of the Rectangles.","kind":"function","name":"intersects","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The first Rectangle object.","name":"a"},{"type":{"names":["Phaser.Rectangle"]},"description":"The second Rectangle object.","name":"b"}],"returns":[{"type":{"names":["boolean"]},"description":"A value of true if the specified object intersects with this Rectangle object; otherwise false."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle.intersects","scope":"static","___s":true},{"meta":{"range":[33823,34426],"filename":"Rectangle.js","lineno":979,"path":"src\\geom"},"description":"Determines whether the object specified intersects (overlaps) with the given values.","kind":"function","name":"intersectsRaw","params":[{"type":{"names":["number"]},"description":"The x coordinate of the left of the area.","name":"left"},{"type":{"names":["number"]},"description":"The right coordinate of the area.","name":"right"},{"type":{"names":["number"]},"description":"The y coordinate of the area.","name":"top"},{"type":{"names":["number"]},"description":"The bottom coordinate of the area.","name":"bottom"},{"type":{"names":["number"]},"description":"A tolerance value to allow for an intersection test with padding, default to 0","name":"tolerance"}],"returns":[{"type":{"names":["boolean"]},"description":"A value of true if the specified object intersects with the Rectangle; otherwise false."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle.intersectsRaw","scope":"static","___s":true},{"meta":{"range":[34712,35298],"filename":"Rectangle.js","lineno":997,"path":"src\\geom"},"description":"Adds two Rectangles together to create a new Rectangle object, by filling in the horizontal and vertical space between the two Rectangles.","kind":"function","name":"union","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The first Rectangle object.","name":"a"},{"type":{"names":["Phaser.Rectangle"]},"description":"The second Rectangle object.","name":"b"},{"type":{"names":["Phaser.Rectangle"]},"optional":true,"description":"Optional Rectangle object. If given the new values will be set into this object, otherwise a brand new Rectangle object will be created and returned.","name":"output"}],"returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"A Rectangle object that is the union of the two Rectangles."}],"memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle.union","scope":"static","___s":true},{"meta":{"range":[35627,36020],"filename":"Rectangle.js","lineno":1016,"path":"src\\geom"},"description":"Calculates the Axis Aligned Bounding Box (or aabb) from an array of points.","kind":"function","name":"aabb","params":[{"type":{"names":["Array.<Phaser.Point>"]},"description":"The array of one or more points.","name":"points"},{"type":{"names":["Phaser.Rectangle"]},"optional":true,"description":"Optional Rectangle to store the value in, if not supplied a new Rectangle object will be created.","name":"out"}],"returns":[{"type":{"names":["Phaser.Rectangle"]},"description":"The new Rectangle object."}],"scope":"instance","memberof":"Phaser.Rectangle","longname":"Phaser.Rectangle#aabb","___s":true},{"meta":{"range":[966,2069],"filename":"RoundedRectangle.js","lineno":20,"path":"src\\geom"},"description":"The Rounded Rectangle object is an area defined by its position and has nice rounded corners, \ras indicated by its top-left corner point (x, y) and by its width and its height.","kind":"class","classdesc":"Phaser.RoundedRectangle","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of the top-left corner of the Rectangle.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of the top-left corner of the Rectangle.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The width of the Rectangle. Should always be either zero or a positive value.","name":"width"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The height of the Rectangle. Should always be either zero or a positive value.","name":"height"},{"type":{"names":["number"]},"optional":true,"defaultvalue":20,"description":"Controls the radius of the rounded corners.","name":"radius"}],"name":"RoundedRectangle","longname":"Phaser.RoundedRectangle","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1359,1369],"filename":"RoundedRectangle.js","lineno":31,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The x coordinate of the top-left corner of the Rectangle.","name":"x"}],"name":"x","longname":"Phaser.RoundedRectangle#x","kind":"member","memberof":"Phaser.RoundedRectangle","scope":"instance","___s":true},{"meta":{"range":[1483,1493],"filename":"RoundedRectangle.js","lineno":36,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The y coordinate of the top-left corner of the Rectangle.","name":"y"}],"name":"y","longname":"Phaser.RoundedRectangle#y","kind":"member","memberof":"Phaser.RoundedRectangle","scope":"instance","___s":true},{"meta":{"range":[1627,1645],"filename":"RoundedRectangle.js","lineno":41,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The width of the Rectangle. This value should never be set to a negative.","name":"width"}],"name":"width","longname":"Phaser.RoundedRectangle#width","kind":"member","memberof":"Phaser.RoundedRectangle","scope":"instance","___s":true},{"meta":{"range":[1781,1801],"filename":"RoundedRectangle.js","lineno":46,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The height of the Rectangle. This value should never be set to a negative.","name":"height"}],"name":"height","longname":"Phaser.RoundedRectangle#height","kind":"member","memberof":"Phaser.RoundedRectangle","scope":"instance","___s":true},{"meta":{"range":[1897,1923],"filename":"RoundedRectangle.js","lineno":51,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The radius of the rounded corners.","name":"radius"}],"name":"radius","longname":"Phaser.RoundedRectangle#radius","kind":"member","memberof":"Phaser.RoundedRectangle","scope":"instance","___s":true},{"meta":{"range":[2030,2065],"filename":"RoundedRectangle.js","lineno":57,"path":"src\\geom"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"readonly":true,"name":"type","longname":"Phaser.RoundedRectangle#type","kind":"member","memberof":"Phaser.RoundedRectangle","scope":"instance","___s":true},{"meta":{"range":[2119,2380],"filename":"RoundedRectangle.js","lineno":62,"path":"src\\geom"},"description":"Returns a new RoundedRectangle object with the same values for the x, y, width, height and\rradius properties as this RoundedRectangle object.","kind":"function","name":"clone","returns":[{"type":{"names":["Phaser.RoundedRectangle"]}}],"memberof":"Phaser.RoundedRectangle","longname":"Phaser.RoundedRectangle#clone","scope":"instance","___s":true},{"meta":{"range":[2525,2979],"filename":"RoundedRectangle.js","lineno":75,"path":"src\\geom"},"description":"Determines whether the specified coordinates are contained within the region defined by this Rounded Rectangle object.","kind":"function","name":"contains","params":[{"type":{"names":["number"]},"description":"The x coordinate of the point to test.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the point to test.","name":"y"}],"returns":[{"type":{"names":["boolean"]},"description":"A value of true if the RoundedRectangle Rectangle object contains the specified point; otherwise false."}],"memberof":"Phaser.RoundedRectangle","longname":"Phaser.RoundedRectangle#contains","scope":"instance","___s":true},{"meta":{"range":[1503,4856],"filename":"DeviceButton.js","lineno":31,"path":"src\\input"},"description":"DeviceButtons belong to both `Phaser.Pointer` and `Phaser.SinglePad` (Gamepad) instances.\r\rFor Pointers they represent the various buttons that can exist on mice and pens, such as the left button, right button,\rmiddle button and advanced buttons like back and forward.\r\rAccess them via `Pointer.leftbutton`, `Pointer.rightButton` and so on.\r\rOn Gamepads they represent all buttons on the pad: from shoulder buttons to action buttons.\r\rAt the time of writing this there are device limitations you should be aware of:\r\r- On Windows, if you install a mouse driver, and its utility software allows you to customize button actions \r  (e.g., IntelliPoint and SetPoint), the middle (wheel) button, the 4th button, and the 5th button might not be set, \r  even when they are pressed.\r- On Linux (GTK), the 4th button and the 5th button are not supported.\r- On Mac OS X 10.5 there is no platform API for implementing any advanced buttons.","kind":"class","classdesc":"Phaser.DeviceButton","params":[{"type":{"names":["Phaser.Pointer","Phaser.SinglePad"]},"description":"A reference to the parent of this button. Either a Pointer or a Gamepad.","name":"parent"},{"type":{"names":["number"]},"description":"The button code this DeviceButton is responsible for.","name":"buttonCode"}],"name":"DeviceButton","longname":"Phaser.DeviceButton","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1702,1722],"filename":"DeviceButton.js","lineno":36,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Pointer","Phaser.SinglePad"]},"description":"A reference to the Pointer or Gamepad that owns this button.","name":"parent"}],"name":"parent","longname":"Phaser.DeviceButton#parent","kind":"member","memberof":"Phaser.DeviceButton","scope":"instance","___s":true},{"meta":{"range":[1829,1852],"filename":"DeviceButton.js","lineno":41,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"game","longname":"Phaser.DeviceButton#game","kind":"member","memberof":"Phaser.DeviceButton","scope":"instance","___s":true},{"meta":{"range":[1982,1999],"filename":"DeviceButton.js","lineno":47,"path":"src\\input"},"properties":[{"type":{"names":["object"]},"description":"The DOM event that caused the change in button state.","name":"event"}],"defaultvalue":null,"name":"event","longname":"Phaser.DeviceButton#event","kind":"member","memberof":"Phaser.DeviceButton","scope":"instance","___s":true},{"meta":{"range":[2109,2128],"filename":"DeviceButton.js","lineno":53,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"The \"down\" state of the button.","name":"isDown"}],"defaultvalue":false,"name":"isDown","longname":"Phaser.DeviceButton#isDown","kind":"member","memberof":"Phaser.DeviceButton","scope":"instance","___s":true},{"meta":{"range":[2234,2250],"filename":"DeviceButton.js","lineno":59,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"The \"up\" state of the button.","name":"isUp"}],"defaultvalue":true,"name":"isUp","longname":"Phaser.DeviceButton#isUp","kind":"member","memberof":"Phaser.DeviceButton","scope":"instance","___s":true},{"meta":{"range":[2382,2399],"filename":"DeviceButton.js","lineno":65,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The timestamp when the button was last pressed down.","name":"timeDown"}],"defaultvalue":0,"name":"timeDown","longname":"Phaser.DeviceButton#timeDown","kind":"member","memberof":"Phaser.DeviceButton","scope":"instance","___s":true},{"meta":{"range":[2525,2540],"filename":"DeviceButton.js","lineno":71,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The timestamp when the button was last released.","name":"timeUp"}],"defaultvalue":0,"name":"timeUp","longname":"Phaser.DeviceButton#timeUp","kind":"member","memberof":"Phaser.DeviceButton","scope":"instance","___s":true},{"meta":{"range":[2732,2748],"filename":"DeviceButton.js","lineno":79,"path":"src\\input"},"description":"Gamepad only.\rIf a button is held down this holds down the number of times the button has 'repeated'.","properties":[{"type":{"names":["number"]},"name":"repeats"}],"defaultvalue":0,"name":"repeats","longname":"Phaser.DeviceButton#repeats","kind":"member","memberof":"Phaser.DeviceButton","scope":"instance","___s":true},{"meta":{"range":[2946,2965],"filename":"DeviceButton.js","lineno":87,"path":"src\\input"},"description":"True if the alt key was held down when this button was last pressed or released.\rNot supported on Gamepads.","properties":[{"type":{"names":["boolean"]},"name":"altKey"}],"defaultvalue":false,"name":"altKey","longname":"Phaser.DeviceButton#altKey","kind":"member","memberof":"Phaser.DeviceButton","scope":"instance","___s":true},{"meta":{"range":[3167,3188],"filename":"DeviceButton.js","lineno":95,"path":"src\\input"},"description":"True if the shift key was held down when this button was last pressed or released.\rNot supported on Gamepads.","properties":[{"type":{"names":["boolean"]},"name":"shiftKey"}],"defaultvalue":false,"name":"shiftKey","longname":"Phaser.DeviceButton#shiftKey","kind":"member","memberof":"Phaser.DeviceButton","scope":"instance","___s":true},{"meta":{"range":[3391,3411],"filename":"DeviceButton.js","lineno":103,"path":"src\\input"},"description":"True if the control key was held down when this button was last pressed or released.\rNot supported on Gamepads.","properties":[{"type":{"names":["boolean"]},"name":"ctrlKey"}],"defaultvalue":false,"name":"ctrlKey","longname":"Phaser.DeviceButton#ctrlKey","kind":"member","memberof":"Phaser.DeviceButton","scope":"instance","___s":true},{"meta":{"range":[3581,3595],"filename":"DeviceButton.js","lineno":109,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"Button value. Mainly useful for checking analog buttons (like shoulder triggers) on Gamepads.","name":"value"}],"defaultvalue":0,"name":"value","longname":"Phaser.DeviceButton#value","kind":"member","memberof":"Phaser.DeviceButton","scope":"instance","___s":true},{"meta":{"range":[3748,3776],"filename":"DeviceButton.js","lineno":114,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The buttoncode of this button if a Gamepad, or the DOM button event value if a Pointer.","name":"buttonCode"}],"name":"buttonCode","longname":"Phaser.DeviceButton#buttonCode","kind":"member","memberof":"Phaser.DeviceButton","scope":"instance","___s":true},{"meta":{"range":[4100,4133],"filename":"DeviceButton.js","lineno":122,"path":"src\\input"},"description":"This Signal is dispatched every time this DeviceButton is pressed down.\rIt is only dispatched once (until the button is released again).\rWhen dispatched it sends 2 arguments: A reference to this DeviceButton and the value of the button.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onDown"}],"name":"onDown","longname":"Phaser.DeviceButton#onDown","kind":"member","memberof":"Phaser.DeviceButton","scope":"instance","___s":true},{"meta":{"range":[4468,4499],"filename":"DeviceButton.js","lineno":130,"path":"src\\input"},"description":"This Signal is dispatched every time this DeviceButton is released from a down state.\rIt is only dispatched once (until the button is pressed again).\rWhen dispatched it sends 2 arguments: A reference to this DeviceButton and the value of the button.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onUp"}],"name":"onUp","longname":"Phaser.DeviceButton#onUp","kind":"member","memberof":"Phaser.DeviceButton","scope":"instance","___s":true},{"meta":{"range":[4816,4850],"filename":"DeviceButton.js","lineno":138,"path":"src\\input"},"description":"Gamepad only.\rThis Signal is dispatched every time this DeviceButton changes floating value (between, but not exactly, 0 and 1).\rWhen dispatched it sends 2 arguments: A reference to this DeviceButton and the value of the button.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onFloat"}],"name":"onFloat","longname":"Phaser.DeviceButton#onFloat","kind":"member","memberof":"Phaser.DeviceButton","scope":"instance","___s":true},{"meta":{"range":[4902,5241],"filename":"DeviceButton.js","lineno":144,"path":"src\\input"},"description":"Called automatically by Phaser.Pointer and Phaser.SinglePad.\rHandles the button down state.","kind":"function","name":"start","access":"protected","params":[{"type":{"names":["object"]},"optional":true,"description":"The DOM event that triggered the button change.","name":"event"},{"type":{"names":["number"]},"optional":true,"description":"The button value. Only get for Gamepads.","name":"value"}],"memberof":"Phaser.DeviceButton","longname":"Phaser.DeviceButton#start","scope":"instance","___s":true},{"meta":{"range":[5779,6115],"filename":"DeviceButton.js","lineno":179,"path":"src\\input"},"description":"Called automatically by Phaser.Pointer and Phaser.SinglePad.\rHandles the button up state.","kind":"function","name":"stop","access":"protected","params":[{"type":{"names":["object"]},"optional":true,"description":"The DOM event that triggered the button change.","name":"event"},{"type":{"names":["number"]},"optional":true,"description":"The button value. Only get for Gamepads.","name":"value"}],"memberof":"Phaser.DeviceButton","longname":"Phaser.DeviceButton#stop","scope":"instance","___s":true},{"meta":{"range":[6619,6793],"filename":"DeviceButton.js","lineno":213,"path":"src\\input"},"description":"Called automatically by Phaser.SinglePad.","kind":"function","name":"padFloat","access":"protected","params":[{"type":{"names":["number"]},"description":"Button value","name":"value"}],"memberof":"Phaser.DeviceButton","longname":"Phaser.DeviceButton#padFloat","scope":"instance","___s":true},{"meta":{"range":[6923,7354],"filename":"DeviceButton.js","lineno":228,"path":"src\\input"},"description":"Returns the \"just pressed\" state of this button.\rJust pressed is considered true if the button was pressed down within the duration given (default 250ms).","kind":"function","name":"justPressed","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":250,"description":"The duration in ms below which the button is considered as being just pressed.","name":"duration"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the button is just pressed otherwise false."}],"memberof":"Phaser.DeviceButton","longname":"Phaser.DeviceButton#justPressed","scope":"instance","___s":true},{"meta":{"range":[7536,7977],"filename":"DeviceButton.js","lineno":244,"path":"src\\input"},"description":"Returns the \"just released\" state of this button.\rJust released is considered as being true if the button was released within the duration given (default 250ms).","kind":"function","name":"justReleased","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":250,"description":"The duration in ms below which the button is considered as being just released.","name":"duration"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the button is just released otherwise false."}],"memberof":"Phaser.DeviceButton","longname":"Phaser.DeviceButton#justReleased","scope":"instance","___s":true},{"meta":{"range":[8156,8327],"filename":"DeviceButton.js","lineno":260,"path":"src\\input"},"description":"Resets this DeviceButton, changing it to an isUp state and resetting the duration and repeats counters.","kind":"function","name":"reset","memberof":"Phaser.DeviceButton","longname":"Phaser.DeviceButton#reset","scope":"instance","___s":true},{"meta":{"range":[8600,8802],"filename":"DeviceButton.js","lineno":279,"path":"src\\input"},"description":"Destroys this DeviceButton, this disposes of the onDown, onUp and onFloat signals \rand clears the parent and game references.","kind":"function","name":"destroy","memberof":"Phaser.DeviceButton","longname":"Phaser.DeviceButton#destroy","scope":"instance","___s":true},{"meta":{"range":[9072,9268],"filename":"DeviceButton.js","lineno":300,"path":"src\\input"},"description":"How long the button has been held down for in milliseconds.\rIf not currently down it returns -1.","name":"duration","properties":[{"type":{"names":["number"]},"name":"duration"}],"readonly":true,"memberof":"Phaser.DeviceButton","longname":"Phaser.DeviceButton#duration","scope":"instance","kind":"member","___s":true},{"meta":{"range":[805,4357],"filename":"Gamepad.js","lineno":21,"path":"src\\input"},"description":"The Gamepad class handles gamepad input and dispatches gamepad events.\r\rRemember to call `gamepad.start()`.\r\rHTML5 GAMEPAD API SUPPORT IS AT AN EXPERIMENTAL STAGE!\rAt moment of writing this (end of 2013) only Chrome supports parts of it out of the box. Firefox supports it\rvia prefs flags (about:config, search gamepad). The browsers map the same controllers differently.\rThis class has constants for Windows 7 Chrome mapping of XBOX 360 controller.","kind":"class","classdesc":"Phaser.Gamepad","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"Gamepad","longname":"Phaser.Gamepad","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[927,943],"filename":"Gamepad.js","lineno":26,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.Gamepad#game","kind":"member","memberof":"Phaser.Gamepad","scope":"instance","___s":true},{"meta":{"range":[1554,1573],"filename":"Gamepad.js","lineno":52,"path":"src\\input"},"description":"Gamepad input will only be processed if enabled.","properties":[{"type":{"names":["boolean"]},"name":"enabled"}],"defaultvalue":true,"name":"enabled","longname":"Phaser.Gamepad#enabled","kind":"member","memberof":"Phaser.Gamepad","scope":"instance","___s":true},{"meta":{"range":[2607,2634],"filename":"Gamepad.js","lineno":80,"path":"src\\input"},"properties":[{"type":{"names":["object"]},"description":"The context under which the callbacks are run.","name":"callbackContext"}],"name":"callbackContext","longname":"Phaser.Gamepad#callbackContext","kind":"member","memberof":"Phaser.Gamepad","scope":"instance","___s":true},{"meta":{"range":[2769,2798],"filename":"Gamepad.js","lineno":85,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"This callback is invoked every time any gamepad is connected","name":"onConnectCallback"}],"name":"onConnectCallback","longname":"Phaser.Gamepad#onConnectCallback","kind":"member","memberof":"Phaser.Gamepad","scope":"instance","___s":true},{"meta":{"range":[2939,2971],"filename":"Gamepad.js","lineno":90,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"This callback is invoked every time any gamepad is disconnected","name":"onDisconnectCallback"}],"name":"onDisconnectCallback","longname":"Phaser.Gamepad#onDisconnectCallback","kind":"member","memberof":"Phaser.Gamepad","scope":"instance","___s":true},{"meta":{"range":[3114,3140],"filename":"Gamepad.js","lineno":95,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"This callback is invoked every time any gamepad button is pressed down.","name":"onDownCallback"}],"name":"onDownCallback","longname":"Phaser.Gamepad#onDownCallback","kind":"member","memberof":"Phaser.Gamepad","scope":"instance","___s":true},{"meta":{"range":[3277,3301],"filename":"Gamepad.js","lineno":100,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"This callback is invoked every time any gamepad button is released.","name":"onUpCallback"}],"name":"onUpCallback","longname":"Phaser.Gamepad#onUpCallback","kind":"member","memberof":"Phaser.Gamepad","scope":"instance","___s":true},{"meta":{"range":[3437,3463],"filename":"Gamepad.js","lineno":105,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"This callback is invoked every time any gamepad axis is changed.","name":"onAxisCallback"}],"name":"onAxisCallback","longname":"Phaser.Gamepad#onAxisCallback","kind":"member","memberof":"Phaser.Gamepad","scope":"instance","___s":true},{"meta":{"range":[3643,3670],"filename":"Gamepad.js","lineno":110,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"This callback is invoked every time any gamepad button is changed to a value where value > 0 and value < 1.","name":"onFloatCallback"}],"name":"onFloatCallback","longname":"Phaser.Gamepad#onFloatCallback","kind":"member","memberof":"Phaser.Gamepad","scope":"instance","___s":true},{"meta":{"range":[4398,4868],"filename":"Gamepad.js","lineno":139,"path":"src\\input"},"description":"Add callbacks to the main Gamepad handler to handle connect/disconnect/button down/button up/axis change/float value buttons.","kind":"function","name":"addCallbacks","params":[{"type":{"names":["object"]},"description":"The context under which the callbacks are run.","name":"context"},{"type":{"names":["object"]},"description":"Object that takes six different callback methods:\ronConnectCallback, onDisconnectCallback, onDownCallback, onUpCallback, onAxisCallback, onFloatCallback","name":"callbacks"}],"memberof":"Phaser.Gamepad","longname":"Phaser.Gamepad#addCallbacks","scope":"instance","___s":true},{"meta":{"range":[5793,5975],"filename":"Gamepad.js","lineno":162,"path":"src\\input"},"description":"Starts the Gamepad event handling.\rThis MUST be called manually before Phaser will start polling the Gamepad API.","kind":"function","name":"start","memberof":"Phaser.Gamepad","longname":"Phaser.Gamepad#start","scope":"instance","___s":true},{"meta":{"range":[7525,7655],"filename":"Gamepad.js","lineno":231,"path":"src\\input"},"description":"Main gamepad update loop. Should not be called manually.","kind":"function","name":"update","access":"protected","memberof":"Phaser.Gamepad","longname":"Phaser.Gamepad#update","scope":"instance","___s":true},{"meta":{"range":[11827,11937],"filename":"Gamepad.js","lineno":373,"path":"src\\input"},"description":"Sets the deadZone variable for all four gamepads","kind":"function","name":"setDeadZones","memberof":"Phaser.Gamepad","longname":"Phaser.Gamepad#setDeadZones","scope":"instance","___s":true},{"meta":{"range":[12123,12217],"filename":"Gamepad.js","lineno":386,"path":"src\\input"},"description":"Stops the Gamepad event handling.","kind":"function","name":"stop","memberof":"Phaser.Gamepad","longname":"Phaser.Gamepad#stop","scope":"instance","___s":true},{"meta":{"range":[12467,12560],"filename":"Gamepad.js","lineno":400,"path":"src\\input"},"description":"Reset all buttons/axes of all gamepads","kind":"function","name":"reset","memberof":"Phaser.Gamepad","longname":"Phaser.Gamepad#reset","scope":"instance","___s":true},{"meta":{"range":[12751,13259],"filename":"Gamepad.js","lineno":415,"path":"src\\input"},"description":"Returns the \"just pressed\" state of a button from ANY gamepad connected. Just pressed is considered true if the button was pressed down within the duration given (default 250ms).","kind":"function","name":"justPressed","params":[{"type":{"names":["number"]},"description":"The buttonCode of the button to check for.","name":"buttonCode"},{"type":{"names":["number"]},"optional":true,"defaultvalue":250,"description":"The duration below which the button is considered as being just pressed.","name":"duration"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the button is just pressed otherwise false."}],"memberof":"Phaser.Gamepad","longname":"Phaser.Gamepad#justPressed","scope":"instance","___s":true},{"meta":{"range":[13574,14091],"filename":"Gamepad.js","lineno":436,"path":"src\\input"},"description":"Returns the \"just released\" state of a button from ANY gamepad connected. Just released is considered as being true if the button was released within the duration given (default 250ms).","kind":"function","name":"justPressed","params":[{"type":{"names":["number"]},"description":"The buttonCode of the button to check for.","name":"buttonCode"},{"type":{"names":["number"]},"optional":true,"defaultvalue":250,"description":"The duration below which the button is considered as being just released.","name":"duration"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the button is just released otherwise false."}],"memberof":"Phaser.Gamepad","longname":"Phaser.Gamepad#justPressed","scope":"instance","___s":true},{"meta":{"range":[14408,14673],"filename":"Gamepad.js","lineno":457,"path":"src\\input"},"description":"Returns true if the button is currently pressed down, on ANY gamepad.","kind":"function","name":"isDown","params":[{"type":{"names":["number"]},"description":"The buttonCode of the button to check for.","name":"buttonCode"}],"returns":[{"type":{"names":["boolean"]},"description":"True if a button is currently down."}],"memberof":"Phaser.Gamepad","longname":"Phaser.Gamepad#isDown","scope":"instance","___s":true},{"meta":{"range":[14956,15080],"filename":"Gamepad.js","lineno":476,"path":"src\\input"},"description":"Destroys this object and the associated event listeners.","kind":"function","name":"destroy","memberof":"Phaser.Gamepad","longname":"Phaser.Gamepad#destroy","scope":"instance","___s":true},{"meta":{"range":[15332,15550],"filename":"Gamepad.js","lineno":496,"path":"src\\input"},"description":"If the gamepad input is active or not - if not active it should not be updated from Input.js","name":"active","properties":[{"type":{"names":["boolean"]},"description":"If the gamepad input is active or not.","name":"active"}],"readonly":true,"memberof":"Phaser.Gamepad","longname":"Phaser.Gamepad#active","scope":"instance","kind":"member","___s":true},{"meta":{"range":[15685,15893],"filename":"Gamepad.js","lineno":510,"path":"src\\input"},"description":"Whether or not gamepads are supported in current browser.","name":"supported","properties":[{"type":{"names":["boolean"]},"description":"Whether or not gamepads are supported in current browser.","name":"supported"}],"readonly":true,"memberof":"Phaser.Gamepad","longname":"Phaser.Gamepad#supported","scope":"instance","kind":"member","___s":true},{"meta":{"range":[16048,16243],"filename":"Gamepad.js","lineno":524,"path":"src\\input"},"description":"How many live gamepads are currently connected.","name":"padsConnected","properties":[{"type":{"names":["number"]},"description":"How many live gamepads are currently connected.","name":"padsConnected"}],"readonly":true,"memberof":"Phaser.Gamepad","longname":"Phaser.Gamepad#padsConnected","scope":"instance","kind":"member","___s":true},{"meta":{"range":[16393,16507],"filename":"Gamepad.js","lineno":538,"path":"src\\input"},"description":"Gamepad #1","name":"pad1","properties":[{"type":{"names":["Phaser.SinglePad"]},"description":"Gamepad #1;","name":"pad1"}],"readonly":true,"memberof":"Phaser.Gamepad","longname":"Phaser.Gamepad#pad1","scope":"instance","kind":"member","___s":true},{"meta":{"range":[16645,16758],"filename":"Gamepad.js","lineno":552,"path":"src\\input"},"description":"Gamepad #2","name":"pad2","properties":[{"type":{"names":["Phaser.SinglePad"]},"description":"Gamepad #2","name":"pad2"}],"readonly":true,"memberof":"Phaser.Gamepad","longname":"Phaser.Gamepad#pad2","scope":"instance","kind":"member","___s":true},{"meta":{"range":[16896,17009],"filename":"Gamepad.js","lineno":566,"path":"src\\input"},"description":"Gamepad #3","name":"pad3","properties":[{"type":{"names":["Phaser.SinglePad"]},"description":"Gamepad #3","name":"pad3"}],"readonly":true,"memberof":"Phaser.Gamepad","longname":"Phaser.Gamepad#pad3","scope":"instance","kind":"member","___s":true},{"meta":{"range":[17147,17260],"filename":"Gamepad.js","lineno":580,"path":"src\\input"},"description":"Gamepad #4","name":"pad4","properties":[{"type":{"names":["Phaser.SinglePad"]},"description":"Gamepad #4","name":"pad4"}],"readonly":true,"memberof":"Phaser.Gamepad","longname":"Phaser.Gamepad#pad4","scope":"instance","kind":"member","___s":true},{"meta":{"range":[501,10815],"filename":"Input.js","lineno":15,"path":"src\\input"},"description":"Phaser.Input is the Input Manager for all types of Input across Phaser, including mouse, keyboard, touch and MSPointer.\rThe Input manager is updated automatically by the core game loop.","kind":"class","classdesc":"Phaser.Input","params":[{"type":{"names":["Phaser.Game"]},"description":"Current game instance.","name":"game"}],"name":"Input","longname":"Phaser.Input","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[639,655],"filename":"Input.js","lineno":20,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"game","longname":"Phaser.Input#game","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[839,860],"filename":"Input.js","lineno":26,"path":"src\\input"},"properties":[{"type":{"names":["HTMLCanvasElement"]},"description":"The canvas to which single pixels are drawn in order to perform pixel-perfect hit detection.","name":"hitCanvas"}],"defaultvalue":null,"name":"hitCanvas","longname":"Phaser.Input#hitCanvas","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[1004,1026],"filename":"Input.js","lineno":32,"path":"src\\input"},"properties":[{"type":{"names":["CanvasRenderingContext2D"]},"description":"The context of the pixel perfect hit canvas.","name":"hitContext"}],"defaultvalue":null,"name":"hitContext","longname":"Phaser.Input#hitContext","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[1297,1320],"filename":"Input.js","lineno":40,"path":"src\\input"},"description":"An array of callbacks that will be fired every time the activePointer receives a move event from the DOM.\rTo add a callback to this array please use `Input.addMoveCallback`.","properties":[{"type":{"names":["array"]},"name":"moveCallbacks"}],"access":"protected","name":"moveCallbacks","longname":"Phaser.Input#moveCallbacks","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[1916,1933],"filename":"Input.js","lineno":58,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"How often should the input pointers be checked for updates? A value of 0 means every single frame (60fps); a value of 1 means every other frame (30fps) and so on.","name":"pollRate"}],"defaultvalue":0,"name":"pollRate","longname":"Phaser.Input#pollRate","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[2303,2322],"filename":"Input.js","lineno":67,"path":"src\\input"},"description":"When enabled, input (eg. Keyboard, Mouse, Touch) will be processed - as long as the individual sources are enabled themselves.\r\rWhen not enabled, _all_ input sources are ignored. To disable just one type of input; for example, the Mouse, use `input.mouse.enabled = false`.","properties":[{"type":{"names":["boolean"]},"name":"enabled"}],"defaultvalue":true,"name":"enabled","longname":"Phaser.Input#enabled","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[2505,2563],"filename":"Input.js","lineno":73,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"Controls the expected behavior when using a mouse and touch together on a multi-input device.","name":"multiInputOverride"}],"name":"multiInputOverride","longname":"Phaser.Input#multiInputOverride","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[2713,2733],"filename":"Input.js","lineno":79,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"A point object representing the current position of the Pointer.","name":"position"}],"defaultvalue":null,"name":"position","longname":"Phaser.Input#position","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[2941,2958],"filename":"Input.js","lineno":84,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"A point object representing the speed of the Pointer. Only really useful in single Pointer games; otherwise see the Pointer objects directly.","name":"speed"}],"name":"speed","longname":"Phaser.Input#speed","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[3199,3217],"filename":"Input.js","lineno":91,"path":"src\\input"},"description":"A Circle object centered on the x/y screen coordinates of the Input.\rDefault size of 44px (Apples recommended \"finger tip\" size) but can be changed to anything.","properties":[{"type":{"names":["Phaser.Circle"]},"name":"circle"}],"name":"circle","longname":"Phaser.Input#circle","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[3429,3446],"filename":"Input.js","lineno":96,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The scale by which all input coordinates are multiplied; calculated by the ScaleManager. In an un-scaled game the values will be x = 1 and y = 1.","name":"scale"}],"name":"scale","longname":"Phaser.Input#scale","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[3741,3762],"filename":"Input.js","lineno":102,"path":"src\\input"},"properties":[{"type":{"names":["integer"]},"description":"The maximum number of Pointers allowed to be active at any one time. A value of -1 is only limited by the total number of pointers. For lots of games it's useful to set this to 1.","name":"maxPointers"}],"defaultvalue":"-1 (Limited by total pointers.)","name":"maxPointers","longname":"Phaser.Input#maxPointers","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[3958,3976],"filename":"Input.js","lineno":108,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The number of milliseconds that the Pointer has to be pressed down and then released to be considered a tap or click.","name":"tapRate"}],"defaultvalue":200,"name":"tapRate","longname":"Phaser.Input#tapRate","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[4166,4190],"filename":"Input.js","lineno":114,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The number of milliseconds between taps of the same Pointer for it to be considered a double tap / click.","name":"doubleTapRate"}],"defaultvalue":300,"name":"doubleTapRate","longname":"Phaser.Input#doubleTapRate","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[4367,4387],"filename":"Input.js","lineno":120,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The number of milliseconds that the Pointer has to be pressed down for it to fire a onHold event.","name":"holdRate"}],"defaultvalue":2000,"name":"holdRate","longname":"Phaser.Input#holdRate","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[4551,4577],"filename":"Input.js","lineno":126,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The number of milliseconds below which the Pointer is considered justPressed.","name":"justPressedRate"}],"defaultvalue":200,"name":"justPressedRate","longname":"Phaser.Input#justPressedRate","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[4744,4771],"filename":"Input.js","lineno":132,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The number of milliseconds below which the Pointer is considered justReleased .","name":"justReleasedRate"}],"defaultvalue":200,"name":"justReleasedRate","longname":"Phaser.Input#justReleasedRate","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[5104,5137],"filename":"Input.js","lineno":141,"path":"src\\input"},"description":"Sets if the Pointer objects should record a history of x/y coordinates they have passed through.\rThe history is cleared each time the Pointer is pressed down.\rThe history is updated at the rate specified in Input.pollRate","properties":[{"type":{"names":["boolean"]},"name":"recordPointerHistory"}],"defaultvalue":false,"name":"recordPointerHistory","longname":"Phaser.Input#recordPointerHistory","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[5310,5331],"filename":"Input.js","lineno":147,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The rate in milliseconds at which the Pointer objects should update their tracking history.","name":"recordRate"}],"defaultvalue":100,"name":"recordRate","longname":"Phaser.Input#recordRate","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[5642,5664],"filename":"Input.js","lineno":155,"path":"src\\input"},"description":"The total number of entries that can be recorded into the Pointer objects tracking history.\rIf the Pointer is tracking one event every 100ms; then a trackLimit of 100 would store the last 10 seconds worth of history.","properties":[{"type":{"names":["number"]},"name":"recordLimit"}],"defaultvalue":100,"name":"recordLimit","longname":"Phaser.Input#recordLimit","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[5753,5773],"filename":"Input.js","lineno":160,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Pointer"]},"description":"A Pointer object.","name":"pointer1"}],"name":"pointer1","longname":"Phaser.Input#pointer1","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[5862,5882],"filename":"Input.js","lineno":165,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Pointer"]},"description":"A Pointer object.","name":"pointer2"}],"name":"pointer2","longname":"Phaser.Input#pointer2","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[5971,5991],"filename":"Input.js","lineno":170,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Pointer"]},"description":"A Pointer object.","name":"pointer3"}],"name":"pointer3","longname":"Phaser.Input#pointer3","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[6080,6100],"filename":"Input.js","lineno":175,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Pointer"]},"description":"A Pointer object.","name":"pointer4"}],"name":"pointer4","longname":"Phaser.Input#pointer4","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[6189,6209],"filename":"Input.js","lineno":180,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Pointer"]},"description":"A Pointer object.","name":"pointer5"}],"name":"pointer5","longname":"Phaser.Input#pointer5","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[6298,6318],"filename":"Input.js","lineno":185,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Pointer"]},"description":"A Pointer object.","name":"pointer6"}],"name":"pointer6","longname":"Phaser.Input#pointer6","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[6407,6427],"filename":"Input.js","lineno":190,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Pointer"]},"description":"A Pointer object.","name":"pointer7"}],"name":"pointer7","longname":"Phaser.Input#pointer7","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[6516,6536],"filename":"Input.js","lineno":195,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Pointer"]},"description":"A Pointer object.","name":"pointer8"}],"name":"pointer8","longname":"Phaser.Input#pointer8","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[6625,6645],"filename":"Input.js","lineno":200,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Pointer"]},"description":"A Pointer object.","name":"pointer9"}],"name":"pointer9","longname":"Phaser.Input#pointer9","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[6735,6756],"filename":"Input.js","lineno":205,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Pointer"]},"description":"A Pointer object.","name":"pointer10"}],"name":"pointer10","longname":"Phaser.Input#pointer10","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[7003,7021],"filename":"Input.js","lineno":214,"path":"src\\input"},"description":"An array of non-mouse pointers that have been added to the game.\rThe properties `pointer1..N` are aliases for `pointers[0..N-1]`.","properties":[{"type":{"names":["Array.<Phaser.Pointer>"]},"name":"pointers"}],"access":"public","readonly":true,"name":"pointers","longname":"Phaser.Input#pointers","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[7270,7295],"filename":"Input.js","lineno":223,"path":"src\\input"},"description":"The most recently active Pointer object.\r\rWhen you've limited max pointers to 1 this will accurately be either the first finger touched or mouse.","properties":[{"type":{"names":["Phaser.Pointer"]},"name":"activePointer"}],"name":"activePointer","longname":"Phaser.Input#activePointer","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[7480,7504],"filename":"Input.js","lineno":230,"path":"src\\input"},"description":"The mouse has its own unique Phaser.Pointer object which you can use if making a desktop specific game.","properties":[{"type":{"names":["Pointer"]},"name":"mousePointer"}],"name":"mousePointer","longname":"Phaser.Input#mousePointer","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[7812,7829],"filename":"Input.js","lineno":240,"path":"src\\input"},"description":"The Mouse Input manager.\r\rYou should not usually access this manager directly, but instead use Input.mousePointer or Input.activePointer \rwhich normalizes all the input values for you, regardless of browser.","properties":[{"type":{"names":["Phaser.Mouse"]},"name":"mouse"}],"name":"mouse","longname":"Phaser.Input#mouse","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[7942,7962],"filename":"Input.js","lineno":247,"path":"src\\input"},"description":"The Keyboard Input manager.","properties":[{"type":{"names":["Phaser.Keyboard"]},"name":"keyboard"}],"name":"keyboard","longname":"Phaser.Input#keyboard","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[8248,8265],"filename":"Input.js","lineno":257,"path":"src\\input"},"description":"The Touch Input manager.\r\rYou should not usually access this manager directly, but instead use Input.activePointer \rwhich normalizes all the input values for you, regardless of browser.","properties":[{"type":{"names":["Phaser.Touch"]},"name":"touch"}],"name":"touch","longname":"Phaser.Input#touch","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[8563,8584],"filename":"Input.js","lineno":267,"path":"src\\input"},"description":"The MSPointer Input manager.\r\rYou should not usually access this manager directly, but instead use Input.activePointer \rwhich normalizes all the input values for you, regardless of browser.","properties":[{"type":{"names":["Phaser.MSPointer"]},"name":"mspointer"}],"name":"mspointer","longname":"Phaser.Input#mspointer","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[8694,8713],"filename":"Input.js","lineno":274,"path":"src\\input"},"description":"The Gamepad Input manager.","properties":[{"type":{"names":["Phaser.Gamepad"]},"name":"gamepad"}],"name":"gamepad","longname":"Phaser.Input#gamepad","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[8937,8961],"filename":"Input.js","lineno":282,"path":"src\\input"},"description":"If the Input Manager has been reset locked then all calls made to InputManager.reset, \rsuch as from a State change, are ignored.","properties":[{"type":{"names":["boolean"]},"name":"resetLocked"}],"defaultvalue":false,"name":"resetLocked","longname":"Phaser.Input#resetLocked","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[9099,9117],"filename":"Input.js","lineno":288,"path":"src\\input"},"description":"A Signal that is dispatched each time a pointer is pressed down.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onDown"}],"name":"onDown","longname":"Phaser.Input#onDown","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[9249,9265],"filename":"Input.js","lineno":294,"path":"src\\input"},"description":"A Signal that is dispatched each time a pointer is released.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onUp"}],"name":"onUp","longname":"Phaser.Input#onUp","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[9396,9413],"filename":"Input.js","lineno":300,"path":"src\\input"},"description":"A Signal that is dispatched each time a pointer is tapped.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onTap"}],"name":"onTap","longname":"Phaser.Input#onTap","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[9548,9566],"filename":"Input.js","lineno":306,"path":"src\\input"},"description":"A Signal that is dispatched each time a pointer is held down.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onHold"}],"name":"onHold","longname":"Phaser.Input#onHold","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[9821,9843],"filename":"Input.js","lineno":314,"path":"src\\input"},"description":"You can tell all Pointers to ignore any Game Object with a `priorityID` lower than this value.\rThis is useful when stacking UI layers. Set to zero to disable.","properties":[{"type":{"names":["number"]},"name":"minPriorityID"}],"defaultvalue":0,"name":"minPriorityID","longname":"Phaser.Input#minPriorityID","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[10029,10074],"filename":"Input.js","lineno":320,"path":"src\\input"},"description":"A list of interactive objects. The InputHandler components add and remove themselves from this list.","properties":[{"type":{"names":["Phaser.ArraySet"]},"name":"interactiveItems"}],"name":"interactiveItems","longname":"Phaser.Input#interactiveItems","kind":"member","memberof":"Phaser.Input","scope":"instance","___s":true},{"meta":{"range":[10860,10898],"filename":"Input.js","lineno":358,"path":"src\\input"},"kind":"constant","type":{"names":["number"]},"name":"MOUSE_OVERRIDES_TOUCH","longname":"Phaser.Input.MOUSE_OVERRIDES_TOUCH","memberof":"Phaser.Input","scope":"static","___s":true},{"meta":{"range":[10943,10981],"filename":"Input.js","lineno":364,"path":"src\\input"},"kind":"constant","type":{"names":["number"]},"name":"TOUCH_OVERRIDES_MOUSE","longname":"Phaser.Input.TOUCH_OVERRIDES_MOUSE","memberof":"Phaser.Input","scope":"static","___s":true},{"meta":{"range":[11026,11062],"filename":"Input.js","lineno":370,"path":"src\\input"},"kind":"constant","type":{"names":["number"]},"name":"MOUSE_TOUCH_COMBINE","longname":"Phaser.Input.MOUSE_TOUCH_COMBINE","memberof":"Phaser.Input","scope":"static","___s":true},{"meta":{"range":[11194,11224],"filename":"Input.js","lineno":377,"path":"src\\input"},"description":"The maximum number of pointers that can be added. This excludes the mouse pointer.","kind":"constant","type":{"names":["integer"]},"name":"MAX_POINTERS","longname":"Phaser.Input.MAX_POINTERS","memberof":"Phaser.Input","scope":"static","___s":true},{"meta":{"range":[11263,11373],"filename":"Input.js","lineno":381,"path":"src\\input"},"description":"Starts the Input Manager running.","kind":"function","name":"boot","access":"protected","memberof":"Phaser.Input","longname":"Phaser.Input#boot","scope":"instance","___s":true},{"meta":{"range":[12994,13101],"filename":"Input.js","lineno":444,"path":"src\\input"},"description":"Stops all of the Input Managers from running.","kind":"function","name":"destroy","memberof":"Phaser.Input","longname":"Phaser.Input#destroy","scope":"instance","___s":true},{"meta":{"range":[13569,15019],"filename":"Input.js","lineno":473,"path":"src\\input"},"description":"Adds a callback that is fired every time `Pointer.processInteractiveObjects` is called.\rThe purpose of `processInteractiveObjects` is to work out which Game Object the Pointer is going to\rinteract with. It works by polling all of the valid game objects, and then slowly discounting those\rthat don't meet the criteria (i.e. they aren't under the Pointer, are disabled, invisible, etc).\r\rEventually a short-list of 'candidates' is created. These are all of the Game Objects which are valid\rfor input and overlap with the Pointer. If you need fine-grained control over which of the items is\rselected then you can use this callback to do so.\r\rThe callback will be sent 3 parameters:\r\r1) A reference to the Phaser.Pointer object that is processing the Items.\r2) An array containing all potential interactive candidates. This is an array of `InputHandler` objects, not Sprites.\r3) The current 'favorite' candidate, based on its priorityID and position in the display list.\r\rYour callback MUST return one of the candidates sent to it.","kind":"function","name":"setInteractiveCandidateHandler","params":[{"type":{"names":["function"]},"description":"The callback that will be called each time `Pointer.processInteractiveObjects` is called. Set to `null` to disable.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the callback will be called.","name":"context"}],"memberof":"Phaser.Input","longname":"Phaser.Input#setInteractiveCandidateHandler","scope":"instance","___s":true},{"meta":{"range":[15211,16266],"filename":"Input.js","lineno":502,"path":"src\\input"},"description":"Adds a callback that is fired every time the activePointer receives a DOM move event such as a mousemove or touchmove.\r\rThe callback will be sent 4 parameters:\r\rA reference to the Phaser.Pointer object that moved,\rThe x position of the pointer,\rThe y position,\rA boolean indicating if the movement was the result of a 'click' event (such as a mouse click or touch down).\r\rIt will be called every time the activePointer moves, which in a multi-touch game can be a lot of times, so this is best\rto only use if you've limited input to a single pointer (i.e. mouse or touch).\r\rThe callback is added to the Phaser.Input.moveCallbacks array and should be removed with Phaser.Input.deleteMoveCallback.","kind":"function","name":"addMoveCallback","params":[{"type":{"names":["function"]},"description":"The callback that will be called each time the activePointer receives a DOM move event.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the callback will be called.","name":"context"}],"memberof":"Phaser.Input","longname":"Phaser.Input#addMoveCallback","scope":"instance","___s":true},{"meta":{"range":[16415,16691],"filename":"Input.js","lineno":527,"path":"src\\input"},"description":"Removes the callback from the Phaser.Input.moveCallbacks array.","kind":"function","name":"deleteMoveCallback","params":[{"type":{"names":["function"]},"description":"The callback to be removed.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the callback exists.","name":"context"}],"memberof":"Phaser.Input","longname":"Phaser.Input#deleteMoveCallback","scope":"instance","___s":true},{"meta":{"range":[17068,17548],"filename":"Input.js","lineno":549,"path":"src\\input"},"description":"Add a new Pointer object to the Input Manager.\rBy default Input creates 3 pointer objects: `mousePointer` (not include in part of general pointer pool), `pointer1` and `pointer2`.\rThis method adds an additional pointer, up to a maximum of Phaser.Input.MAX_POINTERS (default of 10).","kind":"function","name":"addPointer","returns":[{"type":{"names":["Phaser.Pointer","null"]},"description":"The new Pointer object that was created; null if a new pointer could not be added."}],"memberof":"Phaser.Input","longname":"Phaser.Input#addPointer","scope":"instance","___s":true},{"meta":{"range":[18073,18209],"filename":"Input.js","lineno":575,"path":"src\\input"},"description":"Updates the Input Manager. Called by the core Game loop.","kind":"function","name":"update","access":"protected","memberof":"Phaser.Input","longname":"Phaser.Input#update","scope":"instance","___s":true},{"meta":{"range":[18974,19517],"filename":"Input.js","lineno":614,"path":"src\\input"},"description":"Reset all of the Pointers and Input states.\r\rThe optional `hard` parameter will reset any events or callbacks that may be bound.\rInput.reset is called automatically during a State change or if a game loses focus / visibility.\rTo control control the reset manually set {@link Phaser.InputManager.resetLocked} to `true`.","kind":"function","name":"reset","access":"public","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"A soft reset won't reset any events or callbacks that are bound. A hard reset will.","name":"hard"}],"memberof":"Phaser.Input","longname":"Phaser.Input#reset","scope":"instance","___s":true},{"meta":{"range":[20632,20856],"filename":"Input.js","lineno":673,"path":"src\\input"},"description":"Resets the speed and old position properties.","kind":"function","name":"resetSpeed","params":[{"type":{"names":["number"]},"description":"Sets the oldPosition.x value.","name":"x"},{"type":{"names":["number"]},"description":"Sets the oldPosition.y value.","name":"y"}],"memberof":"Phaser.Input","longname":"Phaser.Input#resetSpeed","scope":"instance","___s":true},{"meta":{"range":[20984,21394],"filename":"Input.js","lineno":687,"path":"src\\input"},"description":"Find the first free Pointer object and start it, passing in the event data.\rThis is called automatically by Phaser.Touch and Phaser.MSPointer.","kind":"function","name":"startPointer","access":"protected","params":[{"type":{"names":["any"]},"description":"The event data from the Touch event.","name":"event"}],"returns":[{"type":{"names":["Phaser.Pointer"]},"description":"The Pointer object that was started or null if no Pointer object is available."}],"memberof":"Phaser.Input","longname":"Phaser.Input#startPointer","scope":"instance","___s":true},{"meta":{"range":[22079,22474],"filename":"Input.js","lineno":727,"path":"src\\input"},"description":"Updates the matching Pointer object, passing in the event data.\rThis is called automatically and should not normally need to be invoked.","kind":"function","name":"updatePointer","access":"protected","params":[{"type":{"names":["any"]},"description":"The event data from the Touch event.","name":"event"}],"returns":[{"type":{"names":["Phaser.Pointer"]},"description":"The Pointer object that was updated; null if no pointer was updated."}],"memberof":"Phaser.Input","longname":"Phaser.Input#updatePointer","scope":"instance","___s":true},{"meta":{"range":[23143,23464],"filename":"Input.js","lineno":762,"path":"src\\input"},"description":"Stops the matching Pointer object, passing in the event data.","kind":"function","name":"stopPointer","access":"protected","params":[{"type":{"names":["any"]},"description":"The event data from the Touch event.","name":"event"}],"returns":[{"type":{"names":["Phaser.Pointer"]},"description":"The Pointer object that was stopped or null if no Pointer object is available."}],"memberof":"Phaser.Input","longname":"Phaser.Input#stopPointer","scope":"instance","___s":true},{"meta":{"range":[24888,25210],"filename":"Input.js","lineno":824,"path":"src\\input"},"description":"Get the first Pointer with the given active state.","kind":"function","name":"getPointer","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"The state the Pointer should be in - active or inactive?","name":"isActive"}],"returns":[{"type":{"names":["Phaser.Pointer"]},"description":"A Pointer object or null if no Pointer object matches the requested state."}],"memberof":"Phaser.Input","longname":"Phaser.Input#getPointer","scope":"instance","___s":true},{"meta":{"range":[25588,26302],"filename":"Input.js","lineno":849,"path":"src\\input"},"description":"Get the Pointer object whos `identifier` property matches the given identifier value.\r\rThe identifier property is not set until the Pointer has been used at least once, as its populated by the DOM event.\rAlso it can change every time you press the pointer down, and is not fixed once set.\rNote: Not all browsers set the identifier property and it's not part of the W3C spec, so you may need getPointerFromId instead.","kind":"function","name":"getPointerFromIdentifier","params":[{"type":{"names":["number"]},"description":"The Pointer.identifier value to search for.","name":"identifier"}],"returns":[{"type":{"names":["Phaser.Pointer"]},"description":"A Pointer object or null if no Pointer object matches the requested identifier."}],"memberof":"Phaser.Input","longname":"Phaser.Input#getPointerFromIdentifier","scope":"instance","___s":true},{"meta":{"range":[26641,27202],"filename":"Input.js","lineno":876,"path":"src\\input"},"description":"Get the Pointer object whos `pointerId` property matches the given value.\r\rThe pointerId property is not set until the Pointer has been used at least once, as its populated by the DOM event.\rAlso it can change every time you press the pointer down if the browser recycles it.","kind":"function","name":"getPointerFromId","params":[{"type":{"names":["number"]},"description":"The `pointerId` (not 'id') value to search for.","name":"pointerId"}],"returns":[{"type":{"names":["Phaser.Pointer"]},"description":"A Pointer object or null if no Pointer object matches the requested identifier."}],"memberof":"Phaser.Input","longname":"Phaser.Input#getPointerFromId","scope":"instance","___s":true},{"meta":{"range":[27530,28029],"filename":"Input.js","lineno":902,"path":"src\\input"},"description":"This will return the local coordinates of the specified displayObject based on the given Pointer.","kind":"function","name":"getLocalPosition","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image"]},"description":"The DisplayObject to get the local coordinates for.","name":"displayObject"},{"type":{"names":["Phaser.Pointer"]},"description":"The Pointer to use in the check against the displayObject.","name":"pointer"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"A point containing the coordinates of the Pointer position relative to the DisplayObject."}],"memberof":"Phaser.Input","longname":"Phaser.Input#getLocalPosition","scope":"instance","___s":true},{"meta":{"range":[28526,28858],"filename":"Input.js","lineno":924,"path":"src\\input"},"description":"Tests if the pointer hits the given object.","kind":"function","name":"hitTest","params":[{"type":{"names":["DisplayObject"]},"description":"The displayObject to test for a hit.","name":"displayObject"},{"type":{"names":["Phaser.Pointer"]},"description":"The pointer to use for the test.","name":"pointer"},{"type":{"names":["Phaser.Point"]},"description":"The local translated point.","name":"localPoint"}],"memberof":"Phaser.Input","longname":"Phaser.Input#hitTest","scope":"instance","___s":true},{"meta":{"range":[31843,32063],"filename":"Input.js","lineno":1029,"path":"src\\input"},"description":"The X coordinate of the most recently active pointer.\rThis value takes game scaling into account automatically. See Pointer.screenX/clientX for source values.","name":"x","properties":[{"type":{"names":["number"]},"name":"x"}],"memberof":"Phaser.Input","longname":"Phaser.Input#x","scope":"instance","kind":"member","___s":true},{"meta":{"range":[32263,32483],"filename":"Input.js","lineno":1047,"path":"src\\input"},"description":"The Y coordinate of the most recently active pointer.\rThis value takes game scaling into account automatically. See Pointer.screenY/clientY for source values.","name":"y","properties":[{"type":{"names":["number"]},"name":"y"}],"memberof":"Phaser.Input","longname":"Phaser.Input#y","scope":"instance","kind":"member","___s":true},{"meta":{"range":[32683,32822],"filename":"Input.js","lineno":1065,"path":"src\\input"},"description":"True if the Input is currently poll rate locked.","name":"pollLocked","properties":[{"type":{"names":["boolean"]},"name":"pollLocked"}],"readonly":true,"memberof":"Phaser.Input","longname":"Phaser.Input#pollLocked","scope":"instance","kind":"member","___s":true},{"meta":{"range":[33003,33153],"filename":"Input.js","lineno":1079,"path":"src\\input"},"description":"The total number of inactive Pointers.","name":"totalInactivePointers","properties":[{"type":{"names":["number"]},"name":"totalInactivePointers"}],"readonly":true,"memberof":"Phaser.Input","longname":"Phaser.Input#totalInactivePointers","scope":"instance","kind":"member","___s":true},{"meta":{"range":[33338,33516],"filename":"Input.js","lineno":1093,"path":"src\\input"},"description":"The total number of active Pointers, not counting the mouse pointer.","name":"totalActivePointers","properties":[{"type":{"names":["integers"]},"name":"totalActivePointers"}],"readonly":true,"memberof":"Phaser.Input","longname":"Phaser.Input#totalActivePointers","scope":"instance","kind":"member","___s":true},{"meta":{"range":[33676,33879],"filename":"Input.js","lineno":1107,"path":"src\\input"},"description":"The world X coordinate of the most recently active pointer.","name":"worldX","properties":[{"type":{"names":["number"]},"description":"The world X coordinate of the most recently active pointer.","name":"worldX"}],"readonly":true,"memberof":"Phaser.Input","longname":"Phaser.Input#worldX","scope":"instance","kind":"member","___s":true},{"meta":{"range":[34032,34235],"filename":"Input.js","lineno":1121,"path":"src\\input"},"description":"The world Y coordinate of the most recently active pointer.","name":"worldY","properties":[{"type":{"names":["number"]},"description":"The world Y coordinate of the most recently active pointer.","name":"worldY"}],"readonly":true,"memberof":"Phaser.Input","longname":"Phaser.Input#worldY","scope":"instance","kind":"member","___s":true},{"meta":{"range":[468,9503],"filename":"InputHandler.js","lineno":14,"path":"src\\input"},"description":"The Input Handler is bound to a specific Sprite and is responsible for managing all Input events on that Sprite.","kind":"class","classdesc":"Phaser.InputHandler","params":[{"type":{"names":["Phaser.Sprite"]},"description":"The Sprite object to which this Input Handler belongs.","name":"sprite"}],"name":"InputHandler","longname":"Phaser.InputHandler","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[631,651],"filename":"InputHandler.js","lineno":19,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Sprite"]},"description":"The Sprite object to which this Input Handler belongs.","name":"sprite"}],"name":"sprite","longname":"Phaser.InputHandler#sprite","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[758,781],"filename":"InputHandler.js","lineno":24,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"game","longname":"Phaser.InputHandler#game","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[947,967],"filename":"InputHandler.js","lineno":30,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"If enabled the Input Handler will process input requests and monitor pointer activity.","name":"enabled"}],"defaultvalue":false,"name":"enabled","longname":"Phaser.InputHandler#enabled","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[1125,1145],"filename":"InputHandler.js","lineno":36,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"A disposable flag used by the Pointer class when performing priority checks.","name":"checked"}],"access":"protected","name":"checked","longname":"Phaser.InputHandler#checked","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[1637,1656],"filename":"InputHandler.js","lineno":45,"path":"src\\input"},"description":"The priorityID is used to determine which game objects should get priority when input events occur. For example if you have\rseveral Sprites that overlap, by default the one at the top of the display list is given priority for input events. You can\rstop this from happening by controlling the priorityID value. The higher the value, the more important they are considered to the Input events.","properties":[{"type":{"names":["number"]},"name":"priorityID"}],"defaultvalue":0,"name":"priorityID","longname":"Phaser.InputHandler#priorityID","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[1831,1857],"filename":"InputHandler.js","lineno":51,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"On a desktop browser you can set the 'hand' cursor to appear when moving over the Sprite.","name":"useHandCursor"}],"defaultvalue":false,"name":"useHandCursor","longname":"Phaser.InputHandler#useHandCursor","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[2139,2161],"filename":"InputHandler.js","lineno":63,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"true if the Sprite is being currently dragged.","name":"isDragged"}],"defaultvalue":false,"name":"isDragged","longname":"Phaser.InputHandler#isDragged","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[2314,2345],"filename":"InputHandler.js","lineno":69,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"Controls if the Sprite is allowed to be dragged horizontally.","name":"allowHorizontalDrag"}],"defaultvalue":true,"name":"allowHorizontalDrag","longname":"Phaser.InputHandler#allowHorizontalDrag","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[2494,2523],"filename":"InputHandler.js","lineno":75,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"Controls if the Sprite is allowed to be dragged vertically.","name":"allowVerticalDrag"}],"defaultvalue":true,"name":"allowVerticalDrag","longname":"Phaser.InputHandler#allowVerticalDrag","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[2722,2745],"filename":"InputHandler.js","lineno":81,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"If true when this Sprite is clicked or dragged it will automatically be bought to the top of the Group it is within.","name":"bringToTop"}],"defaultvalue":false,"name":"bringToTop","longname":"Phaser.InputHandler#bringToTop","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[2899,2921],"filename":"InputHandler.js","lineno":87,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"A Point object that contains by how far the Sprite snap is offset.","name":"snapOffset"}],"defaultvalue":null,"name":"snapOffset","longname":"Phaser.InputHandler#snapOffset","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[3113,3136],"filename":"InputHandler.js","lineno":93,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"When the Sprite is dragged this controls if the center of the Sprite will snap to the pointer on drag or not.","name":"snapOnDrag"}],"defaultvalue":false,"name":"snapOnDrag","longname":"Phaser.InputHandler#snapOnDrag","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[3304,3330],"filename":"InputHandler.js","lineno":99,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"When the Sprite is dragged this controls if the Sprite will be snapped on release.","name":"snapOnRelease"}],"defaultvalue":false,"name":"snapOnRelease","longname":"Phaser.InputHandler#snapOnRelease","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[3480,3494],"filename":"InputHandler.js","lineno":105,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"When a Sprite has snapping enabled this holds the width of the snap grid.","name":"snapX"}],"defaultvalue":0,"name":"snapX","longname":"Phaser.InputHandler#snapX","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[3645,3659],"filename":"InputHandler.js","lineno":111,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"When a Sprite has snapping enabled this holds the height of the snap grid.","name":"snapY"}],"defaultvalue":0,"name":"snapY","longname":"Phaser.InputHandler#snapY","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[3798,3818],"filename":"InputHandler.js","lineno":117,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"This defines the top-left X coordinate of the snap grid.","name":"snapOffsetX"}],"defaultvalue":0,"name":"snapOffsetX","longname":"Phaser.InputHandler#snapOffsetX","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[3958,3978],"filename":"InputHandler.js","lineno":123,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"This defines the top-left Y coordinate of the snap grid..","name":"snapOffsetY"}],"defaultvalue":0,"name":"snapOffsetY","longname":"Phaser.InputHandler#snapOffsetY","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[4665,4694],"filename":"InputHandler.js","lineno":133,"path":"src\\input"},"description":"Set to true to use pixel perfect hit detection when checking if the pointer is over this Sprite.\rThe x/y coordinates of the pointer are tested against the image in combination with the InputHandler.pixelPerfectAlpha value.\rThis feature only works for display objects with image based textures such as Sprites. It won't work on BitmapText or Rope.\rWarning: This is expensive, especially on mobile (where it's not even needed!) so only enable if required. Also see the less-expensive InputHandler.pixelPerfectClick.","properties":[{"type":{"names":["boolean"]},"description":"Use a pixel perfect check when testing for pointer over.","name":"pixelPerfectOver"}],"defaultvalue":false,"name":"pixelPerfectOver","longname":"Phaser.InputHandler#pixelPerfectOver","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[5328,5358],"filename":"InputHandler.js","lineno":143,"path":"src\\input"},"description":"Set to true to use pixel perfect hit detection when checking if the pointer is over this Sprite when it's clicked or touched.\rThe x/y coordinates of the pointer are tested against the image in combination with the InputHandler.pixelPerfectAlpha value.\rThis feature only works for display objects with image based textures such as Sprites. It won't work on BitmapText or Rope.\rWarning: This is expensive so only enable if you really need it.","properties":[{"type":{"names":["boolean"]},"description":"Use a pixel perfect check when testing for clicks or touches on the Sprite.","name":"pixelPerfectClick"}],"defaultvalue":false,"name":"pixelPerfectClick","longname":"Phaser.InputHandler#pixelPerfectClick","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[5564,5592],"filename":"InputHandler.js","lineno":149,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The alpha tolerance threshold. If the alpha value of the pixel matches or is above this value, it's considered a hit.","name":"pixelPerfectAlpha"}],"defaultvalue":255,"name":"pixelPerfectAlpha","longname":"Phaser.InputHandler#pixelPerfectAlpha","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[5747,5769],"filename":"InputHandler.js","lineno":155,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"Is this sprite allowed to be dragged by the mouse? true = yes, false = no","name":"draggable"}],"defaultvalue":false,"name":"draggable","longname":"Phaser.InputHandler#draggable","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[5938,5960],"filename":"InputHandler.js","lineno":161,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Rectangle"]},"description":"A region of the game world within which the sprite is restricted during drag.","name":"boundsRect"}],"defaultvalue":null,"name":"boundsRect","longname":"Phaser.InputHandler#boundsRect","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[6118,6142],"filename":"InputHandler.js","lineno":167,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Sprite"]},"description":"A Sprite the bounds of which this sprite is restricted during drag.","name":"boundsSprite"}],"defaultvalue":null,"name":"boundsSprite","longname":"Phaser.InputHandler#boundsSprite","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[6316,6339],"filename":"InputHandler.js","lineno":172,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"EXPERIMENTAL: Please do not use this property unless you know what it does. Likely to change in the future.","name":"scaleLayer"}],"name":"scaleLayer","longname":"Phaser.InputHandler#scaleLayer","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[6479,6515],"filename":"InputHandler.js","lineno":177,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The offset from the Sprites position that dragging takes place from.","name":"dragOffset"}],"name":"dragOffset","longname":"Phaser.InputHandler#dragOffset","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[6684,6711],"filename":"InputHandler.js","lineno":182,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"Is the Sprite dragged from its center, or the point at which the Pointer was pressed down upon it?","name":"dragFromCenter"}],"name":"dragFromCenter","longname":"Phaser.InputHandler#dragFromCenter","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[6962,6996],"filename":"InputHandler.js","lineno":187,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"If enabled, when the Sprite stops being dragged, it will only dispatch the `onDragStop` event, and not the `onInputUp` event. If set to `false` it will dispatch both events.","name":"dragStopBlocksInputUp"}],"name":"dragStopBlocksInputUp","longname":"Phaser.InputHandler#dragStopBlocksInputUp","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[7192,7232],"filename":"InputHandler.js","lineno":192,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The Point from which the most recent drag started from. Useful if you need to return an object to its starting position.","name":"dragStartPoint"}],"name":"dragStartPoint","longname":"Phaser.InputHandler#dragStartPoint","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[7427,7457],"filename":"InputHandler.js","lineno":197,"path":"src\\input"},"properties":[{"type":{"names":["integer"]},"description":"The distance, in pixels, the pointer has to move while being held down, before the Sprite thinks it is being dragged.","name":"dragDistanceThreshold"}],"name":"dragDistanceThreshold","longname":"Phaser.InputHandler#dragDistanceThreshold","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[7643,7669],"filename":"InputHandler.js","lineno":202,"path":"src\\input"},"properties":[{"type":{"names":["integer"]},"description":"The amount of time, in ms, the pointer has to be held down over the Sprite before it thinks it is being dragged.","name":"dragTimeThreshold"}],"name":"dragTimeThreshold","longname":"Phaser.InputHandler#dragTimeThreshold","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[7845,7880],"filename":"InputHandler.js","lineno":207,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"A Point object containing the coordinates of the Pointer when it was first pressed down onto this Sprite.","name":"downPoint"}],"name":"downPoint","longname":"Phaser.InputHandler#downPoint","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[8048,8083],"filename":"InputHandler.js","lineno":212,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"If the sprite is set to snap while dragging this holds the point of the most recent 'snap' event.","name":"snapPoint"}],"name":"snapPoint","longname":"Phaser.InputHandler#snapPoint","kind":"member","memberof":"Phaser.InputHandler","scope":"instance","___s":true},{"meta":{"range":[9549,10160],"filename":"InputHandler.js","lineno":284,"path":"src\\input"},"description":"Starts the Input Handler running. This is called automatically when you enable input on a Sprite, or can be called directly if you need to set a specific priority.","kind":"function","name":"start","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Higher priority sprites take click priority over low-priority sprites when they are stacked on-top of each other.","name":"priority"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the Sprite will show the hand cursor on mouse-over (doesn't apply to mobile browsers)","name":"useHandCursor"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"The Sprite object to which the Input Handler is bound."}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#start","scope":"instance","___s":true},{"meta":{"range":[12317,12418],"filename":"InputHandler.js","lineno":382,"path":"src\\input"},"description":"Resets the Input Handler and disables it.","kind":"function","name":"reset","memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#reset","scope":"instance","___s":true},{"meta":{"range":[12989,13085],"filename":"InputHandler.js","lineno":410,"path":"src\\input"},"description":"Stops the Input Handler from running.","kind":"function","name":"stop","memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#stop","scope":"instance","___s":true},{"meta":{"range":[13400,13478],"filename":"InputHandler.js","lineno":430,"path":"src\\input"},"description":"Clean up memory.","kind":"function","name":"destroy","memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#destroy","scope":"instance","___s":true},{"meta":{"range":[14001,14750],"filename":"InputHandler.js","lineno":456,"path":"src\\input"},"description":"Checks if the object this InputHandler is bound to is valid for consideration in the Pointer move event.\rThis is called by Phaser.Pointer and shouldn't typically be called directly.","kind":"function","name":"validForInput","access":"protected","params":[{"type":{"names":["number"]},"description":"The highest ID currently processed by the Pointer.","name":"highestID"},{"type":{"names":["number"]},"description":"The highest Render Order ID currently processed by the Pointer.","name":"highestRenderID"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If this object has `pixelPerfectClick` or `pixelPerfectOver` set should it be considered as valid?","name":"includePixelPerfect"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the object this InputHandler is bound to should be considered as valid for input detection."}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#validForInput","scope":"instance","___s":true},{"meta":{"range":[15698,15941],"filename":"InputHandler.js","lineno":495,"path":"src\\input"},"description":"Is this object using pixel perfect checking?","kind":"function","name":"isPixelPerfect","returns":[{"type":{"names":["boolean"]},"description":"True if the this InputHandler has either `pixelPerfectClick` or `pixelPerfectOver` set to `true`."}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#isPixelPerfect","scope":"instance","___s":true},{"meta":{"range":[16063,16387],"filename":"InputHandler.js","lineno":507,"path":"src\\input"},"description":"The x coordinate of the Input pointer, relative to the top-left of the parent Sprite.\rThis value is only set when the pointer is over this Sprite.","kind":"function","name":"pointerX","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"name":"pointerId"}],"returns":[{"type":{"names":["number"]},"description":"The x coordinate of the Input pointer."}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#pointerX","scope":"instance","___s":true},{"meta":{"range":[16532,16855],"filename":"InputHandler.js","lineno":523,"path":"src\\input"},"description":"The y coordinate of the Input pointer, relative to the top-left of the parent Sprite\rThis value is only set when the pointer is over this Sprite.","kind":"function","name":"pointerY","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"name":"pointerId"}],"returns":[{"type":{"names":["number"]},"description":"The y coordinate of the Input pointer."}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#pointerY","scope":"instance","___s":true},{"meta":{"range":[17000,17324],"filename":"InputHandler.js","lineno":539,"path":"src\\input"},"description":"If the Pointer is down this returns true.\rThis *only* checks if the Pointer is down, not if it's down over any specific Sprite.","kind":"function","name":"pointerDown","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"name":"pointerId"}],"returns":[{"type":{"names":["boolean"]},"description":"- True if the given pointer is down, otherwise false."}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#pointerDown","scope":"instance","___s":true},{"meta":{"range":[17477,17791],"filename":"InputHandler.js","lineno":555,"path":"src\\input"},"description":"If the Pointer is up this returns true.\rThis *only* checks if the Pointer is up, not if it's up over any specific Sprite.","kind":"function","name":"pointerUp","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"name":"pointerId"}],"returns":[{"type":{"names":["boolean"]},"description":"- True if the given pointer is up, otherwise false."}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#pointerUp","scope":"instance","___s":true},{"meta":{"range":[17940,18161],"filename":"InputHandler.js","lineno":571,"path":"src\\input"},"description":"A timestamp representing when the Pointer first touched the touchscreen.","kind":"function","name":"pointerTimeDown","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":"(check all)","name":"pointerId"}],"returns":[{"type":{"names":["number"]}}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#pointerTimeDown","scope":"instance","___s":true},{"meta":{"range":[18320,18520],"filename":"InputHandler.js","lineno":586,"path":"src\\input"},"description":"A timestamp representing when the Pointer left the touchscreen.","kind":"function","name":"pointerTimeUp","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"name":"pointerId"}],"returns":[{"type":{"names":["number"]}}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#pointerTimeUp","scope":"instance","___s":true},{"meta":{"range":[18675,19043],"filename":"InputHandler.js","lineno":601,"path":"src\\input"},"description":"Is the Pointer over this Sprite?","kind":"function","name":"pointerOver","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":"(check all)","description":"The ID number of a Pointer to check. If you don't provide a number it will check all Pointers.","name":"pointerId"}],"returns":[{"type":{"names":["boolean"]},"description":"- True if the given pointer (if a index was given, or any pointer if not) is over this object."}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#pointerOver","scope":"instance","___s":true},{"meta":{"range":[19559,19932],"filename":"InputHandler.js","lineno":634,"path":"src\\input"},"description":"Is the Pointer outside of this Sprite?","kind":"function","name":"pointerOut","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":"(check all)","description":"The ID number of a Pointer to check. If you don't provide a number it will check all Pointers.","name":"pointerId"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the given pointer (if a index was given, or any pointer if not) is out of this object."}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#pointerOut","scope":"instance","___s":true},{"meta":{"range":[20416,20627],"filename":"InputHandler.js","lineno":665,"path":"src\\input"},"description":"A timestamp representing when the Pointer first touched the touchscreen.","kind":"function","name":"pointerTimeOver","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"name":"pointerId"}],"returns":[{"type":{"names":["number"]}}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#pointerTimeOver","scope":"instance","___s":true},{"meta":{"range":[20786,20987],"filename":"InputHandler.js","lineno":680,"path":"src\\input"},"description":"A timestamp representing when the Pointer left the touchscreen.","kind":"function","name":"pointerTimeOut","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"name":"pointerId"}],"returns":[{"type":{"names":["number"]}}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#pointerTimeOut","scope":"instance","___s":true},{"meta":{"range":[21144,21392],"filename":"InputHandler.js","lineno":695,"path":"src\\input"},"description":"Is this sprite being dragged by the mouse or not?","kind":"function","name":"pointerDragged","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"name":"pointerId"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the pointer is dragging an object, otherwise false."}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#pointerDragged","scope":"instance","___s":true},{"meta":{"range":[21551,22083],"filename":"InputHandler.js","lineno":710,"path":"src\\input"},"description":"Checks if the given pointer is both down and over the Sprite this InputHandler belongs to.\rUse the `fastTest` flag is to quickly check just the bounding hit area even if `InputHandler.pixelPerfectOver` is `true`.","kind":"function","name":"checkPointerDown","params":[{"type":{"names":["Phaser.Pointer"]},"name":"pointer"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Force a simple hit area check even if `pixelPerfectOver` is true for this object?","name":"fastTest"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the pointer is down, otherwise false."}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#checkPointerDown","scope":"instance","___s":true},{"meta":{"range":[23069,23541],"filename":"InputHandler.js","lineno":755,"path":"src\\input"},"description":"Checks if the given pointer is over the Sprite this InputHandler belongs to.\rUse the `fastTest` flag is to quickly check just the bounding hit area even if `InputHandler.pixelPerfectOver` is `true`.","kind":"function","name":"checkPointerOver","params":[{"type":{"names":["Phaser.Pointer"]},"name":"pointer"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Force a simple hit area check even if `pixelPerfectOver` is true for this object?","name":"fastTest"}],"returns":[{"type":{"names":["boolean"]}}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#checkPointerOver","scope":"instance","___s":true},{"meta":{"range":[24494,25116],"filename":"InputHandler.js","lineno":799,"path":"src\\input"},"description":"Runs a pixel perfect check against the given x/y coordinates of the Sprite this InputHandler is bound to.\rIt compares the alpha value of the pixel and if >= InputHandler.pixelPerfectAlpha it returns true.","kind":"function","name":"checkPixel","params":[{"type":{"names":["number"]},"description":"The x coordinate to check.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to check.","name":"y"},{"type":{"names":["Phaser.Pointer"]},"optional":true,"description":"The pointer to get the x/y coordinate from if not passed as the first two parameters.","name":"pointer"}],"returns":[{"type":{"names":["boolean"]},"description":"true if there is the alpha of the pixel is >= InputHandler.pixelPerfectAlpha"}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#checkPixel","scope":"instance","___s":true},{"meta":{"range":[27103,27414],"filename":"InputHandler.js","lineno":868,"path":"src\\input"},"description":"Internal Update method. This is called automatically and handles the Pointer\rand drag update loops.","kind":"function","name":"update","access":"protected","params":[{"type":{"names":["Phaser.Pointer"]},"name":"pointer"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the pointer is still active, otherwise false."}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#update","scope":"instance","___s":true},{"meta":{"range":[40277,40619],"filename":"InputHandler.js","lineno":1275,"path":"src\\input"},"description":"Returns true if the pointer has entered the Sprite within the specified delay time (defaults to 500ms, half a second)","kind":"function","name":"justOver","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"name":"pointerId"},{"type":{"names":["number"]},"description":"The time below which the pointer is considered as just over.","name":"delay"}],"returns":[{"type":{"names":["boolean"]}}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#justOver","scope":"instance","___s":true},{"meta":{"range":[40849,41186],"filename":"InputHandler.js","lineno":1292,"path":"src\\input"},"description":"Returns true if the pointer has left the Sprite within the specified delay time (defaults to 500ms, half a second)","kind":"function","name":"justOut","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"name":"pointerId"},{"type":{"names":["number"]},"description":"The time below which the pointer is considered as just out.","name":"delay"}],"returns":[{"type":{"names":["boolean"]}}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#justOut","scope":"instance","___s":true},{"meta":{"range":[41446,41805],"filename":"InputHandler.js","lineno":1309,"path":"src\\input"},"description":"Returns true if the pointer has touched or clicked on the Sprite within the specified delay time (defaults to 500ms, half a second)","kind":"function","name":"justPressed","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"name":"pointerId"},{"type":{"names":["number"]},"description":"The time below which the pointer is considered as just over.","name":"delay"}],"returns":[{"type":{"names":["boolean"]}}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#justPressed","scope":"instance","___s":true},{"meta":{"range":[42038,42408],"filename":"InputHandler.js","lineno":1326,"path":"src\\input"},"description":"Returns true if the pointer was touching this Sprite, but has been released within the specified delay time (defaults to 500ms, half a second)","kind":"function","name":"justReleased","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"name":"pointerId"},{"type":{"names":["number"]},"description":"The time below which the pointer is considered as just out.","name":"delay"}],"returns":[{"type":{"names":["boolean"]}}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#justReleased","scope":"instance","___s":true},{"meta":{"range":[42671,42996],"filename":"InputHandler.js","lineno":1343,"path":"src\\input"},"description":"If the pointer is currently over this Sprite this returns how long it has been there for in milliseconds.","kind":"function","name":"overDuration","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"name":"pointerId"}],"returns":[{"type":{"names":["number"]},"description":"The number of milliseconds the pointer has been over the Sprite, or -1 if not over."}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#overDuration","scope":"instance","___s":true},{"meta":{"range":[43272,43608],"filename":"InputHandler.js","lineno":1363,"path":"src\\input"},"description":"If the pointer is currently over this Sprite this returns how long it has been there for in milliseconds.","kind":"function","name":"downDuration","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"name":"pointerId"}],"returns":[{"type":{"names":["number"]},"description":"The number of milliseconds the pointer has been pressed down on the Sprite, or -1 if not over."}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#downDuration","scope":"instance","___s":true},{"meta":{"range":[43884,45989],"filename":"InputHandler.js","lineno":1383,"path":"src\\input"},"description":"Allow this Sprite to be dragged by any valid pointer.\r\rWhen the drag begins the Sprite.events.onDragStart event will be dispatched.\r\rWhen the drag completes by way of the user letting go of the pointer that was dragging the sprite, the Sprite.events.onDragStop event is dispatched.\r\rYou can control the thresholds over when a drag starts via the properties:\r\r`Pointer.dragDistanceThreshold` the distance, in pixels, that the pointer has to move\rbefore the drag will start.\r\r`Pointer.dragTimeThreshold` the time, in ms, that the pointer must be held down on\rthe Sprite before the drag will start.\r\rYou can set either (or both) of these properties after enabling a Sprite for drag.\r\rFor the duration of the drag the Sprite.events.onDragUpdate event is dispatched. This event is only dispatched when the pointer actually\rchanges position and moves. The event sends 5 parameters: `sprite`, `pointer`, `dragX`, `dragY` and `snapPoint`.","kind":"function","name":"enableDrag","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If false the Sprite will drag from where you click it minus the dragOffset. If true it will center itself to the tip of the mouse pointer.","name":"lockCenter"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the Sprite will be bought to the top of the rendering list in its current Group.","name":"bringToTop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true it will use a pixel perfect test to see if you clicked the Sprite. False uses the bounding box.","name":"pixelPerfect"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":255,"description":"If using pixel perfect collision this specifies the alpha level from 0 to 255 above which a collision is processed.","name":"alphaThreshold"},{"type":{"names":["Phaser.Rectangle"]},"optional":true,"defaultvalue":null,"description":"If you want to restrict the drag of this sprite to a specific Rectangle, pass the Phaser.Rectangle here, otherwise it's free to drag anywhere.","name":"boundsRect"},{"type":{"names":["Phaser.Sprite"]},"optional":true,"defaultvalue":null,"description":"If you want to restrict the drag of this sprite to within the bounding box of another sprite, pass it here.","name":"boundsSprite"}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#enableDrag","scope":"instance","___s":true},{"meta":{"range":[47008,47249],"filename":"InputHandler.js","lineno":1441,"path":"src\\input"},"description":"Stops this sprite from being able to be dragged.\rIf it is currently the target of an active drag it will be stopped immediately; also disables any set callbacks.","kind":"function","name":"disableDrag","memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#disableDrag","scope":"instance","___s":true},{"meta":{"range":[47626,47825],"filename":"InputHandler.js","lineno":1464,"path":"src\\input"},"description":"Called by Pointer when drag starts on this Sprite. Should not usually be called directly.","kind":"function","name":"startDrag","params":[{"type":{"names":["Phaser.Pointer"]},"name":"pointer"}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#startDrag","scope":"instance","___s":true},{"meta":{"range":[49606,49728],"filename":"InputHandler.js","lineno":1524,"path":"src\\input"},"description":"Warning: EXPERIMENTAL","kind":"function","name":"globalToLocalX","params":[{"type":{"names":["number"]},"name":"x"}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#globalToLocalX","scope":"instance","___s":true},{"meta":{"range":[49972,50094],"filename":"InputHandler.js","lineno":1542,"path":"src\\input"},"description":"Warning: EXPERIMENTAL","kind":"function","name":"globalToLocalY","params":[{"type":{"names":["number"]},"name":"y"}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#globalToLocalY","scope":"instance","___s":true},{"meta":{"range":[50338,50540],"filename":"InputHandler.js","lineno":1560,"path":"src\\input"},"description":"Called by Pointer when drag is stopped on this Sprite. Should not usually be called directly.","kind":"function","name":"stopDrag","params":[{"type":{"names":["Phaser.Pointer"]},"name":"pointer"}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#stopDrag","scope":"instance","___s":true},{"meta":{"range":[51849,52293],"filename":"InputHandler.js","lineno":1597,"path":"src\\input"},"description":"Restricts this sprite to drag movement only on the given axis. Note: If both are set to false the sprite will never move!","kind":"function","name":"setDragLock","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"To enable the sprite to be dragged horizontally set to true, otherwise false.","name":"allowHorizontal"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"To enable the sprite to be dragged vertically set to true, otherwise false.","name":"allowVertical"}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#setDragLock","scope":"instance","___s":true},{"meta":{"range":[52619,53414],"filename":"InputHandler.js","lineno":1614,"path":"src\\input"},"description":"Make this Sprite snap to the given grid either during drag or when it's released.\rFor example 16x16 as the snapX and snapY would make the sprite snap to every 16 pixels.","kind":"function","name":"enableSnap","params":[{"type":{"names":["number"]},"description":"The width of the grid cell to snap to.","name":"snapX"},{"type":{"names":["number"]},"description":"The height of the grid cell to snap to.","name":"snapY"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true the sprite will snap to the grid while being dragged.","name":"onDrag"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the sprite will snap to the grid when released.","name":"onRelease"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Used to offset the top-left starting point of the snap grid.","name":"snapOffsetX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Used to offset the top-left starting point of the snap grid.","name":"snapOffsetY"}],"memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#enableSnap","scope":"instance","___s":true},{"meta":{"range":[53977,54114],"filename":"InputHandler.js","lineno":1642,"path":"src\\input"},"description":"Stops the sprite from snapping to a grid during drag or release.","kind":"function","name":"disableSnap","memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#disableSnap","scope":"instance","___s":true},{"meta":{"range":[54237,54351],"filename":"InputHandler.js","lineno":1654,"path":"src\\input"},"description":"Bounds Rect check for the sprite drag","kind":"function","name":"checkBoundsRect","memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#checkBoundsRect","scope":"instance","___s":true},{"meta":{"range":[55991,56117],"filename":"InputHandler.js","lineno":1704,"path":"src\\input"},"description":"Parent Sprite Bounds check for the sprite drag.","kind":"function","name":"checkBoundsSprite","memberof":"Phaser.InputHandler","longname":"Phaser.InputHandler#checkBoundsSprite","scope":"instance","___s":true},{"meta":{"range":[527,4060],"filename":"Key.js","lineno":15,"path":"src\\input"},"description":"If you need more fine-grained control over the handling of specific keys you can create and use Phaser.Key objects.","kind":"class","classdesc":"Phaser.Key","params":[{"type":{"names":["Phaser.Game"]},"description":"Current game instance.","name":"game"},{"type":{"names":["integer"]},"description":"The key code this Key is responsible for. See {@link Phaser.KeyCode}.","name":"keycode"}],"name":"Key","longname":"Phaser.Key","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[672,688],"filename":"Key.js","lineno":20,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"game","longname":"Phaser.Key#game","kind":"member","memberof":"Phaser.Key","scope":"instance","___s":true},{"meta":{"range":[950,967],"filename":"Key.js","lineno":33,"path":"src\\input"},"properties":[{"type":{"names":["object"]},"description":"Stores the most recent DOM event.","name":"event"}],"readonly":true,"name":"event","longname":"Phaser.Key#event","kind":"member","memberof":"Phaser.Key","scope":"instance","___s":true},{"meta":{"range":[1156,1175],"filename":"Key.js","lineno":39,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"The \"down\" state of the key. This will remain `true` for as long as the keyboard thinks this key is held down.","name":"isDown"}],"defaultvalue":false,"name":"isDown","longname":"Phaser.Key#isDown","kind":"member","memberof":"Phaser.Key","scope":"instance","___s":true},{"meta":{"range":[1353,1369],"filename":"Key.js","lineno":45,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"The \"up\" state of the key. This will remain `true` for as long as the keyboard thinks this key is up.","name":"isUp"}],"defaultvalue":true,"name":"isUp","longname":"Phaser.Key#isUp","kind":"member","memberof":"Phaser.Key","scope":"instance","___s":true},{"meta":{"range":[1519,1538],"filename":"Key.js","lineno":51,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"The down state of the ALT key, if pressed at the same time as this key.","name":"altKey"}],"defaultvalue":false,"name":"altKey","longname":"Phaser.Key#altKey","kind":"member","memberof":"Phaser.Key","scope":"instance","___s":true},{"meta":{"range":[1690,1710],"filename":"Key.js","lineno":57,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"The down state of the CTRL key, if pressed at the same time as this key.","name":"ctrlKey"}],"defaultvalue":false,"name":"ctrlKey","longname":"Phaser.Key#ctrlKey","kind":"member","memberof":"Phaser.Key","scope":"instance","___s":true},{"meta":{"range":[1864,1885],"filename":"Key.js","lineno":63,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"The down state of the SHIFT key, if pressed at the same time as this key.","name":"shiftKey"}],"defaultvalue":false,"name":"shiftKey","longname":"Phaser.Key#shiftKey","kind":"member","memberof":"Phaser.Key","scope":"instance","___s":true},{"meta":{"range":[2030,2047],"filename":"Key.js","lineno":68,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The timestamp when the key was last pressed down. This is based on Game.time.now.","name":"timeDown"}],"name":"timeDown","longname":"Phaser.Key#timeDown","kind":"member","memberof":"Phaser.Key","scope":"instance","___s":true},{"meta":{"range":[2363,2380],"filename":"Key.js","lineno":76,"path":"src\\input"},"description":"If the key is down this value holds the duration of that key press and is constantly updated.\rIf the key is up it holds the duration of the previous down session.","properties":[{"type":{"names":["number"]},"description":"The number of milliseconds this key has been held down for.","name":"duration"}],"defaultvalue":0,"name":"duration","longname":"Phaser.Key#duration","kind":"member","memberof":"Phaser.Key","scope":"instance","___s":true},{"meta":{"range":[2535,2554],"filename":"Key.js","lineno":82,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The timestamp when the key was last released. This is based on Game.time.now.","name":"timeUp"}],"name":"timeUp","longname":"Phaser.Key#timeUp","kind":"member","memberof":"Phaser.Key","scope":"instance","___s":true},{"meta":{"range":[2714,2730],"filename":"Key.js","lineno":88,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"If a key is held down this holds down the number of times the key has 'repeated'.","name":"repeats"}],"defaultvalue":0,"name":"repeats","longname":"Phaser.Key#repeats","kind":"member","memberof":"Phaser.Key","scope":"instance","___s":true},{"meta":{"range":[2817,2839],"filename":"Key.js","lineno":93,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The keycode of this key.","name":"keyCode"}],"name":"keyCode","longname":"Phaser.Key#keyCode","kind":"member","memberof":"Phaser.Key","scope":"instance","___s":true},{"meta":{"range":[3032,3065],"filename":"Key.js","lineno":98,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"This Signal is dispatched every time this Key is pressed down. It is only dispatched once (until the key is released again).","name":"onDown"}],"name":"onDown","longname":"Phaser.Key#onDown","kind":"member","memberof":"Phaser.Key","scope":"instance","___s":true},{"meta":{"range":[3262,3288],"filename":"Key.js","lineno":103,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"A callback that is called while this Key is held down. Warning: Depending on refresh rate that could be 60+ times per second.","name":"onHoldCallback"}],"name":"onHoldCallback","longname":"Phaser.Key#onHoldCallback","kind":"member","memberof":"Phaser.Key","scope":"instance","___s":true},{"meta":{"range":[3415,3440],"filename":"Key.js","lineno":108,"path":"src\\input"},"properties":[{"type":{"names":["object"]},"description":"The context under which the onHoldCallback will be called.","name":"onHoldContext"}],"name":"onHoldContext","longname":"Phaser.Key#onHoldContext","kind":"member","memberof":"Phaser.Key","scope":"instance","___s":true},{"meta":{"range":[3639,3670],"filename":"Key.js","lineno":113,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"This Signal is dispatched every time this Key is released. It is only dispatched once (until the key is pressed and released again).","name":"onUp"}],"name":"onUp","longname":"Phaser.Key#onUp","kind":"member","memberof":"Phaser.Key","scope":"instance","___s":true},{"meta":{"range":[4097,4215],"filename":"Key.js","lineno":131,"path":"src\\input"},"description":"Called automatically by Phaser.Keyboard.","kind":"function","name":"update","access":"protected","memberof":"Phaser.Key","longname":"Phaser.Key#update","scope":"instance","___s":true},{"meta":{"range":[4587,4786],"filename":"Key.js","lineno":154,"path":"src\\input"},"description":"Called automatically by Phaser.Keyboard.","kind":"function","name":"processKeyDown","params":[{"type":{"names":["KeyboardEvent"]},"description":"The DOM event that triggered this.","name":"event"}],"access":"protected","memberof":"Phaser.Key","longname":"Phaser.Key#processKeyDown","scope":"instance","___s":true},{"meta":{"range":[5580,5777],"filename":"Key.js","lineno":191,"path":"src\\input"},"description":"Called automatically by Phaser.Keyboard.","kind":"function","name":"processKeyUp","params":[{"type":{"names":["KeyboardEvent"]},"description":"The DOM event that triggered this.","name":"event"}],"access":"protected","memberof":"Phaser.Key","longname":"Phaser.Key#processKeyUp","scope":"instance","___s":true},{"meta":{"range":[6391,6854],"filename":"Key.js","lineno":222,"path":"src\\input"},"description":"Resets the state of this Key.\r\rThis sets isDown to false, isUp to true, resets the time to be the current time, and _enables_ the key.\rIn addition, if it is a \"hard reset\", it clears clears any callbacks associated with the onDown and onUp events and removes the onHoldCallback.","kind":"function","name":"reset","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"A soft reset won't reset any events or callbacks; a hard reset will.","name":"hard"}],"memberof":"Phaser.Key","longname":"Phaser.Key#reset","scope":"instance","___s":true},{"meta":{"range":[7410,7861],"filename":"Key.js","lineno":253,"path":"src\\input"},"description":"Returns `true` if the Key was pressed down within the `duration` value given, or `false` if it either isn't down,\ror was pressed down longer ago than then given duration.","kind":"function","name":"downDuration","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":50,"description":"The duration within which the key is considered as being just pressed. Given in ms.","name":"duration"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key was pressed down within the given duration."}],"memberof":"Phaser.Key","longname":"Phaser.Key#downDuration","scope":"instance","___s":true},{"meta":{"range":[8039,8485],"filename":"Key.js","lineno":269,"path":"src\\input"},"description":"Returns `true` if the Key was pressed down within the `duration` value given, or `false` if it either isn't down,\ror was pressed down longer ago than then given duration.","kind":"function","name":"upDuration","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":50,"description":"The duration within which the key is considered as being just released. Given in ms.","name":"duration"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key was released within the given duration."}],"memberof":"Phaser.Key","longname":"Phaser.Key#upDuration","scope":"instance","___s":true},{"meta":{"range":[961,3127],"filename":"Keyboard.js","lineno":21,"path":"src\\input"},"description":"The Keyboard class monitors keyboard input and dispatches keyboard events.\r\r_Note_: many keyboards are unable to process certain combinations of keys due to hardware limitations known as ghosting.\rSee http://www.html5gamedevs.com/topic/4876-impossible-to-use-more-than-2-keyboard-input-buttons-at-the-same-time/ for more details.\r\rAlso please be aware that certain browser extensions can disable or override Phaser keyboard handling.\rFor example the Chrome extension vimium is known to disable Phaser from using the D key. And there are others.\rSo please check your extensions before opening Phaser issues.","kind":"class","classdesc":"Phaser.Keyboard","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"Keyboard","longname":"Phaser.Keyboard","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1084,1100],"filename":"Keyboard.js","lineno":26,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.Keyboard#game","kind":"member","memberof":"Phaser.Keyboard","scope":"instance","___s":true},{"meta":{"range":[1234,1253],"filename":"Keyboard.js","lineno":33,"path":"src\\input"},"description":"Keyboard input will only be processed if enabled.","properties":[{"type":{"names":["boolean"]},"name":"enabled"}],"defaultvalue":true,"name":"enabled","longname":"Phaser.Keyboard#enabled","kind":"member","memberof":"Phaser.Keyboard","scope":"instance","___s":true},{"meta":{"range":[1423,1440],"filename":"Keyboard.js","lineno":38,"path":"src\\input"},"properties":[{"type":{"names":["object"]},"description":"The most recent DOM event from keydown or keyup. This is updated every time a new key is pressed or released.","name":"event"}],"name":"event","longname":"Phaser.Keyboard#event","kind":"member","memberof":"Phaser.Keyboard","scope":"instance","___s":true},{"meta":{"range":[1546,1568],"filename":"Keyboard.js","lineno":43,"path":"src\\input"},"properties":[{"type":{"names":["object"]},"description":"The most recent DOM event from keypress.","name":"pressEvent"}],"name":"pressEvent","longname":"Phaser.Keyboard#pressEvent","kind":"member","memberof":"Phaser.Keyboard","scope":"instance","___s":true},{"meta":{"range":[1685,1712],"filename":"Keyboard.js","lineno":48,"path":"src\\input"},"properties":[{"type":{"names":["object"]},"description":"The context under which the callbacks are run.","name":"callbackContext"}],"name":"callbackContext","longname":"Phaser.Keyboard#callbackContext","kind":"member","memberof":"Phaser.Keyboard","scope":"instance","___s":true},{"meta":{"range":[1889,1915],"filename":"Keyboard.js","lineno":53,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"This callback is invoked every time a key is pressed down, including key repeats when a key is held down.","name":"onDownCallback"}],"name":"onDownCallback","longname":"Phaser.Keyboard#onDownCallback","kind":"member","memberof":"Phaser.Keyboard","scope":"instance","___s":true},{"meta":{"range":[2091,2118],"filename":"Keyboard.js","lineno":58,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"This callback is invoked every time a DOM onkeypress event is raised, which is only for printable keys.","name":"onPressCallback"}],"name":"onPressCallback","longname":"Phaser.Keyboard#onPressCallback","kind":"member","memberof":"Phaser.Keyboard","scope":"instance","___s":true},{"meta":{"range":[2242,2266],"filename":"Keyboard.js","lineno":63,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"This callback is invoked every time a key is released.","name":"onUpCallback"}],"name":"onUpCallback","longname":"Phaser.Keyboard#onUpCallback","kind":"member","memberof":"Phaser.Keyboard","scope":"instance","___s":true},{"meta":{"range":[3169,3741],"filename":"Keyboard.js","lineno":114,"path":"src\\input"},"description":"Add callbacks to the Keyboard handler so that each time a key is pressed down or released the callbacks are activated.","kind":"function","name":"addCallbacks","params":[{"type":{"names":["object"]},"description":"The context under which the callbacks are run.","name":"context"},{"type":{"names":["function"]},"optional":true,"defaultvalue":null,"description":"This callback is invoked every time a key is pressed down.","name":"onDown"},{"type":{"names":["function"]},"optional":true,"defaultvalue":null,"description":"This callback is invoked every time a key is released.","name":"onUp"},{"type":{"names":["function"]},"optional":true,"defaultvalue":null,"description":"This callback is invoked every time the onkeypress event is raised.","name":"onPress"}],"memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#addCallbacks","scope":"instance","___s":true},{"meta":{"range":[4224,4643],"filename":"Keyboard.js","lineno":144,"path":"src\\input"},"description":"If you need more fine-grained control over a Key you can create a new Phaser.Key object via this method.\rThe Key object can then be polled, have events attached to it, etc.","kind":"function","name":"addKey","params":[{"type":{"names":["integer"]},"description":"The {@link Phaser.KeyCode keycode} of the key.","name":"keycode"}],"returns":[{"type":{"names":["Phaser.Key"]},"description":"The Key object which you can store locally and reference directly."}],"memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#addKey","scope":"instance","___s":true},{"meta":{"range":[4908,5579],"filename":"Keyboard.js","lineno":165,"path":"src\\input"},"description":"A practical way to create an object containing user selected hotkeys.\r\rFor example,\r\r    addKeys( { 'up': Phaser.KeyCode.W, 'down': Phaser.KeyCode.S, 'left': Phaser.KeyCode.A, 'right': Phaser.KeyCode.D } );\r\rwould return an object containing properties (`up`, `down`, `left` and `right`) referring to {@link Phaser.Key} object.","kind":"function","name":"addKeys","params":[{"type":{"names":["object"]},"description":"A key mapping object, i.e. `{ 'up': Phaser.KeyCode.W, 'down': Phaser.KeyCode.S }` or `{ 'up': 52, 'down': 53 }`.","name":"keys"}],"returns":[{"type":{"names":["object"]},"description":"An object containing the properties mapped to {@link Phaser.Key} values."}],"memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#addKeys","scope":"instance","___s":true},{"meta":{"range":[5789,5994],"filename":"Keyboard.js","lineno":191,"path":"src\\input"},"description":"Removes a Key object from the Keyboard manager.","kind":"function","name":"removeKey","params":[{"type":{"names":["integer"]},"description":"The {@link Phaser.KeyCode keycode} of the key to remove.","name":"keycode"}],"memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#removeKey","scope":"instance","___s":true},{"meta":{"range":[6195,6470],"filename":"Keyboard.js","lineno":208,"path":"src\\input"},"description":"Creates and returns an object containing 4 hotkeys for Up, Down, Left and Right.","kind":"function","name":"createCursorKeys","returns":[{"type":{"names":["object"]},"description":"An object containing properties: `up`, `down`, `left` and `right` of {@link Phaser.Key} objects."}],"memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#createCursorKeys","scope":"instance","___s":true},{"meta":{"range":[6675,6950],"filename":"Keyboard.js","lineno":220,"path":"src\\input"},"description":"Starts the Keyboard event listeners running (keydown and keyup). They are attached to the window.\rThis is called automatically by Phaser.Input and should not normally be invoked directly.","kind":"function","name":"start","access":"protected","memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#start","scope":"instance","___s":true},{"meta":{"range":[7774,7948],"filename":"Keyboard.js","lineno":260,"path":"src\\input"},"description":"Stops the Keyboard event listeners from running (keydown, keyup and keypress). They are removed from the window.","kind":"function","name":"stop","memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#stop","scope":"instance","___s":true},{"meta":{"range":[8286,8524],"filename":"Keyboard.js","lineno":277,"path":"src\\input"},"description":"Stops the Keyboard event listeners from running (keydown and keyup). They are removed from the window.\rAlso clears all key captures and currently created Key objects.","kind":"function","name":"destroy","memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#destroy","scope":"instance","___s":true},{"meta":{"range":[8683,9387],"filename":"Keyboard.js","lineno":294,"path":"src\\input"},"description":"By default when a key is pressed Phaser will not stop the event from propagating up to the browser.\rThere are some keys this can be annoying for, like the arrow keys or space bar, which make the browser window scroll.\r\rThe `addKeyCapture` method enables consuming keyboard event for specific keys so it doesn't bubble up to the the browser\rand cause the default browser behavior.\r\rPass in either a single keycode or an array/hash of keycodes.","kind":"function","name":"addKeyCapture","params":[{"type":{"names":["integer","Array.<integer>","object"]},"description":"Either a single {@link Phaser.KeyCode keycode} or an array/hash of keycodes such as `[65, 67, 68]`.","name":"keycode"}],"memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#addKeyCapture","scope":"instance","___s":true},{"meta":{"range":[9711,9910],"filename":"Keyboard.js","lineno":321,"path":"src\\input"},"description":"Removes an existing key capture.","kind":"function","name":"removeKeyCapture","params":[{"type":{"names":["integer"]},"description":"The {@link Phaser.KeyCode keycode} to remove capturing of.","name":"keycode"}],"memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#removeKeyCapture","scope":"instance","___s":true},{"meta":{"range":[10014,10112],"filename":"Keyboard.js","lineno":333,"path":"src\\input"},"description":"Clear all set key captures.","kind":"function","name":"clearCaptures","memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#clearCaptures","scope":"instance","___s":true},{"meta":{"range":[10195,10294],"filename":"Keyboard.js","lineno":344,"path":"src\\input"},"description":"Updates all currently defined keys.","kind":"function","name":"update","memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#update","scope":"instance","___s":true},{"meta":{"range":[10545,10697],"filename":"Keyboard.js","lineno":363,"path":"src\\input"},"description":"Process the keydown event.","kind":"function","name":"processKeyDown","params":[{"type":{"names":["KeyboardEvent"]},"name":"event"}],"access":"protected","memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#processKeyDown","scope":"instance","___s":true},{"meta":{"range":[11410,11564],"filename":"Keyboard.js","lineno":403,"path":"src\\input"},"description":"Process the keypress event.","kind":"function","name":"processKeyPress","params":[{"type":{"names":["KeyboardEvent"]},"name":"event"}],"access":"protected","memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#processKeyPress","scope":"instance","___s":true},{"meta":{"range":[11925,12073],"filename":"Keyboard.js","lineno":426,"path":"src\\input"},"description":"Process the keyup event.","kind":"function","name":"processKeyUp","params":[{"type":{"names":["KeyboardEvent"]},"name":"event"}],"access":"protected","memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#processKeyUp","scope":"instance","___s":true},{"meta":{"range":[12679,12892],"filename":"Keyboard.js","lineno":463,"path":"src\\input"},"description":"Resets all Keys.","kind":"function","name":"reset","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"A soft reset won't reset any events or callbacks that are bound to the Keys. A hard reset will.","name":"hard"}],"memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#reset","scope":"instance","___s":true},{"meta":{"range":[13211,13854],"filename":"Keyboard.js","lineno":487,"path":"src\\input"},"description":"Returns `true` if the Key was pressed down within the `duration` value given, or `false` if it either isn't down,\ror was pressed down longer ago than then given duration.","kind":"function","name":"downDuration","params":[{"type":{"names":["integer"]},"description":"The {@link Phaser.KeyCode keycode} of the key to check: i.e. Phaser.KeyCode.UP or Phaser.KeyCode.SPACEBAR.","name":"keycode"},{"type":{"names":["number"]},"optional":true,"defaultvalue":50,"description":"The duration within which the key is considered as being just pressed. Given in ms.","name":"duration"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key was pressed down within the given duration, false if not or null if the Key wasn't found."}],"memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#downDuration","scope":"instance","___s":true},{"meta":{"range":[14106,14736],"filename":"Keyboard.js","lineno":509,"path":"src\\input"},"description":"Returns `true` if the Key was pressed down within the `duration` value given, or `false` if it either isn't down,\ror was pressed down longer ago than then given duration.","kind":"function","name":"upDuration","params":[{"type":{"names":["Phaser.KeyCode","integer"]},"description":"The keycode of the key to check, i.e. Phaser.KeyCode.UP or Phaser.KeyCode.SPACEBAR.","name":"keycode"},{"type":{"names":["number"]},"optional":true,"defaultvalue":50,"description":"The duration within which the key is considered as being just released. Given in ms.","name":"duration"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key was released within the given duration, false if not or null if the Key wasn't found."}],"memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#upDuration","scope":"instance","___s":true},{"meta":{"range":[14984,15406],"filename":"Keyboard.js","lineno":531,"path":"src\\input"},"description":"Returns true of the key is currently pressed down. Note that it can only detect key presses on the web browser.","kind":"function","name":"isDown","params":[{"type":{"names":["integer"]},"description":"The {@link Phaser.KeyCode keycode} of the key to check: i.e. Phaser.KeyCode.UP or Phaser.KeyCode.SPACEBAR.","name":"keycode"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key is currently down, false if not or null if the Key wasn't found."}],"memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#isDown","scope":"instance","___s":true},{"meta":{"range":[15627,15827],"filename":"Keyboard.js","lineno":553,"path":"src\\input"},"description":"Returns the string value of the most recently pressed key.","name":"lastChar","properties":[{"type":{"names":["string"]},"description":"The string value of the most recently pressed key.","name":"lastChar"}],"readonly":true,"memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#lastChar","scope":"instance","kind":"member","___s":true},{"meta":{"range":[16129,16363],"filename":"Keyboard.js","lineno":576,"path":"src\\input"},"description":"Returns the most recently pressed Key. This is a Phaser.Key object and it changes every time a key is pressed.","name":"lastKey","properties":[{"type":{"names":["Phaser.Key"]},"description":"The most recently pressed Key.","name":"lastKey"}],"readonly":true,"memberof":"Phaser.Keyboard","longname":"Phaser.Keyboard#lastKey","scope":"instance","kind":"member","___s":true},{"meta":{"range":[16571,17345],"filename":"Keyboard.js","lineno":594,"path":"src\\input"},"description":"A key code represents a physical key on a keyboard.\r\rThe KeyCode class contains commonly supported keyboard key codes which can be used\ras keycode`-parameters in several {@link Phaser.Keyboard} and {@link Phaser.Key} methods.\r\r_Note_: These values should only be used indirectly, eg. as `Phaser.KeyCode.KEY`.\rFuture versions may replace the actual values, such that they remain compatible with `keycode`-parameters.\rThe current implementation maps to the {@link https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode KeyboardEvent.keyCode} property.\r\r_Note_: Use `Phaser.KeyCode.KEY` instead of `Phaser.Keyboard.KEY` to refer to a key code;\rthe latter approach is supported for compatibility.","kind":"class","name":"KeyCode","memberof":"Phaser","longname":"Phaser.KeyCode","scope":"static","___s":true},{"meta":{"range":[17391,17411],"filename":"Keyboard.js","lineno":611,"path":"src\\input"},"scope":"static","name":"A","longname":"Phaser.KeyCode.A","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[17438,17458],"filename":"Keyboard.js","lineno":613,"path":"src\\input"},"scope":"static","name":"B","longname":"Phaser.KeyCode.B","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[17485,17505],"filename":"Keyboard.js","lineno":615,"path":"src\\input"},"scope":"static","name":"C","longname":"Phaser.KeyCode.C","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[17532,17552],"filename":"Keyboard.js","lineno":617,"path":"src\\input"},"scope":"static","name":"D","longname":"Phaser.KeyCode.D","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[17579,17599],"filename":"Keyboard.js","lineno":619,"path":"src\\input"},"scope":"static","name":"E","longname":"Phaser.KeyCode.E","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[17626,17646],"filename":"Keyboard.js","lineno":621,"path":"src\\input"},"scope":"static","name":"F","longname":"Phaser.KeyCode.F","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[17673,17693],"filename":"Keyboard.js","lineno":623,"path":"src\\input"},"scope":"static","name":"G","longname":"Phaser.KeyCode.G","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[17720,17740],"filename":"Keyboard.js","lineno":625,"path":"src\\input"},"scope":"static","name":"H","longname":"Phaser.KeyCode.H","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[17767,17787],"filename":"Keyboard.js","lineno":627,"path":"src\\input"},"scope":"static","name":"I","longname":"Phaser.KeyCode.I","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[17814,17834],"filename":"Keyboard.js","lineno":629,"path":"src\\input"},"scope":"static","name":"J","longname":"Phaser.KeyCode.J","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[17861,17881],"filename":"Keyboard.js","lineno":631,"path":"src\\input"},"scope":"static","name":"K","longname":"Phaser.KeyCode.K","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[17908,17928],"filename":"Keyboard.js","lineno":633,"path":"src\\input"},"scope":"static","name":"L","longname":"Phaser.KeyCode.L","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[17955,17975],"filename":"Keyboard.js","lineno":635,"path":"src\\input"},"scope":"static","name":"M","longname":"Phaser.KeyCode.M","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18002,18022],"filename":"Keyboard.js","lineno":637,"path":"src\\input"},"scope":"static","name":"N","longname":"Phaser.KeyCode.N","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18049,18069],"filename":"Keyboard.js","lineno":639,"path":"src\\input"},"scope":"static","name":"O","longname":"Phaser.KeyCode.O","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18096,18116],"filename":"Keyboard.js","lineno":641,"path":"src\\input"},"scope":"static","name":"P","longname":"Phaser.KeyCode.P","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18143,18163],"filename":"Keyboard.js","lineno":643,"path":"src\\input"},"scope":"static","name":"Q","longname":"Phaser.KeyCode.Q","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18190,18210],"filename":"Keyboard.js","lineno":645,"path":"src\\input"},"scope":"static","name":"R","longname":"Phaser.KeyCode.R","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18237,18257],"filename":"Keyboard.js","lineno":647,"path":"src\\input"},"scope":"static","name":"S","longname":"Phaser.KeyCode.S","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18284,18304],"filename":"Keyboard.js","lineno":649,"path":"src\\input"},"scope":"static","name":"T","longname":"Phaser.KeyCode.T","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18331,18351],"filename":"Keyboard.js","lineno":651,"path":"src\\input"},"scope":"static","name":"U","longname":"Phaser.KeyCode.U","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18378,18398],"filename":"Keyboard.js","lineno":653,"path":"src\\input"},"scope":"static","name":"V","longname":"Phaser.KeyCode.V","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18425,18445],"filename":"Keyboard.js","lineno":655,"path":"src\\input"},"scope":"static","name":"W","longname":"Phaser.KeyCode.W","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18472,18492],"filename":"Keyboard.js","lineno":657,"path":"src\\input"},"scope":"static","name":"X","longname":"Phaser.KeyCode.X","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18519,18539],"filename":"Keyboard.js","lineno":659,"path":"src\\input"},"scope":"static","name":"Y","longname":"Phaser.KeyCode.Y","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18566,18586],"filename":"Keyboard.js","lineno":661,"path":"src\\input"},"scope":"static","name":"Z","longname":"Phaser.KeyCode.Z","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18613,18636],"filename":"Keyboard.js","lineno":663,"path":"src\\input"},"scope":"static","name":"ZERO","longname":"Phaser.KeyCode.ZERO","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18663,18685],"filename":"Keyboard.js","lineno":665,"path":"src\\input"},"scope":"static","name":"ONE","longname":"Phaser.KeyCode.ONE","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18712,18734],"filename":"Keyboard.js","lineno":667,"path":"src\\input"},"scope":"static","name":"TWO","longname":"Phaser.KeyCode.TWO","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18761,18785],"filename":"Keyboard.js","lineno":669,"path":"src\\input"},"scope":"static","name":"THREE","longname":"Phaser.KeyCode.THREE","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18812,18835],"filename":"Keyboard.js","lineno":671,"path":"src\\input"},"scope":"static","name":"FOUR","longname":"Phaser.KeyCode.FOUR","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18862,18885],"filename":"Keyboard.js","lineno":673,"path":"src\\input"},"scope":"static","name":"FIVE","longname":"Phaser.KeyCode.FIVE","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18912,18934],"filename":"Keyboard.js","lineno":675,"path":"src\\input"},"scope":"static","name":"SIX","longname":"Phaser.KeyCode.SIX","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[18961,18985],"filename":"Keyboard.js","lineno":677,"path":"src\\input"},"scope":"static","name":"SEVEN","longname":"Phaser.KeyCode.SEVEN","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19012,19036],"filename":"Keyboard.js","lineno":679,"path":"src\\input"},"scope":"static","name":"EIGHT","longname":"Phaser.KeyCode.EIGHT","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19063,19086],"filename":"Keyboard.js","lineno":681,"path":"src\\input"},"scope":"static","name":"NINE","longname":"Phaser.KeyCode.NINE","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19113,19125],"filename":"Keyboard.js","lineno":683,"path":"src\\input"},"scope":"static","name":"NUMPAD_0","longname":"Phaser.KeyCode.NUMPAD_0","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19152,19164],"filename":"Keyboard.js","lineno":685,"path":"src\\input"},"scope":"static","name":"NUMPAD_1","longname":"Phaser.KeyCode.NUMPAD_1","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19191,19203],"filename":"Keyboard.js","lineno":687,"path":"src\\input"},"scope":"static","name":"NUMPAD_2","longname":"Phaser.KeyCode.NUMPAD_2","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19230,19242],"filename":"Keyboard.js","lineno":689,"path":"src\\input"},"scope":"static","name":"NUMPAD_3","longname":"Phaser.KeyCode.NUMPAD_3","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19269,19282],"filename":"Keyboard.js","lineno":691,"path":"src\\input"},"scope":"static","name":"NUMPAD_4","longname":"Phaser.KeyCode.NUMPAD_4","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19309,19322],"filename":"Keyboard.js","lineno":693,"path":"src\\input"},"scope":"static","name":"NUMPAD_5","longname":"Phaser.KeyCode.NUMPAD_5","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19349,19362],"filename":"Keyboard.js","lineno":695,"path":"src\\input"},"scope":"static","name":"NUMPAD_6","longname":"Phaser.KeyCode.NUMPAD_6","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19389,19402],"filename":"Keyboard.js","lineno":697,"path":"src\\input"},"scope":"static","name":"NUMPAD_7","longname":"Phaser.KeyCode.NUMPAD_7","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19429,19442],"filename":"Keyboard.js","lineno":699,"path":"src\\input"},"scope":"static","name":"NUMPAD_8","longname":"Phaser.KeyCode.NUMPAD_8","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19469,19482],"filename":"Keyboard.js","lineno":701,"path":"src\\input"},"scope":"static","name":"NUMPAD_9","longname":"Phaser.KeyCode.NUMPAD_9","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19509,19529],"filename":"Keyboard.js","lineno":703,"path":"src\\input"},"scope":"static","name":"NUMPAD_MULTIPLY","longname":"Phaser.KeyCode.NUMPAD_MULTIPLY","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19556,19571],"filename":"Keyboard.js","lineno":705,"path":"src\\input"},"scope":"static","name":"NUMPAD_ADD","longname":"Phaser.KeyCode.NUMPAD_ADD","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19598,19615],"filename":"Keyboard.js","lineno":707,"path":"src\\input"},"scope":"static","name":"NUMPAD_ENTER","longname":"Phaser.KeyCode.NUMPAD_ENTER","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19642,19662],"filename":"Keyboard.js","lineno":709,"path":"src\\input"},"scope":"static","name":"NUMPAD_SUBTRACT","longname":"Phaser.KeyCode.NUMPAD_SUBTRACT","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19689,19708],"filename":"Keyboard.js","lineno":711,"path":"src\\input"},"scope":"static","name":"NUMPAD_DECIMAL","longname":"Phaser.KeyCode.NUMPAD_DECIMAL","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19735,19753],"filename":"Keyboard.js","lineno":713,"path":"src\\input"},"scope":"static","name":"NUMPAD_DIVIDE","longname":"Phaser.KeyCode.NUMPAD_DIVIDE","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19780,19787],"filename":"Keyboard.js","lineno":715,"path":"src\\input"},"scope":"static","name":"F1","longname":"Phaser.KeyCode.F1","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19814,19821],"filename":"Keyboard.js","lineno":717,"path":"src\\input"},"scope":"static","name":"F2","longname":"Phaser.KeyCode.F2","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19848,19855],"filename":"Keyboard.js","lineno":719,"path":"src\\input"},"scope":"static","name":"F3","longname":"Phaser.KeyCode.F3","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19882,19889],"filename":"Keyboard.js","lineno":721,"path":"src\\input"},"scope":"static","name":"F4","longname":"Phaser.KeyCode.F4","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19916,19923],"filename":"Keyboard.js","lineno":723,"path":"src\\input"},"scope":"static","name":"F5","longname":"Phaser.KeyCode.F5","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19950,19957],"filename":"Keyboard.js","lineno":725,"path":"src\\input"},"scope":"static","name":"F6","longname":"Phaser.KeyCode.F6","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[19984,19991],"filename":"Keyboard.js","lineno":727,"path":"src\\input"},"scope":"static","name":"F7","longname":"Phaser.KeyCode.F7","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20018,20025],"filename":"Keyboard.js","lineno":729,"path":"src\\input"},"scope":"static","name":"F8","longname":"Phaser.KeyCode.F8","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20052,20059],"filename":"Keyboard.js","lineno":731,"path":"src\\input"},"scope":"static","name":"F9","longname":"Phaser.KeyCode.F9","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20086,20094],"filename":"Keyboard.js","lineno":733,"path":"src\\input"},"scope":"static","name":"F10","longname":"Phaser.KeyCode.F10","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20121,20129],"filename":"Keyboard.js","lineno":735,"path":"src\\input"},"scope":"static","name":"F11","longname":"Phaser.KeyCode.F11","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20156,20164],"filename":"Keyboard.js","lineno":737,"path":"src\\input"},"scope":"static","name":"F12","longname":"Phaser.KeyCode.F12","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20191,20199],"filename":"Keyboard.js","lineno":739,"path":"src\\input"},"scope":"static","name":"F13","longname":"Phaser.KeyCode.F13","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20226,20234],"filename":"Keyboard.js","lineno":741,"path":"src\\input"},"scope":"static","name":"F14","longname":"Phaser.KeyCode.F14","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20261,20269],"filename":"Keyboard.js","lineno":743,"path":"src\\input"},"scope":"static","name":"F15","longname":"Phaser.KeyCode.F15","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20296,20306],"filename":"Keyboard.js","lineno":745,"path":"src\\input"},"scope":"static","name":"COLON","longname":"Phaser.KeyCode.COLON","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20333,20344],"filename":"Keyboard.js","lineno":747,"path":"src\\input"},"scope":"static","name":"EQUALS","longname":"Phaser.KeyCode.EQUALS","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20371,20381],"filename":"Keyboard.js","lineno":749,"path":"src\\input"},"scope":"static","name":"COMMA","longname":"Phaser.KeyCode.COMMA","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20408,20423],"filename":"Keyboard.js","lineno":751,"path":"src\\input"},"scope":"static","name":"UNDERSCORE","longname":"Phaser.KeyCode.UNDERSCORE","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20450,20461],"filename":"Keyboard.js","lineno":753,"path":"src\\input"},"scope":"static","name":"PERIOD","longname":"Phaser.KeyCode.PERIOD","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20488,20506],"filename":"Keyboard.js","lineno":755,"path":"src\\input"},"scope":"static","name":"QUESTION_MARK","longname":"Phaser.KeyCode.QUESTION_MARK","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20533,20543],"filename":"Keyboard.js","lineno":757,"path":"src\\input"},"scope":"static","name":"TILDE","longname":"Phaser.KeyCode.TILDE","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20570,20587],"filename":"Keyboard.js","lineno":759,"path":"src\\input"},"scope":"static","name":"OPEN_BRACKET","longname":"Phaser.KeyCode.OPEN_BRACKET","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20614,20633],"filename":"Keyboard.js","lineno":761,"path":"src\\input"},"scope":"static","name":"BACKWARD_SLASH","longname":"Phaser.KeyCode.BACKWARD_SLASH","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20660,20679],"filename":"Keyboard.js","lineno":763,"path":"src\\input"},"scope":"static","name":"CLOSED_BRACKET","longname":"Phaser.KeyCode.CLOSED_BRACKET","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20706,20717],"filename":"Keyboard.js","lineno":765,"path":"src\\input"},"scope":"static","name":"QUOTES","longname":"Phaser.KeyCode.QUOTES","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20744,20756],"filename":"Keyboard.js","lineno":767,"path":"src\\input"},"scope":"static","name":"BACKSPACE","longname":"Phaser.KeyCode.BACKSPACE","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20783,20789],"filename":"Keyboard.js","lineno":769,"path":"src\\input"},"scope":"static","name":"TAB","longname":"Phaser.KeyCode.TAB","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20816,20825],"filename":"Keyboard.js","lineno":771,"path":"src\\input"},"scope":"static","name":"CLEAR","longname":"Phaser.KeyCode.CLEAR","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20852,20861],"filename":"Keyboard.js","lineno":773,"path":"src\\input"},"scope":"static","name":"ENTER","longname":"Phaser.KeyCode.ENTER","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20888,20897],"filename":"Keyboard.js","lineno":775,"path":"src\\input"},"scope":"static","name":"SHIFT","longname":"Phaser.KeyCode.SHIFT","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20924,20935],"filename":"Keyboard.js","lineno":777,"path":"src\\input"},"scope":"static","name":"CONTROL","longname":"Phaser.KeyCode.CONTROL","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20962,20969],"filename":"Keyboard.js","lineno":779,"path":"src\\input"},"scope":"static","name":"ALT","longname":"Phaser.KeyCode.ALT","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[20996,21009],"filename":"Keyboard.js","lineno":781,"path":"src\\input"},"scope":"static","name":"CAPS_LOCK","longname":"Phaser.KeyCode.CAPS_LOCK","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[21036,21043],"filename":"Keyboard.js","lineno":783,"path":"src\\input"},"scope":"static","name":"ESC","longname":"Phaser.KeyCode.ESC","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[21070,21082],"filename":"Keyboard.js","lineno":785,"path":"src\\input"},"scope":"static","name":"SPACEBAR","longname":"Phaser.KeyCode.SPACEBAR","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[21109,21120],"filename":"Keyboard.js","lineno":787,"path":"src\\input"},"scope":"static","name":"PAGE_UP","longname":"Phaser.KeyCode.PAGE_UP","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[21147,21160],"filename":"Keyboard.js","lineno":789,"path":"src\\input"},"scope":"static","name":"PAGE_DOWN","longname":"Phaser.KeyCode.PAGE_DOWN","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[21187,21194],"filename":"Keyboard.js","lineno":791,"path":"src\\input"},"scope":"static","name":"END","longname":"Phaser.KeyCode.END","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[21221,21229],"filename":"Keyboard.js","lineno":793,"path":"src\\input"},"scope":"static","name":"HOME","longname":"Phaser.KeyCode.HOME","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[21256,21264],"filename":"Keyboard.js","lineno":795,"path":"src\\input"},"scope":"static","name":"LEFT","longname":"Phaser.KeyCode.LEFT","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[21291,21297],"filename":"Keyboard.js","lineno":797,"path":"src\\input"},"scope":"static","name":"UP","longname":"Phaser.KeyCode.UP","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[21324,21333],"filename":"Keyboard.js","lineno":799,"path":"src\\input"},"scope":"static","name":"RIGHT","longname":"Phaser.KeyCode.RIGHT","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[21360,21368],"filename":"Keyboard.js","lineno":801,"path":"src\\input"},"scope":"static","name":"DOWN","longname":"Phaser.KeyCode.DOWN","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[21395,21403],"filename":"Keyboard.js","lineno":803,"path":"src\\input"},"scope":"static","name":"PLUS","longname":"Phaser.KeyCode.PLUS","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[21430,21439],"filename":"Keyboard.js","lineno":805,"path":"src\\input"},"scope":"static","name":"MINUS","longname":"Phaser.KeyCode.MINUS","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[21466,21476],"filename":"Keyboard.js","lineno":807,"path":"src\\input"},"scope":"static","name":"INSERT","longname":"Phaser.KeyCode.INSERT","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[21503,21513],"filename":"Keyboard.js","lineno":809,"path":"src\\input"},"scope":"static","name":"DELETE","longname":"Phaser.KeyCode.DELETE","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[21540,21548],"filename":"Keyboard.js","lineno":811,"path":"src\\input"},"scope":"static","name":"HELP","longname":"Phaser.KeyCode.HELP","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[21575,21588],"filename":"Keyboard.js","lineno":813,"path":"src\\input"},"scope":"static","name":"NUM_LOCK","longname":"Phaser.KeyCode.NUM_LOCK","kind":"member","memberof":"Phaser.KeyCode","___s":true},{"meta":{"range":[822,4957],"filename":"Mouse.js","lineno":21,"path":"src\\input"},"description":"The Mouse class is responsible for handling all aspects of mouse interaction with the browser.\r\rIt captures and processes mouse events that happen on the game canvas object.\rIt also adds a single `mouseup` listener to `window` which is used to capture the mouse being released\rwhen not over the game.\r\rYou should not normally access this class directly, but instead use a Phaser.Pointer object\rwhich normalises all game input for you, including accurate button handling.","kind":"class","classdesc":"Phaser.Mouse","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"Mouse","longname":"Phaser.Mouse","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[960,976],"filename":"Mouse.js","lineno":26,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"game","longname":"Phaser.Mouse#game","kind":"member","memberof":"Phaser.Mouse","scope":"instance","___s":true},{"meta":{"range":[1101,1124],"filename":"Mouse.js","lineno":32,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Input"]},"description":"A reference to the Phaser Input Manager.","name":"input"}],"access":"protected","name":"input","longname":"Phaser.Mouse#input","kind":"member","memberof":"Phaser.Mouse","scope":"instance","___s":true},{"meta":{"range":[1240,1272],"filename":"Mouse.js","lineno":37,"path":"src\\input"},"properties":[{"type":{"names":["object"]},"description":"The context under which callbacks are called.","name":"callbackContext"}],"name":"callbackContext","longname":"Phaser.Mouse#callbackContext","kind":"member","memberof":"Phaser.Mouse","scope":"instance","___s":true},{"meta":{"range":[1407,1436],"filename":"Mouse.js","lineno":42,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"A callback that can be fired when the mouse is pressed down.","name":"mouseDownCallback"}],"name":"mouseDownCallback","longname":"Phaser.Mouse#mouseDownCallback","kind":"member","memberof":"Phaser.Mouse","scope":"instance","___s":true},{"meta":{"range":[1591,1618],"filename":"Mouse.js","lineno":47,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"A callback that can be fired when the mouse is released from a pressed down state.","name":"mouseUpCallback"}],"name":"mouseUpCallback","longname":"Phaser.Mouse#mouseUpCallback","kind":"member","memberof":"Phaser.Mouse","scope":"instance","___s":true},{"meta":{"range":[1770,1798],"filename":"Mouse.js","lineno":52,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"A callback that can be fired when the mouse is no longer over the game canvas.","name":"mouseOutCallback"}],"name":"mouseOutCallback","longname":"Phaser.Mouse#mouseOutCallback","kind":"member","memberof":"Phaser.Mouse","scope":"instance","___s":true},{"meta":{"range":[1967,1996],"filename":"Mouse.js","lineno":57,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"A callback that can be fired when the mouse enters the game canvas (usually after a mouseout).","name":"mouseOverCallback"}],"name":"mouseOverCallback","longname":"Phaser.Mouse#mouseOverCallback","kind":"member","memberof":"Phaser.Mouse","scope":"instance","___s":true},{"meta":{"range":[2131,2161],"filename":"Mouse.js","lineno":62,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"A callback that can be fired when the mousewheel is used.","name":"mouseWheelCallback"}],"name":"mouseWheelCallback","longname":"Phaser.Mouse#mouseWheelCallback","kind":"member","memberof":"Phaser.Mouse","scope":"instance","___s":true},{"meta":{"range":[2337,2357],"filename":"Mouse.js","lineno":67,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"If true the DOM mouse events will have event.preventDefault applied to them, if false they will propagate fully.","name":"capture"}],"name":"capture","longname":"Phaser.Mouse#capture","kind":"member","memberof":"Phaser.Mouse","scope":"instance","___s":true},{"meta":{"range":[2707,2723],"filename":"Mouse.js","lineno":76,"path":"src\\input"},"description":"This property was removed in Phaser 2.4 and should no longer be used.\rInstead please see the Pointer button properties such as `Pointer.leftButton`, `Pointer.rightButton` and so on.\rOr Pointer.button holds the DOM event button value if you require that.","properties":[{"type":{"names":["number"]},"name":"button"}],"name":"button","longname":"Phaser.Mouse#button","kind":"member","memberof":"Phaser.Mouse","scope":"instance","___s":true},{"meta":{"range":[2863,2882],"filename":"Mouse.js","lineno":82,"path":"src\\input"},"description":"The direction of the _last_ mousewheel usage 1 for up -1 for down.","properties":[{"type":{"names":["number"]},"name":"wheelDelta"}],"name":"wheelDelta","longname":"Phaser.Mouse#wheelDelta","kind":"member","memberof":"Phaser.Mouse","scope":"instance","___s":true},{"meta":{"range":[3013,3032],"filename":"Mouse.js","lineno":89,"path":"src\\input"},"description":"Mouse input will only be processed if enabled.","properties":[{"type":{"names":["boolean"]},"name":"enabled"}],"defaultvalue":true,"name":"enabled","longname":"Phaser.Mouse#enabled","kind":"member","memberof":"Phaser.Mouse","scope":"instance","___s":true},{"meta":{"range":[3186,3205],"filename":"Mouse.js","lineno":95,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"If the mouse has been Pointer Locked successfully this will be set to true.","name":"locked"}],"defaultvalue":false,"name":"locked","longname":"Phaser.Mouse#locked","kind":"member","memberof":"Phaser.Mouse","scope":"instance","___s":true},{"meta":{"range":[3363,3389],"filename":"Mouse.js","lineno":101,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"If true Pointer.stop will be called if the mouse leaves the game canvas.","name":"stopOnGameOut"}],"defaultvalue":false,"name":"stopOnGameOut","longname":"Phaser.Mouse#stopOnGameOut","kind":"member","memberof":"Phaser.Mouse","scope":"instance","___s":true},{"meta":{"range":[3557,3595],"filename":"Mouse.js","lineno":107,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"This event is dispatched when the browser enters or leaves pointer lock state.","name":"pointerLock"}],"name":"pointerLock","longname":"Phaser.Mouse#pointerLock","kind":"member","memberof":"Phaser.Mouse","scope":"instance","___s":true},{"meta":{"range":[3865,3882],"filename":"Mouse.js","lineno":115,"path":"src\\input"},"description":"The browser mouse DOM event. Will be null if no mouse event has ever been received.\rAccess this property only inside a Mouse event handler and do not keep references to it.","properties":[{"type":{"names":["MouseEvent","null"]},"name":"event"}],"defaultvalue":null,"name":"event","longname":"Phaser.Mouse#event","kind":"member","memberof":"Phaser.Mouse","scope":"instance","___s":true},{"meta":{"range":[5002,5029],"filename":"Mouse.js","lineno":166,"path":"src\\input"},"kind":"constant","type":{"names":["number"]},"name":"NO_BUTTON","longname":"Phaser.Mouse.NO_BUTTON","memberof":"Phaser.Mouse","scope":"static","___s":true},{"meta":{"range":[5074,5102],"filename":"Mouse.js","lineno":172,"path":"src\\input"},"kind":"constant","type":{"names":["number"]},"name":"LEFT_BUTTON","longname":"Phaser.Mouse.LEFT_BUTTON","memberof":"Phaser.Mouse","scope":"static","___s":true},{"meta":{"range":[5147,5177],"filename":"Mouse.js","lineno":178,"path":"src\\input"},"kind":"constant","type":{"names":["number"]},"name":"MIDDLE_BUTTON","longname":"Phaser.Mouse.MIDDLE_BUTTON","memberof":"Phaser.Mouse","scope":"static","___s":true},{"meta":{"range":[5222,5251],"filename":"Mouse.js","lineno":184,"path":"src\\input"},"kind":"constant","type":{"names":["number"]},"name":"RIGHT_BUTTON","longname":"Phaser.Mouse.RIGHT_BUTTON","memberof":"Phaser.Mouse","scope":"static","___s":true},{"meta":{"range":[5296,5324],"filename":"Mouse.js","lineno":190,"path":"src\\input"},"kind":"constant","type":{"names":["number"]},"name":"BACK_BUTTON","longname":"Phaser.Mouse.BACK_BUTTON","memberof":"Phaser.Mouse","scope":"static","___s":true},{"meta":{"range":[5369,5400],"filename":"Mouse.js","lineno":196,"path":"src\\input"},"kind":"constant","type":{"names":["number"]},"name":"FORWARD_BUTTON","longname":"Phaser.Mouse.FORWARD_BUTTON","memberof":"Phaser.Mouse","scope":"static","___s":true},{"meta":{"range":[5448,5473],"filename":"Mouse.js","lineno":202,"path":"src\\input"},"kind":"constant","type":{"names":["number"]},"name":"WHEEL_UP","longname":"Phaser.Mouse.WHEEL_UP","memberof":"Phaser.Mouse","scope":"static","___s":true},{"meta":{"range":[5521,5549],"filename":"Mouse.js","lineno":208,"path":"src\\input"},"kind":"constant","type":{"names":["number"]},"name":"WHEEL_DOWN","longname":"Phaser.Mouse.WHEEL_DOWN","memberof":"Phaser.Mouse","scope":"static","___s":true},{"meta":{"range":[5588,5676],"filename":"Mouse.js","lineno":212,"path":"src\\input"},"description":"Starts the event listeners running.","kind":"function","name":"start","memberof":"Phaser.Mouse","longname":"Phaser.Mouse#start","scope":"instance","___s":true},{"meta":{"range":[8099,8332],"filename":"Mouse.js","lineno":296,"path":"src\\input"},"description":"The internal method that handles the mouse down event from the browser.","kind":"function","name":"onMouseDown","params":[{"type":{"names":["MouseEvent"]},"description":"The native event from the browser. This gets stored in Mouse.event.","name":"event"}],"memberof":"Phaser.Mouse","longname":"Phaser.Mouse#onMouseDown","scope":"instance","___s":true},{"meta":{"range":[8819,9052],"filename":"Mouse.js","lineno":326,"path":"src\\input"},"description":"The internal method that handles the mouse move event from the browser.","kind":"function","name":"onMouseMove","params":[{"type":{"names":["MouseEvent"]},"description":"The native event from the browser. This gets stored in Mouse.event.","name":"event"}],"memberof":"Phaser.Mouse","longname":"Phaser.Mouse#onMouseMove","scope":"instance","___s":true},{"meta":{"range":[9538,9767],"filename":"Mouse.js","lineno":356,"path":"src\\input"},"description":"The internal method that handles the mouse up event from the browser.","kind":"function","name":"onMouseUp","params":[{"type":{"names":["MouseEvent"]},"description":"The native event from the browser. This gets stored in Mouse.event.","name":"event"}],"memberof":"Phaser.Mouse","longname":"Phaser.Mouse#onMouseUp","scope":"instance","___s":true},{"meta":{"range":[10247,10488],"filename":"Mouse.js","lineno":386,"path":"src\\input"},"description":"The internal method that handles the mouse up event from the window.","kind":"function","name":"onMouseUpGlobal","params":[{"type":{"names":["MouseEvent"]},"description":"The native event from the browser. This gets stored in Mouse.event.","name":"event"}],"memberof":"Phaser.Mouse","longname":"Phaser.Mouse#onMouseUpGlobal","scope":"instance","___s":true},{"meta":{"range":[10855,11098],"filename":"Mouse.js","lineno":408,"path":"src\\input"},"description":"The internal method that handles the mouse out event from the window.","kind":"function","name":"onMouseOutGlobal","params":[{"type":{"names":["MouseEvent"]},"description":"The native event from the browser. This gets stored in Mouse.event.","name":"event"}],"memberof":"Phaser.Mouse","longname":"Phaser.Mouse#onMouseOutGlobal","scope":"instance","___s":true},{"meta":{"range":[12030,12268],"filename":"Mouse.js","lineno":444,"path":"src\\input"},"description":"The internal method that handles the mouse out event from the browser.","kind":"function","name":"onMouseOut","params":[{"type":{"names":["MouseEvent"]},"description":"The native event from the browser. This gets stored in Mouse.event.","name":"event"}],"memberof":"Phaser.Mouse","longname":"Phaser.Mouse#onMouseOut","scope":"instance","___s":true},{"meta":{"range":[12869,13109],"filename":"Mouse.js","lineno":480,"path":"src\\input"},"description":"The internal method that handles the mouse over event from the browser.","kind":"function","name":"onMouseOver","params":[{"type":{"names":["MouseEvent"]},"description":"The native event from the browser. This gets stored in Mouse.event.","name":"event"}],"memberof":"Phaser.Mouse","longname":"Phaser.Mouse#onMouseOver","scope":"instance","___s":true},{"meta":{"range":[13469,13683],"filename":"Mouse.js","lineno":504,"path":"src\\input"},"description":"The internal method that handles the mouse wheel event from the browser.","kind":"function","name":"onMouseWheel","params":[{"type":{"names":["MouseEvent"]},"description":"The native event from the browser.","name":"event"}],"memberof":"Phaser.Mouse","longname":"Phaser.Mouse#onMouseWheel","scope":"instance","___s":true},{"meta":{"range":[14203,14642],"filename":"Mouse.js","lineno":533,"path":"src\\input"},"description":"If the browser supports it you can request that the pointer be locked to the browser window.\rThis is classically known as 'FPS controls', where the pointer can't leave the browser until the user presses an exit key.\rIf the browser successfully enters a locked state the event Phaser.Mouse.pointerLock will be dispatched and the first parameter will be 'true'.","kind":"function","name":"requestPointerLock","memberof":"Phaser.Mouse","longname":"Phaser.Mouse#requestPointerLock","scope":"instance","___s":true},{"meta":{"range":[15449,15654],"filename":"Mouse.js","lineno":562,"path":"src\\input"},"description":"Internal pointerLockChange handler.","kind":"function","name":"pointerLockChange","params":[{"type":{"names":["Event"]},"description":"The native event from the browser. This gets stored in Mouse.event.","name":"event"}],"memberof":"Phaser.Mouse","longname":"Phaser.Mouse#pointerLockChange","scope":"instance","___s":true},{"meta":{"range":[16228,16332],"filename":"Mouse.js","lineno":587,"path":"src\\input"},"description":"Internal release pointer lock handler.","kind":"function","name":"releasePointerLock","memberof":"Phaser.Mouse","longname":"Phaser.Mouse#releasePointerLock","scope":"instance","___s":true},{"meta":{"range":[16841,16918],"filename":"Mouse.js","lineno":603,"path":"src\\input"},"description":"Stop the event listeners.","kind":"function","name":"stop","memberof":"Phaser.Mouse","longname":"Phaser.Mouse#stop","scope":"instance","___s":true},{"meta":{"range":[976,3903],"filename":"MSPointer.js","lineno":23,"path":"src\\input"},"description":"The MSPointer class handles Microsoft touch interactions with the game and the resulting Pointer objects.\r\rIt will work only in Internet Explorer 10+ and Windows Store or Windows Phone 8 apps using JavaScript.\rhttp://msdn.microsoft.com/en-us/library/ie/hh673557(v=vs.85).aspx\r\rYou should not normally access this class directly, but instead use a Phaser.Pointer object which \rnormalises all game input for you including accurate button handling.\r\rPlease note that at the current time of writing Phaser does not yet support chorded button interactions:\rhttp://www.w3.org/TR/pointerevents/#chorded-button-interactions","kind":"class","classdesc":"Phaser.MSPointer","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"MSPointer","longname":"Phaser.MSPointer","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1118,1134],"filename":"MSPointer.js","lineno":28,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"game","longname":"Phaser.MSPointer#game","kind":"member","memberof":"Phaser.MSPointer","scope":"instance","___s":true},{"meta":{"range":[1259,1282],"filename":"MSPointer.js","lineno":34,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Input"]},"description":"A reference to the Phaser Input Manager.","name":"input"}],"access":"protected","name":"input","longname":"Phaser.MSPointer#input","kind":"member","memberof":"Phaser.MSPointer","scope":"instance","___s":true},{"meta":{"range":[1417,1449],"filename":"MSPointer.js","lineno":39,"path":"src\\input"},"properties":[{"type":{"names":["object"]},"description":"The context under which callbacks are called (defaults to game).","name":"callbackContext"}],"name":"callbackContext","longname":"Phaser.MSPointer#callbackContext","kind":"member","memberof":"Phaser.MSPointer","scope":"instance","___s":true},{"meta":{"range":[1580,1611],"filename":"MSPointer.js","lineno":44,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"A callback that can be fired on a MSPointerDown event.","name":"pointerDownCallback"}],"name":"pointerDownCallback","longname":"Phaser.MSPointer#pointerDownCallback","kind":"member","memberof":"Phaser.MSPointer","scope":"instance","___s":true},{"meta":{"range":[1742,1773],"filename":"MSPointer.js","lineno":49,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"A callback that can be fired on a MSPointerMove event.","name":"pointerMoveCallback"}],"name":"pointerMoveCallback","longname":"Phaser.MSPointer#pointerMoveCallback","kind":"member","memberof":"Phaser.MSPointer","scope":"instance","___s":true},{"meta":{"range":[1900,1929],"filename":"MSPointer.js","lineno":54,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"A callback that can be fired on a MSPointerUp event.","name":"pointerUpCallback"}],"name":"pointerUpCallback","longname":"Phaser.MSPointer#pointerUpCallback","kind":"member","memberof":"Phaser.MSPointer","scope":"instance","___s":true},{"meta":{"range":[2103,2122],"filename":"MSPointer.js","lineno":59,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"If true the Pointer events will have event.preventDefault applied to them, if false they will propagate fully.","name":"capture"}],"name":"capture","longname":"Phaser.MSPointer#capture","kind":"member","memberof":"Phaser.MSPointer","scope":"instance","___s":true},{"meta":{"range":[2456,2472],"filename":"MSPointer.js","lineno":67,"path":"src\\input"},"description":"This property was removed in Phaser 2.4 and should no longer be used.\rInstead please see the Pointer button properties such as `Pointer.leftButton`, `Pointer.rightButton` and so on.\rOr Pointer.button holds the DOM event button value if you require that.","properties":[{"type":{"names":["number"]},"name":"button"}],"name":"button","longname":"Phaser.MSPointer#button","kind":"member","memberof":"Phaser.MSPointer","scope":"instance","___s":true},{"meta":{"range":[2746,2763],"filename":"MSPointer.js","lineno":75,"path":"src\\input"},"description":"The browser MSPointer DOM event. Will be null if no event has ever been received.\rAccess this property only inside a Pointer event handler and do not keep references to it.","properties":[{"type":{"names":["MSPointerEvent","null"]},"name":"event"}],"defaultvalue":null,"name":"event","longname":"Phaser.MSPointer#event","kind":"member","memberof":"Phaser.MSPointer","scope":"instance","___s":true},{"meta":{"range":[2898,2917],"filename":"MSPointer.js","lineno":82,"path":"src\\input"},"description":"MSPointer input will only be processed if enabled.","properties":[{"type":{"names":["boolean"]},"name":"enabled"}],"defaultvalue":true,"name":"enabled","longname":"Phaser.MSPointer#enabled","kind":"member","memberof":"Phaser.MSPointer","scope":"instance","___s":true},{"meta":{"range":[3946,4038],"filename":"MSPointer.js","lineno":124,"path":"src\\input"},"description":"Starts the event listeners running.","kind":"function","name":"start","memberof":"Phaser.MSPointer","longname":"Phaser.MSPointer#start","scope":"instance","___s":true},{"meta":{"range":[6432,6612],"filename":"MSPointer.js","lineno":193,"path":"src\\input"},"description":"The function that handles the PointerDown event.","kind":"function","name":"onPointerDown","params":[{"type":{"names":["PointerEvent"]},"description":"The native DOM event.","name":"event"}],"memberof":"Phaser.MSPointer","longname":"Phaser.MSPointer#onPointerDown","scope":"instance","___s":true},{"meta":{"range":[7303,7475],"filename":"MSPointer.js","lineno":231,"path":"src\\input"},"description":"The function that handles the PointerMove event.","kind":"function","name":"onPointerMove","params":[{"type":{"names":["PointerEvent"]},"description":"The native DOM event.","name":"event"}],"memberof":"Phaser.MSPointer","longname":"Phaser.MSPointer#onPointerMove","scope":"instance","___s":true},{"meta":{"range":[8166,8334],"filename":"MSPointer.js","lineno":268,"path":"src\\input"},"description":"The function that handles the PointerUp event.","kind":"function","name":"onPointerUp","params":[{"type":{"names":["PointerEvent"]},"description":"The native DOM event.","name":"event"}],"memberof":"Phaser.MSPointer","longname":"Phaser.MSPointer#onPointerUp","scope":"instance","___s":true},{"meta":{"range":[9017,9271],"filename":"MSPointer.js","lineno":305,"path":"src\\input"},"description":"The internal method that handles the mouse up event from the window.","kind":"function","name":"onPointerUpGlobal","params":[{"type":{"names":["PointerEvent"]},"description":"The native event from the browser. This gets stored in MSPointer.event.","name":"event"}],"memberof":"Phaser.MSPointer","longname":"Phaser.MSPointer#onPointerUpGlobal","scope":"instance","___s":true},{"meta":{"range":[9755,10007],"filename":"MSPointer.js","lineno":329,"path":"src\\input"},"description":"The internal method that handles the pointer out event from the browser.","kind":"function","name":"onPointerOut","params":[{"type":{"names":["PointerEvent"]},"description":"The native event from the browser. This gets stored in MSPointer.event.","name":"event"}],"memberof":"Phaser.MSPointer","longname":"Phaser.MSPointer#onPointerOut","scope":"instance","___s":true},{"meta":{"range":[11131,11383],"filename":"MSPointer.js","lineno":384,"path":"src\\input"},"description":"The internal method that handles the pointer out event from the browser.","kind":"function","name":"onPointerOut","params":[{"type":{"names":["PointerEvent"]},"description":"The native event from the browser. This gets stored in MSPointer.event.","name":"event"}],"memberof":"Phaser.MSPointer","longname":"Phaser.MSPointer#onPointerOut","scope":"instance","___s":true},{"meta":{"range":[12107,12188],"filename":"MSPointer.js","lineno":420,"path":"src\\input"},"description":"Stop the event listeners.","kind":"function","name":"stop","memberof":"Phaser.MSPointer","longname":"Phaser.MSPointer#stop","scope":"instance","___s":true},{"meta":{"range":[688,12969],"filename":"Pointer.js","lineno":16,"path":"src\\input"},"description":"A Pointer object is used by the Mouse, Touch and MSPoint managers and represents a single finger on the touch screen.","kind":"class","classdesc":"Phaser.Pointer","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["number"]},"description":"The ID of the Pointer object within the game. Each game can have up to 10 active pointers.","name":"id"},{"type":{"names":["Phaser.PointerMode"]},"defaultvalue":"(CURSOR|CONTACT)","description":"The operational mode of this pointer, eg. CURSOR or TOUCH.","name":"pointerMode"}],"name":"Pointer","longname":"Phaser.Pointer","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[845,861],"filename":"Pointer.js","lineno":21,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"game","longname":"Phaser.Pointer#game","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[1009,1021],"filename":"Pointer.js","lineno":26,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The ID of the Pointer object within the game. Each game can have up to 10 active pointers.","name":"id"}],"name":"id","longname":"Phaser.Pointer#id","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[1128,1154],"filename":"Pointer.js","lineno":32,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"readonly":true,"name":"type","longname":"Phaser.Pointer#type","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[1323,1341],"filename":"Pointer.js","lineno":38,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"A Pointer object that exists is allowed to be checked for physics collisions and overlaps.","name":"exists"}],"defaultvalue":true,"name":"exists","longname":"Phaser.Pointer#exists","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[1515,1534],"filename":"Pointer.js","lineno":44,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The identifier property of the Pointer as set by the DOM event when this Pointer is started.","name":"identifier"}],"defaultvalue":0,"name":"identifier","longname":"Phaser.Pointer#identifier","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[1751,1772],"filename":"Pointer.js","lineno":50,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The pointerId property of the Pointer as set by the DOM event when this Pointer is started. The browser can and will recycle this value.","name":"pointerId"}],"defaultvalue":null,"name":"pointerId","longname":"Phaser.Pointer#pointerId","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[1888,1978],"filename":"Pointer.js","lineno":55,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.PointerMode"]},"description":"The operational mode of this pointer.","name":"pointerMode"}],"name":"pointerMode","longname":"Phaser.Pointer#pointerMode","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[2141,2159],"filename":"Pointer.js","lineno":61,"path":"src\\input"},"properties":[{"type":{"names":["any"]},"description":"The target property of the Pointer as set by the DOM event when this Pointer is started.","name":"target"}],"defaultvalue":null,"name":"target","longname":"Phaser.Pointer#target","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[2486,2504],"filename":"Pointer.js","lineno":70,"path":"src\\input"},"description":"The button property of the most recent DOM event when this Pointer is started.\rYou should not rely on this value for accurate button detection, instead use the Pointer properties\r`leftButton`, `rightButton`, `middleButton` and so on.","properties":[{"type":{"names":["any"]},"name":"button"}],"defaultvalue":null,"name":"button","longname":"Phaser.Pointer#button","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[2883,2958],"filename":"Pointer.js","lineno":81,"path":"src\\input"},"description":"If this Pointer is a Mouse or Pen / Stylus then you can access its left button directly through this property.\r\rThe DeviceButton has its own properties such as `isDown`, `duration` and methods like `justReleased` for more fine-grained\rbutton control.","properties":[{"type":{"names":["Phaser.DeviceButton"]},"name":"leftButton"}],"name":"leftButton","longname":"Phaser.Pointer#leftButton","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[3431,3510],"filename":"Pointer.js","lineno":94,"path":"src\\input"},"description":"If this Pointer is a Mouse or Pen / Stylus then you can access its middle button directly through this property.\r\rThe DeviceButton has its own properties such as `isDown`, `duration` and methods like `justReleased` for more fine-grained\rbutton control.\r\rPlease see the DeviceButton docs for details on browser button limitations.","properties":[{"type":{"names":["Phaser.DeviceButton"]},"name":"middleButton"}],"name":"middleButton","longname":"Phaser.Pointer#middleButton","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[3981,4058],"filename":"Pointer.js","lineno":107,"path":"src\\input"},"description":"If this Pointer is a Mouse or Pen / Stylus then you can access its right button directly through this property.\r\rThe DeviceButton has its own properties such as `isDown`, `duration` and methods like `justReleased` for more fine-grained\rbutton control.\r\rPlease see the DeviceButton docs for details on browser button limitations.","properties":[{"type":{"names":["Phaser.DeviceButton"]},"name":"rightButton"}],"name":"rightButton","longname":"Phaser.Pointer#rightButton","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[4532,4607],"filename":"Pointer.js","lineno":120,"path":"src\\input"},"description":"If this Pointer is a Mouse or Pen / Stylus then you can access its X1 (back) button directly through this property.\r\rThe DeviceButton has its own properties such as `isDown`, `duration` and methods like `justReleased` for more fine-grained\rbutton control.\r\rPlease see the DeviceButton docs for details on browser button limitations.","properties":[{"type":{"names":["Phaser.DeviceButton"]},"name":"backButton"}],"name":"backButton","longname":"Phaser.Pointer#backButton","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[5087,5168],"filename":"Pointer.js","lineno":133,"path":"src\\input"},"description":"If this Pointer is a Mouse or Pen / Stylus then you can access its X2 (forward) button directly through this property.\r\rThe DeviceButton has its own properties such as `isDown`, `duration` and methods like `justReleased` for more fine-grained\rbutton control.\r\rPlease see the DeviceButton docs for details on browser button limitations.","properties":[{"type":{"names":["Phaser.DeviceButton"]},"name":"forwardButton"}],"name":"forwardButton","longname":"Phaser.Pointer#forwardButton","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[5632,5711],"filename":"Pointer.js","lineno":146,"path":"src\\input"},"description":"If this Pointer is a Pen / Stylus then you can access its eraser button directly through this property.\r\rThe DeviceButton has its own properties such as `isDown`, `duration` and methods like `justReleased` for more fine-grained\rbutton control.\r\rPlease see the DeviceButton docs for details on browser button limitations.","properties":[{"type":{"names":["Phaser.DeviceButton"]},"name":"eraserButton"}],"name":"eraserButton","longname":"Phaser.Pointer#eraserButton","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[6538,6561],"filename":"Pointer.js","lineno":176,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"true if the Pointer is over the game canvas, otherwise false.","name":"withinGame"}],"name":"withinGame","longname":"Phaser.Pointer#withinGame","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[6778,6795],"filename":"Pointer.js","lineno":181,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The horizontal coordinate of the Pointer within the application's client area at which the event occurred (as opposed to the coordinates within the page).","name":"clientX"}],"name":"clientX","longname":"Phaser.Pointer#clientX","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[7010,7027],"filename":"Pointer.js","lineno":186,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The vertical coordinate of the Pointer within the application's client area at which the event occurred (as opposed to the coordinates within the page).","name":"clientY"}],"name":"clientY","longname":"Phaser.Pointer#clientY","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[7156,7171],"filename":"Pointer.js","lineno":191,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The horizontal coordinate of the Pointer relative to whole document.","name":"pageX"}],"name":"pageX","longname":"Phaser.Pointer#pageX","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[7298,7313],"filename":"Pointer.js","lineno":196,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The vertical coordinate of the Pointer relative to whole document.","name":"pageY"}],"name":"pageY","longname":"Phaser.Pointer#pageY","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[7440,7457],"filename":"Pointer.js","lineno":201,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The horizontal coordinate of the Pointer relative to the screen.","name":"screenX"}],"name":"screenX","longname":"Phaser.Pointer#screenX","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[7582,7599],"filename":"Pointer.js","lineno":206,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The vertical coordinate of the Pointer relative to the screen.","name":"screenY"}],"name":"screenY","longname":"Phaser.Pointer#screenY","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[7762,7783],"filename":"Pointer.js","lineno":212,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The horizontal raw relative movement of the Pointer in pixels since last event.","name":"rawMovementX"}],"defaultvalue":0,"name":"rawMovementX","longname":"Phaser.Pointer#rawMovementX","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[7944,7965],"filename":"Pointer.js","lineno":218,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The vertical raw relative movement of the Pointer in pixels since last event.","name":"rawMovementY"}],"defaultvalue":0,"name":"rawMovementY","longname":"Phaser.Pointer#rawMovementY","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[8131,8149],"filename":"Pointer.js","lineno":224,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The horizontal processed relative movement of the Pointer in pixels since last event.","name":"movementX"}],"defaultvalue":0,"name":"movementX","longname":"Phaser.Pointer#movementX","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[8313,8331],"filename":"Pointer.js","lineno":230,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The vertical processed relative movement of the Pointer in pixels since last event.","name":"movementY"}],"defaultvalue":0,"name":"movementY","longname":"Phaser.Pointer#movementY","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[8505,8516],"filename":"Pointer.js","lineno":236,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The horizontal coordinate of the Pointer. This value is automatically scaled based on the game scale.","name":"x"}],"name":"x","longname":"Phaser.Pointer#x","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[8688,8699],"filename":"Pointer.js","lineno":242,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The vertical coordinate of the Pointer. This value is automatically scaled based on the game scale.","name":"y"}],"name":"y","longname":"Phaser.Pointer#y","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[8835,8860],"filename":"Pointer.js","lineno":247,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"If the Pointer is a mouse or pen / stylus this is true, otherwise false.","name":"isMouse"}],"name":"isMouse","longname":"Phaser.Pointer#isMouse","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[9177,9196],"filename":"Pointer.js","lineno":255,"path":"src\\input"},"description":"If the Pointer is touching the touchscreen, or *any* mouse or pen button is held down, isDown is set to true.\rIf you need to check a specific mouse or pen button then use the button properties, i.e. Pointer.rightButton.isDown.","properties":[{"type":{"names":["boolean"]},"name":"isDown"}],"defaultvalue":false,"name":"isDown","longname":"Phaser.Pointer#isDown","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[9506,9522],"filename":"Pointer.js","lineno":263,"path":"src\\input"},"description":"If the Pointer is not touching the touchscreen, or *all* mouse or pen buttons are up, isUp is set to true.\rIf you need to check a specific mouse or pen button then use the button properties, i.e. Pointer.rightButton.isUp.","properties":[{"type":{"names":["boolean"]},"name":"isUp"}],"defaultvalue":true,"name":"isUp","longname":"Phaser.Pointer#isUp","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[9674,9691],"filename":"Pointer.js","lineno":269,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"A timestamp representing when the Pointer first touched the touchscreen.","name":"timeDown"}],"defaultvalue":0,"name":"timeDown","longname":"Phaser.Pointer#timeDown","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[9832,9847],"filename":"Pointer.js","lineno":275,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"A timestamp representing when the Pointer left the touchscreen.","name":"timeUp"}],"defaultvalue":0,"name":"timeUp","longname":"Phaser.Pointer#timeUp","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[10003,10027],"filename":"Pointer.js","lineno":281,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"A timestamp representing when the Pointer was last tapped or clicked.","name":"previousTapTime"}],"defaultvalue":0,"name":"previousTapTime","longname":"Phaser.Pointer#previousTapTime","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[10186,10207],"filename":"Pointer.js","lineno":287,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The total number of times this Pointer has been touched to the touchscreen.","name":"totalTouches"}],"defaultvalue":0,"name":"totalTouches","longname":"Phaser.Pointer#totalTouches","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[10358,10398],"filename":"Pointer.js","lineno":293,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The number of milliseconds since the last click or touch event.","name":"msSinceLastClick"}],"name":"msSinceLastClick","longname":"Phaser.Pointer#msSinceLastClick","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[10548,10572],"filename":"Pointer.js","lineno":299,"path":"src\\input"},"properties":[{"type":{"names":["any"]},"description":"The Game Object this Pointer is currently over / touching / dragging.","name":"targetObject"}],"defaultvalue":null,"name":"targetObject","longname":"Phaser.Pointer#targetObject","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[11129,11160],"filename":"Pointer.js","lineno":310,"path":"src\\input"},"description":"This array is erased and re-populated every time this Pointer is updated. It contains references to all\rof the Game Objects that were considered as being valid for processing by this Pointer, this frame. To be\rvalid they must have suitable a `priorityID`, be Input enabled, visible and actually have the Pointer over\rthem. You can check the contents of this array in events such as `onInputDown`, but beware it is reset\revery frame.","properties":[{"type":{"names":["array"]},"name":"interactiveCandidates"}],"defaultvalue":"[]","defaultvaluetype":"array","name":"interactiveCandidates","longname":"Phaser.Pointer#interactiveCandidates","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[11336,11355],"filename":"Pointer.js","lineno":316,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"An active pointer is one that is currently pressed down on the display. A Mouse is always active.","name":"active"}],"defaultvalue":false,"name":"active","longname":"Phaser.Pointer#active","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[11547,11565],"filename":"Pointer.js","lineno":322,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"A dirty pointer needs to re-poll any interactive objects it may have been over, regardless if it has moved or not.","name":"dirty"}],"defaultvalue":false,"name":"dirty","longname":"Phaser.Pointer#dirty","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[11721,11755],"filename":"Pointer.js","lineno":327,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"A Phaser.Point object containing the current x/y values of the pointer on the display.","name":"position"}],"name":"position","longname":"Phaser.Pointer#position","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[11940,11978],"filename":"Pointer.js","lineno":332,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"A Phaser.Point object containing the x/y values of the pointer when it was last in a down state on the display.","name":"positionDown"}],"name":"positionDown","longname":"Phaser.Pointer#positionDown","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[12143,12179],"filename":"Pointer.js","lineno":337,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"A Phaser.Point object containing the x/y values of the pointer when it was last released.","name":"positionUp"}],"name":"positionUp","longname":"Phaser.Pointer#positionUp","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[12422,12463],"filename":"Pointer.js","lineno":344,"path":"src\\input"},"description":"A Phaser.Circle that is centered on the x/y coordinates of this pointer, useful for hit detection.\rThe Circle size is 44px (Apples recommended \"finger tip\" size).","properties":[{"type":{"names":["Phaser.Circle"]},"name":"circle"}],"name":"circle","longname":"Phaser.Pointer#circle","kind":"member","memberof":"Phaser.Pointer","scope":"instance","___s":true},{"meta":{"range":[13036,13064],"filename":"Pointer.js","lineno":368,"path":"src\\input"},"description":"No buttons at all.","kind":"constant","type":{"names":["number"]},"name":"NO_BUTTON","longname":"Phaser.Pointer.NO_BUTTON","memberof":"Phaser.Pointer","scope":"static","___s":true},{"meta":{"range":[13194,13224],"filename":"Pointer.js","lineno":375,"path":"src\\input"},"description":"The Left Mouse button, or in PointerEvent devices a Touch contact or Pen contact.","kind":"constant","type":{"names":["number"]},"name":"LEFT_BUTTON","longname":"Phaser.Pointer.LEFT_BUTTON","memberof":"Phaser.Pointer","scope":"static","___s":true},{"meta":{"range":[13359,13390],"filename":"Pointer.js","lineno":382,"path":"src\\input"},"description":"The Right Mouse button, or in PointerEvent devices a Pen contact with a barrel button.","kind":"constant","type":{"names":["number"]},"name":"RIGHT_BUTTON","longname":"Phaser.Pointer.RIGHT_BUTTON","memberof":"Phaser.Pointer","scope":"static","___s":true},{"meta":{"range":[13463,13495],"filename":"Pointer.js","lineno":389,"path":"src\\input"},"description":"The Middle Mouse button.","kind":"constant","type":{"names":["number"]},"name":"MIDDLE_BUTTON","longname":"Phaser.Pointer.MIDDLE_BUTTON","memberof":"Phaser.Pointer","scope":"static","___s":true},{"meta":{"range":[13764,13794],"filename":"Pointer.js","lineno":397,"path":"src\\input"},"description":"The X1 button. This is typically the mouse Back button, but is often reconfigured.\rOn Linux (GTK) this is unsupported. On Windows if advanced pointer software (such as IntelliPoint) is installed this doesn't register.","kind":"constant","type":{"names":["number"]},"name":"BACK_BUTTON","longname":"Phaser.Pointer.BACK_BUTTON","memberof":"Phaser.Pointer","scope":"static","___s":true},{"meta":{"range":[14066,14100],"filename":"Pointer.js","lineno":405,"path":"src\\input"},"description":"The X2 button. This is typically the mouse Forward button, but is often reconfigured.\rOn Linux (GTK) this is unsupported. On Windows if advanced pointer software (such as IntelliPoint) is installed this doesn't register.","kind":"constant","type":{"names":["number"]},"name":"FORWARD_BUTTON","longname":"Phaser.Pointer.FORWARD_BUTTON","memberof":"Phaser.Pointer","scope":"static","___s":true},{"meta":{"range":[14210,14243],"filename":"Pointer.js","lineno":412,"path":"src\\input"},"description":"The Eraser pen button on PointerEvent supported devices only.","kind":"constant","type":{"names":["number"]},"name":"ERASER_BUTTON","longname":"Phaser.Pointer.ERASER_BUTTON","memberof":"Phaser.Pointer","scope":"static","___s":true},{"meta":{"range":[14284,14417],"filename":"Pointer.js","lineno":416,"path":"src\\input"},"description":"Resets the states of all the button booleans.","kind":"function","name":"resetButtons","access":"protected","memberof":"Phaser.Pointer","longname":"Phaser.Pointer#resetButtons","scope":"instance","___s":true},{"meta":{"range":[16978,17208],"filename":"Pointer.js","lineno":527,"path":"src\\input"},"description":"Called when the event.buttons property changes from zero.\rContains a button bitmask.","kind":"function","name":"updateButtons","access":"protected","params":[{"type":{"names":["MouseEvent"]},"description":"The DOM event.","name":"event"}],"memberof":"Phaser.Pointer","longname":"Phaser.Pointer#updateButtons","scope":"instance","___s":true},{"meta":{"range":[18791,18962],"filename":"Pointer.js","lineno":587,"path":"src\\input"},"description":"Called when the Pointer is pressed onto the touchscreen.","kind":"function","name":"start","params":[{"type":{"names":["any"]},"description":"The DOM event from the browser.","name":"event"}],"memberof":"Phaser.Pointer","longname":"Phaser.Pointer#start","scope":"instance","___s":true},{"meta":{"range":[20760,20844],"filename":"Pointer.js","lineno":657,"path":"src\\input"},"description":"Called by the Input Manager.","kind":"function","name":"update","memberof":"Phaser.Pointer","longname":"Phaser.Pointer#update","scope":"instance","___s":true},{"meta":{"range":[22326,22606],"filename":"Pointer.js","lineno":709,"path":"src\\input"},"description":"Called when the Pointer is moved.","kind":"function","name":"move","params":[{"type":{"names":["MouseEvent","PointerEvent","TouchEvent"]},"description":"The event passed up from the input handler.","name":"event"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Was this called from the click event?","name":"fromClick"}],"memberof":"Phaser.Pointer","longname":"Phaser.Pointer#move","scope":"instance","___s":true},{"meta":{"range":[25396,25808],"filename":"Pointer.js","lineno":806,"path":"src\\input"},"description":"Process all interactive objects to find out which ones were updated in the recent Pointer move.","kind":"function","name":"processInteractiveObjects","access":"protected","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Was this called from the click event?","name":"fromClick"}],"returns":[{"type":{"names":["boolean"]},"description":"True if this method processes an object (i.e. a Sprite becomes the Pointers currentTarget), otherwise false."}],"memberof":"Phaser.Pointer","longname":"Phaser.Pointer#processInteractiveObjects","scope":"instance","___s":true},{"meta":{"range":[28777,29492],"filename":"Pointer.js","lineno":886,"path":"src\\input"},"description":"This will change the `Pointer.targetObject` object to be the one provided.\r\rThis allows you to have fine-grained control over which object the Pointer is targeting.\r\rNote that even if you set a new Target here, it is still able to be replaced by any other valid\rtarget during the next Pointer update.","kind":"function","name":"swapTarget","params":[{"type":{"names":["Phaser.InputHandler"]},"description":"The new target for this Pointer. Note this is an `InputHandler`, so don't pass a Sprite, instead pass `sprite.input` to it.","name":"newTarget"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the new target AND the old one will NOT dispatch their `onInputOver` or `onInputOut` events.","name":"silent"}],"memberof":"Phaser.Pointer","longname":"Phaser.Pointer#swapTarget","scope":"instance","___s":true},{"meta":{"range":[31104,31316],"filename":"Pointer.js","lineno":945,"path":"src\\input"},"description":"Called when the Pointer leaves the target area.","kind":"function","name":"leave","params":[{"type":{"names":["MouseEvent","PointerEvent","TouchEvent"]},"description":"The event passed up from the input handler.","name":"event"}],"memberof":"Phaser.Pointer","longname":"Phaser.Pointer#leave","scope":"instance","___s":true},{"meta":{"range":[31435,31646],"filename":"Pointer.js","lineno":958,"path":"src\\input"},"description":"Called when the Pointer leaves the touchscreen.","kind":"function","name":"stop","params":[{"type":{"names":["MouseEvent","PointerEvent","TouchEvent"]},"description":"The event passed up from the input handler.","name":"event"}],"memberof":"Phaser.Pointer","longname":"Phaser.Pointer#stop","scope":"instance","___s":true},{"meta":{"range":[33833,34490],"filename":"Pointer.js","lineno":1041,"path":"src\\input"},"description":"The Pointer is considered justPressed if the time it was pressed onto the touchscreen or clicked is less than justPressedRate.\rNote that calling justPressed doesn't reset the pressed status of the Pointer, it will return `true` for as long as the duration is valid.\rIf you wish to check if the Pointer was pressed down just once then see the Sprite.events.onInputDown event.","kind":"function","name":"justPressed","params":[{"type":{"names":["number"]},"optional":true,"description":"The time to check against. If none given it will use InputManager.justPressedRate.","name":"duration"}],"returns":[{"type":{"names":["boolean"]},"description":"true if the Pointer was pressed down within the duration given."}],"memberof":"Phaser.Pointer","longname":"Phaser.Pointer#justPressed","scope":"instance","___s":true},{"meta":{"range":[34709,35338],"filename":"Pointer.js","lineno":1057,"path":"src\\input"},"description":"The Pointer is considered justReleased if the time it left the touchscreen is less than justReleasedRate.\rNote that calling justReleased doesn't reset the pressed status of the Pointer, it will return `true` for as long as the duration is valid.\rIf you wish to check if the Pointer was released just once then see the Sprite.events.onInputUp event.","kind":"function","name":"justReleased","params":[{"type":{"names":["number"]},"optional":true,"description":"The time to check against. If none given it will use InputManager.justReleasedRate.","name":"duration"}],"returns":[{"type":{"names":["boolean"]},"description":"true if the Pointer was released within the duration given."}],"memberof":"Phaser.Pointer","longname":"Phaser.Pointer#justReleased","scope":"instance","___s":true},{"meta":{"range":[35546,36483],"filename":"Pointer.js","lineno":1073,"path":"src\\input"},"description":"Add a click trampoline to this pointer.\r\rA click trampoline is a callback that is run on the DOM 'click' event; this is primarily\rneeded with certain browsers (ie. IE11) which restrict some actions like requestFullscreen\rto the DOM 'click' event and rejects it for 'pointer*' and 'mouse*' events.\r\rThis is used internally by the ScaleManager; click trampoline usage is uncommon.\rClick trampolines can only be added to pointers that are currently down.","kind":"function","name":"addClickTrampoline","access":"protected","params":[{"type":{"names":["string"]},"description":"The name of the trampoline; must be unique among active trampolines in this pointer.","name":"name"},{"type":{"names":["function"]},"description":"Callback to run/trampoline.","name":"callback"},{"type":{"names":["object"]},"description":"Context of the callback.","name":"callbackContext"},{"type":{"names":["Array.<object>","null"]},"description":"Additional callback args, if any. Supplied as an array.","name":"callbackArgs"}],"memberof":"Phaser.Pointer","longname":"Phaser.Pointer#addClickTrampoline","scope":"instance","___s":true},{"meta":{"range":[37986,38133],"filename":"Pointer.js","lineno":1147,"path":"src\\input"},"description":"Resets the Pointer properties. Called by InputManager.reset when you perform a State change.","kind":"function","name":"reset","memberof":"Phaser.Pointer","longname":"Phaser.Pointer#reset","scope":"instance","___s":true},{"meta":{"range":[38682,38850],"filename":"Pointer.js","lineno":1177,"path":"src\\input"},"description":"Resets the movementX and movementY properties. Use in your update handler after retrieving the values.","kind":"function","name":"resetMovement","memberof":"Phaser.Pointer","longname":"Phaser.Pointer#resetMovement","scope":"instance","___s":true},{"meta":{"range":[39020,39386],"filename":"Pointer.js","lineno":1192,"path":"src\\input"},"description":"How long the Pointer has been depressed on the touchscreen or *any* of the mouse buttons have been held down.\rIf not currently down it returns -1.\rIf you need to test a specific mouse or pen button then access the buttons directly, i.e. `Pointer.rightButton.duration`.","name":"duration","properties":[{"type":{"names":["number"]},"name":"duration"}],"readonly":true,"memberof":"Phaser.Pointer","longname":"Phaser.Pointer#duration","scope":"instance","kind":"member","___s":true},{"meta":{"range":[39622,39864],"filename":"Pointer.js","lineno":1216,"path":"src\\input"},"description":"Gets the X value of this Pointer in world coordinates based on the world camera.","name":"worldX","properties":[{"type":{"names":["number"]},"description":"The X value of this Pointer in world coordinates based on the world camera.","name":"worldX"}],"readonly":true,"memberof":"Phaser.Pointer","longname":"Phaser.Pointer#worldX","scope":"instance","kind":"member","___s":true},{"meta":{"range":[40024,40266],"filename":"Pointer.js","lineno":1232,"path":"src\\input"},"description":"Gets the Y value of this Pointer in world coordinates based on the world camera.","name":"worldY","properties":[{"type":{"names":["number"]},"description":"The Y value of this Pointer in world coordinates based on the world camera.","name":"worldY"}],"readonly":true,"memberof":"Phaser.Pointer","longname":"Phaser.Pointer#worldY","scope":"instance","kind":"member","___s":true},{"meta":{"range":[40426,40764],"filename":"Pointer.js","lineno":1248,"path":"src\\input"},"description":"Enumeration categorizing operational modes of pointers.\r\rPointerType values represent valid bitmasks.\rFor example, a value representing both Mouse and Touch devices\rcan be expressed as `PointerMode.CURSOR | PointerMode.CONTACT`.\r\rValues may be added for future mode categorizations.","kind":"class","name":"PointerMode","memberof":"Phaser","longname":"Phaser.PointerMode","scope":"static","___s":true},{"meta":{"range":[41134,41148],"filename":"Pointer.js","lineno":1267,"path":"src\\input"},"description":"A 'CURSOR' is a pointer with a *passive cursor* such as a mouse, touchpad, watcom stylus, or even TV-control arrow-pad.\r\rIt has the property that a cursor is passively moved without activating the input.\rThis currently corresponds with {@link Phaser.Pointer#isMouse} property.","kind":"constant","name":"CURSOR","longname":"Phaser.PointerMode.CURSOR","memberof":"Phaser.PointerMode","scope":"static","___s":true},{"meta":{"range":[41318,41333],"filename":"Pointer.js","lineno":1273,"path":"src\\input"},"description":"A 'CONTACT' pointer has an *active cursor* that only tracks movement when actived; notably this is a touch-style input.","kind":"constant","name":"CONTACT","longname":"Phaser.PointerMode.CONTACT","memberof":"Phaser.PointerMode","scope":"static","___s":true},{"meta":{"range":[494,3268],"filename":"SinglePad.js","lineno":16,"path":"src\\input"},"description":"A single Phaser Gamepad","kind":"class","classdesc":"Phaser.SinglePad","params":[{"type":{"names":["Phaser.Game"]},"description":"Current game instance.","name":"game"},{"type":{"names":["object"]},"description":"The parent Phaser.Gamepad object (all gamepads reside under this)","name":"padParent"}],"name":"SinglePad","longname":"Phaser.SinglePad","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[629,645],"filename":"SinglePad.js","lineno":21,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.SinglePad#game","kind":"member","memberof":"Phaser.SinglePad","scope":"instance","___s":true},{"meta":{"range":[761,778],"filename":"SinglePad.js","lineno":27,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"The gamepad index as per browsers data","name":"index"}],"readonly":true,"name":"index","longname":"Phaser.SinglePad#index","kind":"member","memberof":"Phaser.SinglePad","scope":"instance","___s":true},{"meta":{"range":[920,942],"filename":"SinglePad.js","lineno":33,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"Whether or not this particular gamepad is connected or not.","name":"connected"}],"readonly":true,"name":"connected","longname":"Phaser.SinglePad#connected","kind":"member","memberof":"Phaser.SinglePad","scope":"instance","___s":true},{"meta":{"range":[1059,1086],"filename":"SinglePad.js","lineno":38,"path":"src\\input"},"properties":[{"type":{"names":["object"]},"description":"The context under which the callbacks are run.","name":"callbackContext"}],"name":"callbackContext","longname":"Phaser.SinglePad#callbackContext","kind":"member","memberof":"Phaser.SinglePad","scope":"instance","___s":true},{"meta":{"range":[1222,1251],"filename":"SinglePad.js","lineno":43,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"This callback is invoked every time this gamepad is connected","name":"onConnectCallback"}],"name":"onConnectCallback","longname":"Phaser.SinglePad#onConnectCallback","kind":"member","memberof":"Phaser.SinglePad","scope":"instance","___s":true},{"meta":{"range":[1393,1425],"filename":"SinglePad.js","lineno":48,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"This callback is invoked every time this gamepad is disconnected","name":"onDisconnectCallback"}],"name":"onDisconnectCallback","longname":"Phaser.SinglePad#onDisconnectCallback","kind":"member","memberof":"Phaser.SinglePad","scope":"instance","___s":true},{"meta":{"range":[1558,1584],"filename":"SinglePad.js","lineno":53,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"This callback is invoked every time a button is pressed down.","name":"onDownCallback"}],"name":"onDownCallback","longname":"Phaser.SinglePad#onDownCallback","kind":"member","memberof":"Phaser.SinglePad","scope":"instance","___s":true},{"meta":{"range":[1719,1743],"filename":"SinglePad.js","lineno":58,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"This callback is invoked every time a gamepad button is released.","name":"onUpCallback"}],"name":"onUpCallback","longname":"Phaser.SinglePad#onUpCallback","kind":"member","memberof":"Phaser.SinglePad","scope":"instance","___s":true},{"meta":{"range":[1870,1896],"filename":"SinglePad.js","lineno":63,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"This callback is invoked every time an axis is changed.","name":"onAxisCallback"}],"name":"onAxisCallback","longname":"Phaser.SinglePad#onAxisCallback","kind":"member","memberof":"Phaser.SinglePad","scope":"instance","___s":true},{"meta":{"range":[2066,2093],"filename":"SinglePad.js","lineno":68,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"This callback is invoked every time a button is changed to a value where value > 0 and value < 1.","name":"onFloatCallback"}],"name":"onFloatCallback","longname":"Phaser.SinglePad#onFloatCallback","kind":"member","memberof":"Phaser.SinglePad","scope":"instance","___s":true},{"meta":{"range":[2231,2251],"filename":"SinglePad.js","lineno":73,"path":"src\\input"},"properties":[{"type":{"names":["number"]},"description":"Dead zone for axis feedback - within this value you won't trigger updates.","name":"deadZone"}],"name":"deadZone","longname":"Phaser.SinglePad#deadZone","kind":"member","memberof":"Phaser.SinglePad","scope":"instance","___s":true},{"meta":{"range":[3311,3780],"filename":"SinglePad.js","lineno":121,"path":"src\\input"},"description":"Add callbacks to this Gamepad to handle connect / disconnect / button down / button up / axis change / float value buttons.","kind":"function","name":"addCallbacks","params":[{"type":{"names":["object"]},"description":"The context under which the callbacks are run.","name":"context"},{"type":{"names":["object"]},"description":"Object that takes six different callbak methods:\ronConnectCallback, onDisconnectCallback, onDownCallback, onUpCallback, onAxisCallback, onFloatCallback","name":"callbacks"}],"memberof":"Phaser.SinglePad","longname":"Phaser.SinglePad#addCallbacks","scope":"instance","___s":true},{"meta":{"range":[4705,5181],"filename":"SinglePad.js","lineno":144,"path":"src\\input"},"description":"Gets a DeviceButton object from this controller to be stored and referenced locally.\rThe DeviceButton object can then be polled, have events attached to it, etc.","kind":"function","name":"getButton","params":[{"type":{"names":["number"]},"description":"The buttonCode of the button, i.e. Phaser.Gamepad.BUTTON_0, Phaser.Gamepad.XBOX360_A, etc.","name":"buttonCode"}],"returns":[{"type":{"names":["Phaser.DeviceButton"]},"description":"The DeviceButton object which you can store locally and reference directly."}],"memberof":"Phaser.SinglePad","longname":"Phaser.SinglePad#getButton","scope":"instance","___s":true},{"meta":{"range":[5412,5528],"filename":"SinglePad.js","lineno":165,"path":"src\\input"},"description":"Main update function called by Phaser.Gamepad.","kind":"function","name":"pollStatus","memberof":"Phaser.SinglePad","longname":"Phaser.SinglePad#pollStatus","scope":"instance","___s":true},{"meta":{"range":[6975,7158],"filename":"SinglePad.js","lineno":216,"path":"src\\input"},"description":"Gamepad connect function, should be called by Phaser.Gamepad.","kind":"function","name":"connect","params":[{"type":{"names":["object"]},"description":"The raw gamepad object","name":"rawPad"}],"memberof":"Phaser.SinglePad","longname":"Phaser.SinglePad#connect","scope":"instance","___s":true},{"meta":{"range":[8178,8312],"filename":"SinglePad.js","lineno":260,"path":"src\\input"},"description":"Gamepad disconnect function, should be called by Phaser.Gamepad.","kind":"function","name":"disconnect","memberof":"Phaser.SinglePad","longname":"Phaser.SinglePad#disconnect","scope":"instance","___s":true},{"meta":{"range":[9144,9270],"filename":"SinglePad.js","lineno":298,"path":"src\\input"},"description":"Destroys this object and associated callback references.","kind":"function","name":"destroy","memberof":"Phaser.SinglePad","longname":"Phaser.SinglePad#destroy","scope":"instance","___s":true},{"meta":{"range":[9820,9983],"filename":"SinglePad.js","lineno":327,"path":"src\\input"},"description":"Handles changes in axis.","kind":"function","name":"processAxisChange","params":[{"type":{"names":["object"]},"description":"State of the relevant axis","name":"axisState"}],"memberof":"Phaser.SinglePad","longname":"Phaser.SinglePad#processAxisChange","scope":"instance","___s":true},{"meta":{"range":[10487,10702],"filename":"SinglePad.js","lineno":354,"path":"src\\input"},"description":"Handles button down press.","kind":"function","name":"processButtonDown","params":[{"type":{"names":["number"]},"description":"Which buttonCode of this button","name":"buttonCode"},{"type":{"names":["object"]},"description":"Button value","name":"value"}],"memberof":"Phaser.SinglePad","longname":"Phaser.SinglePad#processButtonDown","scope":"instance","___s":true},{"meta":{"range":[11219,11429],"filename":"SinglePad.js","lineno":380,"path":"src\\input"},"description":"Handles button release.","kind":"function","name":"processButtonUp","params":[{"type":{"names":["number"]},"description":"Which buttonCode of this button","name":"buttonCode"},{"type":{"names":["object"]},"description":"Button value","name":"value"}],"memberof":"Phaser.SinglePad","longname":"Phaser.SinglePad#processButtonUp","scope":"instance","___s":true},{"meta":{"range":[11935,12315],"filename":"SinglePad.js","lineno":406,"path":"src\\input"},"description":"Handles buttons with floating values (like analog buttons that acts almost like an axis but still registers like a button)","kind":"function","name":"processButtonFloat","params":[{"type":{"names":["number"]},"description":"Which buttonCode of this button","name":"buttonCode"},{"type":{"names":["object"]},"description":"Button value (will range somewhere between 0 and 1, but not specifically 0 or 1.","name":"value"}],"memberof":"Phaser.SinglePad","longname":"Phaser.SinglePad#processButtonFloat","scope":"instance","___s":true},{"meta":{"range":[12834,13059],"filename":"SinglePad.js","lineno":432,"path":"src\\input"},"description":"Returns value of requested axis.","kind":"function","name":"axis","params":[{"type":{"names":["number"]},"description":"The index of the axis to check","name":"axisCode"}],"returns":[{"type":{"names":["number"]},"description":"Axis value if available otherwise false"}],"memberof":"Phaser.SinglePad","longname":"Phaser.SinglePad#axis","scope":"instance","___s":true},{"meta":{"range":[13236,13481],"filename":"SinglePad.js","lineno":450,"path":"src\\input"},"description":"Returns true if the button is pressed down.","kind":"function","name":"isDown","params":[{"type":{"names":["number"]},"description":"The buttonCode of the button to check.","name":"buttonCode"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the button is pressed down."}],"memberof":"Phaser.SinglePad","longname":"Phaser.SinglePad#isDown","scope":"instance","___s":true},{"meta":{"range":[13679,13945],"filename":"SinglePad.js","lineno":468,"path":"src\\input"},"description":"Returns true if the button is not currently pressed.","kind":"function","name":"isUp","params":[{"type":{"names":["number"]},"description":"The buttonCode of the button to check.","name":"buttonCode"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the button is not currently pressed down."}],"memberof":"Phaser.SinglePad","longname":"Phaser.SinglePad#isUp","scope":"instance","___s":true},{"meta":{"range":[14139,14658],"filename":"SinglePad.js","lineno":486,"path":"src\\input"},"description":"Returns the \"just released\" state of a button from this gamepad. Just released is considered as being true if the button was released within the duration given (default 250ms).","kind":"function","name":"justReleased","params":[{"type":{"names":["number"]},"description":"The buttonCode of the button to check for.","name":"buttonCode"},{"type":{"names":["number"]},"optional":true,"defaultvalue":250,"description":"The duration below which the button is considered as being just released.","name":"duration"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the button is just released otherwise false."}],"memberof":"Phaser.SinglePad","longname":"Phaser.SinglePad#justReleased","scope":"instance","___s":true},{"meta":{"range":[14863,15372],"filename":"SinglePad.js","lineno":503,"path":"src\\input"},"description":"Returns the \"just pressed\" state of a button from this gamepad. Just pressed is considered true if the button was pressed down within the duration given (default 250ms).","kind":"function","name":"justPressed","params":[{"type":{"names":["number"]},"description":"The buttonCode of the button to check for.","name":"buttonCode"},{"type":{"names":["number"]},"optional":true,"defaultvalue":250,"description":"The duration below which the button is considered as being just pressed.","name":"duration"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the button is just pressed otherwise false."}],"memberof":"Phaser.SinglePad","longname":"Phaser.SinglePad#justPressed","scope":"instance","___s":true},{"meta":{"range":[15575,16009],"filename":"SinglePad.js","lineno":520,"path":"src\\input"},"description":"Returns the value of a gamepad button. Intended mainly for cases when you have floating button values, for example\ranalog trigger buttons on the XBOX 360 controller.","kind":"function","name":"buttonValue","params":[{"type":{"names":["number"]},"description":"The buttonCode of the button to check.","name":"buttonCode"}],"returns":[{"type":{"names":["number"]},"description":"Button value if available otherwise null. Be careful as this can incorrectly evaluate to 0."}],"memberof":"Phaser.SinglePad","longname":"Phaser.SinglePad#buttonValue","scope":"instance","___s":true},{"meta":{"range":[16210,16314],"filename":"SinglePad.js","lineno":539,"path":"src\\input"},"description":"Reset all buttons/axes of this gamepad.","kind":"function","name":"reset","memberof":"Phaser.SinglePad","longname":"Phaser.SinglePad#reset","scope":"instance","___s":true},{"meta":{"range":[592,3770],"filename":"Touch.js","lineno":16,"path":"src\\input"},"description":"Phaser.Touch handles touch events with your game. Note: Android 2.x only supports 1 touch event at once, no multi-touch.\r\rYou should not normally access this class directly, but instead use a Phaser.Pointer object which normalises all game input for you.","kind":"class","classdesc":"Phaser.Touch","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"Touch","longname":"Phaser.Touch","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[730,746],"filename":"Touch.js","lineno":21,"path":"src\\input"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"game","longname":"Phaser.Touch#game","kind":"member","memberof":"Phaser.Touch","scope":"instance","___s":true},{"meta":{"range":[878,897],"filename":"Touch.js","lineno":28,"path":"src\\input"},"description":"Touch events will only be processed if enabled.","properties":[{"type":{"names":["boolean"]},"name":"enabled"}],"defaultvalue":true,"name":"enabled","longname":"Phaser.Touch#enabled","kind":"member","memberof":"Phaser.Touch","scope":"instance","___s":true},{"meta":{"range":[1280,1308],"filename":"Touch.js","lineno":37,"path":"src\\input"},"description":"An array of callbacks that will be fired every time a native touch start or touch end event is received from the browser.\rThis is used internally to handle audio and video unlocking on mobile devices.\rTo add a callback to this array please use `Touch.addTouchLockCallback`.","properties":[{"type":{"names":["array"]},"name":"touchLockCallbacks"}],"access":"protected","name":"touchLockCallbacks","longname":"Phaser.Touch#touchLockCallbacks","kind":"member","memberof":"Phaser.Touch","scope":"instance","___s":true},{"meta":{"range":[1424,1456],"filename":"Touch.js","lineno":42,"path":"src\\input"},"properties":[{"type":{"names":["object"]},"description":"The context under which callbacks are called.","name":"callbackContext"}],"name":"callbackContext","longname":"Phaser.Touch#callbackContext","kind":"member","memberof":"Phaser.Touch","scope":"instance","___s":true},{"meta":{"range":[1583,1613],"filename":"Touch.js","lineno":47,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"A callback that can be fired on a touchStart event.","name":"touchStartCallback"}],"name":"touchStartCallback","longname":"Phaser.Touch#touchStartCallback","kind":"member","memberof":"Phaser.Touch","scope":"instance","___s":true},{"meta":{"range":[1738,1767],"filename":"Touch.js","lineno":52,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"A callback that can be fired on a touchMove event.","name":"touchMoveCallback"}],"name":"touchMoveCallback","longname":"Phaser.Touch#touchMoveCallback","kind":"member","memberof":"Phaser.Touch","scope":"instance","___s":true},{"meta":{"range":[1890,1918],"filename":"Touch.js","lineno":57,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"A callback that can be fired on a touchEnd event.","name":"touchEndCallback"}],"name":"touchEndCallback","longname":"Phaser.Touch#touchEndCallback","kind":"member","memberof":"Phaser.Touch","scope":"instance","___s":true},{"meta":{"range":[2045,2075],"filename":"Touch.js","lineno":62,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"A callback that can be fired on a touchEnter event.","name":"touchEnterCallback"}],"name":"touchEnterCallback","longname":"Phaser.Touch#touchEnterCallback","kind":"member","memberof":"Phaser.Touch","scope":"instance","___s":true},{"meta":{"range":[2202,2232],"filename":"Touch.js","lineno":67,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"A callback that can be fired on a touchLeave event.","name":"touchLeaveCallback"}],"name":"touchLeaveCallback","longname":"Phaser.Touch#touchLeaveCallback","kind":"member","memberof":"Phaser.Touch","scope":"instance","___s":true},{"meta":{"range":[2361,2392],"filename":"Touch.js","lineno":72,"path":"src\\input"},"properties":[{"type":{"names":["function"]},"description":"A callback that can be fired on a touchCancel event.","name":"touchCancelCallback"}],"name":"touchCancelCallback","longname":"Phaser.Touch#touchCancelCallback","kind":"member","memberof":"Phaser.Touch","scope":"instance","___s":true},{"meta":{"range":[2541,2567],"filename":"Touch.js","lineno":78,"path":"src\\input"},"properties":[{"type":{"names":["boolean"]},"description":"If true the TouchEvent will have prevent.default called on it.","name":"preventDefault"}],"defaultvalue":true,"name":"preventDefault","longname":"Phaser.Touch#preventDefault","kind":"member","memberof":"Phaser.Touch","scope":"instance","___s":true},{"meta":{"range":[2738,2755],"filename":"Touch.js","lineno":84,"path":"src\\input"},"properties":[{"type":{"names":["TouchEvent"]},"description":"The browser touch DOM event. Will be set to null if no touch event has ever been received.","name":"event"}],"defaultvalue":null,"name":"event","longname":"Phaser.Touch#event","kind":"member","memberof":"Phaser.Touch","scope":"instance","___s":true},{"meta":{"range":[3809,3897],"filename":"Touch.js","lineno":132,"path":"src\\input"},"description":"Starts the event listeners running.","kind":"function","name":"start","memberof":"Phaser.Touch","longname":"Phaser.Touch#start","scope":"instance","___s":true},{"meta":{"range":[5511,5665],"filename":"Touch.js","lineno":186,"path":"src\\input"},"description":"Consumes all touchmove events on the document (only enable this if you know you need it!).","kind":"function","name":"consumeTouchMove","memberof":"Phaser.Touch","longname":"Phaser.Touch#consumeTouchMove","scope":"instance","___s":true},{"meta":{"range":[5914,6714],"filename":"Touch.js","lineno":200,"path":"src\\input"},"description":"Adds a callback that is fired when a browser touchstart or touchend event is received.\r\rThis is used internally to handle audio and video unlocking on mobile devices.\r\rIf the callback returns 'true' then the callback is automatically deleted once invoked.\r\rThe callback is added to the Phaser.Touch.touchLockCallbacks array and should be removed with Phaser.Touch.removeTouchLockCallback.","kind":"function","name":"addTouchLockCallback","params":[{"type":{"names":["function"]},"description":"The callback that will be called when a touchstart event is received.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the callback will be called.","name":"context"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Will the callback fire on a touchstart (default) or touchend event?","name":"onEnd"}],"memberof":"Phaser.Touch","longname":"Phaser.Touch#addTouchLockCallback","scope":"instance","___s":true},{"meta":{"range":[6949,7331],"filename":"Touch.js","lineno":222,"path":"src\\input"},"description":"Removes the callback at the defined index from the Phaser.Touch.touchLockCallbacks array","kind":"function","name":"removeTouchLockCallback","params":[{"type":{"names":["function"]},"description":"The callback to be removed.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the callback exists.","name":"context"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the callback was deleted, otherwise false."}],"memberof":"Phaser.Touch","longname":"Phaser.Touch#removeTouchLockCallback","scope":"instance","___s":true},{"meta":{"range":[7763,7997],"filename":"Touch.js","lineno":247,"path":"src\\input"},"description":"The internal method that handles the touchstart event from the browser.","kind":"function","name":"onTouchStart","params":[{"type":{"names":["TouchEvent"]},"description":"The native event from the browser. This gets stored in Touch.event.","name":"event"}],"memberof":"Phaser.Touch","longname":"Phaser.Touch#onTouchStart","scope":"instance","___s":true},{"meta":{"range":[9182,9535],"filename":"Touch.js","lineno":293,"path":"src\\input"},"description":"Touch cancel - touches that were disrupted (perhaps by moving into a plugin or browser chrome).\rOccurs for example on iOS when you put down 4 fingers and the app selector UI appears.","kind":"function","name":"onTouchCancel","params":[{"type":{"names":["TouchEvent"]},"description":"The native event from the browser. This gets stored in Touch.event.","name":"event"}],"memberof":"Phaser.Touch","longname":"Phaser.Touch#onTouchCancel","scope":"instance","___s":true},{"meta":{"range":[10281,10618],"filename":"Touch.js","lineno":327,"path":"src\\input"},"description":"For touch enter and leave its a list of the touch points that have entered or left the target.\rDoesn't appear to be supported by most browsers on a canvas element yet.","kind":"function","name":"onTouchEnter","params":[{"type":{"names":["TouchEvent"]},"description":"The native event from the browser. This gets stored in Touch.event.","name":"event"}],"memberof":"Phaser.Touch","longname":"Phaser.Touch#onTouchEnter","scope":"instance","___s":true},{"meta":{"range":[11035,11372],"filename":"Touch.js","lineno":354,"path":"src\\input"},"description":"For touch enter and leave its a list of the touch points that have entered or left the target.\rDoesn't appear to be supported by most browsers on a canvas element yet.","kind":"function","name":"onTouchLeave","params":[{"type":{"names":["TouchEvent"]},"description":"The native event from the browser. This gets stored in Touch.event.","name":"event"}],"memberof":"Phaser.Touch","longname":"Phaser.Touch#onTouchLeave","scope":"instance","___s":true},{"meta":{"range":[11688,11887],"filename":"Touch.js","lineno":376,"path":"src\\input"},"description":"The handler for the touchmove events.","kind":"function","name":"onTouchMove","params":[{"type":{"names":["TouchEvent"]},"description":"The native event from the browser. This gets stored in Touch.event.","name":"event"}],"memberof":"Phaser.Touch","longname":"Phaser.Touch#onTouchMove","scope":"instance","___s":true},{"meta":{"range":[12356,12553],"filename":"Touch.js","lineno":402,"path":"src\\input"},"description":"The handler for the touchend events.","kind":"function","name":"onTouchEnd","params":[{"type":{"names":["TouchEvent"]},"description":"The native event from the browser. This gets stored in Touch.event.","name":"event"}],"memberof":"Phaser.Touch","longname":"Phaser.Touch#onTouchEnd","scope":"instance","___s":true},{"meta":{"range":[13593,13670],"filename":"Touch.js","lineno":443,"path":"src\\input"},"description":"Stop the event listeners.","kind":"function","name":"stop","memberof":"Phaser.Touch","longname":"Phaser.Touch#stop","scope":"instance","___s":true},{"meta":{"range":[1866,4476],"filename":"Cache.js","lineno":34,"path":"src\\loader"},"description":"Phaser has one single cache in which it stores all assets.\r\rThe cache is split up into sections, such as images, sounds, video, json, etc. All assets are stored using\ra unique string-based key as their identifier. Assets stored in different areas of the cache can have the\rsame key, for example 'playerWalking' could be used as the key for both a sprite sheet and an audio file,\rbecause they are unique data types.\r\rThe cache is automatically populated by the Phaser.Loader. When you use the loader to pull in external assets\rsuch as images they are automatically placed into their respective cache. Most common Game Objects, such as\rSprites and Videos automatically query the cache to extract the assets they need on instantiation.\r\rYou can access the cache from within a State via `this.cache`. From here you can call any public method it has,\rincluding adding new entries to it, deleting them or querying them.\r\rUnderstand that almost without exception when you get an item from the cache it will return a reference to the\ritem stored in the cache, not a copy of it. Therefore if you retrieve an item and then modify it, the original\robject in the cache will also be updated, even if you don't put it back into the cache again.\r\rBy default when you change State the cache is _not_ cleared, although there is an option to clear it should\ryour game require it. In a typical game set-up the cache is populated once after the main game has loaded and\rthen used as an asset store.","kind":"class","classdesc":"Phaser.Cache","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"Cache","longname":"Phaser.Cache","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1986,2002],"filename":"Cache.js","lineno":39,"path":"src\\loader"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.Cache#game","kind":"member","memberof":"Phaser.Cache","scope":"instance","___s":true},{"meta":{"range":[2169,2196],"filename":"Cache.js","lineno":45,"path":"src\\loader"},"description":"Automatically resolve resource URLs to absolute paths for use with the Cache.getURL method.","properties":[{"type":{"names":["boolean"]},"name":"autoResolveURL"}],"name":"autoResolveURL","longname":"Phaser.Cache#autoResolveURL","kind":"member","memberof":"Phaser.Cache","scope":"instance","___s":true},{"meta":{"range":[3271,3311],"filename":"Cache.js","lineno":91,"path":"src\\loader"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"This event is dispatched when the sound system is unlocked via a touch event on cellular devices.","name":"onSoundUnlock"}],"name":"onSoundUnlock","longname":"Phaser.Cache#onSoundUnlock","kind":"member","memberof":"Phaser.Cache","scope":"instance","___s":true},{"meta":{"range":[4521,4544],"filename":"Cache.js","lineno":124,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"CANVAS","longname":"Phaser.Cache.CANVAS","memberof":"Phaser.Cache","scope":"static","___s":true},{"meta":{"range":[4589,4611],"filename":"Cache.js","lineno":130,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"IMAGE","longname":"Phaser.Cache.IMAGE","memberof":"Phaser.Cache","scope":"static","___s":true},{"meta":{"range":[4656,4680],"filename":"Cache.js","lineno":136,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"TEXTURE","longname":"Phaser.Cache.TEXTURE","memberof":"Phaser.Cache","scope":"static","___s":true},{"meta":{"range":[4725,4747],"filename":"Cache.js","lineno":142,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"SOUND","longname":"Phaser.Cache.SOUND","memberof":"Phaser.Cache","scope":"static","___s":true},{"meta":{"range":[4792,4813],"filename":"Cache.js","lineno":148,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"TEXT","longname":"Phaser.Cache.TEXT","memberof":"Phaser.Cache","scope":"static","___s":true},{"meta":{"range":[4858,4882],"filename":"Cache.js","lineno":154,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"PHYSICS","longname":"Phaser.Cache.PHYSICS","memberof":"Phaser.Cache","scope":"static","___s":true},{"meta":{"range":[4927,4951],"filename":"Cache.js","lineno":160,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"TILEMAP","longname":"Phaser.Cache.TILEMAP","memberof":"Phaser.Cache","scope":"static","___s":true},{"meta":{"range":[4996,5019],"filename":"Cache.js","lineno":166,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"BINARY","longname":"Phaser.Cache.BINARY","memberof":"Phaser.Cache","scope":"static","___s":true},{"meta":{"range":[5064,5091],"filename":"Cache.js","lineno":172,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"BITMAPDATA","longname":"Phaser.Cache.BITMAPDATA","memberof":"Phaser.Cache","scope":"static","___s":true},{"meta":{"range":[5136,5164],"filename":"Cache.js","lineno":178,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"BITMAPFONT","longname":"Phaser.Cache.BITMAPFONT","memberof":"Phaser.Cache","scope":"static","___s":true},{"meta":{"range":[5209,5231],"filename":"Cache.js","lineno":184,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"JSON","longname":"Phaser.Cache.JSON","memberof":"Phaser.Cache","scope":"static","___s":true},{"meta":{"range":[5276,5297],"filename":"Cache.js","lineno":190,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"XML","longname":"Phaser.Cache.XML","memberof":"Phaser.Cache","scope":"static","___s":true},{"meta":{"range":[5342,5365],"filename":"Cache.js","lineno":196,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"VIDEO","longname":"Phaser.Cache.VIDEO","memberof":"Phaser.Cache","scope":"static","___s":true},{"meta":{"range":[5410,5434],"filename":"Cache.js","lineno":202,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"SHADER","longname":"Phaser.Cache.SHADER","memberof":"Phaser.Cache","scope":"static","___s":true},{"meta":{"range":[5479,5511],"filename":"Cache.js","lineno":208,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"RENDER_TEXTURE","longname":"Phaser.Cache.RENDER_TEXTURE","memberof":"Phaser.Cache","scope":"static","___s":true},{"meta":{"range":[5630,5657],"filename":"Cache.js","lineno":215,"path":"src\\loader"},"description":"The default image used for a texture when no other is specified.","kind":"constant","type":{"names":["PIXI.Texture"]},"name":"DEFAULT","longname":"Phaser.Cache.DEFAULT","memberof":"Phaser.Cache","scope":"static","___s":true},{"meta":{"range":[5782,5809],"filename":"Cache.js","lineno":222,"path":"src\\loader"},"description":"The default image used for a texture when the source image is missing.","kind":"constant","type":{"names":["PIXI.Texture"]},"name":"MISSING","longname":"Phaser.Cache.MISSING","memberof":"Phaser.Cache","scope":"static","___s":true},{"meta":{"range":[5922,6366],"filename":"Cache.js","lineno":230,"path":"src\\loader"},"description":"Add a new canvas object in to the cache.","kind":"function","name":"addCanvas","params":[{"type":{"names":["string"]},"description":"The key that this asset will be stored in the cache under. This should be unique within this cache.","name":"key"},{"type":{"names":["HTMLCanvasElement"]},"description":"The Canvas DOM element.","name":"canvas"},{"type":{"names":["CanvasRenderingContext2D"]},"optional":true,"description":"The context of the canvas element. If not specified it will default go `getContext('2d')`.","name":"context"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#addCanvas","scope":"instance","___s":true},{"meta":{"range":[6586,7306],"filename":"Cache.js","lineno":246,"path":"src\\loader"},"description":"Adds an Image file into the Cache. The file must have already been loaded, typically via Phaser.Loader, but can also have been loaded into the DOM.\rIf an image already exists in the cache with the same key then it is removed and destroyed, and the new image inserted in its place.","kind":"function","name":"addImage","params":[{"type":{"names":["string"]},"description":"The key that this asset will be stored in the cache under. This should be unique within this cache.","name":"key"},{"type":{"names":["string"]},"description":"The URL the asset was loaded from. If the asset was not loaded externally set to `null`.","name":"url"},{"type":{"names":["object"]},"description":"Extra image data.","name":"data"}],"returns":[{"type":{"names":["object"]},"description":"The full image object that was added to the cache."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#addImage","scope":"instance","___s":true},{"meta":{"range":[8184,8563],"filename":"Cache.js","lineno":291,"path":"src\\loader"},"description":"Adds a default image to be used in special cases such as WebGL Filters.\rIt uses the special reserved key of `__default`.\rThis method is called automatically when the Cache is created.\rThis image is skipped when `Cache.destroy` is called due to its internal requirements.","kind":"function","name":"addDefaultImage","access":"protected","memberof":"Phaser.Cache","longname":"Phaser.Cache#addDefaultImage","scope":"instance","___s":true},{"meta":{"range":[9165,9528],"filename":"Cache.js","lineno":316,"path":"src\\loader"},"description":"Adds an image to be used when a key is wrong / missing.\rIt uses the special reserved key of `__missing`.\rThis method is called automatically when the Cache is created.\rThis image is skipped when `Cache.destroy` is called due to its internal requirements.","kind":"function","name":"addMissingImage","access":"protected","memberof":"Phaser.Cache","longname":"Phaser.Cache#addMissingImage","scope":"instance","___s":true},{"meta":{"range":[10196,10808],"filename":"Cache.js","lineno":338,"path":"src\\loader"},"description":"Adds a Sound file into the Cache. The file must have already been loaded, typically via Phaser.Loader.","kind":"function","name":"addSound","params":[{"type":{"names":["string"]},"description":"The key that this asset will be stored in the cache under. This should be unique within this cache.","name":"key"},{"type":{"names":["string"]},"description":"The URL the asset was loaded from. If the asset was not loaded externally set to `null`.","name":"url"},{"type":{"names":["object"]},"description":"Extra sound data.","name":"data"},{"type":{"names":["boolean"]},"description":"True if the file is using web audio.","name":"webAudio"},{"type":{"names":["boolean"]},"description":"True if the file is using legacy HTML audio.","name":"audioTag"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#addSound","scope":"instance","___s":true},{"meta":{"range":[11485,11861],"filename":"Cache.js","lineno":374,"path":"src\\loader"},"description":"Add a new text data.","kind":"function","name":"addText","params":[{"type":{"names":["string"]},"description":"The key that this asset will be stored in the cache under. This should be unique within this cache.","name":"key"},{"type":{"names":["string"]},"description":"The URL the asset was loaded from. If the asset was not loaded externally set to `null`.","name":"url"},{"type":{"names":["object"]},"description":"Extra text data.","name":"data"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#addText","scope":"instance","___s":true},{"meta":{"range":[12039,12535],"filename":"Cache.js","lineno":390,"path":"src\\loader"},"description":"Add a new physics data object to the Cache.","kind":"function","name":"addPhysicsData","params":[{"type":{"names":["string"]},"description":"The key that this asset will be stored in the cache under. This should be unique within this cache.","name":"key"},{"type":{"names":["string"]},"description":"The URL the asset was loaded from. If the asset was not loaded externally set to `null`.","name":"url"},{"type":{"names":["object"]},"description":"The physics data object (a JSON file).","name":"JSONData"},{"type":{"names":["number"]},"description":"The format of the physics data.","name":"format"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#addPhysicsData","scope":"instance","___s":true},{"meta":{"range":[12758,13251],"filename":"Cache.js","lineno":407,"path":"src\\loader"},"description":"Add a new tilemap to the Cache.","kind":"function","name":"addTilemap","params":[{"type":{"names":["string"]},"description":"The key that this asset will be stored in the cache under. This should be unique within this cache.","name":"key"},{"type":{"names":["string"]},"description":"The URL the asset was loaded from. If the asset was not loaded externally set to `null`.","name":"url"},{"type":{"names":["object"]},"description":"The tilemap data object (either a CSV or JSON file).","name":"mapData"},{"type":{"names":["number"]},"description":"The format of the tilemap data.","name":"format"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#addTilemap","scope":"instance","___s":true},{"meta":{"range":[13468,13777],"filename":"Cache.js","lineno":424,"path":"src\\loader"},"description":"Add a binary object in to the cache.","kind":"function","name":"addBinary","params":[{"type":{"names":["string"]},"description":"The key that this asset will be stored in the cache under. This should be unique within this cache.","name":"key"},{"type":{"names":["object"]},"description":"The binary object to be added to the cache.","name":"binaryData"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#addBinary","scope":"instance","___s":true},{"meta":{"range":[13889,14586],"filename":"Cache.js","lineno":437,"path":"src\\loader"},"description":"Add a BitmapData object to the cache.","kind":"function","name":"addBitmapData","params":[{"type":{"names":["string"]},"description":"The key that this asset will be stored in the cache under. This should be unique within this cache.","name":"key"},{"type":{"names":["Phaser.BitmapData"]},"description":"The BitmapData object to be addded to the cache.","name":"bitmapData"},{"type":{"names":["Phaser.FrameData","null"]},"optional":true,"defaultvalue":"(auto create)","description":"Optional FrameData set associated with the given BitmapData. If not specified (or `undefined`) a new FrameData object is created containing the Bitmap's Frame. If `null` is supplied then no FrameData will be created.","name":"frameData"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"The BitmapData object to be addded to the cache."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#addBitmapData","scope":"instance","___s":true},{"meta":{"range":[14981,15815],"filename":"Cache.js","lineno":462,"path":"src\\loader"},"description":"Add a new Bitmap Font to the Cache.","kind":"function","name":"addBitmapFont","params":[{"type":{"names":["string"]},"description":"The key that this asset will be stored in the cache under. This should be unique within this cache.","name":"key"},{"type":{"names":["string"]},"description":"The URL the asset was loaded from. If the asset was not loaded externally set to `null`.","name":"url"},{"type":{"names":["object"]},"description":"Extra font data.","name":"data"},{"type":{"names":["object"]},"description":"Texture atlas frames data.","name":"atlasData"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'xml'","description":"The format of the texture atlas ( 'json' or 'xml' ).","name":"atlasType"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If you'd like to add additional horizontal spacing between the characters then set the pixel value here.","name":"xSpacing"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If you'd like to add additional vertical spacing between the lines then set the pixel value here.","name":"ySpacing"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#addBitmapFont","scope":"instance","___s":true},{"meta":{"range":[16570,16963],"filename":"Cache.js","lineno":501,"path":"src\\loader"},"description":"Add a new json object into the cache.","kind":"function","name":"addJSON","params":[{"type":{"names":["string"]},"description":"The key that this asset will be stored in the cache under. This should be unique within this cache.","name":"key"},{"type":{"names":["string"]},"description":"The URL the asset was loaded from. If the asset was not loaded externally set to `null`.","name":"url"},{"type":{"names":["object"]},"description":"Extra json data.","name":"data"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#addJSON","scope":"instance","___s":true},{"meta":{"range":[17141,17532],"filename":"Cache.js","lineno":517,"path":"src\\loader"},"description":"Add a new xml object into the cache.","kind":"function","name":"addXML","params":[{"type":{"names":["string"]},"description":"The key that this asset will be stored in the cache under. This should be unique within this cache.","name":"key"},{"type":{"names":["string"]},"description":"The URL the asset was loaded from. If the asset was not loaded externally set to `null`.","name":"url"},{"type":{"names":["object"]},"description":"Extra text data.","name":"data"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#addXML","scope":"instance","___s":true},{"meta":{"range":[17707,18315],"filename":"Cache.js","lineno":533,"path":"src\\loader"},"description":"Adds a Video file into the Cache. The file must have already been loaded, typically via Phaser.Loader.","kind":"function","name":"addVideo","params":[{"type":{"names":["string"]},"description":"The key that this asset will be stored in the cache under. This should be unique within this cache.","name":"key"},{"type":{"names":["string"]},"description":"The URL the asset was loaded from. If the asset was not loaded externally set to `null`.","name":"url"},{"type":{"names":["object"]},"description":"Extra video data.","name":"data"},{"type":{"names":["boolean"]},"description":"True if the file was preloaded via xhr and the data parameter is a Blob. false if a Video tag was created instead.","name":"isBlob"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#addVideo","scope":"instance","___s":true},{"meta":{"range":[18534,19002],"filename":"Cache.js","lineno":550,"path":"src\\loader"},"description":"Adds a Fragment Shader in to the Cache. The file must have already been loaded, typically via Phaser.Loader.","kind":"function","name":"addShader","params":[{"type":{"names":["string"]},"description":"The key that this asset will be stored in the cache under. This should be unique within this cache.","name":"key"},{"type":{"names":["string"]},"description":"The URL the asset was loaded from. If the asset was not loaded externally set to `null`.","name":"url"},{"type":{"names":["object"]},"description":"Extra shader data.","name":"data"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#addShader","scope":"instance","___s":true},{"meta":{"range":[19186,19533],"filename":"Cache.js","lineno":566,"path":"src\\loader"},"description":"Add a new Phaser.RenderTexture in to the cache.","kind":"function","name":"addRenderTexture","params":[{"type":{"names":["string"]},"description":"The key that this asset will be stored in the cache under. This should be unique within this cache.","name":"key"},{"type":{"names":["Phaser.RenderTexture"]},"description":"The texture to use as the base of the RenderTexture.","name":"texture"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#addRenderTexture","scope":"instance","___s":true},{"meta":{"range":[19739,20631],"filename":"Cache.js","lineno":579,"path":"src\\loader"},"description":"Add a new sprite sheet in to the cache.","kind":"function","name":"addSpriteSheet","params":[{"type":{"names":["string"]},"description":"The key that this asset will be stored in the cache under. This should be unique within this cache.","name":"key"},{"type":{"names":["string"]},"description":"The URL the asset was loaded from. If the asset was not loaded externally set to `null`.","name":"url"},{"type":{"names":["object"]},"description":"Extra sprite sheet data.","name":"data"},{"type":{"names":["number"]},"description":"Width of the sprite sheet.","name":"frameWidth"},{"type":{"names":["number"]},"description":"Height of the sprite sheet.","name":"frameHeight"},{"type":{"names":["number"]},"optional":true,"defaultvalue":-1,"description":"How many frames stored in the sprite sheet. If -1 then it divides the whole sheet evenly.","name":"frameMax"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the frames have been drawn with a margin, specify the amount here.","name":"margin"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the frames have been drawn with spacing between them, specify the amount here.","name":"spacing"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#addSpriteSheet","scope":"instance","___s":true},{"meta":{"range":[21409,21947],"filename":"Cache.js","lineno":616,"path":"src\\loader"},"description":"Add a new texture atlas to the Cache.","kind":"function","name":"addTextureAtlas","params":[{"type":{"names":["string"]},"description":"The key that this asset will be stored in the cache under. This should be unique within this cache.","name":"key"},{"type":{"names":["string"]},"description":"The URL the asset was loaded from. If the asset was not loaded externally set to `null`.","name":"url"},{"type":{"names":["object"]},"description":"Extra texture atlas data.","name":"data"},{"type":{"names":["object"]},"description":"Texture atlas frames data.","name":"atlasData"},{"type":{"names":["number"]},"description":"The format of the texture atlas.","name":"format"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#addTextureAtlas","scope":"instance","___s":true},{"meta":{"range":[23149,23319],"filename":"Cache.js","lineno":666,"path":"src\\loader"},"description":"Reload a Sound file from the server.","kind":"function","name":"reloadSound","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#reloadSound","scope":"instance","___s":true},{"meta":{"range":[23718,23929],"filename":"Cache.js","lineno":691,"path":"src\\loader"},"description":"Fires the onSoundUnlock event when the sound has completed reloading.","kind":"function","name":"reloadSoundComplete","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#reloadSoundComplete","scope":"instance","___s":true},{"meta":{"range":[24159,24331],"filename":"Cache.js","lineno":709,"path":"src\\loader"},"description":"Updates the sound object in the cache.","kind":"function","name":"updateSound","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#updateSound","scope":"instance","___s":true},{"meta":{"range":[24526,24733],"filename":"Cache.js","lineno":726,"path":"src\\loader"},"description":"Add a new decoded sound.","kind":"function","name":"decodedSound","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"},{"type":{"names":["object"]},"description":"Extra sound data.","name":"data"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#decodedSound","scope":"instance","___s":true},{"meta":{"range":[24932,25180],"filename":"Cache.js","lineno":743,"path":"src\\loader"},"description":"Check if the given sound has finished decoding.","kind":"function","name":"isSoundDecoded","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"The decoded state of the Sound object."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#isSoundDecoded","scope":"instance","___s":true},{"meta":{"range":[25395,25774],"filename":"Cache.js","lineno":761,"path":"src\\loader"},"description":"Check if the given sound is ready for playback.\rA sound is considered ready when it has finished decoding and the device is no longer touch locked.","kind":"function","name":"isSoundReady","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the sound is decoded and the device is not touch locked."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#isSoundReady","scope":"instance","___s":true},{"meta":{"range":[26113,26496],"filename":"Cache.js","lineno":784,"path":"src\\loader"},"description":"Checks if a key for the given cache object type exists.","kind":"function","name":"checkKey","params":[{"type":{"names":["integer"]},"description":"The cache to search. One of the Cache consts such as `Phaser.Cache.IMAGE` or `Phaser.Cache.SOUND`.","name":"cache"},{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key exists, otherwise false."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#checkKey","scope":"instance","___s":true},{"meta":{"range":[26669,27216],"filename":"Cache.js","lineno":803,"path":"src\\loader"},"description":"Checks if the given URL has been loaded into the Cache.\rThis method will only work if Cache.autoResolveURL was set to `true` before any preloading took place.\rThe method will make a DOM src call to the URL given, so please be aware of this for certain file types, such as Sound files on Firefox\rwhich may cause double-load instances.","kind":"function","name":"checkURL","params":[{"type":{"names":["string"]},"description":"The url to check for in the cache.","name":"url"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the url exists, otherwise false."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#checkURL","scope":"instance","___s":true},{"meta":{"range":[27391,27658],"filename":"Cache.js","lineno":824,"path":"src\\loader"},"description":"Checks if the given key exists in the Canvas Cache.","kind":"function","name":"checkCanvasKey","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key exists in the cache, otherwise false."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#checkCanvasKey","scope":"instance","___s":true},{"meta":{"range":[27773,28115],"filename":"Cache.js","lineno":837,"path":"src\\loader"},"description":"Checks if the given key exists in the Image Cache. Note that this also includes Texture Atlases, Sprite Sheets and Retro Fonts.","kind":"function","name":"checkImageKey","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key exists in the cache, otherwise false."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#checkImageKey","scope":"instance","___s":true},{"meta":{"range":[28228,28497],"filename":"Cache.js","lineno":850,"path":"src\\loader"},"description":"Checks if the given key exists in the Texture Cache.","kind":"function","name":"checkTextureKey","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key exists in the cache, otherwise false."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#checkTextureKey","scope":"instance","___s":true},{"meta":{"range":[28614,28879],"filename":"Cache.js","lineno":863,"path":"src\\loader"},"description":"Checks if the given key exists in the Sound Cache.","kind":"function","name":"checkSoundKey","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key exists in the cache, otherwise false."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#checkSoundKey","scope":"instance","___s":true},{"meta":{"range":[28992,29255],"filename":"Cache.js","lineno":876,"path":"src\\loader"},"description":"Checks if the given key exists in the Text Cache.","kind":"function","name":"checkTextKey","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key exists in the cache, otherwise false."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#checkTextKey","scope":"instance","___s":true},{"meta":{"range":[29366,29635],"filename":"Cache.js","lineno":889,"path":"src\\loader"},"description":"Checks if the given key exists in the Physics Cache.","kind":"function","name":"checkPhysicsKey","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key exists in the cache, otherwise false."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#checkPhysicsKey","scope":"instance","___s":true},{"meta":{"range":[29752,30021],"filename":"Cache.js","lineno":902,"path":"src\\loader"},"description":"Checks if the given key exists in the Tilemap Cache.","kind":"function","name":"checkTilemapKey","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key exists in the cache, otherwise false."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#checkTilemapKey","scope":"instance","___s":true},{"meta":{"range":[30138,30405],"filename":"Cache.js","lineno":915,"path":"src\\loader"},"description":"Checks if the given key exists in the Binary Cache.","kind":"function","name":"checkBinaryKey","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key exists in the cache, otherwise false."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#checkBinaryKey","scope":"instance","___s":true},{"meta":{"range":[30520,30795],"filename":"Cache.js","lineno":928,"path":"src\\loader"},"description":"Checks if the given key exists in the BitmapData Cache.","kind":"function","name":"checkBitmapDataKey","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key exists in the cache, otherwise false."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#checkBitmapDataKey","scope":"instance","___s":true},{"meta":{"range":[30918,31193],"filename":"Cache.js","lineno":941,"path":"src\\loader"},"description":"Checks if the given key exists in the BitmapFont Cache.","kind":"function","name":"checkBitmapFontKey","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key exists in the cache, otherwise false."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#checkBitmapFontKey","scope":"instance","___s":true},{"meta":{"range":[31316,31579],"filename":"Cache.js","lineno":954,"path":"src\\loader"},"description":"Checks if the given key exists in the JSON Cache.","kind":"function","name":"checkJSONKey","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key exists in the cache, otherwise false."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#checkJSONKey","scope":"instance","___s":true},{"meta":{"range":[31690,31951],"filename":"Cache.js","lineno":967,"path":"src\\loader"},"description":"Checks if the given key exists in the XML Cache.","kind":"function","name":"checkXMLKey","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key exists in the cache, otherwise false."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#checkXMLKey","scope":"instance","___s":true},{"meta":{"range":[32060,32325],"filename":"Cache.js","lineno":980,"path":"src\\loader"},"description":"Checks if the given key exists in the Video Cache.","kind":"function","name":"checkVideoKey","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key exists in the cache, otherwise false."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#checkVideoKey","scope":"instance","___s":true},{"meta":{"range":[32438,32714],"filename":"Cache.js","lineno":993,"path":"src\\loader"},"description":"Checks if the given key exists in the Fragment Shader Cache.","kind":"function","name":"checkShaderKey","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key exists in the cache, otherwise false."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#checkShaderKey","scope":"instance","___s":true},{"meta":{"range":[32829,33111],"filename":"Cache.js","lineno":1006,"path":"src\\loader"},"description":"Checks if the given key exists in the Render Texture Cache.","kind":"function","name":"checkRenderTextureKey","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the key exists in the cache, otherwise false."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#checkRenderTextureKey","scope":"instance","___s":true},{"meta":{"range":[33309,34171],"filename":"Cache.js","lineno":1023,"path":"src\\loader"},"description":"Get an item from a cache based on the given key and property.\r\rThis method is mostly used internally by other Cache methods such as `getImage` but is exposed\rpublicly for your own use as well.","kind":"function","name":"getItem","params":[{"type":{"names":["string"]},"description":"The key of the asset within the cache.","name":"key"},{"type":{"names":["integer"]},"description":"The cache to search. One of the Cache consts such as `Phaser.Cache.IMAGE` or `Phaser.Cache.SOUND`.","name":"cache"},{"type":{"names":["string"]},"optional":true,"description":"The string name of the method calling getItem. Can be empty, in which case no console warning is output.","name":"method"},{"type":{"names":["string"]},"optional":true,"description":"If you require a specific property from the cache item, specify it here.","name":"property"}],"returns":[{"type":{"names":["object"]},"description":"The cached item if found, otherwise `null`. If the key is invalid and `method` is set then a console.warn is output."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getItem","scope":"instance","___s":true},{"meta":{"range":[34759,35190],"filename":"Cache.js","lineno":1061,"path":"src\\loader"},"description":"Gets a Canvas object from the cache.\r\rThe object is looked-up based on the key given.\r\rNote: If the object cannot be found a `console.warn` message is displayed.","kind":"function","name":"getCanvas","params":[{"type":{"names":["string"]},"description":"The key of the asset to retrieve from the cache.","name":"key"}],"returns":[{"type":{"names":["object"]},"description":"The canvas object or `null` if no item could be found matching the given key."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getCanvas","scope":"instance","___s":true},{"meta":{"range":[35322,36373],"filename":"Cache.js","lineno":1078,"path":"src\\loader"},"description":"Gets a Image object from the cache. This returns a DOM Image object, not a Phaser.Image object.\r\rThe object is looked-up based on the key given.\r\rNote: If the object cannot be found a `console.warn` message is displayed.\r\rOnly the Image cache is searched, which covers images loaded via Loader.image, Sprite Sheets and Texture Atlases.\r\rIf you need the image used by a bitmap font or similar then please use those respective 'get' methods.","kind":"function","name":"getImage","params":[{"type":{"names":["string"]},"optional":true,"description":"The key of the asset to retrieve from the cache. If not given or null it will return a default image. If given but not found in the cache it will throw a warning and return the missing image.","name":"key"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the full image object will be returned, if false just the HTML Image object is returned.","name":"full"}],"returns":[{"type":{"names":["Image"]},"description":"The Image object if found in the Cache, otherwise `null`. If `full` was true then a JavaScript object is returned."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getImage","scope":"instance","___s":true},{"meta":{"range":[36921,37252],"filename":"Cache.js","lineno":1121,"path":"src\\loader"},"description":"Get a single texture frame by key.\r\rYou'd only do this to get the default Frame created for a non-atlas / spritesheet image.","kind":"function","name":"getTextureFrame","params":[{"type":{"names":["string"]},"description":"The key of the asset to retrieve from the cache.","name":"key"}],"returns":[{"type":{"names":["Phaser.Frame"]},"description":"The frame data."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getTextureFrame","scope":"instance","___s":true},{"meta":{"range":[37396,37778],"filename":"Cache.js","lineno":1136,"path":"src\\loader"},"description":"Gets a Phaser.Sound object from the cache.\r\rThe object is looked-up based on the key given.\r\rNote: If the object cannot be found a `console.warn` message is displayed.","kind":"function","name":"getSound","params":[{"type":{"names":["string"]},"description":"The key of the asset to retrieve from the cache.","name":"key"}],"returns":[{"type":{"names":["Phaser.Sound"]},"description":"The sound object."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getSound","scope":"instance","___s":true},{"meta":{"range":[37897,38277],"filename":"Cache.js","lineno":1153,"path":"src\\loader"},"description":"Gets a raw Sound data object from the cache.\r\rThe object is looked-up based on the key given.\r\rNote: If the object cannot be found a `console.warn` message is displayed.","kind":"function","name":"getSoundData","params":[{"type":{"names":["string"]},"description":"The key of the asset to retrieve from the cache.","name":"key"}],"returns":[{"type":{"names":["object"]},"description":"The sound data."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getSoundData","scope":"instance","___s":true},{"meta":{"range":[38412,38776],"filename":"Cache.js","lineno":1170,"path":"src\\loader"},"description":"Gets a Text object from the cache.\r\rThe object is looked-up based on the key given.\r\rNote: If the object cannot be found a `console.warn` message is displayed.","kind":"function","name":"getText","params":[{"type":{"names":["string"]},"description":"The key of the asset to retrieve from the cache.","name":"key"}],"returns":[{"type":{"names":["object"]},"description":"The text data."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getText","scope":"instance","___s":true},{"meta":{"range":[38900,39710],"filename":"Cache.js","lineno":1187,"path":"src\\loader"},"description":"Gets a Physics Data object from the cache.\r\rThe object is looked-up based on the key given.\r\rNote: If the object cannot be found a `console.warn` message is displayed.\r\rYou can get either the entire data set, a single object or a single fixture of an object from it.","kind":"function","name":"getPhysicsData","params":[{"type":{"names":["string"]},"description":"The key of the asset to retrieve from the cache.","name":"key"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"If specified it will return just the physics object that is part of the given key, if null it will return them all.","name":"object"},{"type":{"names":["string"]},"description":"Fixture key of fixture inside an object. This key can be set per fixture with the Phaser Exporter.","name":"fixtureKey"}],"returns":[{"type":{"names":["object"]},"description":"The requested physics object data if found."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getPhysicsData","scope":"instance","___s":true},{"meta":{"range":[41223,41678],"filename":"Cache.js","lineno":1249,"path":"src\\loader"},"description":"Gets a raw Tilemap data object from the cache. This will be in either CSV or JSON format.\r\rThe object is looked-up based on the key given.\r\rNote: If the object cannot be found a `console.warn` message is displayed.","kind":"function","name":"getTilemapData","params":[{"type":{"names":["string"]},"description":"The key of the asset to retrieve from the cache.","name":"key"}],"returns":[{"type":{"names":["object"]},"description":"The raw tilemap data in CSV or JSON format."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getTilemapData","scope":"instance","___s":true},{"meta":{"range":[41811,42188],"filename":"Cache.js","lineno":1266,"path":"src\\loader"},"description":"Gets a binary object from the cache.\r\rThe object is looked-up based on the key given.\r\rNote: If the object cannot be found a `console.warn` message is displayed.","kind":"function","name":"getBinary","params":[{"type":{"names":["string"]},"description":"The key of the asset to retrieve from the cache.","name":"key"}],"returns":[{"type":{"names":["object"]},"description":"The binary data object."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getBinary","scope":"instance","___s":true},{"meta":{"range":[42310,42740],"filename":"Cache.js","lineno":1283,"path":"src\\loader"},"description":"Gets a BitmapData object from the cache.\r\rThe object is looked-up based on the key given.\r\rNote: If the object cannot be found a `console.warn` message is displayed.","kind":"function","name":"getBitmapData","params":[{"type":{"names":["string"]},"description":"The key of the asset to retrieve from the cache.","name":"key"}],"returns":[{"type":{"names":["Phaser.BitmapData"]},"description":"The requested BitmapData object if found, or null if not."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getBitmapData","scope":"instance","___s":true},{"meta":{"range":[42882,43313],"filename":"Cache.js","lineno":1300,"path":"src\\loader"},"description":"Gets a Bitmap Font object from the cache.\r\rThe object is looked-up based on the key given.\r\rNote: If the object cannot be found a `console.warn` message is displayed.","kind":"function","name":"getBitmapFont","params":[{"type":{"names":["string"]},"description":"The key of the asset to retrieve from the cache.","name":"key"}],"returns":[{"type":{"names":["Phaser.BitmapFont"]},"description":"The requested BitmapFont object if found, or null if not."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getBitmapFont","scope":"instance","___s":true},{"meta":{"range":[43447,44176],"filename":"Cache.js","lineno":1317,"path":"src\\loader"},"description":"Gets a JSON object from the cache.\r\rThe object is looked-up based on the key given.\r\rNote: If the object cannot be found a `console.warn` message is displayed.\r\rYou can either return the object by reference (the default), or return a clone\rof it by setting the `clone` argument to `true`.","kind":"function","name":"getJSON","params":[{"type":{"names":["string"]},"description":"The key of the asset to retrieve from the cache.","name":"key"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Return a clone of the original object (true) or a reference to it? (false)","name":"clone"}],"returns":[{"type":{"names":["object"]},"description":"The JSON object, or an Array if the key points to an Array property. If the property wasn't found, it returns null."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getJSON","scope":"instance","___s":true},{"meta":{"range":[44636,45000],"filename":"Cache.js","lineno":1354,"path":"src\\loader"},"description":"Gets an XML object from the cache.\r\rThe object is looked-up based on the key given.\r\rNote: If the object cannot be found a `console.warn` message is displayed.","kind":"function","name":"getXML","params":[{"type":{"names":["string"]},"description":"The key of the asset to retrieve from the cache.","name":"key"}],"returns":[{"type":{"names":["object"]},"description":"The XML object."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getXML","scope":"instance","___s":true},{"meta":{"range":[45121,45503],"filename":"Cache.js","lineno":1371,"path":"src\\loader"},"description":"Gets a Phaser.Video object from the cache.\r\rThe object is looked-up based on the key given.\r\rNote: If the object cannot be found a `console.warn` message is displayed.","kind":"function","name":"getVideo","params":[{"type":{"names":["string"]},"description":"The key of the asset to retrieve from the cache.","name":"key"}],"returns":[{"type":{"names":["Phaser.Video"]},"description":"The video object."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getVideo","scope":"instance","___s":true},{"meta":{"range":[45622,46003],"filename":"Cache.js","lineno":1388,"path":"src\\loader"},"description":"Gets a fragment shader object from the cache.\r\rThe object is looked-up based on the key given.\r\rNote: If the object cannot be found a `console.warn` message is displayed.","kind":"function","name":"getShader","params":[{"type":{"names":["string"]},"description":"The key of the asset to retrieve from the cache.","name":"key"}],"returns":[{"type":{"names":["string"]},"description":"The shader object."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getShader","scope":"instance","___s":true},{"meta":{"range":[46133,46555],"filename":"Cache.js","lineno":1405,"path":"src\\loader"},"description":"Gets a RenderTexture object from the cache.\r\rThe object is looked-up based on the key given.\r\rNote: If the object cannot be found a `console.warn` message is displayed.","kind":"function","name":"getRenderTexture","params":[{"type":{"names":["string"]},"description":"The key of the asset to retrieve from the cache.","name":"key"}],"returns":[{"type":{"names":["Object"]},"description":"The object with Phaser.RenderTexture and Phaser.Frame."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getRenderTexture","scope":"instance","___s":true},{"meta":{"range":[46803,47164],"filename":"Cache.js","lineno":1426,"path":"src\\loader"},"description":"Gets a PIXI.BaseTexture by key from the given Cache.","kind":"function","name":"getBaseTexture","params":[{"type":{"names":["string"]},"description":"Asset key of the image for which you want the BaseTexture for.","name":"key"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"Phaser.Cache.IMAGE","description":"The cache to search for the item in.","name":"cache"}],"returns":[{"type":{"names":["PIXI.BaseTexture"]},"description":"The BaseTexture object."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getBaseTexture","scope":"instance","___s":true},{"meta":{"range":[47365,47762],"filename":"Cache.js","lineno":1442,"path":"src\\loader"},"description":"Get a single frame by key. You'd only do this to get the default Frame created for a non-atlas/spritesheet image.","kind":"function","name":"getFrame","params":[{"type":{"names":["string"]},"description":"Asset key of the frame data to retrieve from the Cache.","name":"key"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"Phaser.Cache.IMAGE","description":"The cache to search for the item in.","name":"cache"}],"returns":[{"type":{"names":["Phaser.Frame"]},"description":"The frame data."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getFrame","scope":"instance","___s":true},{"meta":{"range":[47952,48344],"filename":"Cache.js","lineno":1458,"path":"src\\loader"},"description":"Get the total number of frames contained in the FrameData object specified by the given key.","kind":"function","name":"getFrameCount","params":[{"type":{"names":["string"]},"description":"Asset key of the FrameData you want.","name":"key"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"Phaser.Cache.IMAGE","description":"The cache to search for the item in.","name":"cache"}],"returns":[{"type":{"names":["number"]},"description":"Then number of frames. 0 if the image is not found."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getFrameCount","scope":"instance","___s":true},{"meta":{"range":[48593,49088],"filename":"Cache.js","lineno":1481,"path":"src\\loader"},"description":"Gets a Phaser.FrameData object from the Image Cache.\r\rThe object is looked-up based on the key given.\r\rNote: If the object cannot be found a `console.warn` message is displayed.","kind":"function","name":"getFrameData","params":[{"type":{"names":["string"]},"description":"Asset key of the frame data to retrieve from the Cache.","name":"key"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"Phaser.Cache.IMAGE","description":"The cache to search for the item in.","name":"cache"}],"returns":[{"type":{"names":["Phaser.FrameData"]},"description":"The frame data."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getFrameData","scope":"instance","___s":true},{"meta":{"range":[49290,49691],"filename":"Cache.js","lineno":1501,"path":"src\\loader"},"description":"Check if the FrameData for the given key exists in the Image Cache.","kind":"function","name":"hasFrameData","params":[{"type":{"names":["string"]},"description":"Asset key of the frame data to retrieve from the Cache.","name":"key"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"Phaser.Cache.IMAGE","description":"The cache to search for the item in.","name":"cache"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the given key has frameData in the cache, otherwise false."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#hasFrameData","scope":"instance","___s":true},{"meta":{"range":[49892,50316],"filename":"Cache.js","lineno":1517,"path":"src\\loader"},"description":"Replaces a set of frameData with a new Phaser.FrameData object.","kind":"function","name":"updateFrameData","params":[{"type":{"names":["string"]},"description":"The unique key by which you will reference this object.","name":"key"},{"type":{"names":["number"]},"description":"The new FrameData.","name":"frameData"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"Phaser.Cache.IMAGE","description":"The cache to search. One of the Cache consts such as `Phaser.Cache.IMAGE` or `Phaser.Cache.SOUND`.","name":"cache"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#updateFrameData","scope":"instance","___s":true},{"meta":{"range":[50587,51062],"filename":"Cache.js","lineno":1536,"path":"src\\loader"},"description":"Get a single frame out of a frameData set by key.","kind":"function","name":"getFrameByIndex","params":[{"type":{"names":["string"]},"description":"Asset key of the frame data to retrieve from the Cache.","name":"key"},{"type":{"names":["number"]},"description":"The index of the frame you want to get.","name":"index"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"Phaser.Cache.IMAGE","description":"The cache to search. One of the Cache consts such as `Phaser.Cache.IMAGE` or `Phaser.Cache.SOUND`.","name":"cache"}],"returns":[{"type":{"names":["Phaser.Frame"]},"description":"The frame object."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getFrameByIndex","scope":"instance","___s":true},{"meta":{"range":[51333,51805],"filename":"Cache.js","lineno":1560,"path":"src\\loader"},"description":"Get a single frame out of a frameData set by key.","kind":"function","name":"getFrameByName","params":[{"type":{"names":["string"]},"description":"Asset key of the frame data to retrieve from the Cache.","name":"key"},{"type":{"names":["string"]},"description":"The name of the frame you want to get.","name":"name"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"Phaser.Cache.IMAGE","description":"The cache to search. One of the Cache consts such as `Phaser.Cache.IMAGE` or `Phaser.Cache.SOUND`.","name":"cache"}],"returns":[{"type":{"names":["Phaser.Frame"]},"description":"The frame object."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getFrameByName","scope":"instance","___s":true},{"meta":{"range":[52079,52572],"filename":"Cache.js","lineno":1584,"path":"src\\loader"},"description":"Get a cached object by the URL.\rThis only returns a value if you set Cache.autoResolveURL to `true` *before* starting the preload of any assets.\rBe aware that every call to this function makes a DOM src query, so use carefully and double-check for implications in your target browsers/devices.","kind":"function","name":"getURL","params":[{"type":{"names":["string"]},"description":"The url for the object loaded to get from the cache.","name":"url"}],"returns":[{"type":{"names":["object"]},"description":"The cached object."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getURL","scope":"instance","___s":true},{"meta":{"range":[52920,53270],"filename":"Cache.js","lineno":1609,"path":"src\\loader"},"description":"Gets all keys used in the requested Cache.","kind":"function","name":"getKeys","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":"Phaser.Cache.IMAGE","description":"The Cache you wish to get the keys from. Can be any of the Cache consts such as `Phaser.Cache.IMAGE`, `Phaser.Cache.SOUND` etc.","name":"cache"}],"returns":[{"type":{"names":["Array"]},"description":"The array of keys in the requested cache."}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#getKeys","scope":"instance","___s":true},{"meta":{"range":[53801,54124],"filename":"Cache.js","lineno":1641,"path":"src\\loader"},"description":"Removes a canvas from the cache.\r\rNote that this only removes it from the Phaser.Cache. If you still have references to the data elsewhere\rthen it will persist in memory.","kind":"function","name":"removeCanvas","params":[{"type":{"names":["string"]},"description":"Key of the asset you want to remove.","name":"key"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#removeCanvas","scope":"instance","___s":true},{"meta":{"range":[54221,54755],"filename":"Cache.js","lineno":1656,"path":"src\\loader"},"description":"Removes an image from the cache.\r\rYou can optionally elect to destroy it as well. This calls BaseTexture.destroy on it.\r\rNote that this only removes it from the Phaser Cache. If you still have references to the data elsewhere\rthen it will persist in memory.","kind":"function","name":"removeImage","params":[{"type":{"names":["string"]},"description":"Key of the asset you want to remove.","name":"key"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should the BaseTexture behind this image also be destroyed?","name":"destroyBaseTexture"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#removeImage","scope":"instance","___s":true},{"meta":{"range":[55099,55759],"filename":"Cache.js","lineno":1683,"path":"src\\loader"},"description":"Removes a sound from the cache.\r\rIf any `Phaser.Sound` objects use the audio file in the cache that you remove with this method, they will\r_automatically_ destroy themselves. If you wish to have full control over when Sounds are destroyed then\ryou must finish your house-keeping and destroy them all yourself first, before calling this method.\r\rNote that this only removes it from the Phaser.Cache. If you still have references to the data elsewhere\rthen it will persist in memory.","kind":"function","name":"removeSound","params":[{"type":{"names":["string"]},"description":"Key of the asset you want to remove.","name":"key"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#removeSound","scope":"instance","___s":true},{"meta":{"range":[55854,56178],"filename":"Cache.js","lineno":1702,"path":"src\\loader"},"description":"Removes a text file from the cache.\r\rNote that this only removes it from the Phaser.Cache. If you still have references to the data elsewhere\rthen it will persist in memory.","kind":"function","name":"removeText","params":[{"type":{"names":["string"]},"description":"Key of the asset you want to remove.","name":"key"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#removeText","scope":"instance","___s":true},{"meta":{"range":[56271,56606],"filename":"Cache.js","lineno":1717,"path":"src\\loader"},"description":"Removes a physics data file from the cache.\r\rNote that this only removes it from the Phaser.Cache. If you still have references to the data elsewhere\rthen it will persist in memory.","kind":"function","name":"removePhysics","params":[{"type":{"names":["string"]},"description":"Key of the asset you want to remove.","name":"key"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#removePhysics","scope":"instance","___s":true},{"meta":{"range":[56705,57030],"filename":"Cache.js","lineno":1732,"path":"src\\loader"},"description":"Removes a tilemap from the cache.\r\rNote that this only removes it from the Phaser.Cache. If you still have references to the data elsewhere\rthen it will persist in memory.","kind":"function","name":"removeTilemap","params":[{"type":{"names":["string"]},"description":"Key of the asset you want to remove.","name":"key"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#removeTilemap","scope":"instance","___s":true},{"meta":{"range":[57129,57457],"filename":"Cache.js","lineno":1747,"path":"src\\loader"},"description":"Removes a binary file from the cache.\r\rNote that this only removes it from the Phaser.Cache. If you still have references to the data elsewhere\rthen it will persist in memory.","kind":"function","name":"removeBinary","params":[{"type":{"names":["string"]},"description":"Key of the asset you want to remove.","name":"key"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#removeBinary","scope":"instance","___s":true},{"meta":{"range":[57554,57886],"filename":"Cache.js","lineno":1762,"path":"src\\loader"},"description":"Removes a bitmap data from the cache.\r\rNote that this only removes it from the Phaser.Cache. If you still have references to the data elsewhere\rthen it will persist in memory.","kind":"function","name":"removeBitmapData","params":[{"type":{"names":["string"]},"description":"Key of the asset you want to remove.","name":"key"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#removeBitmapData","scope":"instance","___s":true},{"meta":{"range":[57991,58323],"filename":"Cache.js","lineno":1777,"path":"src\\loader"},"description":"Removes a bitmap font from the cache.\r\rNote that this only removes it from the Phaser.Cache. If you still have references to the data elsewhere\rthen it will persist in memory.","kind":"function","name":"removeBitmapFont","params":[{"type":{"names":["string"]},"description":"Key of the asset you want to remove.","name":"key"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#removeBitmapFont","scope":"instance","___s":true},{"meta":{"range":[58428,58754],"filename":"Cache.js","lineno":1792,"path":"src\\loader"},"description":"Removes a json object from the cache.\r\rNote that this only removes it from the Phaser.Cache. If you still have references to the data elsewhere\rthen it will persist in memory.","kind":"function","name":"removeJSON","params":[{"type":{"names":["string"]},"description":"Key of the asset you want to remove.","name":"key"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#removeJSON","scope":"instance","___s":true},{"meta":{"range":[58847,59171],"filename":"Cache.js","lineno":1807,"path":"src\\loader"},"description":"Removes a xml object from the cache.\r\rNote that this only removes it from the Phaser.Cache. If you still have references to the data elsewhere\rthen it will persist in memory.","kind":"function","name":"removeXML","params":[{"type":{"names":["string"]},"description":"Key of the asset you want to remove.","name":"key"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#removeXML","scope":"instance","___s":true},{"meta":{"range":[59262,59583],"filename":"Cache.js","lineno":1822,"path":"src\\loader"},"description":"Removes a video from the cache.\r\rNote that this only removes it from the Phaser.Cache. If you still have references to the data elsewhere\rthen it will persist in memory.","kind":"function","name":"removeVideo","params":[{"type":{"names":["string"]},"description":"Key of the asset you want to remove.","name":"key"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#removeVideo","scope":"instance","___s":true},{"meta":{"range":[59678,60001],"filename":"Cache.js","lineno":1837,"path":"src\\loader"},"description":"Removes a shader from the cache.\r\rNote that this only removes it from the Phaser.Cache. If you still have references to the data elsewhere\rthen it will persist in memory.","kind":"function","name":"removeShader","params":[{"type":{"names":["string"]},"description":"Key of the asset you want to remove.","name":"key"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#removeShader","scope":"instance","___s":true},{"meta":{"range":[60098,60436],"filename":"Cache.js","lineno":1852,"path":"src\\loader"},"description":"Removes a Render Texture from the cache.\r\rNote that this only removes it from the Phaser.Cache. If you still have references to the data elsewhere\rthen it will persist in memory.","kind":"function","name":"removeRenderTexture","params":[{"type":{"names":["string"]},"description":"Key of the asset you want to remove.","name":"key"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#removeRenderTexture","scope":"instance","___s":true},{"meta":{"range":[60547,60881],"filename":"Cache.js","lineno":1867,"path":"src\\loader"},"description":"Removes a Sprite Sheet from the cache.\r\rNote that this only removes it from the Phaser.Cache. If you still have references to the data elsewhere\rthen it will persist in memory.","kind":"function","name":"removeSpriteSheet","params":[{"type":{"names":["string"]},"description":"Key of the asset you want to remove.","name":"key"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#removeSpriteSheet","scope":"instance","___s":true},{"meta":{"range":[60988,61324],"filename":"Cache.js","lineno":1882,"path":"src\\loader"},"description":"Removes a Texture Atlas from the cache.\r\rNote that this only removes it from the Phaser.Cache. If you still have references to the data elsewhere\rthen it will persist in memory.","kind":"function","name":"removeTextureAtlas","params":[{"type":{"names":["string"]},"description":"Key of the asset you want to remove.","name":"key"}],"memberof":"Phaser.Cache","longname":"Phaser.Cache#removeTextureAtlas","scope":"instance","___s":true},{"meta":{"range":[61426,61667],"filename":"Cache.js","lineno":1897,"path":"src\\loader"},"description":"Empties out all of the GL Textures from Images stored in the cache.\rThis is called automatically when the WebGL context is lost and then restored.","kind":"function","name":"clearGLTextures","access":"protected","memberof":"Phaser.Cache","longname":"Phaser.Cache#clearGLTextures","scope":"instance","___s":true},{"meta":{"range":[62853,63056],"filename":"Cache.js","lineno":1947,"path":"src\\loader"},"description":"Clears the cache. Removes every local cache object reference.\rIf an object in the cache has a `destroy` method it will also be called.","kind":"function","name":"destroy","memberof":"Phaser.Cache","longname":"Phaser.Cache#destroy","scope":"instance","___s":true},{"meta":{"range":[227,956],"filename":"Loader.js","lineno":8,"path":"src\\loader"},"description":"The Loader handles loading all external content such as Images, Sounds, Texture Atlases and data files.\r\rThe loader uses a combination of tag loading (eg. Image elements) and XHR and provides progress and completion callbacks.\r\rParallel loading (see {@link #enableParallel}) is supported and enabled by default.\rLoad-before behavior of parallel resources is controlled by synchronization points as discussed in {@link #withSyncPoint}.\r\rTexture Atlases can be created with tools such as [Texture Packer](https://www.codeandweb.com/texturepacker/phaser) and\r[Shoebox](http://renderhjs.net/shoebox/)","kind":"class","name":"Loader","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"memberof":"Phaser","longname":"Phaser.Loader","scope":"static","___s":true},{"meta":{"range":[1102,1118],"filename":"Loader.js","lineno":29,"path":"src\\loader"},"description":"Local reference to game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"access":"protected","name":"game","longname":"Phaser.Loader#game","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[1244,1267],"filename":"Loader.js","lineno":36,"path":"src\\loader"},"description":"Local reference to the Phaser.Cache.","properties":[{"type":{"names":["Phaser.Cache"]},"name":"cache"}],"access":"protected","name":"cache","longname":"Phaser.Loader#cache","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[1486,1510],"filename":"Loader.js","lineno":43,"path":"src\\loader"},"description":"If true all calls to Loader.reset will be ignored. Useful if you need to create a load queue before swapping to a preloader state.","properties":[{"type":{"names":["boolean"]},"name":"resetLocked"}],"defaultvalue":false,"name":"resetLocked","longname":"Phaser.Loader#resetLocked","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[1655,1677],"filename":"Loader.js","lineno":50,"path":"src\\loader"},"description":"True if the Loader is in the process of loading the queue.","properties":[{"type":{"names":["boolean"]},"name":"isLoading"}],"defaultvalue":false,"name":"isLoading","longname":"Phaser.Loader#isLoading","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[1818,1840],"filename":"Loader.js","lineno":57,"path":"src\\loader"},"description":"True if all assets in the queue have finished loading.","properties":[{"type":{"names":["boolean"]},"name":"hasLoaded"}],"defaultvalue":false,"name":"hasLoaded","longname":"Phaser.Loader#hasLoaded","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[2138,2163],"filename":"Loader.js","lineno":67,"path":"src\\loader"},"description":"You can optionally link a progress sprite with {@link Phaser.Loader#setPreloadSprite setPreloadSprite}.\r\rThis property is an object containing: sprite, rect, direction, width and height","properties":[{"type":{"names":["object"]},"nullable":true,"name":"preloadSprite"}],"access":"protected","name":"preloadSprite","longname":"Phaser.Loader#preloadSprite","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[2354,2378],"filename":"Loader.js","lineno":74,"path":"src\\loader"},"description":"The crossOrigin value applied to loaded images. Very often this needs to be set to 'anonymous'.","properties":[{"type":{"names":["boolean","string"]},"name":"crossOrigin"}],"defaultvalue":false,"name":"crossOrigin","longname":"Phaser.Loader#crossOrigin","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[2661,2678],"filename":"Loader.js","lineno":83,"path":"src\\loader"},"description":"If you want to append a URL before the path of any asset you can set this here.\rUseful if allowing the asset base url to be configured outside of the game code.\rThe string _must_ end with a \"/\".","properties":[{"type":{"names":["string"]},"name":"baseURL"}],"name":"baseURL","longname":"Phaser.Loader#baseURL","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[3401,3415],"filename":"Loader.js","lineno":103,"path":"src\\loader"},"description":"The value of `path`, if set, is placed before any _relative_ file path given. For example:\r\r`load.path = \"images/sprites/\";\rload.image(\"ball\", \"ball.png\");\rload.image(\"tree\", \"level1/oaktree.png\");\rload.image(\"boom\", \"http://server.com/explode.png\");`\r\rWould load the `ball` file from `images/sprites/ball.png` and the tree from\r`images/sprites/level1/oaktree.png` but the file `boom` would load from the URL\rgiven as it's an absolute URL.\r\rPlease note that the path is added before the filename but *after* the baseURL (if set.)\r\rThe string _must_ end with a \"/\".","properties":[{"type":{"names":["string"]},"name":"path"}],"name":"path","longname":"Phaser.Loader#path","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[4155,4282],"filename":"Loader.js","lineno":122,"path":"src\\loader"},"description":"Used to map the application mime-types to to the Accept header in XHR requests.\rIf you don't require these mappings, or they cause problems on your server, then\rremove them from the headers object and the XHR request will not try to use them.\r\rThis object can also be used to set the `X-Requested-With` header to \r`XMLHttpRequest` (or any other value you need). To enable this do:\r\r`this.load.headers.requestedWith = 'XMLHttpRequest'`\r\rbefore adding anything to the Loader. The XHR loader will then call:\r\r`setRequestHeader('X-Requested-With', this.headers['requestedWith'])`","properties":[{"type":{"names":["object"]},"name":"headers"}],"defaultvalue":"{\"undefined\":\"application/xml\"}","defaultvaluetype":"object","name":"headers","longname":"Phaser.Loader#headers","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[4525,4563],"filename":"Loader.js","lineno":134,"path":"src\\loader"},"description":"This event is dispatched when the loading process starts: before the first file has been requested,\rbut after all the initial packs have been loaded.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onLoadStart"}],"name":"onLoadStart","longname":"Phaser.Loader#onLoadStart","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[4743,4784],"filename":"Loader.js","lineno":141,"path":"src\\loader"},"description":"This event is dispatched when the final file in the load queue has either loaded or failed.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onLoadComplete"}],"name":"onLoadComplete","longname":"Phaser.Loader#onLoadComplete","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[5162,5203],"filename":"Loader.js","lineno":152,"path":"src\\loader"},"description":"This event is dispatched when an asset pack has either loaded or failed to load.\r\rThis is called when the asset pack manifest file has loaded and successfully added its contents to the loader queue.\r\rParams: `(pack key, success?, total packs loaded, total packs)`","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onPackComplete"}],"name":"onPackComplete","longname":"Phaser.Loader#onPackComplete","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[5512,5550],"filename":"Loader.js","lineno":162,"path":"src\\loader"},"description":"This event is dispatched immediately before a file starts loading.\rIt's possible the file may fail (eg. download error, invalid format) after this event is sent.\r\rParams: `(progress, file key, file url)`","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onFileStart"}],"name":"onFileStart","longname":"Phaser.Loader#onFileStart","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[5980,6021],"filename":"Loader.js","lineno":175,"path":"src\\loader"},"description":"This event is dispatched when a file has either loaded or failed to load.\r\rAny function bound to this will receive the following parameters:\r\rprogress, file key, success?, total loaded files, total files\r\rWhere progress is a number between 1 and 100 (inclusive) representing the percentage of the load.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onFileComplete"}],"name":"onFileComplete","longname":"Phaser.Loader#onFileComplete","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[6360,6398],"filename":"Loader.js","lineno":186,"path":"src\\loader"},"description":"This event is dispatched when a file (or pack) errors as a result of the load request.\r\rFor files it will be triggered before `onFileComplete`. For packs it will be triggered before `onPackComplete`.\r\rParams: `(file key, file)`","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onFileError"}],"name":"onFileError","longname":"Phaser.Loader#onFileError","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[6749,6779],"filename":"Loader.js","lineno":196,"path":"src\\loader"},"description":"If true and if the browser supports XDomainRequest, it will be used in preference for XHR.\r\rThis is only relevant for IE 9 and should _only_ be enabled for IE 9 clients when required by the server/CDN.","properties":[{"type":{"names":["boolean"]},"name":"useXDomainRequest"}],"deprecated":"This is only relevant for IE 9.","name":"useXDomainRequest","longname":"Phaser.Loader#useXDomainRequest","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[7231,7257],"filename":"Loader.js","lineno":211,"path":"src\\loader"},"description":"If true (the default) then parallel downloading will be enabled.\r\rTo disable all parallel downloads this must be set to false prior to any resource being loaded.","properties":[{"type":{"names":["boolean"]},"name":"enableParallel"}],"name":"enableParallel","longname":"Phaser.Loader#enableParallel","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[7531,7560],"filename":"Loader.js","lineno":221,"path":"src\\loader"},"description":"The number of concurrent / parallel resources to try and fetch at once.\r\rMany current browsers limit 6 requests per domain; this is slightly conservative.","properties":[{"type":{"names":["integer"]},"name":"maxParallelDownloads"}],"access":"protected","name":"maxParallelDownloads","longname":"Phaser.Loader#maxParallelDownloads","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[7733,7761],"filename":"Loader.js","lineno":227,"path":"src\\loader"},"description":"A counter: if more than zero, files will be automatically added as a synchronization point.","properties":[{"type":{"names":["integer"]},"name":"_withSyncPointDepth;"}],"name":"_withSyncPointDepth","longname":"Phaser.Loader#_withSyncPointDepth","kind":"member","memberof":"Phaser.Loader","scope":"instance","___s":true},{"meta":{"range":[9773,9815],"filename":"Loader.js","lineno":304,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"TEXTURE_ATLAS_JSON_ARRAY","longname":"Phaser.Loader.TEXTURE_ATLAS_JSON_ARRAY","memberof":"Phaser.Loader","scope":"static","___s":true},{"meta":{"range":[9860,9901],"filename":"Loader.js","lineno":310,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"TEXTURE_ATLAS_JSON_HASH","longname":"Phaser.Loader.TEXTURE_ATLAS_JSON_HASH","memberof":"Phaser.Loader","scope":"static","___s":true},{"meta":{"range":[9946,9990],"filename":"Loader.js","lineno":316,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"TEXTURE_ATLAS_XML_STARLING","longname":"Phaser.Loader.TEXTURE_ATLAS_XML_STARLING","memberof":"Phaser.Loader","scope":"static","___s":true},{"meta":{"range":[10035,10077],"filename":"Loader.js","lineno":322,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"PHYSICS_LIME_CORONA_JSON","longname":"Phaser.Loader.PHYSICS_LIME_CORONA_JSON","memberof":"Phaser.Loader","scope":"static","___s":true},{"meta":{"range":[10122,10159],"filename":"Loader.js","lineno":328,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"PHYSICS_PHASER_JSON","longname":"Phaser.Loader.PHYSICS_PHASER_JSON","memberof":"Phaser.Loader","scope":"static","___s":true},{"meta":{"range":[10204,10246],"filename":"Loader.js","lineno":334,"path":"src\\loader"},"kind":"constant","type":{"names":["number"]},"name":"TEXTURE_ATLAS_JSON_PYXEL","longname":"Phaser.Loader.TEXTURE_ATLAS_JSON_PYXEL","memberof":"Phaser.Loader","scope":"static","___s":true},{"meta":{"range":[10286,10958],"filename":"Loader.js","lineno":338,"path":"src\\loader"},"description":"Set a Sprite to be a \"preload\" sprite by passing it to this method.\r\rA \"preload\" sprite will have its width or height crop adjusted based on the percentage of the loader in real-time.\rThis allows you to easily make loading bars for games.\r\rThe sprite will automatically be made visible when calling this.","kind":"function","name":"setPreloadSprite","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image"]},"description":"The sprite or image that will be cropped during the load.","name":"sprite"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"A value of zero means the sprite will be cropped horizontally, a value of 1 means its will be cropped vertically.","name":"direction"}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#setPreloadSprite","scope":"instance","___s":true},{"meta":{"range":[11605,11837],"filename":"Loader.js","lineno":373,"path":"src\\loader"},"description":"Called automatically by ScaleManager when the game resizes in RESIZE scalemode.\r\rThis can be used to adjust the preloading sprite size, eg.","kind":"function","name":"resize","access":"protected","memberof":"Phaser.Loader","longname":"Phaser.Loader#resize","scope":"instance","___s":true},{"meta":{"range":[12085,12522],"filename":"Loader.js","lineno":390,"path":"src\\loader"},"description":"Check whether a file/asset with a specific key is queued to be loaded.\r\rTo access a loaded asset use Phaser.Cache, eg. {@link Phaser.Cache#checkImageKey}","kind":"function","name":"checkKeyExists","params":[{"type":{"names":["string"]},"description":"The type asset you want to check.","name":"type"},{"type":{"names":["string"]},"description":"Key of the asset you want to check.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"Return true if exists, otherwise return false."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#checkKeyExists","scope":"instance","___s":true},{"meta":{"range":[12638,13133],"filename":"Loader.js","lineno":406,"path":"src\\loader"},"description":"Get the queue-index of the file/asset with a specific key.\r\rOnly assets in the download file queue will be found.","kind":"function","name":"getAssetIndex","params":[{"type":{"names":["string"]},"description":"The type asset you want to check.","name":"type"},{"type":{"names":["string"]},"description":"Key of the asset you want to check.","name":"key"}],"returns":[{"type":{"names":["number"]},"description":"The index of this key in the filelist, or -1 if not found.\r    The index may change and should only be used immediately following this call"}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#getAssetIndex","scope":"instance","___s":true},{"meta":{"range":[13689,14208],"filename":"Loader.js","lineno":441,"path":"src\\loader"},"description":"Find a file/asset with a specific key.\r\rOnly assets in the download file queue will be found.","kind":"function","name":"getAsset","params":[{"type":{"names":["string"]},"description":"The type asset you want to check.","name":"type"},{"type":{"names":["string"]},"description":"Key of the asset you want to check.","name":"key"}],"returns":[{"type":{"names":["any"]},"description":"Returns an object if found that has 2 properties: `index` and `file`; otherwise a non-true value is returned.\r    The index may change and should only be used immediately following this call."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#getAsset","scope":"instance","___s":true},{"meta":{"range":[14475,15021],"filename":"Loader.js","lineno":465,"path":"src\\loader"},"description":"Reset the loader and clear any queued assets. If `Loader.resetLocked` is true this operation will abort.\r\rThis will abort any loading and clear any queued assets.\r\rOptionally you can clear any associated events.","kind":"function","name":"reset","access":"protected","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true then the preload sprite and other artifacts may also be cleared.","name":"hard"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true then the all Loader signals will have removeAll called on them.","name":"clearEvents"}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#reset","scope":"instance","___s":true},{"meta":{"range":[15956,17014],"filename":"Loader.js","lineno":515,"path":"src\\loader"},"description":"Internal function that adds a new entry to the file list. Do not call directly.","kind":"function","name":"addToFileList","access":"protected","params":[{"type":{"names":["string"]},"description":"The type of resource to add to the list (image, audio, xml, etc).","name":"type"},{"type":{"names":["string"]},"description":"The unique Cache ID key of this resource.","name":"key"},{"type":{"names":["string"]},"optional":true,"description":"The URL the asset will be loaded from.","name":"url"},{"type":{"names":["object"]},"optional":true,"defaultvalue":"(none)","description":"Any additional properties needed to load the file. These are added directly to the added file object and overwrite any defaults.","name":"properties"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true then this will overwrite a file asset of the same type/key. Otherwise it will only add a new asset. If overwrite is true, and the asset is already being loaded (or has been loaded), then it is appended instead.","name":"overwrite"},{"type":{"names":["string"]},"optional":true,"description":"If no URL is given the Loader will sometimes auto-generate the URL based on the key, using this as the extension.","name":"extension"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This instance of the Phaser Loader."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#addToFileList","scope":"instance","___s":true},{"meta":{"range":[18795,19312],"filename":"Loader.js","lineno":597,"path":"src\\loader"},"description":"Internal function that replaces an existing entry in the file list with a new one. Do not call directly.","kind":"function","name":"replaceInFileList","access":"protected","params":[{"type":{"names":["string"]},"description":"The type of resource to add to the list (image, audio, xml, etc).","name":"type"},{"type":{"names":["string"]},"description":"The unique Cache ID key of this resource.","name":"key"},{"type":{"names":["string"]},"description":"The URL the asset will be loaded from.","name":"url"},{"type":{"names":["object"]},"description":"Any additional properties needed to load the file.","name":"properties"}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#replaceInFileList","scope":"instance","___s":true},{"meta":{"range":[19466,20857],"filename":"Loader.js","lineno":613,"path":"src\\loader"},"description":"Add a JSON resource pack ('packfile') to the Loader.\r\rA packfile is a JSON file that contains a list of assets to the be loaded.\rPlease see the example 'loader/asset pack' in the Phaser Examples repository.\r\rPacks are always put before the first non-pack file that is not loaded / loading.\r\rThis means that all packs added before any loading has started are added to the front\rof the file queue, in the order added.\r\rThe key must be a unique String. It is used to add the file to the Phaser.Cache upon successful load.\r\rThe URL of the packfile can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.","kind":"function","name":"pack","params":[{"type":{"names":["string"]},"description":"Unique asset key of this resource pack.","name":"key"},{"type":{"names":["string"]},"optional":true,"description":"URL of the Asset Pack JSON file. If you wish to pass a json object instead set this to null and pass the object as the data parameter.","name":"url"},{"type":{"names":["object"]},"optional":true,"description":"The Asset Pack JSON data. Use this to pass in a json data object rather than loading it from a URL. TODO","name":"data"},{"type":{"names":["object"]},"optional":true,"defaultvalue":"(loader)","description":"Some Loader operations, like Binary and Script require a context for their callbacks. Pass the context here.","name":"callbackContext"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#pack","scope":"instance","___s":true},{"meta":{"range":[22446,23897],"filename":"Loader.js","lineno":693,"path":"src\\loader"},"description":"Adds an Image to the current load queue.\r\rThe file is **not** loaded immediately after calling this method. The file is added to the queue ready to be loaded when the loader starts.\r\rPhaser can load all common image types: png, jpg, gif and any other format the browser can natively handle.\r\rThe key must be a unique String. It is used to add the file to the Phaser.Cache upon successful load.\r\rRetrieve the image via `Cache.getImage(key)`\r\rThe URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\rIf the URL isn't specified the Loader will take the key and create a filename from that. For example if the key is \"alien\"\rand no URL is given then the Loader will set the URL to be \"alien.png\". It will always add `.png` as the extension.\rIf you do not desire this action then provide a URL.","kind":"function","name":"image","params":[{"type":{"names":["string"]},"description":"Unique asset key of this image file.","name":"key"},{"type":{"names":["string"]},"optional":true,"description":"URL of an image file. If undefined or `null` the url will be set to `<key>.png`, i.e. if `key` was \"alien\" then the URL will be \"alien.png\".","name":"url"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If an unloaded file with a matching key already exists in the queue, this entry will overwrite it.","name":"overwrite"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#image","scope":"instance","___s":true},{"meta":{"range":[24047,25547],"filename":"Loader.js","lineno":722,"path":"src\\loader"},"description":"Adds an array of images to the current load queue.\r\rIt works by passing each element of the array to the Loader.image method.\r\rThe files are **not** loaded immediately after calling this method. The files are added to the queue ready to be loaded when the loader starts.\r\rPhaser can load all common image types: png, jpg, gif and any other format the browser can natively handle.\r\rThe keys must be unique Strings. They are used to add the files to the Phaser.Cache upon successful load.\r\rRetrieve the images via `Cache.getImage(key)`\r\rThe URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\rIf the URL isn't specified the Loader will take the key and create a filename from that. For example if the key is \"alien\"\rand no URL is given then the Loader will set the URL to be \"alien.png\". It will always add `.png` as the extension.\rIf you do not desire this action then provide a URL.","kind":"function","name":"images","params":[{"type":{"names":["array"]},"description":"An array of unique asset keys of the image files.","name":"keys"},{"type":{"names":["array"]},"optional":true,"description":"Optional array of URLs. If undefined or `null` the url will be set to `<key>.png`, i.e. if `key` was \"alien\" then the URL will be \"alien.png\". If provided the URLs array length must match the keys array length.","name":"urls"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#images","scope":"instance","___s":true},{"meta":{"range":[25967,27294],"filename":"Loader.js","lineno":767,"path":"src\\loader"},"description":"Adds a Text file to the current load queue.\r\rThe file is **not** loaded immediately after calling this method. The file is added to the queue ready to be loaded when the loader starts.\r\rThe key must be a unique String. It is used to add the file to the Phaser.Cache upon successful load.\r\rRetrieve the file via `Cache.getText(key)`\r\rThe URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\rIf the URL isn't specified the Loader will take the key and create a filename from that. For example if the key is \"alien\"\rand no URL is given then the Loader will set the URL to be \"alien.txt\". It will always add `.txt` as the extension.\rIf you do not desire this action then provide a URL.","kind":"function","name":"text","params":[{"type":{"names":["string"]},"description":"Unique asset key of the text file.","name":"key"},{"type":{"names":["string"]},"optional":true,"description":"URL of the text file. If undefined or `null` the url will be set to `<key>.txt`, i.e. if `key` was \"alien\" then the URL will be \"alien.txt\".","name":"url"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If an unloaded file with a matching key already exists in the queue, this entry will overwrite it.","name":"overwrite"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#text","scope":"instance","___s":true},{"meta":{"range":[27442,28941],"filename":"Loader.js","lineno":794,"path":"src\\loader"},"description":"Adds a JSON file to the current load queue.\r\rThe file is **not** loaded immediately after calling this method. The file is added to the queue ready to be loaded when the loader starts.\r\rThe key must be a unique String. It is used to add the file to the Phaser.Cache upon successful load.\r\rRetrieve the file via `Cache.getJSON(key)`. JSON files are automatically parsed upon load.\rIf you need to control when the JSON is parsed then use `Loader.text` instead and parse the text file as needed.\r\rThe URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\rIf the URL isn't specified the Loader will take the key and create a filename from that. For example if the key is \"alien\"\rand no URL is given then the Loader will set the URL to be \"alien.json\". It will always add `.json` as the extension.\rIf you do not desire this action then provide a URL.","kind":"function","name":"json","params":[{"type":{"names":["string"]},"description":"Unique asset key of the json file.","name":"key"},{"type":{"names":["string"]},"optional":true,"description":"URL of the JSON file. If undefined or `null` the url will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".","name":"url"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If an unloaded file with a matching key already exists in the queue, this entry will overwrite it.","name":"overwrite"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#json","scope":"instance","___s":true},{"meta":{"range":[29090,30441],"filename":"Loader.js","lineno":822,"path":"src\\loader"},"description":"Adds a fragment shader file to the current load queue.\r\rThe file is **not** loaded immediately after calling this method. The file is added to the queue ready to be loaded when the loader starts.\r\rThe key must be a unique String. It is used to add the file to the Phaser.Cache upon successful load.\r\rRetrieve the file via `Cache.getShader(key)`.\r\rThe URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\rIf the URL isn't specified the Loader will take the key and create a filename from that. For example if the key is \"blur\"\rand no URL is given then the Loader will set the URL to be \"blur.frag\". It will always add `.frag` as the extension.\rIf you do not desire this action then provide a URL.","kind":"function","name":"shader","params":[{"type":{"names":["string"]},"description":"Unique asset key of the fragment file.","name":"key"},{"type":{"names":["string"]},"optional":true,"description":"URL of the fragment file. If undefined or `null` the url will be set to `<key>.frag`, i.e. if `key` was \"blur\" then the URL will be \"blur.frag\".","name":"url"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If an unloaded file with a matching key already exists in the queue, this entry will overwrite it.","name":"overwrite"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#shader","scope":"instance","___s":true},{"meta":{"range":[30594,31918],"filename":"Loader.js","lineno":849,"path":"src\\loader"},"description":"Adds an XML file to the current load queue.\r\rThe file is **not** loaded immediately after calling this method. The file is added to the queue ready to be loaded when the loader starts.\r\rThe key must be a unique String. It is used to add the file to the Phaser.Cache upon successful load.\r\rRetrieve the file via `Cache.getXML(key)`.\r\rThe URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\rIf the URL isn't specified the Loader will take the key and create a filename from that. For example if the key is \"alien\"\rand no URL is given then the Loader will set the URL to be \"alien.xml\". It will always add `.xml` as the extension.\rIf you do not desire this action then provide a URL.","kind":"function","name":"xml","params":[{"type":{"names":["string"]},"description":"Unique asset key of the xml file.","name":"key"},{"type":{"names":["string"]},"optional":true,"description":"URL of the XML file. If undefined or `null` the url will be set to `<key>.xml`, i.e. if `key` was \"alien\" then the URL will be \"alien.xml\".","name":"url"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If an unloaded file with a matching key already exists in the queue, this entry will overwrite it.","name":"overwrite"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#xml","scope":"instance","___s":true},{"meta":{"range":[32064,33752],"filename":"Loader.js","lineno":876,"path":"src\\loader"},"description":"Adds a JavaScript file to the current load queue.\r\rThe file is **not** loaded immediately after calling this method. The file is added to the queue ready to be loaded when the loader starts.\r\rThe key must be a unique String.\r\rThe URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\rIf the URL isn't specified the Loader will take the key and create a filename from that. For example if the key is \"alien\"\rand no URL is given then the Loader will set the URL to be \"alien.js\". It will always add `.js` as the extension.\rIf you do not desire this action then provide a URL.\r\rUpon successful load the JavaScript is automatically turned into a script tag and executed, so be careful what you load!\r\rA callback, which will be invoked as the script tag has been created, can also be specified.\rThe callback must return relevant `data`.","kind":"function","name":"script","params":[{"type":{"names":["string"]},"description":"Unique asset key of the script file.","name":"key"},{"type":{"names":["string"]},"optional":true,"description":"URL of the JavaScript file. If undefined or `null` the url will be set to `<key>.js`, i.e. if `key` was \"alien\" then the URL will be \"alien.js\".","name":"url"},{"type":{"names":["function"]},"optional":true,"defaultvalue":"(none)","description":"Optional callback that will be called after the script tag has loaded, so you can perform additional processing.","name":"callback"},{"type":{"names":["object"]},"optional":true,"defaultvalue":"(loader)","description":"The context under which the callback will be applied. If not specified it will use the Phaser Loader as the context.","name":"callbackContext"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#script","scope":"instance","___s":true},{"meta":{"range":[34136,36057],"filename":"Loader.js","lineno":911,"path":"src\\loader"},"description":"Adds a binary file to the current load queue.\r\rThe file is **not** loaded immediately after calling this method. The file is added to the queue ready to be loaded when the loader starts.\r\rThe key must be a unique String. It is used to add the file to the Phaser.Cache upon successful load.\r\rRetrieve the file via `Cache.getBinary(key)`.\r\rThe URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\rIf the URL isn't specified the Loader will take the key and create a filename from that. For example if the key is \"alien\"\rand no URL is given then the Loader will set the URL to be \"alien.bin\". It will always add `.bin` as the extension.\rIf you do not desire this action then provide a URL.\r\rIt will be loaded via xhr with a responseType of \"arraybuffer\". You can specify an optional callback to process the file after load.\rWhen the callback is called it will be passed 2 parameters: the key of the file and the file data.\r\rWARNING: If a callback is specified the data will be set to whatever it returns. Always return the data object, even if you didn't modify it.","kind":"function","name":"binary","params":[{"type":{"names":["string"]},"description":"Unique asset key of the binary file.","name":"key"},{"type":{"names":["string"]},"optional":true,"description":"URL of the binary file. If undefined or `null` the url will be set to `<key>.bin`, i.e. if `key` was \"alien\" then the URL will be \"alien.bin\".","name":"url"},{"type":{"names":["function"]},"optional":true,"defaultvalue":"(none)","description":"Optional callback that will be passed the file after loading, so you can perform additional processing on it.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context under which the callback will be applied. If not specified it will use the callback itself as the context.","name":"callbackContext"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#binary","scope":"instance","___s":true},{"meta":{"range":[36493,39046],"filename":"Loader.js","lineno":949,"path":"src\\loader"},"description":"Adds a Sprite Sheet to the current load queue.\r\rThe file is **not** loaded immediately after calling this method. The file is added to the queue ready to be loaded when the loader starts.\r\rTo clarify the terminology that Phaser uses: A Sprite Sheet is an image containing frames, usually of an animation, that are all equal\rdimensions and often in sequence. For example if the frame size is 32x32 then every frame in the sprite sheet will be that size.\rSometimes (outside of Phaser) the term \"sprite sheet\" is used to refer to a texture atlas.\rA Texture Atlas works by packing together images as best it can, using whatever frame sizes it likes, often with cropping and trimming\rthe frames in the process. Software such as Texture Packer, Flash CC or Shoebox all generate texture atlases, not sprite sheets.\rIf you've got an atlas then use `Loader.atlas` instead.\r\rThe key must be a unique String. It is used to add the image to the Phaser.Cache upon successful load.\r\rRetrieve the file via `Cache.getImage(key)`. Sprite sheets, being image based, live in the same Cache as all other Images.\r\rThe URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\rIf the URL isn't specified the Loader will take the key and create a filename from that. For example if the key is \"alien\"\rand no URL is given then the Loader will set the URL to be \"alien.png\". It will always add `.png` as the extension.\rIf you do not desire this action then provide a URL.","kind":"function","name":"spritesheet","params":[{"type":{"names":["string"]},"description":"Unique asset key of the sheet file.","name":"key"},{"type":{"names":["string"]},"description":"URL of the sprite sheet file. If undefined or `null` the url will be set to `<key>.png`, i.e. if `key` was \"alien\" then the URL will be \"alien.png\".","name":"url"},{"type":{"names":["number"]},"description":"Width in pixels of a single frame in the sprite sheet.","name":"frameWidth"},{"type":{"names":["number"]},"description":"Height in pixels of a single frame in the sprite sheet.","name":"frameHeight"},{"type":{"names":["number"]},"optional":true,"defaultvalue":-1,"description":"How many frames in this sprite sheet. If not specified it will divide the whole image into frames.","name":"frameMax"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the frames have been drawn with a margin, specify the amount here.","name":"margin"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If the frames have been drawn with spacing between them, specify the amount here.","name":"spacing"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#spritesheet","scope":"instance","___s":true},{"meta":{"range":[39504,41445],"filename":"Loader.js","lineno":991,"path":"src\\loader"},"description":"Adds an audio file to the current load queue.\r\rThe file is **not** loaded immediately after calling this method. The file is added to the queue ready to be loaded when the loader starts.\r\rThe key must be a unique String. It is used to add the file to the Phaser.Cache upon successful load.\r\rRetrieve the file via `Cache.getSound(key)`.\r\rThe URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\rMobile warning: There are some mobile devices (certain iPad 2 and iPad Mini revisions) that cannot play 48000 Hz audio.\rWhen they try to play the audio becomes extremely distorted and buzzes, eventually crashing the sound system.\rThe solution is to use a lower encoding rate such as 44100 Hz.","kind":"function","name":"audio","params":[{"type":{"names":["string"]},"description":"Unique asset key of the audio file.","name":"key"},{"type":{"names":["string","Array.<string>","Array.<object>"]},"description":"Either a single string or an array of URIs or pairs of `{uri: .., type: ..}`.\r   If an array is specified then the first URI (or URI + mime pair) that is device-compatible will be selected.\r   For example: `\"jump.mp3\"`, `['jump.mp3', 'jump.ogg', 'jump.m4a']`, or `[{uri: \"data:<opus_resource>\", type: 'opus'}, 'fallback.mp3']`.\r   BLOB and DATA URIs can be used but only support automatic detection when used in the pair form; otherwise the format must be manually checked before adding the resource.","name":"urls"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"When using Web Audio the audio files can either be decoded at load time or run-time.\r   Audio files can't be played until they are decoded and, if specified, this enables immediate decoding. Decoding is a non-blocking async process, however it consumes huge amounts of CPU time on mobiles especially.","name":"autoDecode"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#audio","scope":"instance","___s":true},{"meta":{"range":[41853,43624],"filename":"Loader.js","lineno":1034,"path":"src\\loader"},"description":"Adds an audio sprite file to the current load queue.\r\rThe file is **not** loaded immediately after calling this method. The file is added to the queue ready to be loaded when the loader starts.\r\rThe key must be a unique String. It is used to add the file to the Phaser.Cache upon successful load.\r\rAudio Sprites are a combination of audio files and a JSON configuration.\r\rThe JSON follows the format of that created by https://github.com/tonistiigi/audiosprite\r\rRetrieve the file via `Cache.getSoundData(key)`.\r\rThe URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.","kind":"function","name":"audioSprite","params":[{"type":{"names":["string"]},"description":"Unique asset key of the audio file.","name":"key"},{"type":{"names":["Array","string"]},"description":"An array containing the URLs of the audio files, i.e.: [ 'audiosprite.mp3', 'audiosprite.ogg', 'audiosprite.m4a' ] or a single string containing just one URL.","name":"urls"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"The URL of the audiosprite configuration JSON object. If you wish to pass the data directly set this parameter to null.","name":"jsonURL"},{"type":{"names":["string","object"]},"optional":true,"defaultvalue":null,"description":"A JSON object or string containing the audiosprite configuration data. This is ignored if jsonURL is not null.","name":"jsonData"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"When using Web Audio the audio files can either be decoded at load time or run-time.\r   Audio files can't be played until they are decoded and, if specified, this enables immediate decoding. Decoding is a non-blocking async process, however it consumes huge amounts of CPU time on mobiles especially.","name":"autoDecode"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#audioSprite","scope":"instance","___s":true},{"meta":{"range":[44554,45685],"filename":"Loader.js","lineno":1093,"path":"src\\loader"},"description":"A legacy alias for Loader.audioSprite. Please see that method for documentation.","kind":"function","name":"audiosprite","params":[{"type":{"names":["string"]},"description":"Unique asset key of the audio file.","name":"key"},{"type":{"names":["Array","string"]},"description":"An array containing the URLs of the audio files, i.e.: [ 'audiosprite.mp3', 'audiosprite.ogg', 'audiosprite.m4a' ] or a single string containing just one URL.","name":"urls"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"The URL of the audiosprite configuration JSON object. If you wish to pass the data directly set this parameter to null.","name":"jsonURL"},{"type":{"names":["string","object"]},"optional":true,"defaultvalue":null,"description":"A JSON object or string containing the audiosprite configuration data. This is ignored if jsonURL is not null.","name":"jsonData"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"When using Web Audio the audio files can either be decoded at load time or run-time.\r   Audio files can't be played until they are decoded and, if specified, this enables immediate decoding. Decoding is a non-blocking async process, however it consumes huge amounts of CPU time on mobiles especially.","name":"autoDecode"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#audiosprite","scope":"instance","___s":true},{"meta":{"range":[45853,48310],"filename":"Loader.js","lineno":1111,"path":"src\\loader"},"description":"Adds a video file to the current load queue.\r\rThe file is **not** loaded immediately after calling this method. The file is added to the queue ready to be loaded when the loader starts.\r\rThe key must be a unique String. It is used to add the file to the Phaser.Cache upon successful load.\r\rRetrieve the file via `Cache.getVideo(key)`.\r\rThe URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\rYou don't need to preload a video in order to play it in your game. See `Video.createVideoFromURL` for details.","kind":"function","name":"video","params":[{"type":{"names":["string"]},"description":"Unique asset key of the video file.","name":"key"},{"type":{"names":["string","Array.<string>","Array.<object>"]},"description":"Either a single string or an array of URIs or pairs of `{uri: .., type: ..}`.\r   If an array is specified then the first URI (or URI + mime pair) that is device-compatible will be selected.\r   For example: `\"boom.mp4\"`, `['boom.mp4', 'boom.ogg', 'boom.webm']`, or `[{uri: \"data:<opus_resource>\", type: 'opus'}, 'fallback.mp4']`.\r   BLOB and DATA URIs can be used but only support automatic detection when used in the pair form; otherwise the format must be manually checked before adding the resource.","name":"urls"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'canplaythrough'","description":"This sets the Video source event to listen for before the load is considered complete.\r   'canplaythrough' implies the video has downloaded enough, and bandwidth is high enough that it can be played to completion.\r   'canplay' implies the video has downloaded enough to start playing, but not necessarily to finish.\r   'loadeddata' just makes sure that the video meta data and first frame have downloaded. Phaser uses this value automatically if the\r   browser is detected as being Firefox and no `loadEvent` is given, otherwise it defaults to `canplaythrough`.","name":"loadEvent"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Video files can either be loaded via the creation of a video element which has its src property set.\r   Or they can be loaded via xhr, stored as binary data in memory and then converted to a Blob. This isn't supported in IE9 or Android 2.\r   If you need to have the same video playing at different times across multiple Sprites then you need to load it as a Blob.","name":"asBlob"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#video","scope":"instance","___s":true},{"meta":{"range":[48917,51215],"filename":"Loader.js","lineno":1165,"path":"src\\loader"},"description":"Adds a Tile Map data file to the current load queue.\r\rPhaser can load data in two different formats: CSV and Tiled JSON.\r\rTiled is a free software package, specifically for creating tilemaps, and is available from http://www.mapeditor.org\r\rYou can choose to either load the data externally, by providing a URL to a json file.\rOr you can pass in a JSON object or String via the `data` parameter.\rIf you pass a String the data is automatically run through `JSON.parse` and then immediately added to the Phaser.Cache.\r\rIf a URL is provided the file is **not** loaded immediately after calling this method, but is added to the load queue.\r\rThe key must be a unique String. It is used to add the file to the Phaser.Cache upon successful load.\r\rRetrieve the file via `Cache.getTilemapData(key)`. JSON files are automatically parsed upon load.\rIf you need to control when the JSON is parsed then use `Loader.text` instead and parse the text file as needed.\r\rThe URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\rIf the URL isn't specified and no data is given then the Loader will take the key and create a filename from that.\rFor example if the key is \"level1\" and no URL or data is given then the Loader will set the URL to be \"level1.json\".\rIf you set the format to be Tilemap.CSV it will set the URL to be \"level1.csv\" instead.\r\rIf you do not desire this action then provide a URL or data object.","kind":"function","name":"tilemap","params":[{"type":{"names":["string"]},"description":"Unique asset key of the tilemap data.","name":"key"},{"type":{"names":["string"]},"optional":true,"description":"URL of the tile map file. If undefined or `null` and no data is given the url will be set to `<key>.json`, i.e. if `key` was \"level1\" then the URL will be \"level1.json\".","name":"url"},{"type":{"names":["object","string"]},"optional":true,"description":"An optional JSON data object. If given then the url is ignored and this JSON object is used for map data instead.","name":"data"},{"type":{"names":["number"]},"optional":true,"defaultvalue":"Phaser.Tilemap.CSV","description":"The format of the map data. Either Phaser.Tilemap.CSV or Phaser.Tilemap.TILED_JSON.","name":"format"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#tilemap","scope":"instance","___s":true},{"meta":{"range":[52466,54625],"filename":"Loader.js","lineno":1246,"path":"src\\loader"},"description":"Adds a physics data file to the current load queue.\r\rThe data must be in `Lime + Corona` JSON format. [Physics Editor](https://www.codeandweb.com) by code'n'web exports in this format natively.\r\rYou can choose to either load the data externally, by providing a URL to a json file.\rOr you can pass in a JSON object or String via the `data` parameter.\rIf you pass a String the data is automatically run through `JSON.parse` and then immediately added to the Phaser.Cache.\r\rIf a URL is provided the file is **not** loaded immediately after calling this method, but is added to the load queue.\r\rThe key must be a unique String. It is used to add the file to the Phaser.Cache upon successful load.\r\rRetrieve the file via `Cache.getJSON(key)`. JSON files are automatically parsed upon load.\rIf you need to control when the JSON is parsed then use `Loader.text` instead and parse the text file as needed.\r\rThe URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\rIf the URL isn't specified and no data is given then the Loader will take the key and create a filename from that.\rFor example if the key is \"alien\" and no URL or data is given then the Loader will set the URL to be \"alien.json\".\rIt will always use `.json` as the extension.\r\rIf you do not desire this action then provide a URL or data object.","kind":"function","name":"physics","params":[{"type":{"names":["string"]},"description":"Unique asset key of the physics json data.","name":"key"},{"type":{"names":["string"]},"optional":true,"description":"URL of the physics data file. If undefined or `null` and no data is given the url will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".","name":"url"},{"type":{"names":["object","string"]},"optional":true,"description":"An optional JSON data object. If given then the url is ignored and this JSON object is used for physics data instead.","name":"data"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"Phaser.Physics.LIME_CORONA_JSON","description":"The format of the physics data.","name":"format"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#physics","scope":"instance","___s":true},{"meta":{"range":[55365,58205],"filename":"Loader.js","lineno":1307,"path":"src\\loader"},"description":"Adds Bitmap Font files to the current load queue.\r\rTo create the Bitmap Font files you can use:\r\rBMFont (Windows, free): http://www.angelcode.com/products/bmfont/\rGlyph Designer (OS X, commercial): http://www.71squared.com/en/glyphdesigner\rLittera (Web-based, free): http://kvazars.com/littera/\r\rYou can choose to either load the data externally, by providing a URL to an xml file.\rOr you can pass in an XML object or String via the `xmlData` parameter.\rIf you pass a String the data is automatically run through `Loader.parseXML` and then immediately added to the Phaser.Cache.\r\rIf URLs are provided the files are **not** loaded immediately after calling this method, but are added to the load queue.\r\rThe key must be a unique String. It is used to add the file to the Phaser.Cache upon successful load.\r\rRetrieve the file via `Cache.getBitmapFont(key)`. XML files are automatically parsed upon load.\rIf you need to control when the XML is parsed then use `Loader.text` instead and parse the XML file as needed.\r\rThe URLs can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\rIf the textureURL isn't specified then the Loader will take the key and create a filename from that.\rFor example if the key is \"megaFont\" and textureURL is null then the Loader will set the URL to be \"megaFont.png\".\rThe same is true for the atlasURL. If atlasURL isn't specified and no atlasData has been provided then the Loader will\rset the atlasURL to be the key. For example if the key is \"megaFont\" the atlasURL will be set to \"megaFont.xml\".\r\rIf you do not desire this action then provide URLs and / or a data object.","kind":"function","name":"bitmapFont","params":[{"type":{"names":["string"]},"description":"Unique asset key of the bitmap font.","name":"key"},{"type":{"names":["string"]},"description":"URL of the Bitmap Font texture file. If undefined or `null` the url will be set to `<key>.png`, i.e. if `key` was \"megaFont\" then the URL will be \"megaFont.png\".","name":"textureURL"},{"type":{"names":["string"]},"description":"URL of the Bitmap Font atlas file (xml/json). If undefined or `null` AND `atlasData` is null, the url will be set to `<key>.xml`, i.e. if `key` was \"megaFont\" then the URL will be \"megaFont.xml\".","name":"atlasURL"},{"type":{"names":["object"]},"description":"An optional Bitmap Font atlas in string form (stringified xml/json).","name":"atlasData"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If you'd like to add additional horizontal spacing between the characters then set the pixel value here.","name":"xSpacing"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If you'd like to add additional vertical spacing between the lines then set the pixel value here.","name":"ySpacing"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#bitmapFont","scope":"instance","___s":true},{"meta":{"range":[59853,62615],"filename":"Loader.js","lineno":1398,"path":"src\\loader"},"description":"Adds a Texture Atlas file to the current load queue.\r\rUnlike `Loader.atlasJSONHash` this call expects the atlas data to be in a JSON Array format.\r\rTo create the Texture Atlas you can use tools such as:\r\r[Texture Packer](https://www.codeandweb.com/texturepacker/phaser)\r[Shoebox](http://renderhjs.net/shoebox/)\r\rIf using Texture Packer we recommend you enable \"Trim sprite names\".\rIf your atlas software has an option to \"rotate\" the resulting frames, you must disable it.\r\rYou can choose to either load the data externally, by providing a URL to a json file.\rOr you can pass in a JSON object or String via the `atlasData` parameter.\rIf you pass a String the data is automatically run through `JSON.parse` and then immediately added to the Phaser.Cache.\r\rIf URLs are provided the files are **not** loaded immediately after calling this method, but are added to the load queue.\r\rThe key must be a unique String. It is used to add the file to the Phaser.Cache upon successful load.\r\rRetrieve the file via `Cache.getImage(key)`. JSON files are automatically parsed upon load.\rIf you need to control when the JSON is parsed then use `Loader.text` instead and parse the JSON file as needed.\r\rThe URLs can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\rIf the textureURL isn't specified then the Loader will take the key and create a filename from that.\rFor example if the key is \"player\" and textureURL is null then the Loader will set the URL to be \"player.png\".\rThe same is true for the atlasURL. If atlasURL isn't specified and no atlasData has been provided then the Loader will\rset the atlasURL to be the key. For example if the key is \"player\" the atlasURL will be set to \"player.json\".\r\rIf you do not desire this action then provide URLs and / or a data object.","kind":"function","name":"atlasJSONArray","params":[{"type":{"names":["string"]},"description":"Unique asset key of the texture atlas file.","name":"key"},{"type":{"names":["string"]},"optional":true,"description":"URL of the texture atlas image file. If undefined or `null` the url will be set to `<key>.png`, i.e. if `key` was \"alien\" then the URL will be \"alien.png\".","name":"textureURL"},{"type":{"names":["string"]},"optional":true,"description":"URL of the texture atlas data file. If undefined or `null` and no atlasData is given, the url will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".","name":"atlasURL"},{"type":{"names":["object"]},"optional":true,"description":"A JSON data object. You don't need this if the data is being loaded from a URL.","name":"atlasData"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#atlasJSONArray","scope":"instance","___s":true},{"meta":{"range":[62812,65564],"filename":"Loader.js","lineno":1444,"path":"src\\loader"},"description":"Adds a Texture Atlas file to the current load queue.\r\rUnlike `Loader.atlas` this call expects the atlas data to be in a JSON Hash format.\r\rTo create the Texture Atlas you can use tools such as:\r\r[Texture Packer](https://www.codeandweb.com/texturepacker/phaser)\r[Shoebox](http://renderhjs.net/shoebox/)\r\rIf using Texture Packer we recommend you enable \"Trim sprite names\".\rIf your atlas software has an option to \"rotate\" the resulting frames, you must disable it.\r\rYou can choose to either load the data externally, by providing a URL to a json file.\rOr you can pass in a JSON object or String via the `atlasData` parameter.\rIf you pass a String the data is automatically run through `JSON.parse` and then immediately added to the Phaser.Cache.\r\rIf URLs are provided the files are **not** loaded immediately after calling this method, but are added to the load queue.\r\rThe key must be a unique String. It is used to add the file to the Phaser.Cache upon successful load.\r\rRetrieve the file via `Cache.getImage(key)`. JSON files are automatically parsed upon load.\rIf you need to control when the JSON is parsed then use `Loader.text` instead and parse the JSON file as needed.\r\rThe URLs can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\rIf the textureURL isn't specified then the Loader will take the key and create a filename from that.\rFor example if the key is \"player\" and textureURL is null then the Loader will set the URL to be \"player.png\".\rThe same is true for the atlasURL. If atlasURL isn't specified and no atlasData has been provided then the Loader will\rset the atlasURL to be the key. For example if the key is \"player\" the atlasURL will be set to \"player.json\".\r\rIf you do not desire this action then provide URLs and / or a data object.","kind":"function","name":"atlasJSONHash","params":[{"type":{"names":["string"]},"description":"Unique asset key of the texture atlas file.","name":"key"},{"type":{"names":["string"]},"optional":true,"description":"URL of the texture atlas image file. If undefined or `null` the url will be set to `<key>.png`, i.e. if `key` was \"alien\" then the URL will be \"alien.png\".","name":"textureURL"},{"type":{"names":["string"]},"optional":true,"description":"URL of the texture atlas data file. If undefined or `null` and no atlasData is given, the url will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".","name":"atlasURL"},{"type":{"names":["object"]},"optional":true,"description":"A JSON data object. You don't need this if the data is being loaded from a URL.","name":"atlasData"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#atlasJSONHash","scope":"instance","___s":true},{"meta":{"range":[65759,68494],"filename":"Loader.js","lineno":1490,"path":"src\\loader"},"description":"Adds a Texture Atlas file to the current load queue.\r\rThis call expects the atlas data to be in the Starling XML data format.\r\rTo create the Texture Atlas you can use tools such as:\r\r[Texture Packer](https://www.codeandweb.com/texturepacker/phaser)\r[Shoebox](http://renderhjs.net/shoebox/)\r\rIf using Texture Packer we recommend you enable \"Trim sprite names\".\rIf your atlas software has an option to \"rotate\" the resulting frames, you must disable it.\r\rYou can choose to either load the data externally, by providing a URL to an xml file.\rOr you can pass in an XML object or String via the `atlasData` parameter.\rIf you pass a String the data is automatically run through `Loader.parseXML` and then immediately added to the Phaser.Cache.\r\rIf URLs are provided the files are **not** loaded immediately after calling this method, but are added to the load queue.\r\rThe key must be a unique String. It is used to add the file to the Phaser.Cache upon successful load.\r\rRetrieve the file via `Cache.getImage(key)`. XML files are automatically parsed upon load.\rIf you need to control when the XML is parsed then use `Loader.text` instead and parse the XML file as needed.\r\rThe URLs can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\rIf the textureURL isn't specified then the Loader will take the key and create a filename from that.\rFor example if the key is \"player\" and textureURL is null then the Loader will set the URL to be \"player.png\".\rThe same is true for the atlasURL. If atlasURL isn't specified and no atlasData has been provided then the Loader will\rset the atlasURL to be the key. For example if the key is \"player\" the atlasURL will be set to \"player.xml\".\r\rIf you do not desire this action then provide URLs and / or a data object.","kind":"function","name":"atlasXML","params":[{"type":{"names":["string"]},"description":"Unique asset key of the texture atlas file.","name":"key"},{"type":{"names":["string"]},"optional":true,"description":"URL of the texture atlas image file. If undefined or `null` the url will be set to `<key>.png`, i.e. if `key` was \"alien\" then the URL will be \"alien.png\".","name":"textureURL"},{"type":{"names":["string"]},"optional":true,"description":"URL of the texture atlas data file. If undefined or `null` and no atlasData is given, the url will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.xml\".","name":"atlasURL"},{"type":{"names":["object"]},"optional":true,"description":"An XML data object. You don't need this if the data is being loaded from a URL.","name":"atlasData"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#atlasXML","scope":"instance","___s":true},{"meta":{"range":[68907,71762],"filename":"Loader.js","lineno":1544,"path":"src\\loader"},"description":"Adds a Texture Atlas file to the current load queue.\r\rTo create the Texture Atlas you can use tools such as:\r\r[Texture Packer](https://www.codeandweb.com/texturepacker/phaser)\r[Shoebox](http://renderhjs.net/shoebox/)\r\rIf using Texture Packer we recommend you enable \"Trim sprite names\".\rIf your atlas software has an option to \"rotate\" the resulting frames, you must disable it.\r\rYou can choose to either load the data externally, by providing a URL to a json file.\rOr you can pass in a JSON object or String via the `atlasData` parameter.\rIf you pass a String the data is automatically run through `JSON.parse` and then immediately added to the Phaser.Cache.\r\rIf URLs are provided the files are **not** loaded immediately after calling this method, but are added to the load queue.\r\rThe key must be a unique String. It is used to add the file to the Phaser.Cache upon successful load.\r\rRetrieve the file via `Cache.getImage(key)`. JSON files are automatically parsed upon load.\rIf you need to control when the JSON is parsed then use `Loader.text` instead and parse the JSON file as needed.\r\rThe URLs can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\rIf the textureURL isn't specified then the Loader will take the key and create a filename from that.\rFor example if the key is \"player\" and textureURL is null then the Loader will set the URL to be \"player.png\".\rThe same is true for the atlasURL. If atlasURL isn't specified and no atlasData has been provided then the Loader will\rset the atlasURL to be the key. For example if the key is \"player\" the atlasURL will be set to \"player.json\".\r\rIf you do not desire this action then provide URLs and / or a data object.","kind":"function","name":"atlas","params":[{"type":{"names":["string"]},"description":"Unique asset key of the texture atlas file.","name":"key"},{"type":{"names":["string"]},"optional":true,"description":"URL of the texture atlas image file. If undefined or `null` the url will be set to `<key>.png`, i.e. if `key` was \"alien\" then the URL will be \"alien.png\".","name":"textureURL"},{"type":{"names":["string"]},"optional":true,"description":"URL of the texture atlas data file. If undefined or `null` and no atlasData is given, the url will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".","name":"atlasURL"},{"type":{"names":["object"]},"optional":true,"description":"A JSON or XML data object. You don't need this if the data is being loaded from a URL.","name":"atlasData"},{"type":{"names":["number"]},"optional":true,"description":"The format of the data. Can be Phaser.Loader.TEXTURE_ATLAS_JSON_ARRAY (the default), Phaser.Loader.TEXTURE_ATLAS_JSON_HASH or Phaser.Loader.TEXTURE_ATLAS_XML_STARLING.","name":"format"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#atlas","scope":"instance","___s":true},{"meta":{"range":[73796,74565],"filename":"Loader.js","lineno":1649,"path":"src\\loader"},"description":"Add a synchronization point to the assets/files added within the supplied callback.\r\rA synchronization point denotes that an asset _must_ be completely loaded before\rsubsequent assets can be loaded. An asset marked as a sync-point does not need to wait\rfor previous assets to load (unless they are sync-points). Resources, such as packs, may still\rbe downloaded around sync-points, as long as they do not finalize loading.","kind":"function","name":"withSyncPoints","params":[{"type":{"names":["function"]},"description":"The callback is invoked and is supplied with a single argument: the loader.","name":"callback"},{"type":{"names":["object"]},"optional":true,"defaultvalue":"(loader)","description":"Context for the callback.","name":"callbackContext"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#withSyncPoints","scope":"instance","___s":true},{"meta":{"range":[74852,75349],"filename":"Loader.js","lineno":1675,"path":"src\\loader"},"description":"Add a synchronization point to a specific file/asset in the load queue.\r\rThis has no effect on already loaded assets.","kind":"function","name":"addSyncPoint","params":[{"type":{"names":["string"]},"description":"The type of resource to turn into a sync point (image, audio, xml, etc).","name":"type"},{"type":{"names":["string"]},"description":"Key of the file you want to turn into a sync point.","name":"key"}],"returns":[{"type":{"names":["Phaser.Loader"]},"description":"This Loader instance."}],"see":["{@link Phaser.Loader#withSyncPoint withSyncPoint}"],"memberof":"Phaser.Loader","longname":"Phaser.Loader#addSyncPoint","scope":"instance","___s":true},{"meta":{"range":[75566,75932],"filename":"Loader.js","lineno":1698,"path":"src\\loader"},"description":"Remove a file/asset from the loading queue.\r\rA file that is loaded or has started loading cannot be removed.","kind":"function","name":"removeFile","access":"protected","params":[{"type":{"names":["string"]},"description":"The type of resource to add to the list (image, audio, xml, etc).","name":"type"},{"type":{"names":["string"]},"description":"Key of the file you want to remove.","name":"key"}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#removeFile","scope":"instance","___s":true},{"meta":{"range":[76219,76405],"filename":"Loader.js","lineno":1722,"path":"src\\loader"},"description":"Remove all file loading requests - this is _insufficient_ to stop current loading. Use `reset` instead.","kind":"function","name":"removeAll","access":"protected","memberof":"Phaser.Loader","longname":"Phaser.Loader#removeAll","scope":"instance","___s":true},{"meta":{"range":[76530,76694],"filename":"Loader.js","lineno":1735,"path":"src\\loader"},"description":"Start loading the assets. Normally you don't need to call this yourself as the StateManager will do so.","kind":"function","name":"start","memberof":"Phaser.Loader","longname":"Phaser.Loader#start","scope":"instance","___s":true},{"meta":{"range":[87419,87868],"filename":"Loader.js","lineno":2063,"path":"src\\loader"},"description":"Transforms the asset URL.\r\rThe default implementation prepends the baseURL if the url doesn't begin with http or //","kind":"function","name":"transformUrl","access":"protected","params":[{"type":{"names":["string"]},"description":"The url to transform.","name":"url"},{"type":{"names":["object"]},"description":"The file object being transformed.","name":"file"}],"returns":[{"type":{"names":["string"]},"description":"The transformed url. In rare cases where the url isn't specified it will return false instead."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#transformUrl","scope":"instance","___s":true},{"meta":{"range":[116809,117076],"filename":"Loader.js","lineno":2988,"path":"src\\loader"},"description":"Returns the number of files that have already been loaded, even if they errored.","kind":"function","name":"totalLoadedFiles","access":"protected","returns":[{"type":{"names":["number"]},"description":"The number of files that have already been loaded (even if they errored)"}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#totalLoadedFiles","scope":"instance","___s":true},{"meta":{"range":[117172,117477],"filename":"Loader.js","lineno":3001,"path":"src\\loader"},"description":"Returns the number of files still waiting to be processed in the load queue. This value decreases as each file in the queue is loaded.","kind":"function","name":"totalQueuedFiles","access":"protected","returns":[{"type":{"names":["number"]},"description":"The number of files that still remain in the load queue."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#totalQueuedFiles","scope":"instance","___s":true},{"meta":{"range":[117596,117875],"filename":"Loader.js","lineno":3014,"path":"src\\loader"},"description":"Returns the number of asset packs that have already been loaded, even if they errored.","kind":"function","name":"totalLoadedPacks","access":"protected","returns":[{"type":{"names":["number"]},"description":"The number of asset packs that have already been loaded (even if they errored)"}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#totalLoadedPacks","scope":"instance","___s":true},{"meta":{"range":[117970,118287],"filename":"Loader.js","lineno":3027,"path":"src\\loader"},"description":"Returns the number of asset packs still waiting to be processed in the load queue. This value decreases as each pack in the queue is loaded.","kind":"function","name":"totalQueuedPacks","access":"protected","returns":[{"type":{"names":["number"]},"description":"The number of asset packs that still remain in the load queue."}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#totalQueuedPacks","scope":"instance","___s":true},{"meta":{"range":[118407,118685],"filename":"Loader.js","lineno":3042,"path":"src\\loader"},"description":"The non-rounded load progress value (from 0.0 to 100.0).\r\rA general indicator of the progress.\rIt is possible for the progress to decrease, after `onLoadStart`, if more files are dynamically added.","name":"progressFloat","properties":[{"type":{"names":["number"]}}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#progressFloat","scope":"instance","kind":"member","___s":true},{"meta":{"range":[118932,119101],"filename":"Loader.js","lineno":3060,"path":"src\\loader"},"description":"The rounded load progress percentage value (from 0 to 100). See {@link Phaser.Loader#progressFloat}.","name":"progress","properties":[{"type":{"names":["integer"]}}],"memberof":"Phaser.Loader","longname":"Phaser.Loader#progress","scope":"instance","kind":"member","___s":true},{"meta":{"range":[204,377],"filename":"LoaderParser.js","lineno":7,"path":"src\\loader"},"description":"Phaser.LoaderParser parses data objects from Phaser.Loader that need more preparation before they can be inserted into the Cache.","kind":"class","name":"LoaderParser","memberof":"Phaser","longname":"Phaser.LoaderParser","scope":"static","___s":true},{"meta":{"range":[410,907],"filename":"LoaderParser.js","lineno":14,"path":"src\\loader"},"description":"Alias for xmlBitmapFont, for backwards compatibility.","kind":"function","name":"bitmapFont","params":[{"type":{"names":["object"]},"description":"XML data you want to parse.","name":"xml"},{"type":{"names":["PIXI.BaseTexture"]},"description":"The BaseTexture this font uses.","name":"baseTexture"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Additional horizontal spacing between the characters.","name":"xSpacing"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Additional vertical spacing between the characters.","name":"ySpacing"}],"returns":[{"type":{"names":["object"]},"description":"The parsed Bitmap Font data."}],"memberof":"Phaser.LoaderParser","longname":"Phaser.LoaderParser.bitmapFont","scope":"static","___s":true},{"meta":{"range":[1068,1551],"filename":"LoaderParser.js","lineno":30,"path":"src\\loader"},"description":"Parse a Bitmap Font from an XML file.","kind":"function","name":"xmlBitmapFont","params":[{"type":{"names":["object"]},"description":"XML data you want to parse.","name":"xml"},{"type":{"names":["PIXI.BaseTexture"]},"description":"The BaseTexture this font uses.","name":"baseTexture"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Additional horizontal spacing between the characters.","name":"xSpacing"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Additional vertical spacing between the characters.","name":"ySpacing"}],"returns":[{"type":{"names":["object"]},"description":"The parsed Bitmap Font data."}],"memberof":"Phaser.LoaderParser","longname":"Phaser.LoaderParser.xmlBitmapFont","scope":"static","___s":true},{"meta":{"range":[3295,3781],"filename":"LoaderParser.js","lineno":84,"path":"src\\loader"},"description":"Parse a Bitmap Font from a JSON file.","kind":"function","name":"jsonBitmapFont","params":[{"type":{"names":["object"]},"description":"JSON data you want to parse.","name":"json"},{"type":{"names":["PIXI.BaseTexture"]},"description":"The BaseTexture this font uses.","name":"baseTexture"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Additional horizontal spacing between the characters.","name":"xSpacing"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Additional vertical spacing between the characters.","name":"ySpacing"}],"returns":[{"type":{"names":["object"]},"description":"The parsed Bitmap Font data."}],"memberof":"Phaser.LoaderParser","longname":"Phaser.LoaderParser.jsonBitmapFont","scope":"static","___s":true},{"meta":{"range":[204,415],"filename":"Math.js","lineno":7,"path":"src\\math"},"description":"A collection of useful mathematical functions.\r\rThese are normally accessed through `game.math`.","kind":"class","name":"Math","scope":"static","see":["{@link Phaser.Utils}","{@link Phaser.ArrayUtils}"],"memberof":"Phaser","longname":"Phaser.Math","___s":true},{"meta":{"range":[539,555],"filename":"Math.js","lineno":24,"path":"src\\math"},"description":"Twice PI.","properties":[{"type":{"names":["number"]},"name":"Phaser.Math#PI2"}],"defaultvalue":"~6.283","name":"PI2","longname":"Phaser.Math.PI2","kind":"member","memberof":"Phaser.Math","scope":"static","___s":true},{"meta":{"range":[564,916],"filename":"Math.js","lineno":26,"path":"src\\math"},"description":"Returns a number between the `min` and `max` values.","kind":"function","name":"between","params":[{"type":{"names":["number"]},"description":"The minimum value. Must be positive, and less than 'max'.","name":"min"},{"type":{"names":["number"]},"description":"The maximum value. Must be position, and greater than 'min'.","name":"max"}],"returns":[{"type":{"names":["number"]},"description":"A value between the range min to max."}],"memberof":"Phaser.Math","longname":"Phaser.Math#between","scope":"instance","___s":true},{"meta":{"range":[1039,1424],"filename":"Math.js","lineno":40,"path":"src\\math"},"description":"Two number are fuzzyEqual if their difference is less than epsilon.","kind":"function","name":"fuzzyEqual","params":[{"type":{"names":["number"]},"description":"The first number to compare.","name":"a"},{"type":{"names":["number"]},"description":"The second number to compare.","name":"b"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0.0001,"description":"The epsilon (a small value used in the calculation)","name":"epsilon"}],"returns":[{"type":{"names":["boolean"]},"description":"True if |a-b|<epsilon"}],"memberof":"Phaser.Math","longname":"Phaser.Math#fuzzyEqual","scope":"instance","___s":true},{"meta":{"range":[1591,1966],"filename":"Math.js","lineno":57,"path":"src\\math"},"description":"`a` is fuzzyLessThan `b` if it is less than b + epsilon.","kind":"function","name":"fuzzyLessThan","params":[{"type":{"names":["number"]},"description":"The first number to compare.","name":"a"},{"type":{"names":["number"]},"description":"The second number to compare.","name":"b"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0.0001,"description":"The epsilon (a small value used in the calculation)","name":"epsilon"}],"returns":[{"type":{"names":["boolean"]},"description":"True if a<b+epsilon"}],"memberof":"Phaser.Math","longname":"Phaser.Math#fuzzyLessThan","scope":"instance","___s":true},{"meta":{"range":[2126,2507],"filename":"Math.js","lineno":74,"path":"src\\math"},"description":"`a` is fuzzyGreaterThan `b` if it is more than b - epsilon.","kind":"function","name":"fuzzyGreaterThan","params":[{"type":{"names":["number"]},"description":"The first number to compare.","name":"a"},{"type":{"names":["number"]},"description":"The second number to compare.","name":"b"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0.0001,"description":"The epsilon (a small value used in the calculation)","name":"epsilon"}],"returns":[{"type":{"names":["boolean"]},"description":"True if a>b+epsilon"}],"memberof":"Phaser.Math","longname":"Phaser.Math#fuzzyGreaterThan","scope":"instance","___s":true},{"meta":{"range":[2670,2961],"filename":"Math.js","lineno":91,"path":"src\\math"},"description":"Applies a fuzzy ceil to the given value.","kind":"function","name":"fuzzyCeil","params":[{"type":{"names":["number"]},"description":"The value to ceil.","name":"val"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0.0001,"description":"The epsilon (a small value used in the calculation)","name":"epsilon"}],"returns":[{"type":{"names":["number"]},"description":"ceiling(val-epsilon)"}],"memberof":"Phaser.Math","longname":"Phaser.Math#fuzzyCeil","scope":"instance","___s":true},{"meta":{"range":[3125,3417],"filename":"Math.js","lineno":107,"path":"src\\math"},"description":"Applies a fuzzy floor to the given value.","kind":"function","name":"fuzzyFloor","params":[{"type":{"names":["number"]},"description":"The value to floor.","name":"val"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0.0001,"description":"The epsilon (a small value used in the calculation)","name":"epsilon"}],"returns":[{"type":{"names":["number"]},"description":"floor(val+epsilon)"}],"memberof":"Phaser.Math","longname":"Phaser.Math#fuzzyFloor","scope":"instance","___s":true},{"meta":{"range":[3583,3817],"filename":"Math.js","lineno":123,"path":"src\\math"},"description":"Averages all values passed to the function and returns the result.","kind":"function","name":"average","tags":[{"originalTitle":"params","title":"params","text":"{...number} The numbers to average","value":"{...number} The numbers to average"}],"returns":[{"type":{"names":["number"]},"description":"The average of all given values."}],"memberof":"Phaser.Math","longname":"Phaser.Math#average","scope":"instance","___s":true},{"meta":{"range":[4053,4154],"filename":"Math.js","lineno":144,"path":"src\\math"},"kind":"function","name":"shear","params":[{"type":{"names":["number"]},"name":"n"}],"returns":[{"type":{"names":["number"]},"description":"n mod 1"}],"memberof":"Phaser.Math","longname":"Phaser.Math#shear","scope":"instance","___s":true},{"meta":{"range":[4224,4684],"filename":"Math.js","lineno":155,"path":"src\\math"},"description":"Snap a value to nearest grid slice, using rounding.\r\rExample: if you have an interval gap of 5 and a position of 12... you will snap to 10 whereas 14 will snap to 15.","kind":"function","name":"snapTo","params":[{"type":{"names":["number"]},"description":"The value to snap.","name":"input"},{"type":{"names":["number"]},"description":"The interval gap of the grid.","name":"gap"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Optional starting offset for gap.","name":"start"}],"returns":[{"type":{"names":["number"]},"description":"The snapped value."}],"memberof":"Phaser.Math","longname":"Phaser.Math#snapTo","scope":"instance","___s":true},{"meta":{"range":[4971,5462],"filename":"Math.js","lineno":181,"path":"src\\math"},"description":"Snap a value to nearest grid slice, using floor.\r\rExample: if you have an interval gap of 5 and a position of 12... you will snap to 10.\rAs will 14 snap to 10... but 16 will snap to 15.","kind":"function","name":"snapToFloor","params":[{"type":{"names":["number"]},"description":"The value to snap.","name":"input"},{"type":{"names":["number"]},"description":"The interval gap of the grid.","name":"gap"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Optional starting offset for gap.","name":"start"}],"returns":[{"type":{"names":["number"]},"description":"The snapped value."}],"memberof":"Phaser.Math","longname":"Phaser.Math#snapToFloor","scope":"instance","___s":true},{"meta":{"range":[5754,6248],"filename":"Math.js","lineno":208,"path":"src\\math"},"description":"Snap a value to nearest grid slice, using ceil.\r\rExample: if you have an interval gap of 5 and a position of 12... you will snap to 15.\rAs will 14 will snap to 15... but 16 will snap to 20.","kind":"function","name":"snapToCeil","params":[{"type":{"names":["number"]},"description":"The value to snap.","name":"input"},{"type":{"names":["number"]},"description":"The interval gap of the grid.","name":"gap"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Optional starting offset for gap.","name":"start"}],"returns":[{"type":{"names":["number"]},"description":"The snapped value."}],"memberof":"Phaser.Math","longname":"Phaser.Math#snapToCeil","scope":"instance","___s":true},{"meta":{"range":[6538,8174],"filename":"Math.js","lineno":235,"path":"src\\math"},"description":"Round to some place comparative to a `base`, default is 10 for decimal place.\rThe `place` is represented by the power applied to `base` to get that place.\r\r    e.g. 2000/7 ~= 285.714285714285714285714 ~= (bin)100011101.1011011011011011\r\r    roundTo(2000/7,3) === 0\r    roundTo(2000/7,2) == 300\r    roundTo(2000/7,1) == 290\r    roundTo(2000/7,0) == 286\r    roundTo(2000/7,-1) == 285.7\r    roundTo(2000/7,-2) == 285.71\r    roundTo(2000/7,-3) == 285.714\r    roundTo(2000/7,-4) == 285.7143\r    roundTo(2000/7,-5) == 285.71429\r\r    roundTo(2000/7,3,2)  == 288       -- 100100000\r    roundTo(2000/7,2,2)  == 284       -- 100011100\r    roundTo(2000/7,1,2)  == 286       -- 100011110\r    roundTo(2000/7,0,2)  == 286       -- 100011110\r    roundTo(2000/7,-1,2) == 285.5     -- 100011101.1\r    roundTo(2000/7,-2,2) == 285.75    -- 100011101.11\r    roundTo(2000/7,-3,2) == 285.75    -- 100011101.11\r    roundTo(2000/7,-4,2) == 285.6875  -- 100011101.1011\r    roundTo(2000/7,-5,2) == 285.71875 -- 100011101.10111\r\rNote what occurs when we round to the 3rd space (8ths place), 100100000, this is to be assumed\rbecause we are rounding 100011.1011011011011011 which rounds up.","kind":"function","name":"roundTo","params":[{"type":{"names":["number"]},"description":"The value to round.","name":"value"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The place to round to.","name":"place"},{"type":{"names":["number"]},"optional":true,"defaultvalue":10,"description":"The base to round in. Default is 10 for decimal.","name":"base"}],"returns":[{"type":{"names":["number"]},"description":"The rounded value."}],"memberof":"Phaser.Math","longname":"Phaser.Math#roundTo","scope":"instance","___s":true},{"meta":{"range":[8425,8885],"filename":"Math.js","lineno":281,"path":"src\\math"},"description":"Floors to some place comparative to a `base`, default is 10 for decimal place.\rThe `place` is represented by the power applied to `base` to get that place.","kind":"function","name":"floorTo","params":[{"type":{"names":["number"]},"description":"The value to round.","name":"value"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The place to round to.","name":"place"},{"type":{"names":["number"]},"optional":true,"defaultvalue":10,"description":"The base to round in. Default is 10 for decimal.","name":"base"}],"returns":[{"type":{"names":["number"]},"description":"The rounded value."}],"memberof":"Phaser.Math","longname":"Phaser.Math#floorTo","scope":"instance","___s":true},{"meta":{"range":[9136,9594],"filename":"Math.js","lineno":302,"path":"src\\math"},"description":"Ceils to some place comparative to a `base`, default is 10 for decimal place.\rThe `place` is represented by the power applied to `base` to get that place.","kind":"function","name":"ceilTo","params":[{"type":{"names":["number"]},"description":"The value to round.","name":"value"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The place to round to.","name":"place"},{"type":{"names":["number"]},"optional":true,"defaultvalue":10,"description":"The base to round in. Default is 10 for decimal.","name":"base"}],"returns":[{"type":{"names":["number"]},"description":"The rounded value."}],"memberof":"Phaser.Math","longname":"Phaser.Math#ceilTo","scope":"instance","___s":true},{"meta":{"range":[9843,10331],"filename":"Math.js","lineno":323,"path":"src\\math"},"description":"Rotates currentAngle towards targetAngle, taking the shortest rotation distance.\rThe lerp argument is the amount to rotate by in this call.","kind":"function","name":"rotateToAngle","params":[{"type":{"names":["number"]},"description":"The current angle, in radians.","name":"currentAngle"},{"type":{"names":["number"]},"description":"The target angle to rotate to, in radians.","name":"targetAngle"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0.05,"description":"The lerp value to add to the current angle.","name":"lerp"}],"returns":[{"type":{"names":["number"]},"description":"The adjusted angle."}],"memberof":"Phaser.Math","longname":"Phaser.Math#rotateToAngle","scope":"instance","___s":true},{"meta":{"range":[11410,12226],"filename":"Math.js","lineno":374,"path":"src\\math"},"description":"Gets the shortest angle between `angle1` and `angle2`.\rBoth angles must be in the range -180 to 180, which is the same clamped\rrange that `sprite.angle` uses, so you can pass in two sprite angles to\rthis method, and get the shortest angle back between the two of them.\r\rThe angle returned will be in the same range. If the returned angle is\rgreater than 0 then it's a counter-clockwise rotation, if < 0 then it's\ra clockwise rotation.","kind":"function","name":"getShortestAngle","params":[{"type":{"names":["number"]},"description":"The first angle. In the range -180 to 180.","name":"angle1"},{"type":{"names":["number"]},"description":"The second angle. In the range -180 to 180.","name":"angle2"}],"returns":[{"type":{"names":["number"]},"description":"The shortest angle, in degrees. If greater than zero it's a counter-clockwise rotation."}],"memberof":"Phaser.Math","longname":"Phaser.Math#getShortestAngle","scope":"instance","___s":true},{"meta":{"range":[12528,12958],"filename":"Math.js","lineno":404,"path":"src\\math"},"description":"Find the angle of a segment from (x1, y1) -> (x2, y2).","kind":"function","name":"angleBetween","params":[{"type":{"names":["number"]},"description":"The x coordinate of the first value.","name":"x1"},{"type":{"names":["number"]},"description":"The y coordinate of the first value.","name":"y1"},{"type":{"names":["number"]},"description":"The x coordinate of the second value.","name":"x2"},{"type":{"names":["number"]},"description":"The y coordinate of the second value.","name":"y2"}],"returns":[{"type":{"names":["number"]},"description":"The angle, in radians."}],"memberof":"Phaser.Math","longname":"Phaser.Math#angleBetween","scope":"instance","___s":true},{"meta":{"range":[13071,13643],"filename":"Math.js","lineno":420,"path":"src\\math"},"description":"Find the angle of a segment from (x1, y1) -> (x2, y2).\r\rThe difference between this method and Math.angleBetween is that this assumes the y coordinate travels\rdown the screen.","kind":"function","name":"angleBetweenY","params":[{"type":{"names":["number"]},"description":"The x coordinate of the first value.","name":"x1"},{"type":{"names":["number"]},"description":"The y coordinate of the first value.","name":"y1"},{"type":{"names":["number"]},"description":"The x coordinate of the second value.","name":"x2"},{"type":{"names":["number"]},"description":"The y coordinate of the second value.","name":"y2"}],"returns":[{"type":{"names":["number"]},"description":"The angle, in radians."}],"memberof":"Phaser.Math","longname":"Phaser.Math#angleBetweenY","scope":"instance","___s":true},{"meta":{"range":[13757,14089],"filename":"Math.js","lineno":439,"path":"src\\math"},"description":"Find the angle of a segment from (point1.x, point1.y) -> (point2.x, point2.y).","kind":"function","name":"angleBetweenPoints","params":[{"type":{"names":["Phaser.Point"]},"description":"The first point.","name":"point1"},{"type":{"names":["Phaser.Point"]},"description":"The second point.","name":"point2"}],"returns":[{"type":{"names":["number"]},"description":"The angle between the two points, in radians."}],"memberof":"Phaser.Math","longname":"Phaser.Math#angleBetweenPoints","scope":"instance","___s":true},{"meta":{"range":[14232,14495],"filename":"Math.js","lineno":453,"path":"src\\math"},"description":"Find the angle of a segment from (point1.x, point1.y) -> (point2.x, point2.y).","kind":"function","name":"angleBetweenPointsY","params":[{"type":{"names":["Phaser.Point"]},"name":"point1"},{"type":{"names":["Phaser.Point"]},"name":"point2"}],"returns":[{"type":{"names":["number"]},"description":"The angle, in radians."}],"memberof":"Phaser.Math","longname":"Phaser.Math#angleBetweenPointsY","scope":"instance","___s":true},{"meta":{"range":[14639,14839],"filename":"Math.js","lineno":466,"path":"src\\math"},"description":"Reverses an angle.","kind":"function","name":"reverseAngle","params":[{"type":{"names":["number"]},"description":"The angle to reverse, in radians.","name":"angleRad"}],"returns":[{"type":{"names":["number"]},"description":"The reverse angle, in radians."}],"memberof":"Phaser.Math","longname":"Phaser.Math#reverseAngle","scope":"instance","___s":true},{"meta":{"range":[14963,15212],"filename":"Math.js","lineno":478,"path":"src\\math"},"description":"Normalizes an angle to the [0,2pi) range.","kind":"function","name":"normalizeAngle","params":[{"type":{"names":["number"]},"description":"The angle to normalize, in radians.","name":"angleRad"}],"returns":[{"type":{"names":["number"]},"description":"The angle, fit within the [0,2pi] range, in radians."}],"memberof":"Phaser.Math","longname":"Phaser.Math#normalizeAngle","scope":"instance","___s":true},{"meta":{"range":[15388,15774],"filename":"Math.js","lineno":491,"path":"src\\math"},"description":"Adds the given amount to the value, but never lets the value go over the specified maximum.","kind":"function","name":"maxAdd","params":[{"type":{"names":["number"]},"description":"The value to add the amount to.","name":"value"},{"type":{"names":["number"]},"description":"The amount to add to the value.","name":"amount"},{"type":{"names":["number"]},"description":"The maximum the value is allowed to be.","name":"max"}],"returns":[{"type":{"names":["number"]},"description":"The new value."}],"memberof":"Phaser.Math","longname":"Phaser.Math#maxAdd","scope":"instance","___s":true},{"meta":{"range":[15886,16276],"filename":"Math.js","lineno":506,"path":"src\\math"},"description":"Subtracts the given amount from the value, but never lets the value go below the specified minimum.","kind":"function","name":"minSub","params":[{"type":{"names":["number"]},"description":"The base value.","name":"value"},{"type":{"names":["number"]},"description":"The amount to subtract from the base value.","name":"amount"},{"type":{"names":["number"]},"description":"The minimum the value is allowed to be.","name":"min"}],"returns":[{"type":{"names":["number"]},"description":"The new value."}],"memberof":"Phaser.Math","longname":"Phaser.Math#minSub","scope":"instance","___s":true},{"meta":{"range":[16388,16857],"filename":"Math.js","lineno":521,"path":"src\\math"},"description":"Ensures that the value always stays between min and max, by wrapping the value around.\r\rIf `max` is not larger than `min` the result is 0.","kind":"function","name":"wrap","params":[{"type":{"names":["number"]},"description":"The value to wrap.","name":"value"},{"type":{"names":["number"]},"description":"The minimum the value is allowed to be.","name":"min"},{"type":{"names":["number"]},"description":"The maximum the value is allowed to be, should be larger than `min`.","name":"max"}],"returns":[{"type":{"names":["number"]},"description":"The wrapped value."}],"memberof":"Phaser.Math","longname":"Phaser.Math#wrap","scope":"instance","___s":true},{"meta":{"range":[17179,17723],"filename":"Math.js","lineno":552,"path":"src\\math"},"description":"Adds value to amount and ensures that the result always stays between 0 and max, by wrapping the value around.\r\rValues _must_ be positive integers, and are passed through Math.abs. See {@link Phaser.Math#wrap} for an alternative.","kind":"function","name":"wrapValue","params":[{"type":{"names":["number"]},"description":"The value to add the amount to.","name":"value"},{"type":{"names":["number"]},"description":"The amount to add to the value.","name":"amount"},{"type":{"names":["number"]},"description":"The maximum the value is allowed to be.","name":"max"}],"returns":[{"type":{"names":["number"]},"description":"The wrapped value."}],"memberof":"Phaser.Math","longname":"Phaser.Math#wrapValue","scope":"instance","___s":true},{"meta":{"range":[17974,18215],"filename":"Math.js","lineno":575,"path":"src\\math"},"description":"Returns true if the number given is odd.","kind":"function","name":"isOdd","params":[{"type":{"names":["integer"]},"description":"The number to check.","name":"n"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the given number is odd. False if the given number is even."}],"memberof":"Phaser.Math","longname":"Phaser.Math#isOdd","scope":"instance","___s":true},{"meta":{"range":[18343,18586],"filename":"Math.js","lineno":589,"path":"src\\math"},"description":"Returns true if the number given is even.","kind":"function","name":"isEven","params":[{"type":{"names":["integer"]},"description":"The number to check.","name":"n"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the given number is even. False if the given number is odd."}],"memberof":"Phaser.Math","longname":"Phaser.Math#isEven","scope":"instance","___s":true},{"meta":{"range":[18714,19064],"filename":"Math.js","lineno":603,"path":"src\\math"},"description":"Variation of Math.min that can be passed either an array of numbers or the numbers as parameters.\r\rPrefer the standard `Math.min` function when appropriate.","kind":"function","name":"min","returns":[{"type":{"names":["number"]},"description":"The lowest value from those given."}],"see":["{@link http://jsperf.com/math-s-min-max-vs-homemade}"],"memberof":"Phaser.Math","longname":"Phaser.Math#min","scope":"instance","___s":true},{"meta":{"range":[19526,19877],"filename":"Math.js","lineno":635,"path":"src\\math"},"description":"Variation of Math.max that can be passed either an array of numbers or the numbers as parameters.\r\rPrefer the standard `Math.max` function when appropriate.","kind":"function","name":"max","returns":[{"type":{"names":["number"]},"description":"The largest value from those given."}],"see":["{@link http://jsperf.com/math-s-min-max-vs-homemade}"],"memberof":"Phaser.Math","longname":"Phaser.Math#max","scope":"instance","___s":true},{"meta":{"range":[20339,20654],"filename":"Math.js","lineno":667,"path":"src\\math"},"description":"Variation of Math.min that can be passed a property and either an array of objects or the objects as parameters.\rIt will find the lowest matching property value from the given objects.","kind":"function","name":"minProperty","returns":[{"type":{"names":["number"]},"description":"The lowest value from those given."}],"memberof":"Phaser.Math","longname":"Phaser.Math#minProperty","scope":"instance","___s":true},{"meta":{"range":[21171,21488],"filename":"Math.js","lineno":697,"path":"src\\math"},"description":"Variation of Math.max that can be passed a property and either an array of objects or the objects as parameters.\rIt will find the largest matching property value from the given objects.","kind":"function","name":"maxProperty","returns":[{"type":{"names":["number"]},"description":"The largest value from those given."}],"memberof":"Phaser.Math","longname":"Phaser.Math#maxProperty","scope":"instance","___s":true},{"meta":{"range":[22005,22419],"filename":"Math.js","lineno":727,"path":"src\\math"},"description":"Keeps an angle value between -180 and +180; or -PI and PI if radians.","kind":"function","name":"wrapAngle","params":[{"type":{"names":["number"]},"description":"The angle value to wrap","name":"angle"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Set to `true` if the angle is given in radians, otherwise degrees is expected.","name":"radians"}],"returns":[{"type":{"names":["number"]},"description":"The new angle value; will be the same as the input angle if it was within bounds."}],"memberof":"Phaser.Math","longname":"Phaser.Math#wrapAngle","scope":"instance","___s":true},{"meta":{"range":[22576,22908],"filename":"Math.js","lineno":741,"path":"src\\math"},"description":"A Linear Interpolation Method, mostly used by Phaser.Tween.","kind":"function","name":"linearInterpolation","params":[{"type":{"names":["Array"]},"description":"The input array of values to interpolate between.","name":"v"},{"type":{"names":["number"]},"description":"The percentage of interpolation, between 0 and 1.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The interpolated value"}],"memberof":"Phaser.Math","longname":"Phaser.Math#linearInterpolation","scope":"instance","___s":true},{"meta":{"range":[23321,23653],"filename":"Math.js","lineno":769,"path":"src\\math"},"description":"A Bezier Interpolation Method, mostly used by Phaser.Tween.","kind":"function","name":"bezierInterpolation","params":[{"type":{"names":["Array"]},"description":"The input array of values to interpolate between.","name":"v"},{"type":{"names":["number"]},"description":"The percentage of interpolation, between 0 and 1.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The interpolated value"}],"memberof":"Phaser.Math","longname":"Phaser.Math#bezierInterpolation","scope":"instance","___s":true},{"meta":{"range":[23940,24281],"filename":"Math.js","lineno":791,"path":"src\\math"},"description":"A Catmull Rom Interpolation Method, mostly used by Phaser.Tween.","kind":"function","name":"catmullRomInterpolation","params":[{"type":{"names":["Array"]},"description":"The input array of values to interpolate between.","name":"v"},{"type":{"names":["number"]},"description":"The percentage of interpolation, between 0 and 1.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The interpolated value"}],"memberof":"Phaser.Math","longname":"Phaser.Math#catmullRomInterpolation","scope":"instance","___s":true},{"meta":{"range":[25145,25382],"filename":"Math.js","lineno":831,"path":"src\\math"},"description":"Calculates a linear (interpolation) value over t.","kind":"function","name":"linear","params":[{"type":{"names":["number"]},"name":"p0"},{"type":{"names":["number"]},"name":"p1"},{"type":{"names":["number"]},"description":"A value between 0 and 1.","name":"t"}],"returns":[{"type":{"names":["number"]}}],"memberof":"Phaser.Math","longname":"Phaser.Math#linear","scope":"instance","___s":true},{"meta":{"range":[25474,25614],"filename":"Math.js","lineno":846,"path":"src\\math"},"kind":"function","name":"bernstein","access":"protected","params":[{"type":{"names":["number"]},"name":"n"},{"type":{"names":["number"]},"name":"i"}],"returns":[{"type":{"names":["number"]}}],"memberof":"Phaser.Math","longname":"Phaser.Math#bernstein","scope":"instance","___s":true},{"meta":{"range":[25747,25882],"filename":"Math.js","lineno":859,"path":"src\\math"},"kind":"function","name":"factorial","params":[{"type":{"names":["number"]},"description":"the number you want to evaluate","name":"value"}],"returns":[{"type":{"names":["number"]}}],"memberof":"Phaser.Math","longname":"Phaser.Math#factorial","scope":"instance","___s":true},{"meta":{"range":[26134,26399],"filename":"Math.js","lineno":882,"path":"src\\math"},"description":"Calculates a catmum rom value.","kind":"function","name":"catmullRom","access":"protected","params":[{"type":{"names":["number"]},"name":"p0"},{"type":{"names":["number"]},"name":"p1"},{"type":{"names":["number"]},"name":"p2"},{"type":{"names":["number"]},"name":"p3"},{"type":{"names":["number"]},"name":"t"}],"returns":[{"type":{"names":["number"]}}],"memberof":"Phaser.Math","longname":"Phaser.Math#catmullRom","scope":"instance","___s":true},{"meta":{"range":[26655,26941],"filename":"Math.js","lineno":902,"path":"src\\math"},"description":"The absolute difference between two values.","kind":"function","name":"difference","params":[{"type":{"names":["number"]},"description":"The first value to check.","name":"a"},{"type":{"names":["number"]},"description":"The second value to check.","name":"b"}],"returns":[{"type":{"names":["number"]},"description":"The absolute difference between the two values."}],"memberof":"Phaser.Math","longname":"Phaser.Math#difference","scope":"instance","___s":true},{"meta":{"range":[27029,27250],"filename":"Math.js","lineno":916,"path":"src\\math"},"description":"Round to the next whole number _away_ from zero.","kind":"function","name":"roundAwayFromZero","params":[{"type":{"names":["number"]},"description":"Any number.","name":"value"}],"returns":[{"type":{"names":["integer"]},"description":"The rounded value of that number."}],"memberof":"Phaser.Math","longname":"Phaser.Math#roundAwayFromZero","scope":"instance","___s":true},{"meta":{"range":[27417,28289],"filename":"Math.js","lineno":930,"path":"src\\math"},"description":"Generate a sine and cosine table simultaneously and extremely quickly.\rThe parameters allow you to specify the length, amplitude and frequency of the wave.\rThis generator is fast enough to be used in real-time.\rCode based on research by Franky of scene.at","kind":"function","name":"sinCosGenerator","params":[{"type":{"names":["number"]},"description":"The length of the wave","name":"length"},{"type":{"names":["number"]},"description":"The amplitude to apply to the sine table (default 1.0) if you need values between say -+ 125 then give 125 as the value","name":"sinAmplitude"},{"type":{"names":["number"]},"description":"The amplitude to apply to the cosine table (default 1.0) if you need values between say -+ 125 then give 125 as the value","name":"cosAmplitude"},{"type":{"names":["number"]},"description":"The frequency of the sine and cosine table data","name":"frequency"}],"returns":[{"type":{"names":["Object"]},"description":"Returns the table data."}],"memberof":"Phaser.Math","longname":"Phaser.Math#sinCosGenerator","scope":"instance","___s":true},{"meta":{"range":[29011,29323],"filename":"Math.js","lineno":970,"path":"src\\math"},"description":"Returns the euclidian distance between the two given set of coordinates.","kind":"function","name":"distance","params":[{"type":{"names":["number"]},"name":"x1"},{"type":{"names":["number"]},"name":"y1"},{"type":{"names":["number"]},"name":"x2"},{"type":{"names":["number"]},"name":"y2"}],"returns":[{"type":{"names":["number"]},"description":"The distance between the two sets of coordinates."}],"memberof":"Phaser.Math","longname":"Phaser.Math#distance","scope":"instance","___s":true},{"meta":{"range":[29488,29877],"filename":"Math.js","lineno":989,"path":"src\\math"},"description":"Returns the euclidean distance squared between the two given set of\rcoordinates (cuts out a square root operation before returning).","kind":"function","name":"distanceSq","params":[{"type":{"names":["number"]},"name":"x1"},{"type":{"names":["number"]},"name":"y1"},{"type":{"names":["number"]},"name":"x2"},{"type":{"names":["number"]},"name":"y2"}],"returns":[{"type":{"names":["number"]},"description":"The distance squared between the two sets of coordinates."}],"memberof":"Phaser.Math","longname":"Phaser.Math#distanceSq","scope":"instance","___s":true},{"meta":{"range":[30033,30388],"filename":"Math.js","lineno":1009,"path":"src\\math"},"description":"Returns the distance between the two given set of coordinates at the power given.","kind":"function","name":"distancePow","params":[{"type":{"names":["number"]},"name":"x1"},{"type":{"names":["number"]},"name":"y1"},{"type":{"names":["number"]},"name":"x2"},{"type":{"names":["number"]},"name":"y2"},{"type":{"names":["number"]},"optional":true,"defaultvalue":2,"name":"pow"}],"returns":[{"type":{"names":["number"]},"description":"The distance between the two sets of coordinates."}],"memberof":"Phaser.Math","longname":"Phaser.Math#distancePow","scope":"instance","___s":true},{"meta":{"range":[30582,30908],"filename":"Math.js","lineno":1028,"path":"src\\math"},"description":"Force a value within the boundaries by clamping it to the range `min`, `max`.","kind":"function","name":"clamp","params":[{"type":{"names":["float"]},"description":"The value to be clamped.","name":"v"},{"type":{"names":["float"]},"description":"The minimum bounds.","name":"min"},{"type":{"names":["float"]},"description":"The maximum bounds.","name":"max"}],"returns":[{"type":{"names":["number"]},"description":"The clamped value."}],"memberof":"Phaser.Math","longname":"Phaser.Math#clamp","scope":"instance","___s":true},{"meta":{"range":[31167,31415],"filename":"Math.js","lineno":1054,"path":"src\\math"},"description":"Clamp `x` to the range `[a, Infinity)`.\rRoughly the same as `Math.max(x, a)`, except for NaN handling.","kind":"function","name":"clampBottom","params":[{"type":{"names":["number"]},"name":"x"},{"type":{"names":["number"]},"name":"a"}],"returns":[{"type":{"names":["number"]}}],"memberof":"Phaser.Math","longname":"Phaser.Math#clampBottom","scope":"instance","___s":true},{"meta":{"range":[31502,31953],"filename":"Math.js","lineno":1069,"path":"src\\math"},"description":"Checks if two values are within the given tolerance of each other.","kind":"function","name":"within","params":[{"type":{"names":["number"]},"description":"The first number to check","name":"a"},{"type":{"names":["number"]},"description":"The second number to check","name":"b"},{"type":{"names":["number"]},"description":"The tolerance. Anything equal to or less than this is considered within the range.","name":"tolerance"}],"returns":[{"type":{"names":["boolean"]},"description":"True if a is <= tolerance of b."}],"see":["{@link Phaser.Math.fuzzyEqual}"],"memberof":"Phaser.Math","longname":"Phaser.Math#within","scope":"instance","___s":true},{"meta":{"range":[32063,32507],"filename":"Math.js","lineno":1085,"path":"src\\math"},"description":"Linear mapping from range <a1, a2> to range <b1, b2>","kind":"function","name":"mapLinear","params":[{"type":{"names":["number"]},"description":"The value to map","name":"x"},{"type":{"names":["number"]},"description":"First endpoint of the range <a1, a2>","name":"a1"},{"type":{"names":["number"]},"description":"Final endpoint of the range <a1, a2>","name":"a2"},{"type":{"names":["number"]},"description":"First endpoint of the range <b1, b2>","name":"b1"},{"type":{"names":["number"]},"description":"Final endpoint of the range  <b1, b2>","name":"b2"}],"returns":[{"type":{"names":["number"]}}],"memberof":"Phaser.Math","longname":"Phaser.Math#mapLinear","scope":"instance","___s":true},{"meta":{"range":[32635,32990],"filename":"Math.js","lineno":1102,"path":"src\\math"},"description":"Smoothstep function as detailed at http://en.wikipedia.org/wiki/Smoothstep","kind":"function","name":"smoothstep","params":[{"type":{"names":["float"]},"description":"The input value.","name":"x"},{"type":{"names":["float"]},"description":"The left edge. Should be smaller than the right edge.","name":"min"},{"type":{"names":["float"]},"description":"The right edge.","name":"max"}],"returns":[{"type":{"names":["float"]},"description":"A value between 0 and 1."}],"memberof":"Phaser.Math","longname":"Phaser.Math#smoothstep","scope":"instance","___s":true},{"meta":{"range":[33240,33599],"filename":"Math.js","lineno":1121,"path":"src\\math"},"description":"Smootherstep function as detailed at http://en.wikipedia.org/wiki/Smoothstep","kind":"function","name":"smootherstep","params":[{"type":{"names":["float"]},"description":"The input value.","name":"x"},{"type":{"names":["float"]},"description":"The left edge. Should be smaller than the right edge.","name":"min"},{"type":{"names":["float"]},"description":"The right edge.","name":"max"}],"returns":[{"type":{"names":["float"]},"description":"A value between 0 and 1."}],"memberof":"Phaser.Math","longname":"Phaser.Math#smootherstep","scope":"instance","___s":true},{"meta":{"range":[33782,34094],"filename":"Math.js","lineno":1138,"path":"src\\math"},"description":"A value representing the sign of the value: -1 for negative, +1 for positive, 0 if value is 0.\r\rThis works differently from `Math.sign` for values of NaN and -0, etc.","kind":"function","name":"sign","params":[{"type":{"names":["number"]},"name":"x"}],"returns":[{"type":{"names":["integer"]},"description":"An integer in {-1, 0, 1}"}],"memberof":"Phaser.Math","longname":"Phaser.Math#sign","scope":"instance","___s":true},{"meta":{"range":[34196,34587],"filename":"Math.js","lineno":1153,"path":"src\\math"},"description":"Work out what percentage value `a` is of value `b` using the given base.","kind":"function","name":"percent","params":[{"type":{"names":["number"]},"description":"The value to work out the percentage for.","name":"a"},{"type":{"names":["number"]},"description":"The value you wish to get the percentage of.","name":"b"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The base value.","name":"base"}],"returns":[{"type":{"names":["number"]},"description":"The percentage a is of b, between 0 and 1."}],"memberof":"Phaser.Math","longname":"Phaser.Math#percent","scope":"instance","___s":true},{"meta":{"range":[35019,35177],"filename":"Math.js","lineno":1186,"path":"src\\math"},"description":"Convert degrees to radians.","kind":"function","name":"degToRad","params":[{"type":{"names":["number"]},"description":"Angle in degrees.","name":"degrees"}],"returns":[{"type":{"names":["number"]},"description":"Angle in radians."}],"memberof":"Phaser.Math","longname":"Phaser.Math#degToRad","scope":"instance","___s":true},{"meta":{"range":[35284,35441],"filename":"Math.js","lineno":1197,"path":"src\\math"},"description":"Convert radians to degrees.","kind":"function","name":"radToDeg","params":[{"type":{"names":["number"]},"description":"Angle in radians.","name":"radians"}],"returns":[{"type":{"names":["number"]},"description":"Angle in degrees"}],"memberof":"Phaser.Math","longname":"Phaser.Math#radToDeg","scope":"instance","___s":true},{"meta":{"range":[1080,2059],"filename":"QuadTree.js","lineno":23,"path":"src\\math"},"description":"A QuadTree implementation. The original code was a conversion of the Java code posted to GameDevTuts.\rHowever I've tweaked it massively to add node indexing, removed lots of temp. var creation and significantly increased performance as a result.\rOriginal version at https://github.com/timohausmann/quadtree-js/","kind":"class","classdesc":"Phaser.QuadTree","params":[{"type":{"names":["number"]},"description":"The top left coordinate of the quadtree.","name":"x"},{"type":{"names":["number"]},"description":"The top left coordinate of the quadtree.","name":"y"},{"type":{"names":["number"]},"description":"The width of the quadtree in pixels.","name":"width"},{"type":{"names":["number"]},"description":"The height of the quadtree in pixels.","name":"height"},{"type":{"names":["number"]},"optional":true,"defaultvalue":10,"description":"The maximum number of objects per node.","name":"maxObjects"},{"type":{"names":["number"]},"optional":true,"defaultvalue":4,"description":"The maximum number of levels to iterate to.","name":"maxLevels"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Which level is this?","name":"level"}],"name":"QuadTree","longname":"Phaser.QuadTree","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1279,1299],"filename":"QuadTree.js","lineno":29,"path":"src\\math"},"properties":[{"type":{"names":["number"]},"description":"The maximum number of objects per node.","name":"maxObjects"}],"defaultvalue":10,"name":"maxObjects","longname":"Phaser.QuadTree#maxObjects","kind":"member","memberof":"Phaser.QuadTree","scope":"instance","___s":true},{"meta":{"range":[1426,1444],"filename":"QuadTree.js","lineno":35,"path":"src\\math"},"properties":[{"type":{"names":["number"]},"description":"The maximum number of levels to break down to.","name":"maxLevels"}],"defaultvalue":4,"name":"maxLevels","longname":"Phaser.QuadTree#maxLevels","kind":"member","memberof":"Phaser.QuadTree","scope":"instance","___s":true},{"meta":{"range":[1523,1537],"filename":"QuadTree.js","lineno":40,"path":"src\\math"},"properties":[{"type":{"names":["number"]},"description":"The current level.","name":"level"}],"name":"level","longname":"Phaser.QuadTree#level","kind":"member","memberof":"Phaser.QuadTree","scope":"instance","___s":true},{"meta":{"range":[1640,1656],"filename":"QuadTree.js","lineno":45,"path":"src\\math"},"properties":[{"type":{"names":["object"]},"description":"Object that contains the quadtree bounds.","name":"bounds"}],"name":"bounds","longname":"Phaser.QuadTree#bounds","kind":"member","memberof":"Phaser.QuadTree","scope":"instance","___s":true},{"meta":{"range":[1745,1762],"filename":"QuadTree.js","lineno":50,"path":"src\\math"},"properties":[{"type":{"names":["array"]},"description":"Array of quadtree children.","name":"objects"}],"name":"objects","longname":"Phaser.QuadTree#objects","kind":"member","memberof":"Phaser.QuadTree","scope":"instance","___s":true},{"meta":{"range":[1854,1869],"filename":"QuadTree.js","lineno":55,"path":"src\\math"},"properties":[{"type":{"names":["array"]},"description":"Array of associated child nodes.","name":"nodes"}],"name":"nodes","longname":"Phaser.QuadTree#nodes","kind":"member","memberof":"Phaser.QuadTree","scope":"instance","___s":true},{"meta":{"range":[2101,2678],"filename":"QuadTree.js","lineno":69,"path":"src\\math"},"description":"Resets the QuadTree.","kind":"function","name":"reset","params":[{"type":{"names":["number"]},"description":"The top left coordinate of the quadtree.","name":"x"},{"type":{"names":["number"]},"description":"The top left coordinate of the quadtree.","name":"y"},{"type":{"names":["number"]},"description":"The width of the quadtree in pixels.","name":"width"},{"type":{"names":["number"]},"description":"The height of the quadtree in pixels.","name":"height"},{"type":{"names":["number"]},"optional":true,"defaultvalue":10,"description":"The maximum number of objects per node.","name":"maxObjects"},{"type":{"names":["number"]},"optional":true,"defaultvalue":4,"description":"The maximum number of levels to iterate to.","name":"maxLevels"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Which level is this?","name":"level"}],"memberof":"Phaser.QuadTree","longname":"Phaser.QuadTree#reset","scope":"instance","___s":true},{"meta":{"range":[3332,3598],"filename":"QuadTree.js","lineno":103,"path":"src\\math"},"description":"Populates this quadtree with the children of the given Group. In order to be added the child must exist and have a body property.","kind":"function","name":"populate","params":[{"type":{"names":["Phaser.Group"]},"description":"The Group to add to the quadtree.","name":"group"}],"memberof":"Phaser.QuadTree","longname":"Phaser.QuadTree#populate","scope":"instance","___s":true},{"meta":{"range":[3710,3882],"filename":"QuadTree.js","lineno":115,"path":"src\\math"},"description":"Handler for the populate method.","kind":"function","name":"populateHandler","params":[{"type":{"names":["Phaser.Sprite","object"]},"description":"The Sprite to check.","name":"sprite"}],"memberof":"Phaser.QuadTree","longname":"Phaser.QuadTree#populateHandler","scope":"instance","___s":true},{"meta":{"range":[4048,4141],"filename":"QuadTree.js","lineno":130,"path":"src\\math"},"description":"Split the node into 4 subnodes","kind":"function","name":"split","memberof":"Phaser.QuadTree","longname":"Phaser.QuadTree#split","scope":"instance","___s":true},{"meta":{"range":[5015,5389],"filename":"QuadTree.js","lineno":151,"path":"src\\math"},"description":"Insert the object into the node. If the node exceeds the capacity, it will split and add all objects to their corresponding subnodes.","kind":"function","name":"insert","params":[{"type":{"names":["Phaser.Physics.Arcade.Body","object"]},"description":"The Body object to insert into the quadtree. Can be any object so long as it exposes x, y, right and bottom properties.","name":"body"}],"memberof":"Phaser.QuadTree","longname":"Phaser.QuadTree#insert","scope":"instance","___s":true},{"meta":{"range":[6543,6874],"filename":"QuadTree.js","lineno":203,"path":"src\\math"},"description":"Determine which node the object belongs to.","kind":"function","name":"getIndex","params":[{"type":{"names":["Phaser.Rectangle","object"]},"description":"The bounds in which to check.","name":"rect"}],"returns":[{"type":{"names":["number"]},"description":"index - Index of the subnode (0-3), or -1 if rect cannot completely fit within a subnode and is part of the parent node."}],"memberof":"Phaser.QuadTree","longname":"Phaser.QuadTree#getIndex","scope":"instance","___s":true},{"meta":{"range":[8114,8446],"filename":"QuadTree.js","lineno":247,"path":"src\\math"},"description":"Return all objects that could collide with the given Sprite or Rectangle.","kind":"function","name":"retrieve","params":[{"type":{"names":["Phaser.Sprite","Phaser.Rectangle"]},"description":"The source object to check the QuadTree against. Either a Sprite or Rectangle.","name":"source"}],"returns":[{"type":{"names":["array"]},"description":"- Array with all detected objects."}],"memberof":"Phaser.QuadTree","longname":"Phaser.QuadTree#retrieve","scope":"instance","___s":true},{"meta":{"range":[9697,9772],"filename":"QuadTree.js","lineno":295,"path":"src\\math"},"description":"Clear the quadtree.","kind":"function","name":"clear","memberof":"Phaser.QuadTree","longname":"Phaser.QuadTree#clear","scope":"instance","___s":true},{"meta":{"range":[837,1457],"filename":"RandomDataGenerator.js","lineno":23,"path":"src\\math"},"description":"An extremely useful repeatable random data generator.\r\rBased on Nonsense by Josh Faul https://github.com/jocafa/Nonsense.\r\rThe random number genererator is based on the Alea PRNG, but is modified.\r - https://github.com/coverslide/node-alea\r - https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\r - http://baagoe.org/en/wiki/Better_random_numbers_for_javascript (original, perm. 404)","kind":"class","classdesc":"Phaser.RandomDataGenerator","params":[{"type":{"names":["Array.<any>","string"]},"optional":true,"description":"An array of values to use as the seed, or a generator state (from {#state}).","name":"seeds"}],"name":"RandomDataGenerator","longname":"Phaser.RandomDataGenerator","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1906,2238],"filename":"RandomDataGenerator.js","lineno":83,"path":"src\\math"},"description":"Reset the seed of the random data generator.\r\r_Note_: the seed array is only processed up to the first `undefined` (or `null`) value, should such be present.","kind":"function","name":"sow","params":[{"type":{"names":["Array.<any>"]},"description":"The array of seeds: the `toString()` of each value is used.","name":"seeds"}],"memberof":"Phaser.RandomDataGenerator","longname":"Phaser.RandomDataGenerator#sow","scope":"instance","___s":true},{"meta":{"range":[3611,3792],"filename":"RandomDataGenerator.js","lineno":148,"path":"src\\math"},"description":"Returns a random integer between 0 and 2^32.","kind":"function","name":"integer","returns":[{"type":{"names":["number"]},"description":"A random integer between 0 and 2^32."}],"memberof":"Phaser.RandomDataGenerator","longname":"Phaser.RandomDataGenerator#integer","scope":"instance","___s":true},{"meta":{"range":[3898,4078],"filename":"RandomDataGenerator.js","lineno":160,"path":"src\\math"},"description":"Returns a random real number between 0 and 1.","kind":"function","name":"frac","returns":[{"type":{"names":["number"]},"description":"A random real number between 0 and 1."}],"memberof":"Phaser.RandomDataGenerator","longname":"Phaser.RandomDataGenerator#frac","scope":"instance","___s":true},{"meta":{"range":[4236,4422],"filename":"RandomDataGenerator.js","lineno":172,"path":"src\\math"},"description":"Returns a random real number between 0 and 2^32.","kind":"function","name":"real","returns":[{"type":{"names":["number"]},"description":"A random real number between 0 and 2^32."}],"memberof":"Phaser.RandomDataGenerator","longname":"Phaser.RandomDataGenerator#real","scope":"instance","___s":true},{"meta":{"range":[4512,4837],"filename":"RandomDataGenerator.js","lineno":184,"path":"src\\math"},"description":"Returns a random integer between and including min and max.","kind":"function","name":"integerInRange","params":[{"type":{"names":["number"]},"description":"The minimum value in the range.","name":"min"},{"type":{"names":["number"]},"description":"The maximum value in the range.","name":"max"}],"returns":[{"type":{"names":["number"]},"description":"A random number between min and max."}],"memberof":"Phaser.RandomDataGenerator","longname":"Phaser.RandomDataGenerator#integerInRange","scope":"instance","___s":true},{"meta":{"range":[4970,5359],"filename":"RandomDataGenerator.js","lineno":198,"path":"src\\math"},"description":"Returns a random integer between and including min and max.\rThis method is an alias for RandomDataGenerator.integerInRange.","kind":"function","name":"between","params":[{"type":{"names":["number"]},"description":"The minimum value in the range.","name":"min"},{"type":{"names":["number"]},"description":"The maximum value in the range.","name":"max"}],"returns":[{"type":{"names":["number"]},"description":"A random number between min and max."}],"memberof":"Phaser.RandomDataGenerator","longname":"Phaser.RandomDataGenerator#between","scope":"instance","___s":true},{"meta":{"range":[5462,5774],"filename":"RandomDataGenerator.js","lineno":213,"path":"src\\math"},"description":"Returns a random real number between min and max.","kind":"function","name":"realInRange","params":[{"type":{"names":["number"]},"description":"The minimum value in the range.","name":"min"},{"type":{"names":["number"]},"description":"The maximum value in the range.","name":"max"}],"returns":[{"type":{"names":["number"]},"description":"A random number between min and max."}],"memberof":"Phaser.RandomDataGenerator","longname":"Phaser.RandomDataGenerator#realInRange","scope":"instance","___s":true},{"meta":{"range":[5883,6067],"filename":"RandomDataGenerator.js","lineno":227,"path":"src\\math"},"description":"Returns a random real number between -1 and 1.","kind":"function","name":"normal","returns":[{"type":{"names":["number"]},"description":"A random real number between -1 and 1."}],"memberof":"Phaser.RandomDataGenerator","longname":"Phaser.RandomDataGenerator#normal","scope":"instance","___s":true},{"meta":{"range":[6151,6370],"filename":"RandomDataGenerator.js","lineno":239,"path":"src\\math"},"description":"Returns a valid RFC4122 version4 ID hex string from https://gist.github.com/1308368","kind":"function","name":"uuid","returns":[{"type":{"names":["string"]},"description":"A valid RFC4122 version4 ID hex string"}],"memberof":"Phaser.RandomDataGenerator","longname":"Phaser.RandomDataGenerator#uuid","scope":"instance","___s":true},{"meta":{"range":[6626,6850],"filename":"RandomDataGenerator.js","lineno":258,"path":"src\\math"},"description":"Returns a random member of `array`.","kind":"function","name":"pick","params":[{"type":{"names":["Array"]},"description":"An Array to pick a random member of.","name":"ary"}],"returns":[{"type":{"names":["any"]},"description":"A random member of the array."}],"memberof":"Phaser.RandomDataGenerator","longname":"Phaser.RandomDataGenerator#pick","scope":"instance","___s":true},{"meta":{"range":[6959,7121],"filename":"RandomDataGenerator.js","lineno":271,"path":"src\\math"},"description":"Returns a sign to be used with multiplication operator.","kind":"function","name":"sign","returns":[{"type":{"names":["number"]},"description":"-1 or +1."}],"memberof":"Phaser.RandomDataGenerator","longname":"Phaser.RandomDataGenerator#sign","scope":"instance","___s":true},{"meta":{"range":[7202,7464],"filename":"RandomDataGenerator.js","lineno":283,"path":"src\\math"},"description":"Returns a random member of `array`, favoring the earlier entries.","kind":"function","name":"weightedPick","params":[{"type":{"names":["Array"]},"description":"An Array to pick a random member of.","name":"ary"}],"returns":[{"type":{"names":["any"]},"description":"A random member of the array."}],"memberof":"Phaser.RandomDataGenerator","longname":"Phaser.RandomDataGenerator#weightedPick","scope":"instance","___s":true},{"meta":{"range":[7596,7993],"filename":"RandomDataGenerator.js","lineno":296,"path":"src\\math"},"description":"Returns a random timestamp between min and max, or between the beginning of 2000 and the end of 2020 if min and max aren't specified.","kind":"function","name":"timestamp","params":[{"type":{"names":["number"]},"description":"The minimum value in the range.","name":"min"},{"type":{"names":["number"]},"description":"The maximum value in the range.","name":"max"}],"returns":[{"type":{"names":["number"]},"description":"A random timestamp between min and max."}],"memberof":"Phaser.RandomDataGenerator","longname":"Phaser.RandomDataGenerator#timestamp","scope":"instance","___s":true},{"meta":{"range":[8128,8308],"filename":"RandomDataGenerator.js","lineno":310,"path":"src\\math"},"description":"Returns a random angle between -180 and 180.","kind":"function","name":"angle","returns":[{"type":{"names":["number"]},"description":"A random number between -180 and 180."}],"memberof":"Phaser.RandomDataGenerator","longname":"Phaser.RandomDataGenerator#angle","scope":"instance","___s":true},{"meta":{"range":[8401,9246],"filename":"RandomDataGenerator.js","lineno":322,"path":"src\\math"},"description":"Gets or Sets the state of the generator. This allows you to retain the values\rthat the generator is using between games, i.e. in a game save file.\r\rTo seed this generator with a previously saved state you can pass it as the \r`seed` value in your game config, or call this method directly after Phaser has booted.\r\rCall this method with no parameters to return the current state.\r\rIf providing a state it should match the same format that this method\rreturns, which is a string with a header `!rnd` followed by the `c`,\r`s0`, `s1` and `s2` values respectively, each comma-delimited.","kind":"function","name":"state","params":[{"type":{"names":["string"]},"optional":true,"description":"Generator state to be set.","name":"state"}],"returns":[{"type":{"names":["string"]},"description":"The current state of the generator."}],"memberof":"Phaser.RandomDataGenerator","longname":"Phaser.RandomDataGenerator#state","scope":"instance","___s":true},{"meta":{"range":[448,508],"filename":"Net.js","lineno":14,"path":"src\\net"},"description":"Phaser.Net handles browser URL related tasks such as checking host names, domain names and query string manipulation.","kind":"class","classdesc":"Phaser.Net","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"Net","longname":"Phaser.Net","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[545,675],"filename":"Net.js","lineno":22,"path":"src\\net"},"description":"Returns the hostname given by the browser.","kind":"function","name":"getHostName","returns":[{"type":{"names":["string"]}}],"memberof":"Phaser.Net","longname":"Phaser.Net#getHostName","scope":"instance","___s":true},{"meta":{"range":[868,1366],"filename":"Net.js","lineno":38,"path":"src\\net"},"description":"Compares the given domain name against the hostname of the browser containing the game.\rIf the domain name is found it returns true.\rYou can specify a part of a domain, for example 'google' would match 'google.com', 'google.co.uk', etc.\rDo not include 'http://' at the start.","kind":"function","name":"checkDomainName","params":[{"type":{"names":["string"]},"name":"domain"}],"returns":[{"type":{"names":["boolean"]},"description":"true if the given domain fragment can be found in the window.location.hostname"}],"memberof":"Phaser.Net","longname":"Phaser.Net#checkDomainName","scope":"instance","___s":true},{"meta":{"range":[1489,2355],"filename":"Net.js","lineno":52,"path":"src\\net"},"description":"Updates a value on the Query String and returns it in full.\rIf the value doesn't already exist it is set.\rIf the value exists it is replaced with the new value given. If you don't provide a new value it is removed from the query string.\rOptionally you can redirect to the new url, or just return it as a string.","kind":"function","name":"updateQueryString","params":[{"type":{"names":["string"]},"description":"The querystring key to update.","name":"key"},{"type":{"names":["string"]},"description":"The new value to be set. If it already exists it will be replaced.","name":"value"},{"type":{"names":["boolean"]},"description":"If true the browser will issue a redirect to the url with the new querystring.","name":"redirect"},{"type":{"names":["string"]},"description":"The URL to modify. If none is given it uses window.location.href.","name":"url"}],"returns":[{"type":{"names":["string"]},"description":"If redirect is false then the modified url and query string is returned."}],"memberof":"Phaser.Net","longname":"Phaser.Net#updateQueryString","scope":"instance","___s":true},{"meta":{"range":[3696,4142],"filename":"Net.js","lineno":116,"path":"src\\net"},"description":"Returns the Query String as an object.\rIf you specify a parameter it will return just the value of that parameter, should it exist.","kind":"function","name":"getQueryString","params":[{"type":{"names":["string"]},"optional":true,"defaultvalue":"''","description":"If specified this will return just the value for that key.","name":"parameter"}],"returns":[{"type":{"names":["string","object"]},"description":"An object containing the key value pairs found in the query string or just the value if a parameter was given."}],"memberof":"Phaser.Net","longname":"Phaser.Net#getQueryString","scope":"instance","___s":true},{"meta":{"range":[4855,5240],"filename":"Net.js","lineno":152,"path":"src\\net"},"description":"Takes a Uniform Resource Identifier (URI) component (previously created by encodeURIComponent or by a similar routine) and\rdecodes it, replacing \\ with spaces in the return. Used internally by the Net classes.","kind":"function","name":"decodeURI","params":[{"type":{"names":["string"]},"description":"The URI component to be decoded.","name":"value"}],"returns":[{"type":{"names":["string"]},"description":"The decoded value."}],"memberof":"Phaser.Net","longname":"Phaser.Net#decodeURI","scope":"instance","___s":true},{"meta":{"range":[204,321],"filename":"ArcadeParticles.js","lineno":7,"path":"src\\particles\\arcade"},"description":"Arcade Particles is a Particle System integrated with Arcade Physics.","kind":"class","name":"Arcade","memberof":"Phaser.Particles","longname":"Phaser.Particles.Arcade","scope":"static","___s":true},{"meta":{"range":[924,8831],"filename":"Emitter.js","lineno":20,"path":"src\\particles\\arcade"},"description":"Emitter is a lightweight particle emitter that uses Arcade Physics.\rIt can be used for one-time explosions or for continuous effects like rain and fire.\rAll it really does is launch Particle objects out at set intervals, and fixes their positions and velocities accordingly.","kind":"class","classdesc":"Phaser.Particles.Arcade.Emitter","augments":["Phaser.Group"],"params":[{"type":{"names":["Phaser.Game"]},"description":"Current game instance.","name":"game"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate within the Emitter that the particles are emitted from.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate within the Emitter that the particles are emitted from.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":50,"description":"The total number of particles in this emitter.","name":"maxParticles"}],"name":"Emitter","longname":"Phaser.Particles.Arcade.Emitter","memberof":"Phaser.Particles.Arcade","scope":"static","___s":true},{"meta":{"range":[1124,1162],"filename":"Emitter.js","lineno":26,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The total number of particles in this emitter.","name":"maxParticles"}],"name":"maxParticles","longname":"Phaser.Particles.Arcade.Emitter#maxParticles","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[1321,1369],"filename":"Emitter.js","lineno":33,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["string"]},"description":"A handy string name for this emitter. Can be set to anything.","name":"name"}],"name":"name","longname":"Phaser.Particles.Arcade.Emitter#name","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","overrides":"Phaser.Group#name","___s":true},{"meta":{"range":[1474,1500],"filename":"Emitter.js","lineno":39,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["number"]},"description":"Internal Phaser Type value.","name":"type"}],"access":"protected","name":"type","longname":"Phaser.Particles.Arcade.Emitter#type","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","overrides":"Phaser.Group#type","___s":true},{"meta":{"range":[1627,1658],"filename":"Emitter.js","lineno":45,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The const physics body type of this object.","name":"physicsType"}],"readonly":true,"name":"physicsType","longname":"Phaser.Particles.Arcade.Emitter#physicsType","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","overrides":"Phaser.Group#physicsType","___s":true},{"meta":{"range":[1841,1885],"filename":"Emitter.js","lineno":51,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["Phaser.Rectangle"]},"description":"The area of the emitter. Particles can be randomly generated from anywhere within this rectangle.","name":"area"}],"name":"area","longname":"Phaser.Particles.Arcade.Emitter#area","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[2023,2075],"filename":"Emitter.js","lineno":57,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The minimum possible velocity of a particle.","name":"minParticleSpeed"}],"name":"minParticleSpeed","longname":"Phaser.Particles.Arcade.Emitter#minParticleSpeed","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[2213,2263],"filename":"Emitter.js","lineno":63,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The maximum possible velocity of a particle.","name":"maxParticleSpeed"}],"name":"maxParticleSpeed","longname":"Phaser.Particles.Arcade.Emitter#maxParticleSpeed","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[2485,2510],"filename":"Emitter.js","lineno":69,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The minimum possible scale of a particle. This is applied to the X and Y axis. If you need to control each axis see minParticleScaleX.","name":"minParticleScale"}],"defaultvalue":1,"name":"minParticleScale","longname":"Phaser.Particles.Arcade.Emitter#minParticleScale","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[2732,2757],"filename":"Emitter.js","lineno":75,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The maximum possible scale of a particle. This is applied to the X and Y axis. If you need to control each axis see maxParticleScaleX.","name":"maxParticleScale"}],"defaultvalue":1,"name":"maxParticleScale","longname":"Phaser.Particles.Arcade.Emitter#maxParticleScale","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[2907,2928],"filename":"Emitter.js","lineno":80,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["array"]},"description":"An array of the calculated scale easing data applied to particles with scaleRates > 0.","name":"scaleData"}],"name":"scaleData","longname":"Phaser.Particles.Arcade.Emitter#scaleData","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[3063,3086],"filename":"Emitter.js","lineno":86,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The minimum possible angular velocity of a particle.","name":"minRotation"}],"name":"minRotation","longname":"Phaser.Particles.Arcade.Emitter#minRotation","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[3221,3243],"filename":"Emitter.js","lineno":92,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The maximum possible angular velocity of a particle.","name":"maxRotation"}],"defaultvalue":360,"name":"maxRotation","longname":"Phaser.Particles.Arcade.Emitter#maxRotation","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[3378,3403],"filename":"Emitter.js","lineno":98,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The minimum possible alpha value of a particle.","name":"minParticleAlpha"}],"defaultvalue":1,"name":"minParticleAlpha","longname":"Phaser.Particles.Arcade.Emitter#minParticleAlpha","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[3538,3563],"filename":"Emitter.js","lineno":104,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The maximum possible alpha value of a particle.","name":"maxParticleAlpha"}],"defaultvalue":1,"name":"maxParticleAlpha","longname":"Phaser.Particles.Arcade.Emitter#maxParticleAlpha","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[3713,3734],"filename":"Emitter.js","lineno":109,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["array"]},"description":"An array of the calculated alpha easing data applied to particles with alphaRates > 0.","name":"alphaData"}],"name":"alphaData","longname":"Phaser.Particles.Arcade.Emitter#alphaData","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[3887,3905],"filename":"Emitter.js","lineno":115,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["number"]},"description":"Sets the `body.gravity.y` of each particle sprite to this value on launch.","name":"gravity"}],"defaultvalue":100,"name":"gravity","longname":"Phaser.Particles.Arcade.Emitter#gravity","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[4064,4100],"filename":"Emitter.js","lineno":121,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["any"]},"description":"For emitting your own particle class types. They must extend Phaser.Particle.","name":"particleClass"}],"name":"particleClass","longname":"Phaser.Particles.Arcade.Emitter#particleClass","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[4240,4278],"filename":"Emitter.js","lineno":126,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The X and Y drag component of particles launched from the emitter.","name":"particleDrag"}],"name":"particleDrag","longname":"Phaser.Particles.Arcade.Emitter#particleDrag","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[4448,4468],"filename":"Emitter.js","lineno":132,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The angular drag component of particles launched from the emitter if they are rotating.","name":"angularDrag"}],"defaultvalue":0,"name":"angularDrag","longname":"Phaser.Particles.Arcade.Emitter#angularDrag","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[4634,4654],"filename":"Emitter.js","lineno":138,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["number"]},"description":"How often a particle is emitted in ms (if emitter is started with Explode === false).","name":"frequency"}],"defaultvalue":100,"name":"frequency","longname":"Phaser.Particles.Arcade.Emitter#frequency","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[4864,4884],"filename":"Emitter.js","lineno":144,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["number"]},"description":"How long each particle lives once it is emitted in ms. Default is 2 seconds. Set lifespan to 'zero' for particles to live forever.","name":"lifespan"}],"defaultvalue":2000,"name":"lifespan","longname":"Phaser.Particles.Arcade.Emitter#lifespan","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[5034,5066],"filename":"Emitter.js","lineno":149,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"How much each particle should bounce on each axis. 1 = full bounce, 0 = no bounce.","name":"bounce"}],"name":"bounce","longname":"Phaser.Particles.Arcade.Emitter#bounce","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[5248,5263],"filename":"Emitter.js","lineno":155,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["boolean"]},"description":"Determines whether the emitter is currently emitting particles. It is totally safe to directly toggle this.","name":"on"}],"defaultvalue":false,"name":"on","longname":"Phaser.Particles.Arcade.Emitter#on","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[5473,5521],"filename":"Emitter.js","lineno":161,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"When a particle is created its anchor will be set to match this Point object (defaults to x/y: 0.5 to aid in rotation)","name":"particleAnchor"}],"name":"particleAnchor","longname":"Phaser.Particles.Arcade.Emitter#particleAnchor","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[5774,5815],"filename":"Emitter.js","lineno":167,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The blendMode as set on the particle when emitted from the Emitter. Defaults to NORMAL. Needs browser capable of supporting canvas blend-modes (most not available in WebGL)","name":"blendMode"}],"name":"blendMode","longname":"Phaser.Particles.Arcade.Emitter#blendMode","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[6121,6135],"filename":"Emitter.js","lineno":175,"path":"src\\particles\\arcade"},"description":"The point the particles are emitted from.\rEmitter.x and Emitter.y control the containers location, which updates all current particles\rEmitter.emitX and Emitter.emitY control the emission location relative to the x/y position.","properties":[{"type":{"names":["number"]},"name":"emitX"}],"name":"emitX","longname":"Phaser.Particles.Arcade.Emitter#emitX","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[6441,6455],"filename":"Emitter.js","lineno":183,"path":"src\\particles\\arcade"},"description":"The point the particles are emitted from.\rEmitter.x and Emitter.y control the containers location, which updates all current particles\rEmitter.emitX and Emitter.emitY control the emission location relative to the x/y position.","properties":[{"type":{"names":["number"]},"name":"emitY"}],"name":"emitY","longname":"Phaser.Particles.Arcade.Emitter#emitY","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[6640,6662],"filename":"Emitter.js","lineno":188,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["boolean"]},"description":"When a new Particle is emitted this controls if it will automatically scale in size. Use Emitter.setScale to configure.","name":"autoScale"}],"name":"autoScale","longname":"Phaser.Particles.Arcade.Emitter#autoScale","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[6846,6868],"filename":"Emitter.js","lineno":193,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["boolean"]},"description":"When a new Particle is emitted this controls if it will automatically change alpha. Use Emitter.setAlpha to configure.","name":"autoAlpha"}],"name":"autoAlpha","longname":"Phaser.Particles.Arcade.Emitter#autoAlpha","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[7069,7100],"filename":"Emitter.js","lineno":199,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["boolean"]},"description":"If this is `true` then when the Particle is emitted it will be bought to the top of the Emitters display list.","name":"particleBringToTop"}],"defaultvalue":false,"name":"particleBringToTop","longname":"Phaser.Particles.Arcade.Emitter#particleBringToTop","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[7300,7331],"filename":"Emitter.js","lineno":205,"path":"src\\particles\\arcade"},"properties":[{"type":{"names":["boolean"]},"description":"If this is `true` then when the Particle is emitted it will be sent to the back of the Emitters display list.","name":"particleSendToBack"}],"defaultvalue":false,"name":"particleSendToBack","longname":"Phaser.Particles.Arcade.Emitter#particleSendToBack","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","___s":true},{"meta":{"range":[9012,9167],"filename":"Emitter.js","lineno":266,"path":"src\\particles\\arcade"},"description":"Called automatically by the game loop, decides when to launch particles and when to \"die\".","kind":"function","name":"update","memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#update","scope":"instance","overrides":"Phaser.Group#update","___s":true},{"meta":{"range":[10801,11964],"filename":"Emitter.js","lineno":335,"path":"src\\particles\\arcade"},"description":"This function generates a new set of particles for use by this emitter.\rThe particles are stored internally waiting to be emitted via Emitter.start.","kind":"function","name":"makeParticles","params":[{"type":{"names":["array","string"]},"description":"A string or an array of strings that the particle sprites will use as their texture. If an array one is picked at random.","name":"keys"},{"type":{"names":["array","number"]},"optional":true,"defaultvalue":0,"description":"A frame number, or array of frames that the sprite will use. If an array one is picked at random.","name":"frames"},{"type":{"names":["number"]},"optional":true,"description":"The number of particles to generate. If not given it will use the value of Emitter.maxParticles. If the value is greater than Emitter.maxParticles it will use Emitter.maxParticles as the quantity.","name":"quantity"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If you want the particles to be able to collide with other Arcade Physics bodies then set this to true.","name":"collide"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"A particle can be set to collide against the World bounds automatically and rebound back into the World if this is set to true. Otherwise it will leave the World.","name":"collideWorldBounds"}],"returns":[{"type":{"names":["Phaser.Particles.Arcade.Emitter"]},"description":"This Emitter instance."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#makeParticles","scope":"instance","___s":true},{"meta":{"range":[13504,13699],"filename":"Emitter.js","lineno":407,"path":"src\\particles\\arcade"},"description":"Call this function to turn off all the particles and the emitter.","kind":"function","name":"kill","returns":[{"type":{"names":["Phaser.Particles.Arcade.Emitter"]},"description":"This Emitter instance."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#kill","scope":"instance","___s":true},{"meta":{"range":[13868,14088],"filename":"Emitter.js","lineno":423,"path":"src\\particles\\arcade"},"description":"Handy for bringing game objects \"back to life\". Just sets alive and exists back to true.","kind":"function","name":"revive","returns":[{"type":{"names":["Phaser.Particles.Arcade.Emitter"]},"description":"This Emitter instance."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#revive","scope":"instance","___s":true},{"meta":{"range":[14235,14614],"filename":"Emitter.js","lineno":438,"path":"src\\particles\\arcade"},"description":"Call this function to emit the given quantity of particles at all once (an explosion)","kind":"function","name":"explode","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"How long each particle lives once emitted in ms. 0 = forever.","name":"lifespan"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"How many particles to launch.","name":"quantity"}],"returns":[{"type":{"names":["Phaser.Particles.Arcade.Emitter"]},"description":"This Emitter instance."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#explode","scope":"instance","___s":true},{"meta":{"range":[14812,15931],"filename":"Emitter.js","lineno":456,"path":"src\\particles\\arcade"},"description":"Call this function to start emitting a flow of particles at the given frequency.\rIt will carry on going until the total given is reached.\rEach time the flow is run the quantity number of particles will be emitted together.\rIf you set the total to be 20 and quantity to be 5 then flow will emit 4 times in total (4 x 5 = 20 total)\rIf you set the total to be -1 then no quantity cap is used and it will keep emitting.","kind":"function","name":"flow","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"How long each particle lives once emitted in ms. 0 = forever.","name":"lifespan"},{"type":{"names":["number"]},"optional":true,"defaultvalue":250,"description":"Frequency is how often to emit the particles, given in ms.","name":"frequency"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"How many particles to launch each time the frequency is met. Can never be > Emitter.maxParticles.","name":"quantity"},{"type":{"names":["number"]},"optional":true,"defaultvalue":-1,"description":"How many particles to launch in total. If -1 it will carry on indefinitely.","name":"total"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should the flow start immediately (true) or wait until the first frequency event? (false)","name":"immediate"}],"returns":[{"type":{"names":["Phaser.Particles.Arcade.Emitter"]},"description":"This Emitter instance."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#flow","scope":"instance","___s":true},{"meta":{"range":[16755,17651],"filename":"Emitter.js","lineno":503,"path":"src\\particles\\arcade"},"description":"Call this function to start emitting particles.","kind":"function","name":"start","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Whether the particles should all burst out at once (true) or at the frequency given (false).","name":"explode"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"How long each particle lives once emitted in ms. 0 = forever.","name":"lifespan"},{"type":{"names":["number"]},"optional":true,"defaultvalue":250,"description":"Ignored if Explode is set to true. Frequency is how often to emit 1 particle. Value given in ms.","name":"frequency"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"How many particles to launch. 0 = \"all of the particles\" which will keep emitting until Emitter.maxParticles is reached.","name":"quantity"},{"type":{"names":["number"]},"optional":true,"defaultvalue":false,"description":"If `true` and creating a particle flow, the quantity emitted will be forced to the be quantity given in this call. This can never exceed Emitter.maxParticles.","name":"forceQuantity"}],"returns":[{"type":{"names":["Phaser.Particles.Arcade.Emitter"]},"description":"This Emitter instance."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#start","scope":"instance","___s":true},{"meta":{"range":[18655,19940],"filename":"Emitter.js","lineno":553,"path":"src\\particles\\arcade"},"description":"This function is used internally to emit the next particle in the queue.\r\rHowever it can also be called externally to emit a particle.\r\rWhen called externally you can use the arguments to override any defaults the Emitter has set.","kind":"function","name":"emitParticle","params":[{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to emit the particle from. If `null` or `undefined` it will use `Emitter.emitX` or if the Emitter has a width > 1 a random value between `Emitter.left` and `Emitter.right`.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to emit the particle from. If `null` or `undefined` it will use `Emitter.emitY` or if the Emitter has a height > 1 a random value between `Emitter.top` and `Emitter.bottom`.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Particle during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Particle is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["boolean"]},"description":"True if a particle was emitted, otherwise false."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#emitParticle","scope":"instance","___s":true},{"meta":{"range":[22714,22884],"filename":"Emitter.js","lineno":681,"path":"src\\particles\\arcade"},"description":"Destroys this Emitter, all associated child Particles and then removes itself from the Particle Manager.","kind":"function","name":"destroy","memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#destroy","scope":"instance","overrides":"Phaser.Group#destroy","___s":true},{"meta":{"range":[23065,23446],"filename":"Emitter.js","lineno":694,"path":"src\\particles\\arcade"},"description":"A more compact way of setting the width and height of the emitter.","kind":"function","name":"setSize","params":[{"type":{"names":["number"]},"description":"The desired width of the emitter (particles are spawned randomly within these dimensions).","name":"width"},{"type":{"names":["number"]},"description":"The desired height of the emitter.","name":"height"}],"returns":[{"type":{"names":["Phaser.Particles.Arcade.Emitter"]},"description":"This Emitter instance."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#setSize","scope":"instance","___s":true},{"meta":{"range":[23620,23944],"filename":"Emitter.js","lineno":711,"path":"src\\particles\\arcade"},"description":"A more compact way of setting the X velocity range of the emitter.","kind":"function","name":"setXSpeed","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The minimum value for this range.","name":"min"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The maximum value for this range.","name":"max"}],"returns":[{"type":{"names":["Phaser.Particles.Arcade.Emitter"]},"description":"This Emitter instance."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#setXSpeed","scope":"instance","___s":true},{"meta":{"range":[24169,24493],"filename":"Emitter.js","lineno":730,"path":"src\\particles\\arcade"},"description":"A more compact way of setting the Y velocity range of the emitter.","kind":"function","name":"setYSpeed","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The minimum value for this range.","name":"min"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The maximum value for this range.","name":"max"}],"returns":[{"type":{"names":["Phaser.Particles.Arcade.Emitter"]},"description":"This Emitter instance."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#setYSpeed","scope":"instance","___s":true},{"meta":{"range":[24718,25061],"filename":"Emitter.js","lineno":749,"path":"src\\particles\\arcade"},"description":"A more compact way of setting the angular velocity constraints of the particles.","kind":"function","name":"setRotation","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The minimum value for this range.","name":"min"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The maximum value for this range.","name":"max"}],"returns":[{"type":{"names":["Phaser.Particles.Arcade.Emitter"]},"description":"This Emitter instance."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#setRotation","scope":"instance","___s":true},{"meta":{"range":[25274,26327],"filename":"Emitter.js","lineno":769,"path":"src\\particles\\arcade"},"description":"A more compact way of setting the alpha constraints of the particles.\rThe rate parameter, if set to a value above zero, lets you set the speed at which the Particle change in alpha from min to max.\rIf rate is zero, which is the default, the particle won't change alpha - instead it will pick a random alpha between min and max on emit.","kind":"function","name":"setAlpha","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The minimum value for this range.","name":"min"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The maximum value for this range.","name":"max"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The rate (in ms) at which the particles will change in alpha from min to max, or set to zero to pick a random alpha between the two.","name":"rate"},{"type":{"names":["function"]},"optional":true,"defaultvalue":"Phaser.Easing.Linear.None","description":"If you've set a rate > 0 this is the easing formula applied between the min and max values.","name":"ease"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If you've set a rate > 0 you can set if the ease will yoyo or not (i.e. ease back to its original values)","name":"yoyo"}],"returns":[{"type":{"names":["Phaser.Particles.Arcade.Emitter"]},"description":"This Emitter instance."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#setAlpha","scope":"instance","___s":true},{"meta":{"range":[27202,28448],"filename":"Emitter.js","lineno":811,"path":"src\\particles\\arcade"},"description":"A more compact way of setting the scale constraints of the particles.\rThe rate parameter, if set to a value above zero, lets you set the speed and ease which the Particle uses to change in scale from min to max across both axis.\rIf rate is zero, which is the default, the particle won't change scale during update, instead it will pick a random scale between min and max on emit.","kind":"function","name":"setScale","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The minimum value of Particle.scale.x.","name":"minX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The maximum value of Particle.scale.x.","name":"maxX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The minimum value of Particle.scale.y.","name":"minY"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The maximum value of Particle.scale.y.","name":"maxY"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The rate (in ms) at which the particles will change in scale from min to max, or set to zero to pick a random size between the two.","name":"rate"},{"type":{"names":["function"]},"optional":true,"defaultvalue":"Phaser.Easing.Linear.None","description":"If you've set a rate > 0 this is the easing formula applied between the min and max values.","name":"ease"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If you've set a rate > 0 you can set if the ease will yoyo or not (i.e. ease back to its original values)","name":"yoyo"}],"returns":[{"type":{"names":["Phaser.Particles.Arcade.Emitter"]},"description":"This Emitter instance."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#setScale","scope":"instance","___s":true},{"meta":{"range":[29583,30064],"filename":"Emitter.js","lineno":862,"path":"src\\particles\\arcade"},"description":"Change the emitters center to match the center of any object with a `center` property, such as a Sprite.\rIf the object doesn't have a center property it will be set to object.x + object.width / 2","kind":"function","name":"at","params":[{"type":{"names":["object","Phaser.Sprite","Phaser.Image","Phaser.TileSprite","Phaser.Text","PIXI.DisplayObject"]},"description":"The object that you wish to match the center with.","name":"object"}],"returns":[{"type":{"names":["Phaser.Particles.Arcade.Emitter"]},"description":"This Emitter instance."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#at","scope":"instance","___s":true},{"meta":{"range":[30451,30629],"filename":"Emitter.js","lineno":887,"path":"src\\particles\\arcade"},"name":"width","properties":[{"type":{"names":["number"]},"description":"Gets or sets the width of the Emitter. This is the region in which a particle can be emitted.","name":"width"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#width","scope":"instance","kind":"member","___s":true},{"meta":{"range":[30856,31037],"filename":"Emitter.js","lineno":903,"path":"src\\particles\\arcade"},"name":"height","properties":[{"type":{"names":["number"]},"description":"Gets or sets the height of the Emitter. This is the region in which a particle can be emitted.","name":"height"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#height","scope":"instance","kind":"member","___s":true},{"meta":{"range":[31267,31387],"filename":"Emitter.js","lineno":919,"path":"src\\particles\\arcade"},"name":"x","properties":[{"type":{"names":["number"]},"description":"Gets or sets the x position of the Emitter.","name":"x"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#x","scope":"instance","kind":"member","overrides":"Phaser.Group#x","___s":true},{"meta":{"range":[31600,31720],"filename":"Emitter.js","lineno":935,"path":"src\\particles\\arcade"},"name":"y","properties":[{"type":{"names":["number"]},"description":"Gets or sets the y position of the Emitter.","name":"y"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#y","scope":"instance","kind":"member","overrides":"Phaser.Group#y","___s":true},{"meta":{"range":[31933,32067],"filename":"Emitter.js","lineno":951,"path":"src\\particles\\arcade"},"name":"left","properties":[{"type":{"names":["number"]},"description":"Gets the left position of the Emitter.","name":"left"}],"readonly":true,"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#left","scope":"instance","kind":"member","overrides":"Phaser.Group#left","___s":true},{"meta":{"range":[32247,32384],"filename":"Emitter.js","lineno":964,"path":"src\\particles\\arcade"},"name":"right","properties":[{"type":{"names":["number"]},"description":"Gets the right position of the Emitter.","name":"right"}],"readonly":true,"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#right","scope":"instance","kind":"member","overrides":"Phaser.Group#right","___s":true},{"meta":{"range":[32565,32696],"filename":"Emitter.js","lineno":977,"path":"src\\particles\\arcade"},"name":"top","properties":[{"type":{"names":["number"]},"description":"Gets the top position of the Emitter.","name":"top"}],"readonly":true,"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#top","scope":"instance","kind":"member","overrides":"Phaser.Group#top","___s":true},{"meta":{"range":[32876,33016],"filename":"Emitter.js","lineno":990,"path":"src\\particles\\arcade"},"name":"bottom","properties":[{"type":{"names":["number"]},"description":"Gets the bottom position of the Emitter.","name":"bottom"}],"readonly":true,"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#bottom","scope":"instance","kind":"member","overrides":"Phaser.Group#bottom","___s":true},{"meta":{"range":[481,835],"filename":"Particles.js","lineno":14,"path":"src\\particles"},"description":"Phaser.Particles is the Particle Manager for the game. It is called during the game update loop and in turn updates any Emitters attached to it.","kind":"class","classdesc":"Phaser.Particles","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"Particles","longname":"Phaser.Particles","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[623,639],"filename":"Particles.js","lineno":19,"path":"src\\particles"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running Game.","name":"game"}],"name":"game","longname":"Phaser.Particles#game","kind":"member","memberof":"Phaser.Particles","scope":"instance","___s":true},{"meta":{"range":[727,745],"filename":"Particles.js","lineno":24,"path":"src\\particles"},"properties":[{"type":{"names":["object"]},"description":"Internal emitters store.","name":"emitters"}],"name":"emitters","longname":"Phaser.Particles#emitters","kind":"member","memberof":"Phaser.Particles","scope":"instance","___s":true},{"meta":{"range":[818,829],"filename":"Particles.js","lineno":30,"path":"src\\particles"},"properties":[{"type":{"names":["number"]},"description":"-","name":"ID"}],"defaultvalue":0,"name":"ID","longname":"Phaser.Particles#ID","kind":"member","memberof":"Phaser.Particles","scope":"instance","___s":true},{"meta":{"range":[878,1135],"filename":"Particles.js","lineno":36,"path":"src\\particles"},"description":"Adds a new Particle Emitter to the Particle Manager.","kind":"function","name":"add","params":[{"type":{"names":["Phaser.Emitter"]},"description":"The emitter to be added to the particle manager.","name":"emitter"}],"returns":[{"type":{"names":["Phaser.Emitter"]},"description":"The emitter that was added."}],"memberof":"Phaser.Particles","longname":"Phaser.Particles#add","scope":"instance","___s":true},{"meta":{"range":[1261,1446],"filename":"Particles.js","lineno":50,"path":"src\\particles"},"description":"Removes an existing Particle Emitter from the Particle Manager.","kind":"function","name":"remove","params":[{"type":{"names":["Phaser.Emitter"]},"description":"The emitter to remove.","name":"emitter"}],"memberof":"Phaser.Particles","longname":"Phaser.Particles#remove","scope":"instance","___s":true},{"meta":{"range":[1545,1712],"filename":"Particles.js","lineno":61,"path":"src\\particles"},"description":"Called by the core game loop. Updates all Emitters who have their exists value set to true.","kind":"function","name":"update","access":"protected","memberof":"Phaser.Particles","longname":"Phaser.Particles#update","scope":"instance","___s":true},{"meta":{"range":[204,232],"filename":"Phaser.js","lineno":7,"path":"src"},"kind":"namespace","name":"Phaser","longname":"Phaser","scope":"global","___s":true},{"meta":{"range":[381,397],"filename":"Phaser.js","lineno":17,"path":"src"},"description":"The Phaser version number.","kind":"constant","type":{"names":["string"]},"name":"VERSION","longname":"VERSION","scope":"global","___s":true},{"meta":{"range":[503,512],"filename":"Phaser.js","lineno":24,"path":"src"},"description":"An array of Phaser game instances.","kind":"constant","type":{"names":["array"]},"name":"GAMES","longname":"GAMES","scope":"global","___s":true},{"meta":{"range":[648,655],"filename":"Phaser.js","lineno":31,"path":"src"},"description":"AUTO renderer - picks between WebGL or Canvas based on device.","kind":"constant","type":{"names":["integer"]},"name":"AUTO","longname":"AUTO","scope":"global","___s":true},{"meta":{"range":[745,754],"filename":"Phaser.js","lineno":38,"path":"src"},"description":"Canvas Renderer.","kind":"constant","type":{"names":["integer"]},"name":"CANVAS","longname":"CANVAS","scope":"global","___s":true},{"meta":{"range":[843,851],"filename":"Phaser.js","lineno":45,"path":"src"},"description":"WebGL Renderer.","kind":"constant","type":{"names":["integer"]},"name":"WEBGL","longname":"WEBGL","scope":"global","___s":true},{"meta":{"range":[962,973],"filename":"Phaser.js","lineno":52,"path":"src"},"description":"Headless renderer (not visual output)","kind":"constant","type":{"names":["integer"]},"name":"HEADLESS","longname":"HEADLESS","scope":"global","___s":true},{"meta":{"range":[1066,1073],"filename":"Phaser.js","lineno":59,"path":"src"},"description":"Direction constant.","kind":"constant","type":{"names":["integer"]},"name":"NONE","longname":"NONE","scope":"global","___s":true},{"meta":{"range":[1166,1173],"filename":"Phaser.js","lineno":66,"path":"src"},"description":"Direction constant.","kind":"constant","type":{"names":["integer"]},"name":"LEFT","longname":"LEFT","scope":"global","___s":true},{"meta":{"range":[1266,1274],"filename":"Phaser.js","lineno":73,"path":"src"},"description":"Direction constant.","kind":"constant","type":{"names":["integer"]},"name":"RIGHT","longname":"RIGHT","scope":"global","___s":true},{"meta":{"range":[1367,1372],"filename":"Phaser.js","lineno":80,"path":"src"},"description":"Direction constant.","kind":"constant","type":{"names":["integer"]},"name":"UP","longname":"UP","scope":"global","___s":true},{"meta":{"range":[1465,1472],"filename":"Phaser.js","lineno":87,"path":"src"},"description":"Direction constant.","kind":"constant","type":{"names":["integer"]},"name":"DOWN","longname":"DOWN","scope":"global","___s":true},{"meta":{"range":[1563,1572],"filename":"Phaser.js","lineno":94,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"SPRITE","longname":"SPRITE","scope":"global","___s":true},{"meta":{"range":[1663,1672],"filename":"Phaser.js","lineno":101,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"BUTTON","longname":"BUTTON","scope":"global","___s":true},{"meta":{"range":[1763,1771],"filename":"Phaser.js","lineno":108,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"IMAGE","longname":"IMAGE","scope":"global","___s":true},{"meta":{"range":[1862,1873],"filename":"Phaser.js","lineno":115,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"GRAPHICS","longname":"GRAPHICS","scope":"global","___s":true},{"meta":{"range":[1964,1971],"filename":"Phaser.js","lineno":122,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"TEXT","longname":"TEXT","scope":"global","___s":true},{"meta":{"range":[2062,2075],"filename":"Phaser.js","lineno":129,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"TILESPRITE","longname":"TILESPRITE","scope":"global","___s":true},{"meta":{"range":[2166,2179],"filename":"Phaser.js","lineno":136,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"BITMAPTEXT","longname":"BITMAPTEXT","scope":"global","___s":true},{"meta":{"range":[2270,2278],"filename":"Phaser.js","lineno":143,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"GROUP","longname":"GROUP","scope":"global","___s":true},{"meta":{"range":[2369,2385],"filename":"Phaser.js","lineno":150,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"RENDERTEXTURE","longname":"RENDERTEXTURE","scope":"global","___s":true},{"meta":{"range":[2476,2486],"filename":"Phaser.js","lineno":157,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"TILEMAP","longname":"TILEMAP","scope":"global","___s":true},{"meta":{"range":[2577,2593],"filename":"Phaser.js","lineno":164,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"TILEMAPLAYER","longname":"TILEMAPLAYER","scope":"global","___s":true},{"meta":{"range":[2684,2695],"filename":"Phaser.js","lineno":171,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"EMITTER","longname":"EMITTER","scope":"global","___s":true},{"meta":{"range":[2786,2797],"filename":"Phaser.js","lineno":178,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"POLYGON","longname":"POLYGON","scope":"global","___s":true},{"meta":{"range":[2888,2902],"filename":"Phaser.js","lineno":185,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"BITMAPDATA","longname":"BITMAPDATA","scope":"global","___s":true},{"meta":{"range":[2993,3010],"filename":"Phaser.js","lineno":192,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"CANVAS_FILTER","longname":"CANVAS_FILTER","scope":"global","___s":true},{"meta":{"range":[3101,3117],"filename":"Phaser.js","lineno":199,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"WEBGL_FILTER","longname":"WEBGL_FILTER","scope":"global","___s":true},{"meta":{"range":[3208,3219],"filename":"Phaser.js","lineno":206,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"ELLIPSE","longname":"ELLIPSE","scope":"global","___s":true},{"meta":{"range":[3310,3325],"filename":"Phaser.js","lineno":213,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"SPRITEBATCH","longname":"SPRITEBATCH","scope":"global","___s":true},{"meta":{"range":[3416,3429],"filename":"Phaser.js","lineno":220,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"RETROFONT","longname":"RETROFONT","scope":"global","___s":true},{"meta":{"range":[3520,3531],"filename":"Phaser.js","lineno":227,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"POINTER","longname":"POINTER","scope":"global","___s":true},{"meta":{"range":[3622,3630],"filename":"Phaser.js","lineno":234,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"ROPE","longname":"ROPE","scope":"global","___s":true},{"meta":{"range":[3721,3731],"filename":"Phaser.js","lineno":241,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"CIRCLE","longname":"CIRCLE","scope":"global","___s":true},{"meta":{"range":[3822,3835],"filename":"Phaser.js","lineno":248,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"RECTANGLE","longname":"RECTANGLE","scope":"global","___s":true},{"meta":{"range":[3926,3934],"filename":"Phaser.js","lineno":255,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"LINE","longname":"LINE","scope":"global","___s":true},{"meta":{"range":[4025,4035],"filename":"Phaser.js","lineno":262,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"MATRIX","longname":"MATRIX","scope":"global","___s":true},{"meta":{"range":[4126,4135],"filename":"Phaser.js","lineno":269,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"POINT","longname":"POINT","scope":"global","___s":true},{"meta":{"range":[4226,4246],"filename":"Phaser.js","lineno":276,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"ROUNDEDRECTANGLE","longname":"ROUNDEDRECTANGLE","scope":"global","___s":true},{"meta":{"range":[4337,4349],"filename":"Phaser.js","lineno":283,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"CREATURE","longname":"CREATURE","scope":"global","___s":true},{"meta":{"range":[4440,4449],"filename":"Phaser.js","lineno":290,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"VIDEO","longname":"VIDEO","scope":"global","___s":true},{"meta":{"range":[4540,4557],"filename":"Phaser.js","lineno":297,"path":"src"},"description":"Game Object type.","kind":"constant","type":{"names":["integer"]},"name":"PENDING_ATLAS","longname":"PENDING_ATLAS","scope":"global","___s":true},{"meta":{"range":[4655,4668],"filename":"Phaser.js","lineno":304,"path":"src"},"description":"A horizontal orientation","kind":"constant","type":{"names":["integer"]},"name":"HORIZONTAL","longname":"HORIZONTAL","scope":"global","___s":true},{"meta":{"range":[4764,4775],"filename":"Phaser.js","lineno":311,"path":"src"},"description":"A vertical orientation","kind":"constant","type":{"names":["integer"]},"name":"VERTICAL","longname":"VERTICAL","scope":"global","___s":true},{"meta":{"range":[4872,4884],"filename":"Phaser.js","lineno":318,"path":"src"},"description":"A landscape orientation","kind":"constant","type":{"names":["integer"]},"name":"LANDSCAPE","longname":"LANDSCAPE","scope":"global","___s":true},{"meta":{"range":[4980,4991],"filename":"Phaser.js","lineno":325,"path":"src"},"description":"A portrait orientation","kind":"constant","type":{"names":["integer"]},"name":"PORTRAIT","longname":"PORTRAIT","scope":"global","___s":true},{"meta":{"range":[5141,5154],"filename":"Phaser.js","lineno":332,"path":"src"},"description":"The Angle (in degrees) a Game Object needs to be set to in order to face up.","kind":"constant","type":{"names":["integer"]},"name":"ANGLE_UP","longname":"ANGLE_UP","scope":"global","___s":true},{"meta":{"range":[5306,5320],"filename":"Phaser.js","lineno":339,"path":"src"},"description":"The Angle (in degrees) a Game Object needs to be set to in order to face down.","kind":"constant","type":{"names":["integer"]},"name":"ANGLE_DOWN","longname":"ANGLE_DOWN","scope":"global","___s":true},{"meta":{"range":[5472,5487],"filename":"Phaser.js","lineno":346,"path":"src"},"description":"The Angle (in degrees) a Game Object needs to be set to in order to face left.","kind":"constant","type":{"names":["integer"]},"name":"ANGLE_LEFT","longname":"ANGLE_LEFT","scope":"global","___s":true},{"meta":{"range":[5640,5654],"filename":"Phaser.js","lineno":353,"path":"src"},"description":"The Angle (in degrees) a Game Object needs to be set to in order to face right.","kind":"constant","type":{"names":["integer"]},"name":"ANGLE_RIGHT","longname":"ANGLE_RIGHT","scope":"global","___s":true},{"meta":{"range":[5812,5833],"filename":"Phaser.js","lineno":360,"path":"src"},"description":"The Angle (in degrees) a Game Object needs to be set to in order to face north east.","kind":"constant","type":{"names":["integer"]},"name":"ANGLE_NORTH_EAST","longname":"ANGLE_NORTH_EAST","scope":"global","___s":true},{"meta":{"range":[5991,6012],"filename":"Phaser.js","lineno":367,"path":"src"},"description":"The Angle (in degrees) a Game Object needs to be set to in order to face north west.","kind":"constant","type":{"names":["integer"]},"name":"ANGLE_NORTH_WEST","longname":"ANGLE_NORTH_WEST","scope":"global","___s":true},{"meta":{"range":[6170,6190],"filename":"Phaser.js","lineno":374,"path":"src"},"description":"The Angle (in degrees) a Game Object needs to be set to in order to face south east.","kind":"constant","type":{"names":["integer"]},"name":"ANGLE_SOUTH_EAST","longname":"ANGLE_SOUTH_EAST","scope":"global","___s":true},{"meta":{"range":[6348,6369],"filename":"Phaser.js","lineno":381,"path":"src"},"description":"The Angle (in degrees) a Game Object needs to be set to in order to face south west.","kind":"constant","type":{"names":["integer"]},"name":"ANGLE_SOUTH_WEST","longname":"ANGLE_SOUTH_WEST","scope":"global","___s":true},{"meta":{"range":[6500,6511],"filename":"Phaser.js","lineno":388,"path":"src"},"description":"A constant representing a top-left alignment or position.","kind":"constant","type":{"names":["integer"]},"name":"TOP_LEFT","longname":"TOP_LEFT","scope":"global","___s":true},{"meta":{"range":[6644,6657],"filename":"Phaser.js","lineno":395,"path":"src"},"description":"A constant representing a top-center alignment or position.","kind":"constant","type":{"names":["integer"]},"name":"TOP_CENTER","longname":"TOP_CENTER","scope":"global","___s":true},{"meta":{"range":[6789,6801],"filename":"Phaser.js","lineno":402,"path":"src"},"description":"A constant representing a top-right alignment or position.","kind":"constant","type":{"names":["integer"]},"name":"TOP_RIGHT","longname":"TOP_RIGHT","scope":"global","___s":true},{"meta":{"range":[6932,6943],"filename":"Phaser.js","lineno":409,"path":"src"},"description":"A constant representing a left-top alignment or position.","kind":"constant","type":{"names":["integer"]},"name":"LEFT_TOP","longname":"LEFT_TOP","scope":"global","___s":true},{"meta":{"range":[7077,7091],"filename":"Phaser.js","lineno":416,"path":"src"},"description":"A constant representing a left-center alignment or position.","kind":"constant","type":{"names":["integer"]},"name":"LEFT_CENTER","longname":"LEFT_CENTER","scope":"global","___s":true},{"meta":{"range":[7225,7239],"filename":"Phaser.js","lineno":423,"path":"src"},"description":"A constant representing a left-bottom alignment or position.","kind":"constant","type":{"names":["integer"]},"name":"LEFT_BOTTOM","longname":"LEFT_BOTTOM","scope":"global","___s":true},{"meta":{"range":[7368,7377],"filename":"Phaser.js","lineno":430,"path":"src"},"description":"A constant representing a center alignment or position.","kind":"constant","type":{"names":["integer"]},"name":"CENTER","longname":"CENTER","scope":"global","___s":true},{"meta":{"range":[7509,7521],"filename":"Phaser.js","lineno":437,"path":"src"},"description":"A constant representing a right-top alignment or position.","kind":"constant","type":{"names":["integer"]},"name":"RIGHT_TOP","longname":"RIGHT_TOP","scope":"global","___s":true},{"meta":{"range":[7656,7671],"filename":"Phaser.js","lineno":444,"path":"src"},"description":"A constant representing a right-center alignment or position.","kind":"constant","type":{"names":["integer"]},"name":"RIGHT_CENTER","longname":"RIGHT_CENTER","scope":"global","___s":true},{"meta":{"range":[7806,7821],"filename":"Phaser.js","lineno":451,"path":"src"},"description":"A constant representing a right-bottom alignment or position.","kind":"constant","type":{"names":["integer"]},"name":"RIGHT_BOTTOM","longname":"RIGHT_BOTTOM","scope":"global","___s":true},{"meta":{"range":[7955,7970],"filename":"Phaser.js","lineno":458,"path":"src"},"description":"A constant representing a bottom-left alignment or position.","kind":"constant","type":{"names":["integer"]},"name":"BOTTOM_LEFT","longname":"BOTTOM_LEFT","scope":"global","___s":true},{"meta":{"range":[8106,8123],"filename":"Phaser.js","lineno":465,"path":"src"},"description":"A constant representing a bottom-center alignment or position.","kind":"constant","type":{"names":["integer"]},"name":"BOTTOM_CENTER","longname":"BOTTOM_CENTER","scope":"global","___s":true},{"meta":{"range":[8258,8274],"filename":"Phaser.js","lineno":472,"path":"src"},"description":"A constant representing a bottom-right alignment or position.","kind":"constant","type":{"names":["integer"]},"name":"BOTTOM_RIGHT","longname":"BOTTOM_RIGHT","scope":"global","___s":true},{"meta":{"range":[9296,9674],"filename":"Phaser.js","lineno":499,"path":"src"},"description":"Various blend modes supported by Pixi.\r\rIMPORTANT: The WebGL renderer only supports the NORMAL, ADD, MULTIPLY and SCREEN blend modes.","kind":"constant","properties":[{"type":{"names":["Number"]},"name":"blendModes.NORMAL"},{"type":{"names":["Number"]},"name":"blendModes.ADD"},{"type":{"names":["Number"]},"name":"blendModes.MULTIPLY"},{"type":{"names":["Number"]},"name":"blendModes.SCREEN"},{"type":{"names":["Number"]},"name":"blendModes.OVERLAY"},{"type":{"names":["Number"]},"name":"blendModes.DARKEN"},{"type":{"names":["Number"]},"name":"blendModes.LIGHTEN"},{"type":{"names":["Number"]},"name":"blendModes.COLOR_DODGE"},{"type":{"names":["Number"]},"name":"blendModes.COLOR_BURN"},{"type":{"names":["Number"]},"name":"blendModes.HARD_LIGHT"},{"type":{"names":["Number"]},"name":"blendModes.SOFT_LIGHT"},{"type":{"names":["Number"]},"name":"blendModes.DIFFERENCE"},{"type":{"names":["Number"]},"name":"blendModes.EXCLUSION"},{"type":{"names":["Number"]},"name":"blendModes.HUE"},{"type":{"names":["Number"]},"name":"blendModes.SATURATION"},{"type":{"names":["Number"]},"name":"blendModes.COLOR"},{"type":{"names":["Number"]},"name":"blendModes.LUMINOSITY"}],"scope":"global","name":"blendModes","longname":"blendModes","___s":true},{"meta":{"range":[10199,10277],"filename":"Phaser.js","lineno":532,"path":"src"},"description":"The scale modes that are supported by Pixi.\r\rThe DEFAULT scale mode affects the default scaling mode of future operations.\rIt can be re-assigned to either LINEAR or NEAREST, depending upon suitability.","kind":"constant","properties":[{"type":{"names":["Object"]},"name":"Phaser.scaleModes"},{"type":{"names":["Number"]},"defaultvalue":"LINEAR","name":"scaleModes.DEFAULT"},{"type":{"names":["Number"]},"description":"Smooth scaling","name":"scaleModes.LINEAR"},{"type":{"names":["Number"]},"description":"Pixelating scaling","name":"scaleModes.NEAREST"}],"scope":"global","name":"scaleModes","longname":"scaleModes","___s":true},{"meta":{"range":[583,18897],"filename":"Body.js","lineno":15,"path":"src\\physics\\arcade"},"description":"The Physics Body is linked to a single Sprite. All physics operations should be performed against the body rather than\rthe Sprite itself. For example you can set the velocity, acceleration, bounce values etc all on the Body.","kind":"class","classdesc":"Phaser.Physics.Arcade.Body","params":[{"type":{"names":["Phaser.Sprite"]},"description":"The Sprite object this physics body belongs to.","name":"sprite"}],"name":"Body","longname":"Phaser.Physics.Arcade.Body","memberof":"Phaser.Physics.Arcade","scope":"static","___s":true},{"meta":{"range":[730,750],"filename":"Body.js","lineno":20,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.Sprite"]},"description":"Reference to the parent Sprite.","name":"sprite"}],"name":"sprite","longname":"Phaser.Physics.Arcade.Body#sprite","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[839,862],"filename":"Body.js","lineno":25,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.Physics.Arcade.Body#game","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[970,1003],"filename":"Body.js","lineno":30,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The type of physics system this body belongs to.","name":"type"}],"name":"type","longname":"Phaser.Physics.Arcade.Body#type","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[1185,1203],"filename":"Body.js","lineno":36,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["boolean"]},"description":"A disabled body won't be checked for any form of collision or overlap or have its pre/post updates run.","name":"enable"}],"defaultvalue":true,"name":"enable","longname":"Phaser.Physics.Arcade.Body#enable","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[1475,1496],"filename":"Body.js","lineno":45,"path":"src\\physics\\arcade"},"description":"If `true` this Body is using circular collision detection. If `false` it is using rectangular.\rUse `Body.setCircle` to control the collision shape this Body uses.","properties":[{"type":{"names":["boolean"]},"name":"isCircle"}],"defaultvalue":false,"readonly":true,"name":"isCircle","longname":"Phaser.Physics.Arcade.Body#isCircle","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[1892,1907],"filename":"Body.js","lineno":55,"path":"src\\physics\\arcade"},"description":"The radius of the circular collision shape this Body is using if Body.setCircle has been enabled.\rIf you wish to change the radius then call `setCircle` again with the new value.\rIf you wish to stop the Body using a circle then call `setCircle` with a radius of zero (or undefined).","properties":[{"type":{"names":["number"]},"name":"radius"}],"defaultvalue":0,"readonly":true,"name":"radius","longname":"Phaser.Physics.Arcade.Body#radius","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[2035,2067],"filename":"Body.js","lineno":60,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The offset of the Physics Body from the Sprite x/y position.","name":"offset"}],"name":"offset","longname":"Phaser.Physics.Arcade.Body#offset","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[2187,2239],"filename":"Body.js","lineno":66,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The position of the physics body.","name":"position"}],"readonly":true,"name":"position","longname":"Phaser.Physics.Arcade.Body#position","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[2364,2426],"filename":"Body.js","lineno":72,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The previous position of the physics body.","name":"prev"}],"readonly":true,"name":"prev","longname":"Phaser.Physics.Arcade.Body#prev","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[2569,2594],"filename":"Body.js","lineno":78,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["boolean"]},"description":"Allow this Body to be rotated? (via angularVelocity, etc)","name":"allowRotation"}],"defaultvalue":true,"name":"allowRotation","longname":"Phaser.Physics.Arcade.Body#allowRotation","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[2936,2964],"filename":"Body.js","lineno":85,"path":"src\\physics\\arcade"},"description":"The Body's rotation in degrees, as calculated by its angularVelocity and angularAcceleration. Please understand that the collision Body\ritself never rotates, it is always axis-aligned. However these values are passed up to the parent Sprite and updates its rotation.","properties":[{"type":{"names":["number"]},"name":"rotation"}],"name":"rotation","longname":"Phaser.Physics.Arcade.Body#rotation","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[3090,3121],"filename":"Body.js","lineno":91,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The previous rotation of the physics body.","name":"preRotation"}],"readonly":true,"name":"preRotation","longname":"Phaser.Physics.Arcade.Body#preRotation","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[3240,3265],"filename":"Body.js","lineno":97,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The calculated width of the physics body.","name":"width"}],"readonly":true,"name":"width","longname":"Phaser.Physics.Arcade.Body#width","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[3386,3413],"filename":"Body.js","lineno":103,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The calculated height of the physics body.","name":"height"}],"readonly":true,"name":"height","longname":"Phaser.Physics.Arcade.Body#height","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[3525,3556],"filename":"Body.js","lineno":109,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The un-scaled original size.","name":"sourceWidth"}],"readonly":true,"name":"sourceWidth","longname":"Phaser.Physics.Arcade.Body#sourceWidth","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[3669,3702],"filename":"Body.js","lineno":115,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The un-scaled original size.","name":"sourceHeight"}],"readonly":true,"name":"sourceHeight","longname":"Phaser.Physics.Arcade.Body#sourceHeight","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[3984,4027],"filename":"Body.js","lineno":127,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The calculated width / 2 of the physics body.","name":"halfWidth"}],"readonly":true,"name":"halfWidth","longname":"Phaser.Physics.Arcade.Body#halfWidth","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[4156,4201],"filename":"Body.js","lineno":133,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The calculated height / 2 of the physics body.","name":"halfHeight"}],"readonly":true,"name":"halfHeight","longname":"Phaser.Physics.Arcade.Body#halfHeight","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[4328,4413],"filename":"Body.js","lineno":139,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The center coordinate of the Physics Body.","name":"center"}],"readonly":true,"name":"center","longname":"Phaser.Physics.Arcade.Body#center","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[4567,4601],"filename":"Body.js","lineno":144,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The velocity, or rate of change in speed of the Body. Measured in pixels per second.","name":"velocity"}],"name":"velocity","longname":"Phaser.Physics.Arcade.Body#velocity","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[4774,4811],"filename":"Body.js","lineno":150,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The new velocity. Calculated during the Body.preUpdate and applied to its position.","name":"newVelocity"}],"readonly":true,"name":"newVelocity","longname":"Phaser.Physics.Arcade.Body#newVelocity","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[4995,5029],"filename":"Body.js","lineno":155,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The Sprite position is updated based on the delta x/y values. You can set a cap on those (both +-) using deltaMax.","name":"deltaMax"}],"name":"deltaMax","longname":"Phaser.Physics.Arcade.Body#deltaMax","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[5197,5235],"filename":"Body.js","lineno":160,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The acceleration is the rate of change of the velocity. Measured in pixels per second squared.","name":"acceleration"}],"name":"acceleration","longname":"Phaser.Physics.Arcade.Body#acceleration","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[5344,5374],"filename":"Body.js","lineno":165,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The drag applied to the motion of the Body.","name":"drag"}],"name":"drag","longname":"Phaser.Physics.Arcade.Body#drag","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[5526,5550],"filename":"Body.js","lineno":171,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["boolean"]},"description":"Allow this Body to be influenced by gravity? Either world or local.","name":"allowGravity"}],"defaultvalue":true,"name":"allowGravity","longname":"Phaser.Physics.Arcade.Body#allowGravity","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[5745,5778],"filename":"Body.js","lineno":176,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"A local gravity applied to this Body. If non-zero this over rides any world gravity, unless Body.allowGravity is set to false.","name":"gravity"}],"name":"gravity","longname":"Phaser.Physics.Arcade.Body#gravity","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[5968,6000],"filename":"Body.js","lineno":181,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The elasticity of the Body when colliding. bounce.x/y = 1 means full rebound, bounce.x/y = 0.5 means 50% rebound velocity.","name":"bounce"}],"name":"bounce","longname":"Phaser.Physics.Arcade.Body#bounce","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[6337,6360],"filename":"Body.js","lineno":189,"path":"src\\physics\\arcade"},"description":"The elasticity of the Body when colliding with the World bounds.\rBy default this property is `null`, in which case `Body.bounce` is used instead. Set this property\rto a Phaser.Point object in order to enable a World bounds specific bounce value.","properties":[{"type":{"names":["Phaser.Point"]},"name":"worldBounce"}],"name":"worldBounce","longname":"Phaser.Physics.Arcade.Body#worldBounce","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[7036,7061],"filename":"Body.js","lineno":201,"path":"src\\physics\\arcade"},"description":"A Signal that is dispatched when this Body collides with the world bounds.\rDue to the potentially high volume of signals this could create it is disabled by default.\rTo use this feature set this property to a Phaser.Signal: `sprite.body.onWorldBounds = new Phaser.Signal()`\rand it will be called when a collision happens, passing five arguments:\r`onWorldBounds(sprite, up, down, left, right)`\rwhere the Sprite is a reference to the Sprite that owns this Body, and the other arguments are booleans\rindicating on which side of the world the Body collided.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onWorldBounds"}],"name":"onWorldBounds","longname":"Phaser.Physics.Arcade.Body#onWorldBounds","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[7985,8006],"filename":"Body.js","lineno":221,"path":"src\\physics\\arcade"},"description":"A Signal that is dispatched when this Body collides with another Body.\r\rYou still need to call `game.physics.arcade.collide` in your `update` method in order\rfor this signal to be dispatched.\r\rUsually you'd pass a callback to the `collide` method, but this signal provides for\ra different level of notification.\r\rDue to the potentially high volume of signals this could create it is disabled by default.\r\rTo use this feature set this property to a Phaser.Signal: `sprite.body.onCollide = new Phaser.Signal()`\rand it will be called when a collision happens, passing two arguments: the sprites which collided.\rThe first sprite in the argument is always the owner of this Body.\r\rIf two Bodies with this Signal set collide, both will dispatch the Signal.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onCollide"}],"name":"onCollide","longname":"Phaser.Physics.Arcade.Body#onCollide","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[8930,8951],"filename":"Body.js","lineno":241,"path":"src\\physics\\arcade"},"description":"A Signal that is dispatched when this Body overlaps with another Body.\r\rYou still need to call `game.physics.arcade.overlap` in your `update` method in order\rfor this signal to be dispatched.\r\rUsually you'd pass a callback to the `overlap` method, but this signal provides for\ra different level of notification.\r\rDue to the potentially high volume of signals this could create it is disabled by default.\r\rTo use this feature set this property to a Phaser.Signal: `sprite.body.onOverlap = new Phaser.Signal()`\rand it will be called when a collision happens, passing two arguments: the sprites which collided.\rThe first sprite in the argument is always the owner of this Body.\r\rIf two Bodies with this Signal set collide, both will dispatch the Signal.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onOverlap"}],"name":"onOverlap","longname":"Phaser.Physics.Arcade.Body#onOverlap","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[9110,9159],"filename":"Body.js","lineno":247,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The maximum velocity in pixels per second sq. that the Body can reach.","name":"maxVelocity"}],"name":"maxVelocity","longname":"Phaser.Physics.Arcade.Body#maxVelocity","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[9303,9341],"filename":"Body.js","lineno":252,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The amount of movement that will occur if another object 'rides' this one.","name":"friction"}],"name":"friction","longname":"Phaser.Physics.Arcade.Body#friction","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[9527,9551],"filename":"Body.js","lineno":258,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The angular velocity controls the rotation speed of the Body. It is measured in degrees per second.","name":"angularVelocity"}],"defaultvalue":0,"name":"angularVelocity","longname":"Phaser.Physics.Arcade.Body#angularVelocity","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[9753,9781],"filename":"Body.js","lineno":264,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The angular acceleration is the rate of change of the angular velocity. Measured in degrees per second squared.","name":"angularAcceleration"}],"defaultvalue":0,"name":"angularAcceleration","longname":"Phaser.Physics.Arcade.Body#angularAcceleration","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[9953,9973],"filename":"Body.js","lineno":270,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The drag applied during the rotation of the Body. Measured in degrees per second squared.","name":"angularDrag"}],"defaultvalue":0,"name":"angularDrag","longname":"Phaser.Physics.Arcade.Body#angularDrag","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[10130,10152],"filename":"Body.js","lineno":276,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The maximum angular velocity in degrees per second that the Body can reach.","name":"maxAngular"}],"defaultvalue":1000,"name":"maxAngular","longname":"Phaser.Physics.Arcade.Body#maxAngular","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[10350,10363],"filename":"Body.js","lineno":282,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The mass of the Body. When two bodies collide their mass is used in the calculation to determine the exchange of velocity.","name":"mass"}],"defaultvalue":1,"name":"mass","longname":"Phaser.Physics.Arcade.Body#mass","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[10485,10499],"filename":"Body.js","lineno":288,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The angle of the Body's velocity in radians.","name":"angle"}],"readonly":true,"name":"angle","longname":"Phaser.Physics.Arcade.Body#angle","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[10629,10643],"filename":"Body.js","lineno":294,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"The speed of the Body as calculated by its velocity.","name":"speed"}],"readonly":true,"name":"speed","longname":"Phaser.Physics.Arcade.Body#speed","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[10788,10813],"filename":"Body.js","lineno":300,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"A const reference to the direction the Body is traveling or facing.","name":"facing"}],"name":"facing","longname":"Phaser.Physics.Arcade.Body#facing","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[10960,10982],"filename":"Body.js","lineno":306,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["boolean"]},"description":"An immovable Body will not receive any impacts from other bodies.","name":"immovable"}],"defaultvalue":false,"name":"immovable","longname":"Phaser.Physics.Arcade.Body#immovable","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[11484,11501],"filename":"Body.js","lineno":315,"path":"src\\physics\\arcade"},"description":"If you have a Body that is being moved around the world via a tween or a Group motion, but its local x/y position never\ractually changes, then you should set Body.moves = false. Otherwise it will most likely fly off the screen.\rIf you want the physics system to move the body around, then set moves to true.","properties":[{"type":{"names":["boolean"]},"description":"Set to true to allow the Physics system to move this Body, otherwise false to move it manually.","name":"moves"}],"defaultvalue":true,"name":"moves","longname":"Phaser.Physics.Arcade.Body#moves","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[11875,11903],"filename":"Body.js","lineno":323,"path":"src\\physics\\arcade"},"description":"This flag allows you to disable the custom x separation that takes place by Physics.Arcade.separate.\rUsed in combination with your own collision processHandler you can create whatever type of collision response you need.","properties":[{"type":{"names":["boolean"]},"description":"Use a custom separation system or the built-in one?","name":"customSeparateX"}],"defaultvalue":false,"name":"customSeparateX","longname":"Phaser.Physics.Arcade.Body#customSeparateX","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[12277,12305],"filename":"Body.js","lineno":331,"path":"src\\physics\\arcade"},"description":"This flag allows you to disable the custom y separation that takes place by Physics.Arcade.separate.\rUsed in combination with your own collision processHandler you can create whatever type of collision response you need.","properties":[{"type":{"names":["boolean"]},"description":"Use a custom separation system or the built-in one?","name":"customSeparateY"}],"defaultvalue":false,"name":"customSeparateY","longname":"Phaser.Physics.Arcade.Body#customSeparateY","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[12506,12523],"filename":"Body.js","lineno":337,"path":"src\\physics\\arcade"},"description":"When this body collides with another, the amount of overlap is stored here.","properties":[{"type":{"names":["number"]},"description":"The amount of horizontal overlap during the collision.","name":"overlapX"}],"name":"overlapX","longname":"Phaser.Physics.Arcade.Body#overlapX","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[12722,12739],"filename":"Body.js","lineno":343,"path":"src\\physics\\arcade"},"description":"When this body collides with another, the amount of overlap is stored here.","properties":[{"type":{"names":["number"]},"description":"The amount of vertical overlap during the collision.","name":"overlapY"}],"name":"overlapY","longname":"Phaser.Physics.Arcade.Body#overlapY","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[12970,12987],"filename":"Body.js","lineno":349,"path":"src\\physics\\arcade"},"description":"If `Body.isCircle` is true, and this body collides with another circular body, the amount of overlap is stored here.","properties":[{"type":{"names":["number"]},"description":"The amount of overlap during the collision.","name":"overlapR"}],"name":"overlapR","longname":"Phaser.Physics.Arcade.Body#overlapR","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[13215,13236],"filename":"Body.js","lineno":355,"path":"src\\physics\\arcade"},"description":"If a body is overlapping with another body, but neither of them are moving (maybe they spawned on-top of each other?) this is set to true.","properties":[{"type":{"names":["boolean"]},"description":"Body embed value.","name":"embedded"}],"name":"embedded","longname":"Phaser.Physics.Arcade.Body#embedded","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[13523,13554],"filename":"Body.js","lineno":361,"path":"src\\physics\\arcade"},"description":"A Body can be set to collide against the World bounds automatically and rebound back into the World if this is set to true. Otherwise it will leave the World.","properties":[{"type":{"names":["boolean"]},"description":"Should the Body collide with the World bounds?","name":"collideWorldBounds"}],"name":"collideWorldBounds","longname":"Phaser.Physics.Arcade.Body#collideWorldBounds","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[14109,14204],"filename":"Body.js","lineno":370,"path":"src\\physics\\arcade"},"description":"Set the checkCollision properties to control which directions collision is processed for this Body.\rFor example checkCollision.up = false means it won't collide when the collision happened while moving up.\rIf you need to disable a Body entirely, use `body.enable = false`, this will also disable motion.\rIf you need to disable just collision and/or overlap checks, but retain motion, set `checkCollision.none = true`.","properties":[{"type":{"names":["object"]},"description":"An object containing allowed collision.","name":"checkCollision"}],"name":"checkCollision","longname":"Phaser.Physics.Arcade.Body#checkCollision","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[14487,14568],"filename":"Body.js","lineno":377,"path":"src\\physics\\arcade"},"description":"This object is populated with boolean values when the Body collides with another.\rtouching.up = true means the collision happened to the top of this Body for example.","properties":[{"type":{"names":["object"]},"description":"An object containing touching results.","name":"touching"}],"name":"touching","longname":"Phaser.Physics.Arcade.Body#touching","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[14780,14864],"filename":"Body.js","lineno":383,"path":"src\\physics\\arcade"},"description":"This object is populated with previous touching values from the bodies previous collision.","properties":[{"type":{"names":["object"]},"description":"An object containing previous touching results.","name":"wasTouching"}],"name":"wasTouching","longname":"Phaser.Physics.Arcade.Body#wasTouching","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[15183,15251],"filename":"Body.js","lineno":390,"path":"src\\physics\\arcade"},"description":"This object is populated with boolean values when the Body collides with the World bounds or a Tile.\rFor example if blocked.up is true then the Body cannot move up.","properties":[{"type":{"names":["object"]},"description":"An object containing on which faces this Body is blocked from moving, if any.","name":"blocked"}],"name":"blocked","longname":"Phaser.Physics.Arcade.Body#blocked","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[15679,15716],"filename":"Body.js","lineno":397,"path":"src\\physics\\arcade"},"description":"If this is an especially small or fast moving object then it can sometimes skip over tilemap collisions if it moves through a tile in a step.\rSet this padding value to add extra padding to its bounds. tilePadding.x applied to its width, y to its height.","properties":[{"type":{"names":["Phaser.Point"]},"description":"Extra padding to be added to this sprite's dimensions when checking for tile collision.","name":"tilePadding"}],"name":"tilePadding","longname":"Phaser.Physics.Arcade.Body#tilePadding","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[15841,15859],"filename":"Body.js","lineno":402,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["boolean"]},"description":"If this Body in a preUpdate (true) or postUpdate (false) state?","name":"dirty"}],"name":"dirty","longname":"Phaser.Physics.Arcade.Body#dirty","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[16039,16064],"filename":"Body.js","lineno":407,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["boolean"]},"description":"If true and you collide this Sprite against a Group, it will disable the collision check from using a QuadTree.","name":"skipQuadTree"}],"name":"skipQuadTree","longname":"Phaser.Physics.Arcade.Body#skipQuadTree","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[16670,16693],"filename":"Body.js","lineno":417,"path":"src\\physics\\arcade"},"description":"If true the Body will check itself against the Sprite.getBounds() dimensions and adjust its width and height accordingly.\rIf false it will compare its dimensions against the Sprite scale instead, and adjust its width height if the scale has changed.\rTypically you would need to enable syncBounds if your sprite is the child of a responsive display object such as a FlexLayer, \ror in any situation where the Sprite scale doesn't change, but its parents scale is effecting the dimensions regardless.","properties":[{"type":{"names":["boolean"]},"name":"syncBounds"}],"defaultvalue":false,"name":"syncBounds","longname":"Phaser.Physics.Arcade.Body#syncBounds","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[16801,16822],"filename":"Body.js","lineno":422,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["boolean"]},"description":"Set by the `moveTo` and `moveFrom` methods.","name":"isMoving"}],"name":"isMoving","longname":"Phaser.Physics.Arcade.Body#isMoving","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[16943,16976],"filename":"Body.js","lineno":427,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["boolean"]},"description":"Set by the `moveTo` and `moveFrom` methods.","name":"stopVelocityOnCollide"}],"name":"stopVelocityOnCollide","longname":"Phaser.Physics.Arcade.Body#stopVelocityOnCollide","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[17935,17976],"filename":"Body.js","lineno":462,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"Listen for the completion of `moveTo` or `moveFrom` events.","name":"onMoveComplete"}],"name":"onMoveComplete","longname":"Phaser.Physics.Arcade.Body#onMoveComplete","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[18137,18165],"filename":"Body.js","lineno":467,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["function"]},"description":"Optional callback. If set, invoked during the running of `moveTo` or `moveFrom` events.","name":"movementCallback"}],"name":"movementCallback","longname":"Phaser.Physics.Arcade.Body#movementCallback","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[18290,18325],"filename":"Body.js","lineno":472,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["object"]},"description":"Context in which to call the movementCallback.","name":"movementCallbackContext"}],"name":"movementCallbackContext","longname":"Phaser.Physics.Arcade.Body#movementCallbackContext","kind":"member","memberof":"Phaser.Physics.Arcade.Body","scope":"instance","___s":true},{"meta":{"range":[18950,19065],"filename":"Body.js","lineno":508,"path":"src\\physics\\arcade"},"description":"Internal method.","kind":"function","name":"updateBounds","access":"protected","memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#updateBounds","scope":"instance","___s":true},{"meta":{"range":[20173,20285],"filename":"Body.js","lineno":552,"path":"src\\physics\\arcade"},"description":"Internal method.","kind":"function","name":"preUpdate","access":"protected","memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#preUpdate","scope":"instance","___s":true},{"meta":{"range":[23088,23205],"filename":"Body.js","lineno":640,"path":"src\\physics\\arcade"},"description":"Internal method.","kind":"function","name":"updateMovement","access":"protected","memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#updateMovement","scope":"instance","___s":true},{"meta":{"range":[24179,24621],"filename":"Body.js","lineno":681,"path":"src\\physics\\arcade"},"description":"If this Body is moving as a result of a call to `moveTo` or `moveFrom` (i.e. it\rhas Body.isMoving true), then calling this method will stop the movement before\reither the duration or distance counters expire.\r\rThe `onMoveComplete` signal is dispatched.","kind":"function","name":"stopMovement","params":[{"type":{"names":["boolean"]},"optional":true,"description":"Should the Body.velocity be set to zero?","name":"stopVelocity"}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#stopMovement","scope":"instance","___s":true},{"meta":{"range":[25118,25231],"filename":"Body.js","lineno":709,"path":"src\\physics\\arcade"},"description":"Internal method.","kind":"function","name":"postUpdate","access":"protected","memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#postUpdate","scope":"instance","___s":true},{"meta":{"range":[27308,27518],"filename":"Body.js","lineno":795,"path":"src\\physics\\arcade"},"description":"Internal method.","kind":"function","name":"checkWorldBounds","access":"protected","returns":[{"type":{"names":["boolean"]},"description":"True if the Body collided with the world bounds, otherwise false."}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#checkWorldBounds","scope":"instance","___s":true},{"meta":{"range":[30159,31894],"filename":"Body.js","lineno":879,"path":"src\\physics\\arcade"},"description":"Note: This method is experimental, and may be changed or removed in a future release.\r\rThis method moves the Body in the given direction, for the duration specified.\rIt works by setting the velocity on the Body, and an internal timer, and then\rmonitoring the duration each frame. When the duration is up the movement is\rstopped and the `Body.onMoveComplete` signal is dispatched.\r\rMovement also stops if the Body collides or overlaps with any other Body.\r\rYou can control if the velocity should be reset to zero on collision, by using\rthe property `Body.stopVelocityOnCollide`.\r\rStop the movement at any time by calling `Body.stopMovement`.\r\rYou can optionally set a speed in pixels per second. If not specified it\rwill use the current `Body.speed` value. If this is zero, the function will return false.\r\rPlease note that due to browser timings you should allow for a variance in \rwhen the duration will actually expire. Depending on system it may be as much as\r+- 50ms. Also this method doesn't take into consideration any other forces acting\ron the Body, such as Gravity, drag or maxVelocity, all of which may impact the\rmovement.","kind":"function","name":"moveFrom","params":[{"type":{"names":["integer"]},"description":"The duration of the movement, in ms.","name":"duration"},{"type":{"names":["integer"]},"optional":true,"description":"The speed of the movement, in pixels per second. If not provided `Body.speed` is used.","name":"speed"},{"type":{"names":["integer"]},"optional":true,"description":"The angle of movement. If not provided `Body.angle` is used.","name":"direction"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the movement successfully started, otherwise false."}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#moveFrom","scope":"instance","___s":true},{"meta":{"range":[32917,34434],"filename":"Body.js","lineno":953,"path":"src\\physics\\arcade"},"description":"Note: This method is experimental, and may be changed or removed in a future release.\r\rThis method moves the Body in the given direction, for the duration specified.\rIt works by setting the velocity on the Body, and an internal distance counter.\rThe distance is monitored each frame. When the distance equals the distance\rspecified in this call, the movement is stopped, and the `Body.onMoveComplete` \rsignal is dispatched.\r\rMovement also stops if the Body collides or overlaps with any other Body.\r\rYou can control if the velocity should be reset to zero on collision, by using\rthe property `Body.stopVelocityOnCollide`.\r\rStop the movement at any time by calling `Body.stopMovement`.\r\rPlease note that due to browser timings you should allow for a variance in \rwhen the distance will actually expire.\r\rNote: This method doesn't take into consideration any other forces acting\ron the Body, such as Gravity, drag or maxVelocity, all of which may impact the\rmovement.","kind":"function","name":"moveTo","params":[{"type":{"names":["integer"]},"description":"The duration of the movement, in ms.","name":"duration"},{"type":{"names":["integer"]},"description":"The distance, in pixels, the Body will move.","name":"distance"},{"type":{"names":["integer"]},"optional":true,"description":"The angle of movement. If not provided `Body.angle` is used.","name":"direction"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the movement successfully started, otherwise false."}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#moveTo","scope":"instance","___s":true},{"meta":{"range":[35869,37155],"filename":"Body.js","lineno":1040,"path":"src\\physics\\arcade"},"description":"You can modify the size of the physics Body to be any dimension you need.\rThis allows you to make it smaller, or larger, than the parent Sprite.\rYou can also control the x and y offset of the Body. This is the position of the\rBody relative to the top-left of the Sprite _texture_.\r\rFor example: If you have a Sprite with a texture that is 80x100 in size,\rand you want the physics body to be 32x32 pixels in the middle of the texture, you would do:\r\r`setSize(32, 32, 24, 34)`\r\rWhere the first two parameters is the new Body size (32x32 pixels).\r24 is the horizontal offset of the Body from the top-left of the Sprites texture, and 34\ris the vertical offset.\r\rCalling `setSize` on a Body that has already had `setCircle` will reset all of the Circle\rproperties, making this Body rectangular again.","kind":"function","name":"setSize","params":[{"type":{"names":["number"]},"description":"The width of the Body.","name":"width"},{"type":{"names":["number"]},"description":"The height of the Body.","name":"height"},{"type":{"names":["number"]},"optional":true,"description":"The X offset of the Body from the top-left of the Sprites texture.","name":"offsetX"},{"type":{"names":["number"]},"optional":true,"description":"The Y offset of the Body from the top-left of the Sprites texture.","name":"offsetY"}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#setSize","scope":"instance","___s":true},{"meta":{"range":[37857,38862],"filename":"Body.js","lineno":1084,"path":"src\\physics\\arcade"},"description":"Sets this Body as using a circle, of the given radius, for all collision detection instead of a rectangle.\rThe radius is given in pixels and is the distance from the center of the circle to the edge.\r\rYou can also control the x and y offset, which is the position of the Body relative to the top-left of the Sprite.\r\rTo change a Body back to being rectangular again call `Body.setSize`.\r\rNote: Circular collision only happens with other Arcade Physics bodies, it does not\rwork against tile maps, where rectangular collision is the only method supported.","kind":"function","name":"setCircle","params":[{"type":{"names":["number"]},"optional":true,"description":"The radius of the Body in pixels. Pass a value of zero / undefined, to stop the Body using a circle for collision.","name":"radius"},{"type":{"names":["number"]},"optional":true,"description":"The X offset of the Body from the Sprite position.","name":"offsetX"},{"type":{"names":["number"]},"optional":true,"description":"The Y offset of the Body from the Sprite position.","name":"offsetY"}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#setCircle","scope":"instance","___s":true},{"meta":{"range":[39737,39991],"filename":"Body.js","lineno":1130,"path":"src\\physics\\arcade"},"description":"Resets all Body values (velocity, acceleration, rotation, etc)","kind":"function","name":"reset","params":[{"type":{"names":["number"]},"description":"The new x position of the Body.","name":"x"},{"type":{"names":["number"]},"description":"The new y position of the Body.","name":"y"}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#reset","scope":"instance","___s":true},{"meta":{"range":[40938,41265],"filename":"Body.js","lineno":1165,"path":"src\\physics\\arcade"},"description":"Returns the bounds of this physics body.\r\rOnly used internally by the World collision methods.","kind":"function","name":"getBounds","params":[{"type":{"names":["object"]},"description":"The object in which to set the bounds values.","name":"obj"}],"returns":[{"type":{"names":["object"]},"description":"The object that was given to this method."}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#getBounds","scope":"instance","___s":true},{"meta":{"range":[41770,42103],"filename":"Body.js","lineno":1195,"path":"src\\physics\\arcade"},"description":"Tests if a world point lies within this Body.","kind":"function","name":"hitTest","params":[{"type":{"names":["number"]},"description":"The world x coordinate to test.","name":"x"},{"type":{"names":["number"]},"description":"The world y coordinate to test.","name":"y"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the given coordinates are inside this Body, otherwise false."}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#hitTest","scope":"instance","___s":true},{"meta":{"range":[42265,42518],"filename":"Body.js","lineno":1209,"path":"src\\physics\\arcade"},"description":"Returns true if the bottom of this Body is in contact with either the world bounds or a tile.","kind":"function","name":"onFloor","returns":[{"type":{"names":["boolean"]},"description":"True if in contact with either the world bounds or a tile."}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#onFloor","scope":"instance","___s":true},{"meta":{"range":[42605,42857],"filename":"Body.js","lineno":1221,"path":"src\\physics\\arcade"},"description":"Returns true if the top of this Body is in contact with either the world bounds or a tile.","kind":"function","name":"onCeiling","returns":[{"type":{"names":["boolean"]},"description":"True if in contact with either the world bounds or a tile."}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#onCeiling","scope":"instance","___s":true},{"meta":{"range":[42938,43191],"filename":"Body.js","lineno":1233,"path":"src\\physics\\arcade"},"description":"Returns true if either side of this Body is in contact with either the world bounds or a tile.","kind":"function","name":"onWall","returns":[{"type":{"names":["boolean"]},"description":"True if in contact with either the world bounds or a tile."}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#onWall","scope":"instance","___s":true},{"meta":{"range":[43297,43460],"filename":"Body.js","lineno":1245,"path":"src\\physics\\arcade"},"description":"Returns the absolute delta x value.","kind":"function","name":"deltaAbsX","returns":[{"type":{"names":["number"]},"description":"The absolute delta value."}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#deltaAbsX","scope":"instance","___s":true},{"meta":{"range":[43580,43743],"filename":"Body.js","lineno":1257,"path":"src\\physics\\arcade"},"description":"Returns the absolute delta y value.","kind":"function","name":"deltaAbsY","returns":[{"type":{"names":["number"]},"description":"The absolute delta value."}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#deltaAbsY","scope":"instance","___s":true},{"meta":{"range":[43863,44131],"filename":"Body.js","lineno":1269,"path":"src\\physics\\arcade"},"description":"Returns the delta x value. The difference between Body.x now and in the previous step.","kind":"function","name":"deltaX","returns":[{"type":{"names":["number"]},"description":"The delta value. Positive if the motion was to the right, negative if to the left."}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#deltaX","scope":"instance","___s":true},{"meta":{"range":[44225,44486],"filename":"Body.js","lineno":1281,"path":"src\\physics\\arcade"},"description":"Returns the delta y value. The difference between Body.y now and in the previous step.","kind":"function","name":"deltaY","returns":[{"type":{"names":["number"]},"description":"The delta value. Positive if the motion was downwards, negative if upwards."}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#deltaY","scope":"instance","___s":true},{"meta":{"range":[44580,44855],"filename":"Body.js","lineno":1293,"path":"src\\physics\\arcade"},"description":"Returns the delta z value. The difference between Body.rotation now and in the previous step.","kind":"function","name":"deltaZ","returns":[{"type":{"names":["number"]},"description":"The delta value. Positive if the motion was clockwise, negative if anti-clockwise."}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#deltaZ","scope":"instance","___s":true},{"meta":{"range":[44952,45250],"filename":"Body.js","lineno":1305,"path":"src\\physics\\arcade"},"description":"Destroys this Body.\r\rFirst it calls Group.removeFromHash if the Game Object this Body belongs to is part of a Group.\rThen it nulls the Game Objects body reference, and nulls this Body.sprite reference.","kind":"function","name":"destroy","memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#destroy","scope":"instance","___s":true},{"meta":{"range":[45526,45653],"filename":"Body.js","lineno":1327,"path":"src\\physics\\arcade"},"name":"left","properties":[{"type":{"names":["number"]},"description":"The x position of the Body. The same as `Body.x`.","name":"left"}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#left","scope":"instance","kind":"member","___s":true},{"meta":{"range":[45805,45956],"filename":"Body.js","lineno":1341,"path":"src\\physics\\arcade"},"name":"right","properties":[{"type":{"names":["number"]},"description":"The right value of this Body (same as Body.x + Body.width)","name":"right"}],"readonly":true,"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#right","scope":"instance","kind":"member","___s":true},{"meta":{"range":[46122,46247],"filename":"Body.js","lineno":1356,"path":"src\\physics\\arcade"},"name":"top","properties":[{"type":{"names":["number"]},"description":"The y position of the Body. The same as `Body.y`.","name":"top"}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#top","scope":"instance","kind":"member","___s":true},{"meta":{"range":[46398,46553],"filename":"Body.js","lineno":1370,"path":"src\\physics\\arcade"},"name":"bottom","properties":[{"type":{"names":["number"]},"description":"The bottom value of this Body (same as Body.y + Body.height)","name":"bottom"}],"readonly":true,"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#bottom","scope":"instance","kind":"member","___s":true},{"meta":{"range":[46721,46808],"filename":"Body.js","lineno":1385,"path":"src\\physics\\arcade"},"name":"x","properties":[{"type":{"names":["number"]},"description":"The x position.","name":"x"}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#x","scope":"instance","kind":"member","___s":true},{"meta":{"range":[47032,47119],"filename":"Body.js","lineno":1404,"path":"src\\physics\\arcade"},"name":"y","properties":[{"type":{"names":["number"]},"description":"The y position.","name":"y"}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#y","scope":"instance","kind":"member","___s":true},{"meta":{"range":[47345,47780],"filename":"Body.js","lineno":1424,"path":"src\\physics\\arcade"},"description":"Render Sprite Body.","kind":"function","name":"render","params":[{"type":{"names":["object"]},"description":"The context to render to.","name":"context"},{"type":{"names":["Phaser.Physics.Arcade.Body"]},"description":"The Body to render the info of.","name":"body"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgba(0,255,0,0.4)'","description":"color of the debug info to be rendered. (format is css color string).","name":"color"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Render the objected as a filled (default, true) or a stroked (false)","name":"filled"}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#render","scope":"instance","___s":true},{"meta":{"range":[48737,49176],"filename":"Body.js","lineno":1470,"path":"src\\physics\\arcade"},"description":"Render Sprite Body Physics Data as text.","kind":"function","name":"renderBodyInfo","params":[{"type":{"names":["Phaser.Physics.Arcade.Body"]},"description":"The Body to render the info of.","name":"body"},{"type":{"names":["number"]},"description":"X position of the debug info to be rendered.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the debug info to be rendered.","name":"y"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgb(255,255,255)'","description":"color of the debug info to be rendered. (format is css color string).","name":"color"}],"memberof":"Phaser.Physics.Arcade.Body","longname":"Phaser.Physics.Arcade.Body#renderBodyInfo","scope":"instance","___s":true},{"meta":{"range":[331,386],"filename":"TilemapCollision.js","lineno":13,"path":"src\\physics\\arcade"},"description":"The Arcade Physics Tile map collision methods.","kind":"class","classdesc":"Phaser.Physics.Arcade.TilemapCollision","name":"TilemapCollision","longname":"Phaser.Physics.Arcade.TilemapCollision","memberof":"Phaser.Physics.Arcade","scope":"static","___s":true},{"meta":{"range":[603,616],"filename":"TilemapCollision.js","lineno":20,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"A value added to the delta values during collision with tiles. Adjust this if you get tunneling.","name":"TILE_BIAS"}],"name":"TILE_BIAS","longname":"Phaser.Physics.Arcade.TilemapCollision#TILE_BIAS","kind":"member","memberof":"Phaser.Physics.Arcade.TilemapCollision","scope":"instance","___s":true},{"meta":{"range":[435,3420],"filename":"World.js","lineno":14,"path":"src\\physics\\arcade"},"description":"The Arcade Physics world. Contains Arcade Physics related collision, overlap and motion methods.","kind":"class","classdesc":"Phaser.Physics.Arcade","params":[{"type":{"names":["Phaser.Game"]},"description":"reference to the current game instance.","name":"game"}],"name":"Arcade","longname":"Phaser.Physics.Arcade","memberof":"Phaser.Physics","scope":"static","___s":true},{"meta":{"range":[564,580],"filename":"World.js","lineno":19,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.Physics.Arcade#game","kind":"member","memberof":"Phaser.Physics.Arcade","scope":"instance","___s":true},{"meta":{"range":[714,747],"filename":"World.js","lineno":24,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The World gravity setting. Defaults to x: 0, y: 0, or no gravity.","name":"gravity"}],"name":"gravity","longname":"Phaser.Physics.Arcade#gravity","kind":"member","memberof":"Phaser.Physics.Arcade","scope":"instance","___s":true},{"meta":{"range":[907,984],"filename":"World.js","lineno":29,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.Rectangle"]},"description":"The bounds inside of which the physics world exists. Defaults to match the world bounds.","name":"bounds"}],"name":"bounds","longname":"Phaser.Physics.Arcade#bounds","kind":"member","memberof":"Phaser.Physics.Arcade","scope":"instance","___s":true},{"meta":{"range":[1297,1368],"filename":"World.js","lineno":36,"path":"src\\physics\\arcade"},"description":"Set the checkCollision properties to control for which bounds collision is processed.\rFor example checkCollision.down = false means Bodies cannot collide with the World.bounds.bottom.","properties":[{"type":{"names":["object"]},"description":"An object containing allowed collision flags.","name":"checkCollision"}],"name":"checkCollision","longname":"Phaser.Physics.Arcade#checkCollision","kind":"member","memberof":"Phaser.Physics.Arcade","scope":"instance","___s":true},{"meta":{"range":[1501,1521],"filename":"World.js","lineno":41,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"Used by the QuadTree to set the maximum number of objects per quad.","name":"maxObjects"}],"name":"maxObjects","longname":"Phaser.Physics.Arcade#maxObjects","kind":"member","memberof":"Phaser.Physics.Arcade","scope":"instance","___s":true},{"meta":{"range":[1653,1671],"filename":"World.js","lineno":46,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"Used by the QuadTree to set the maximum number of iteration levels.","name":"maxLevels"}],"name":"maxLevels","longname":"Phaser.Physics.Arcade#maxLevels","kind":"member","memberof":"Phaser.Physics.Arcade","scope":"instance","___s":true},{"meta":{"range":[1797,1818],"filename":"World.js","lineno":51,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"A value added to the delta values during collision checks.","name":"OVERLAP_BIAS"}],"name":"OVERLAP_BIAS","longname":"Phaser.Physics.Arcade#OVERLAP_BIAS","kind":"member","memberof":"Phaser.Physics.Arcade","scope":"instance","___s":true},{"meta":{"range":[1994,2013],"filename":"World.js","lineno":56,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["boolean"]},"description":"If true World.separate will always separate on the X axis before Y. Otherwise it will check gravity totals first.","name":"forceX"}],"name":"forceX","longname":"Phaser.Physics.Arcade#forceX","kind":"member","memberof":"Phaser.Physics.Arcade","scope":"instance","___s":true},{"meta":{"range":[2257,2310],"filename":"World.js","lineno":62,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["number"]},"description":"Used when colliding a Sprite vs. a Group, or a Group vs. a Group, this defines the direction the sort is based on. Default is Phaser.Physics.Arcade.LEFT_RIGHT.","name":"sortDirection"}],"name":"sortDirection","longname":"Phaser.Physics.Arcade#sortDirection","kind":"member","memberof":"Phaser.Physics.Arcade","scope":"instance","___s":true},{"meta":{"range":[2618,2642],"filename":"World.js","lineno":67,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["boolean"]},"description":"If true the QuadTree will not be used for any collision. QuadTrees are great if objects are well spread out in your game, otherwise they are a performance hit. If you enable this you can disable on a per body basis via `Body.skipQuadTree`.","name":"skipQuadTree"}],"name":"skipQuadTree","longname":"Phaser.Physics.Arcade#skipQuadTree","kind":"member","memberof":"Phaser.Physics.Arcade","scope":"instance","___s":true},{"meta":{"range":[2904,2925],"filename":"World.js","lineno":72,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["boolean"]},"description":"If `true` the `Body.preUpdate` method will be skipped, halting all motion for all bodies. Note that other methods such as `collide` will still work, so be careful not to call them on paused bodies.","name":"isPaused"}],"name":"isPaused","longname":"Phaser.Physics.Arcade#isPaused","kind":"member","memberof":"Phaser.Physics.Arcade","scope":"instance","___s":true},{"meta":{"range":[3017,3198],"filename":"World.js","lineno":77,"path":"src\\physics\\arcade"},"properties":[{"type":{"names":["Phaser.QuadTree"]},"description":"The world QuadTree.","name":"quadTree"}],"name":"quadTree","longname":"Phaser.Physics.Arcade#quadTree","kind":"member","memberof":"Phaser.Physics.Arcade","scope":"instance","___s":true},{"meta":{"range":[3695,3730],"filename":"World.js","lineno":98,"path":"src\\physics\\arcade"},"description":"A constant used for the sortDirection value.\rUse this if you don't wish to perform any pre-collision sorting at all, or will manually sort your Groups.","kind":"constant","type":{"names":["number"]},"name":"SORT_NONE","longname":"Phaser.Physics.Arcade.SORT_NONE","memberof":"Phaser.Physics.Arcade","scope":"static","___s":true},{"meta":{"range":[3924,3960],"filename":"World.js","lineno":106,"path":"src\\physics\\arcade"},"description":"A constant used for the sortDirection value.\rUse this if your game world is wide but short and scrolls from the left to the right (i.e. Mario)","kind":"constant","type":{"names":["number"]},"name":"LEFT_RIGHT","longname":"Phaser.Physics.Arcade.LEFT_RIGHT","memberof":"Phaser.Physics.Arcade","scope":"static","___s":true},{"meta":{"range":[4164,4200],"filename":"World.js","lineno":114,"path":"src\\physics\\arcade"},"description":"A constant used for the sortDirection value.\rUse this if your game world is wide but short and scrolls from the right to the left (i.e. Mario backwards)","kind":"constant","type":{"names":["number"]},"name":"RIGHT_LEFT","longname":"Phaser.Physics.Arcade.RIGHT_LEFT","memberof":"Phaser.Physics.Arcade","scope":"static","___s":true},{"meta":{"range":[4397,4433],"filename":"World.js","lineno":122,"path":"src\\physics\\arcade"},"description":"A constant used for the sortDirection value.\rUse this if your game world is narrow but tall and scrolls from the top to the bottom (i.e. Dig Dug)","kind":"constant","type":{"names":["number"]},"name":"TOP_BOTTOM","longname":"Phaser.Physics.Arcade.TOP_BOTTOM","memberof":"Phaser.Physics.Arcade","scope":"static","___s":true},{"meta":{"range":[4669,4705],"filename":"World.js","lineno":130,"path":"src\\physics\\arcade"},"description":"A constant used for the sortDirection value.\rUse this if your game world is narrow but tall and scrolls from the bottom to the top (i.e. Commando or a vertically scrolling shoot-em-up)","kind":"constant","type":{"names":["number"]},"name":"BOTTOM_TOP","longname":"Phaser.Physics.Arcade.BOTTOM_TOP","memberof":"Phaser.Physics.Arcade","scope":"static","___s":true},{"meta":{"range":[4753,5186],"filename":"World.js","lineno":134,"path":"src\\physics\\arcade"},"description":"Updates the size of this physics world.","kind":"function","name":"setBounds","params":[{"type":{"names":["number"]},"description":"Top left most corner of the world.","name":"x"},{"type":{"names":["number"]},"description":"Top left most corner of the world.","name":"y"},{"type":{"names":["number"]},"description":"New width of the world. Can never be smaller than the Game.width.","name":"width"},{"type":{"names":["number"]},"description":"New height of the world. Can never be smaller than the Game.height.","name":"height"}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#setBounds","scope":"instance","___s":true},{"meta":{"range":[5304,5459],"filename":"World.js","lineno":149,"path":"src\\physics\\arcade"},"description":"Updates the size of this physics world to match the size of the game world.","kind":"function","name":"setBoundsToWorld","memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#setBoundsToWorld","scope":"instance","___s":true},{"meta":{"range":[5571,6232],"filename":"World.js","lineno":160,"path":"src\\physics\\arcade"},"description":"This will create an Arcade Physics body on the given game object or array of game objects.\rA game object can only have 1 physics body active at any one time, and it can't be changed until the object is destroyed.","kind":"function","name":"enable","params":[{"type":{"names":["object","array","Phaser.Group"]},"description":"The game object to create the physics body on. Can also be an array or Group of objects, a body will be created on every child that has a `body` property.","name":"object"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should a body be created on all children of this object? If true it will recurse down the display list as far as it can go.","name":"children"}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#enable","scope":"instance","___s":true},{"meta":{"range":[7619,8166],"filename":"World.js","lineno":216,"path":"src\\physics\\arcade"},"description":"Creates an Arcade Physics body on the given game object.\r\rA game object can only have 1 physics body active at any one time, and it can't be changed until the body is nulled.\r\rWhen you add an Arcade Physics body to an object it will automatically add the object into its parent Groups hash array.","kind":"function","name":"enableBody","params":[{"type":{"names":["object"]},"description":"The game object to create the physics body on. A body will only be created if this object has a null `body` property.","name":"object"}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#enableBody","scope":"instance","___s":true},{"meta":{"range":[8535,8808],"filename":"World.js","lineno":240,"path":"src\\physics\\arcade"},"description":"Called automatically by a Physics body, it updates all motion related values on the Body unless `World.isPaused` is `true`.","kind":"function","name":"updateMotion","params":[{"type":{"names":["Phaser.Physics.Arcade.Body"]},"description":"Body object to be updated.","name":"The"}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#updateMotion","scope":"instance","___s":true},{"meta":{"range":[9421,10225],"filename":"World.js","lineno":257,"path":"src\\physics\\arcade"},"description":"A tween-like function that takes a starting velocity and some other factors and returns an altered velocity.\rBased on a function in Flixel by @ADAMATOMIC","kind":"function","name":"computeVelocity","params":[{"type":{"names":["number"]},"description":"0 for nothing, 1 for horizontal, 2 for vertical.","name":"axis"},{"type":{"names":["Phaser.Physics.Arcade.Body"]},"description":"The Body object to be updated.","name":"body"},{"type":{"names":["number"]},"description":"Any component of velocity (e.g. 20).","name":"velocity"},{"type":{"names":["number"]},"description":"Rate at which the velocity is changing.","name":"acceleration"},{"type":{"names":["number"]},"description":"Really kind of a deceleration, this is how much the velocity changes if Acceleration is not set.","name":"drag"},{"type":{"names":["number"]},"optional":true,"defaultvalue":10000,"description":"An absolute value cap for the velocity.","name":"max"}],"returns":[{"type":{"names":["number"]},"description":"The altered Velocity value."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#computeVelocity","scope":"instance","___s":true},{"meta":{"range":[11411,13248],"filename":"World.js","lineno":318,"path":"src\\physics\\arcade"},"description":"Checks for overlaps between two game objects. The objects can be Sprites, Groups or Emitters.\rYou can perform Sprite vs. Sprite, Sprite vs. Group and Group vs. Group overlap checks.\rUnlike collide the objects are NOT automatically separated or have any physics applied, they merely test for overlap results.\rBoth the first and second parameter can be arrays of objects, of differing types.\rIf two arrays are passed, the contents of the first parameter will be tested against all contents of the 2nd parameter.\rNOTE: This function is not recursive, and will not test against children of objects passed (i.e. Groups within Groups).","kind":"function","name":"overlap","params":[{"type":{"names":["Phaser.Sprite","Phaser.Group","Phaser.Particles.Emitter","array"]},"description":"The first object or array of objects to check. Can be Phaser.Sprite, Phaser.Group or Phaser.Particles.Emitter.","name":"object1"},{"type":{"names":["Phaser.Sprite","Phaser.Group","Phaser.Particles.Emitter","array"]},"description":"The second object or array of objects to check. Can be Phaser.Sprite, Phaser.Group or Phaser.Particles.Emitter.","name":"object2"},{"type":{"names":["function"]},"optional":true,"defaultvalue":null,"description":"An optional callback function that is called if the objects overlap. The two objects will be passed to this function in the same order in which you specified them, unless you are checking Group vs. Sprite, in which case Sprite will always be the first parameter.","name":"overlapCallback"},{"type":{"names":["function"]},"optional":true,"defaultvalue":null,"description":"A callback function that lets you perform additional checks against the two objects if they overlap. If this is set then `overlapCallback` will only be called if this callback returns `true`.","name":"processCallback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which to run the callbacks.","name":"callbackContext"}],"returns":[{"type":{"names":["boolean"]},"description":"True if an overlap occurred otherwise false."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#overlap","scope":"instance","___s":true},{"meta":{"range":[14712,17367],"filename":"World.js","lineno":375,"path":"src\\physics\\arcade"},"description":"Checks for collision between two game objects. You can perform Sprite vs. Sprite, Sprite vs. Group, Group vs. Group, Sprite vs. Tilemap Layer or Group vs. Tilemap Layer collisions.\rBoth the first and second parameter can be arrays of objects, of differing types.\rIf two arrays are passed, the contents of the first parameter will be tested against all contents of the 2nd parameter.\rThe objects are also automatically separated. If you don't require separation then use ArcadePhysics.overlap instead.\rAn optional processCallback can be provided. If given this function will be called when two sprites are found to be colliding. It is called before any separation takes place,\rgiving you the chance to perform additional checks. If the function returns true then the collision and separation is carried out. If it returns false it is skipped.\rThe collideCallback is an optional function that is only called if two sprites collide. If a processCallback has been set then it needs to return true for collideCallback to be called.\rNOTE: This function is not recursive, and will not test against children of objects passed (i.e. Groups or Tilemaps within other Groups).","kind":"function","name":"collide","params":[{"type":{"names":["Phaser.Sprite","Phaser.Group","Phaser.Particles.Emitter","Phaser.TilemapLayer","array"]},"description":"The first object or array of objects to check. Can be Phaser.Sprite, Phaser.Group, Phaser.Particles.Emitter, or Phaser.TilemapLayer.","name":"object1"},{"type":{"names":["Phaser.Sprite","Phaser.Group","Phaser.Particles.Emitter","Phaser.TilemapLayer","array"]},"description":"The second object or array of objects to check. Can be Phaser.Sprite, Phaser.Group, Phaser.Particles.Emitter or Phaser.TilemapLayer.","name":"object2"},{"type":{"names":["function"]},"optional":true,"defaultvalue":null,"description":"An optional callback function that is called if the objects collide. The two objects will be passed to this function in the same order in which you specified them, unless you are colliding Group vs. Sprite, in which case Sprite will always be the first parameter.","name":"collideCallback"},{"type":{"names":["function"]},"optional":true,"defaultvalue":null,"description":"A callback function that lets you perform additional checks against the two objects if they overlap. If this is set then collision will only happen if processCallback returns true. The two objects will be passed to this function in the same order in which you specified them, unless you are colliding Group vs. Sprite, in which case Sprite will always be the first parameter.","name":"processCallback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which to run the callbacks.","name":"callbackContext"}],"returns":[{"type":{"names":["boolean"]},"description":"True if a collision occurred otherwise false."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#collide","scope":"instance","___s":true},{"meta":{"range":[18835,19395],"filename":"World.js","lineno":434,"path":"src\\physics\\arcade"},"description":"A Sort function for sorting two bodies based on a LEFT to RIGHT sort direction.\r\rThis is called automatically by World.sort","kind":"function","name":"sortLeftRight","params":[{"type":{"names":["Phaser.Sprite"]},"description":"The first Sprite to test. The Sprite must have an Arcade Physics Body.","name":"a"},{"type":{"names":["Phaser.Sprite"]},"description":"The second Sprite to test. The Sprite must have an Arcade Physics Body.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"A negative value if `a > b`, a positive value if `a < b` or 0 if `a === b` or the bodies are invalid."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#sortLeftRight","scope":"instance","___s":true},{"meta":{"range":[19570,20130],"filename":"World.js","lineno":455,"path":"src\\physics\\arcade"},"description":"A Sort function for sorting two bodies based on a RIGHT to LEFT sort direction.\r\rThis is called automatically by World.sort","kind":"function","name":"sortRightLeft","params":[{"type":{"names":["Phaser.Sprite"]},"description":"The first Sprite to test. The Sprite must have an Arcade Physics Body.","name":"a"},{"type":{"names":["Phaser.Sprite"]},"description":"The second Sprite to test. The Sprite must have an Arcade Physics Body.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"A negative value if `a > b`, a positive value if `a < b` or 0 if `a === b` or the bodies are invalid."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#sortRightLeft","scope":"instance","___s":true},{"meta":{"range":[20305,20865],"filename":"World.js","lineno":476,"path":"src\\physics\\arcade"},"description":"A Sort function for sorting two bodies based on a TOP to BOTTOM sort direction.\r\rThis is called automatically by World.sort","kind":"function","name":"sortTopBottom","params":[{"type":{"names":["Phaser.Sprite"]},"description":"The first Sprite to test. The Sprite must have an Arcade Physics Body.","name":"a"},{"type":{"names":["Phaser.Sprite"]},"description":"The second Sprite to test. The Sprite must have an Arcade Physics Body.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"A negative value if `a > b`, a positive value if `a < b` or 0 if `a === b` or the bodies are invalid."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#sortTopBottom","scope":"instance","___s":true},{"meta":{"range":[21040,21600],"filename":"World.js","lineno":497,"path":"src\\physics\\arcade"},"description":"A Sort function for sorting two bodies based on a BOTTOM to TOP sort direction.\r\rThis is called automatically by World.sort","kind":"function","name":"sortBottomTop","params":[{"type":{"names":["Phaser.Sprite"]},"description":"The first Sprite to test. The Sprite must have an Arcade Physics Body.","name":"a"},{"type":{"names":["Phaser.Sprite"]},"description":"The second Sprite to test. The Sprite must have an Arcade Physics Body.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"A negative value if `a > b`, a positive value if `a < b` or 0 if `a === b` or the bodies are invalid."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#sortBottomTop","scope":"instance","___s":true},{"meta":{"range":[21775,22406],"filename":"World.js","lineno":518,"path":"src\\physics\\arcade"},"description":"This method will sort a Groups hash array.\r\rIf the Group has `physicsSortDirection` set it will use the sort direction defined.\r\rOtherwise if the sortDirection parameter is undefined, or Group.physicsSortDirection is null, it will use Phaser.Physics.Arcade.sortDirection.\r\rBy changing Group.physicsSortDirection you can customise each Group to sort in a different order.","kind":"function","name":"sort","params":[{"type":{"names":["Phaser.Group"]},"description":"The Group to sort.","name":"group"},{"type":{"names":["integer"]},"optional":true,"description":"The sort direction used to sort this Group.","name":"sortDirection"}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#sort","scope":"instance","___s":true},{"meta":{"range":[44269,44618],"filename":"World.js","lineno":1061,"path":"src\\physics\\arcade"},"description":"Check for intersection against two bodies.","kind":"function","name":"intersects","params":[{"type":{"names":["Phaser.Physics.Arcade.Body"]},"description":"The first Body object to check.","name":"body1"},{"type":{"names":["Phaser.Physics.Arcade.Body"]},"description":"The second Body object to check.","name":"body2"}],"returns":[{"type":{"names":["boolean"]},"description":"True if they intersect, otherwise false."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#intersects","scope":"instance","___s":true},{"meta":{"range":[46040,46465],"filename":"World.js","lineno":1125,"path":"src\\physics\\arcade"},"description":"Checks to see if a circular Body intersects with a Rectangular Body.","kind":"function","name":"circleBodyIntersects","params":[{"type":{"names":["Phaser.Physics.Arcade.Body"]},"description":"The Body with `isCircle` set.","name":"circle"},{"type":{"names":["Phaser.Physics.Arcade.Body"]},"description":"The Body with `isCircle` not set (i.e. uses Rectangle shape)","name":"body"}],"returns":[{"type":{"names":["boolean"]},"description":"Returns true if the bodies intersect, otherwise false."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#circleBodyIntersects","scope":"instance","___s":true},{"meta":{"range":[54840,55413],"filename":"World.js","lineno":1331,"path":"src\\physics\\arcade"},"description":"Calculates the horizontal overlap between two Bodies and sets their properties accordingly, including:\r`touching.left`, `touching.right` and `overlapX`.","kind":"function","name":"getOverlapX","params":[{"type":{"names":["Phaser.Physics.Arcade.Body"]},"description":"The first Body to separate.","name":"body1"},{"type":{"names":["Phaser.Physics.Arcade.Body"]},"description":"The second Body to separate.","name":"body2"},{"type":{"names":["boolean"]},"description":"Is this an overlap only check, or part of separation?","name":"overlapOnly"}],"returns":[{"type":{"names":["float"]},"description":"Returns the amount of horizontal overlap between the two bodies."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#getOverlapX","scope":"instance","___s":true},{"meta":{"range":[57265,57831],"filename":"World.js","lineno":1395,"path":"src\\physics\\arcade"},"description":"Calculates the vertical overlap between two Bodies and sets their properties accordingly, including:\r`touching.up`, `touching.down` and `overlapY`.","kind":"function","name":"getOverlapY","params":[{"type":{"names":["Phaser.Physics.Arcade.Body"]},"description":"The first Body to separate.","name":"body1"},{"type":{"names":["Phaser.Physics.Arcade.Body"]},"description":"The second Body to separate.","name":"body2"},{"type":{"names":["boolean"]},"description":"Is this an overlap only check, or part of separation?","name":"overlapOnly"}],"returns":[{"type":{"names":["float"]},"description":"Returns the amount of vertical overlap between the two bodies."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#getOverlapY","scope":"instance","___s":true},{"meta":{"range":[65135,66048],"filename":"World.js","lineno":1599,"path":"src\\physics\\arcade"},"description":"Given a Group and a Pointer this will check to see which Group children overlap with the Pointer coordinates.\rEach child will be sent to the given callback for further processing.\rNote that the children are not checked for depth order, but simply if they overlap the Pointer or not.","kind":"function","name":"getObjectsUnderPointer","params":[{"type":{"names":["Phaser.Pointer"]},"description":"The Pointer to check.","name":"pointer"},{"type":{"names":["Phaser.Group"]},"description":"The Group to check.","name":"group"},{"type":{"names":["function"]},"optional":true,"description":"A callback function that is called if the object overlaps with the Pointer. The callback will be sent two parameters: the Pointer and the Object that overlapped with it.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which to run the callback.","name":"callbackContext"}],"returns":[{"type":{"names":["Array.<PIXI.DisplayObject>"]},"description":"An array of the Sprites from the Group that overlapped the Pointer coordinates."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#getObjectsUnderPointer","scope":"instance","___s":true},{"meta":{"range":[66357,67385],"filename":"World.js","lineno":1622,"path":"src\\physics\\arcade"},"description":"Given a Group and a location this will check to see which Group children overlap with the coordinates.\rEach child will be sent to the given callback for further processing.\rNote that the children are not checked for depth order, but simply if they overlap the coordinate or not.","kind":"function","name":"getObjectsAtLocation","params":[{"type":{"names":["number"]},"description":"The x coordinate to check.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to check.","name":"y"},{"type":{"names":["Phaser.Group"]},"description":"The Group to check.","name":"group"},{"type":{"names":["function"]},"optional":true,"description":"A callback function that is called if the object overlaps the coordinates. The callback will be sent two parameters: the callbackArg and the Object that overlapped the location.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which to run the callback.","name":"callbackContext"},{"type":{"names":["object"]},"optional":true,"description":"An argument to pass to the callback.","name":"callbackArg"}],"returns":[{"type":{"names":["Array.<PIXI.DisplayObject>"]},"description":"An array of the Sprites from the Group that overlapped the coordinates."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#getObjectsAtLocation","scope":"instance","___s":true},{"meta":{"range":[68262,69682],"filename":"World.js","lineno":1666,"path":"src\\physics\\arcade"},"description":"Move the given display object towards the destination object at a steady velocity.\rIf you specify a maxTime then it will adjust the speed (overwriting what you set) so it arrives at the destination in that number of seconds.\rTimings are approximate due to the way browser timers work. Allow for a variance of +- 50ms.\rNote: The display object does not continuously track the target. If the target changes location during transit the display object will not modify its course.\rNote: The display object doesn't stop moving once it reaches the destination coordinates.\rNote: Doesn't take into account acceleration, maxVelocity or drag (if you've set drag or acceleration too high this object may not move at all)","kind":"function","name":"moveToObject","params":[{"type":{"names":["any"]},"description":"The display object to move.","name":"displayObject"},{"type":{"names":["any"]},"description":"The display object to move towards. Can be any object but must have visible x/y properties.","name":"destination"},{"type":{"names":["number"]},"optional":true,"defaultvalue":60,"description":"The speed it will move, in pixels per second (default is 60 pixels/sec)","name":"speed"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Time given in milliseconds (1000 = 1 sec). If set the speed is adjusted so the object will arrive at destination in the given number of ms.","name":"maxTime"}],"returns":[{"type":{"names":["number"]},"description":"The angle (in radians) that the object should be visually set to in order to match its new velocity."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#moveToObject","scope":"instance","___s":true},{"meta":{"range":[70352,71661],"filename":"World.js","lineno":1701,"path":"src\\physics\\arcade"},"description":"Move the given display object towards the pointer at a steady velocity. If no pointer is given it will use Phaser.Input.activePointer.\rIf you specify a maxTime then it will adjust the speed (over-writing what you set) so it arrives at the destination in that number of seconds.\rTimings are approximate due to the way browser timers work. Allow for a variance of +- 50ms.\rNote: The display object does not continuously track the target. If the target changes location during transit the display object will not modify its course.\rNote: The display object doesn't stop moving once it reaches the destination coordinates.","kind":"function","name":"moveToPointer","params":[{"type":{"names":["any"]},"description":"The display object to move.","name":"displayObject"},{"type":{"names":["number"]},"optional":true,"defaultvalue":60,"description":"The speed it will move, in pixels per second (default is 60 pixels/sec)","name":"speed"},{"type":{"names":["Phaser.Pointer"]},"optional":true,"description":"The pointer to move towards. Defaults to Phaser.Input.activePointer.","name":"pointer"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Time given in milliseconds (1000 = 1 sec). If set the speed is adjusted so the object will arrive at destination in the given number of ms.","name":"maxTime"}],"returns":[{"type":{"names":["number"]},"description":"The angle (in radians) that the object should be visually set to in order to match its new velocity."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#moveToPointer","scope":"instance","___s":true},{"meta":{"range":[72354,73764],"filename":"World.js","lineno":1736,"path":"src\\physics\\arcade"},"description":"Move the given display object towards the x/y coordinates at a steady velocity.\rIf you specify a maxTime then it will adjust the speed (over-writing what you set) so it arrives at the destination in that number of seconds.\rTimings are approximate due to the way browser timers work. Allow for a variance of +- 50ms.\rNote: The display object does not continuously track the target. If the target changes location during transit the display object will not modify its course.\rNote: The display object doesn't stop moving once it reaches the destination coordinates.\rNote: Doesn't take into account acceleration, maxVelocity or drag (if you've set drag or acceleration too high this object may not move at all)","kind":"function","name":"moveToXY","params":[{"type":{"names":["any"]},"description":"The display object to move.","name":"displayObject"},{"type":{"names":["number"]},"description":"The x coordinate to move towards.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to move towards.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":60,"description":"The speed it will move, in pixels per second (default is 60 pixels/sec)","name":"speed"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Time given in milliseconds (1000 = 1 sec). If set the speed is adjusted so the object will arrive at destination in the given number of ms.","name":"maxTime"}],"returns":[{"type":{"names":["number"]},"description":"The angle (in radians) that the object should be visually set to in order to match its new velocity."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#moveToXY","scope":"instance","___s":true},{"meta":{"range":[74389,75298],"filename":"World.js","lineno":1772,"path":"src\\physics\\arcade"},"description":"Given the angle (in degrees) and speed calculate the velocity and return it as a Point object, or set it to the given point object.\rOne way to use this is: velocityFromAngle(angle, 200, sprite.velocity) which will set the values directly to the sprites velocity and not create a new Point object.","kind":"function","name":"velocityFromAngle","params":[{"type":{"names":["number"]},"description":"The angle in degrees calculated in clockwise positive direction (down = 90 degrees positive, right = 0 degrees positive, up = 90 degrees negative)","name":"angle"},{"type":{"names":["number"]},"optional":true,"defaultvalue":60,"description":"The speed it will move, in pixels per second sq.","name":"speed"},{"type":{"names":["Phaser.Point","object"]},"optional":true,"description":"The Point object in which the x and y properties will be set to the calculated velocity.","name":"point"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"- A Point where point.x contains the velocity x value and point.y contains the velocity y value."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#velocityFromAngle","scope":"instance","___s":true},{"meta":{"range":[75606,76405],"filename":"World.js","lineno":1791,"path":"src\\physics\\arcade"},"description":"Given the rotation (in radians) and speed calculate the velocity and return it as a Point object, or set it to the given point object.\rOne way to use this is: velocityFromRotation(rotation, 200, sprite.velocity) which will set the values directly to the sprites velocity and not create a new Point object.","kind":"function","name":"velocityFromRotation","params":[{"type":{"names":["number"]},"description":"The angle in radians.","name":"rotation"},{"type":{"names":["number"]},"optional":true,"defaultvalue":60,"description":"The speed it will move, in pixels per second sq.","name":"speed"},{"type":{"names":["Phaser.Point","object"]},"optional":true,"description":"The Point object in which the x and y properties will be set to the calculated velocity.","name":"point"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"- A Point where point.x contains the velocity x value and point.y contains the velocity y value."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#velocityFromRotation","scope":"instance","___s":true},{"meta":{"range":[76675,77506],"filename":"World.js","lineno":1810,"path":"src\\physics\\arcade"},"description":"Given the rotation (in radians) and speed calculate the acceleration and return it as a Point object, or set it to the given point object.\rOne way to use this is: accelerationFromRotation(rotation, 200, sprite.acceleration) which will set the values directly to the sprites acceleration and not create a new Point object.","kind":"function","name":"accelerationFromRotation","params":[{"type":{"names":["number"]},"description":"The angle in radians.","name":"rotation"},{"type":{"names":["number"]},"optional":true,"defaultvalue":60,"description":"The speed it will move, in pixels per second sq.","name":"speed"},{"type":{"names":["Phaser.Point","object"]},"optional":true,"description":"The Point object in which the x and y properties will be set to the calculated acceleration.","name":"point"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"- A Point where point.x contains the acceleration x value and point.y contains the acceleration y value."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#accelerationFromRotation","scope":"instance","___s":true},{"meta":{"range":[77780,78950],"filename":"World.js","lineno":1829,"path":"src\\physics\\arcade"},"description":"Sets the acceleration.x/y property on the display object so it will move towards the target at the given speed (in pixels per second sq.)\rYou must give a maximum speed value, beyond which the display object won't go any faster.\rNote: The display object does not continuously track the target. If the target changes location during transit the display object will not modify its course.\rNote: The display object doesn't stop moving once it reaches the destination coordinates.","kind":"function","name":"accelerateToObject","params":[{"type":{"names":["any"]},"description":"The display object to move.","name":"displayObject"},{"type":{"names":["any"]},"description":"The display object to move towards. Can be any object but must have visible x/y properties.","name":"destination"},{"type":{"names":["number"]},"optional":true,"defaultvalue":60,"description":"The speed it will accelerate in pixels per second.","name":"speed"},{"type":{"names":["number"]},"optional":true,"defaultvalue":500,"description":"The maximum x velocity the display object can reach.","name":"xSpeedMax"},{"type":{"names":["number"]},"optional":true,"defaultvalue":500,"description":"The maximum y velocity the display object can reach.","name":"ySpeedMax"}],"returns":[{"type":{"names":["number"]},"description":"The angle (in radians) that the object should be visually set to in order to match its new trajectory."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#accelerateToObject","scope":"instance","___s":true},{"meta":{"range":[79498,80655],"filename":"World.js","lineno":1858,"path":"src\\physics\\arcade"},"description":"Sets the acceleration.x/y property on the display object so it will move towards the target at the given speed (in pixels per second sq.)\rYou must give a maximum speed value, beyond which the display object won't go any faster.\rNote: The display object does not continuously track the target. If the target changes location during transit the display object will not modify its course.\rNote: The display object doesn't stop moving once it reaches the destination coordinates.","kind":"function","name":"accelerateToPointer","params":[{"type":{"names":["any"]},"description":"The display object to move.","name":"displayObject"},{"type":{"names":["Phaser.Pointer"]},"optional":true,"description":"The pointer to move towards. Defaults to Phaser.Input.activePointer.","name":"pointer"},{"type":{"names":["number"]},"optional":true,"defaultvalue":60,"description":"The speed it will accelerate in pixels per second.","name":"speed"},{"type":{"names":["number"]},"optional":true,"defaultvalue":500,"description":"The maximum x velocity the display object can reach.","name":"xSpeedMax"},{"type":{"names":["number"]},"optional":true,"defaultvalue":500,"description":"The maximum y velocity the display object can reach.","name":"ySpeedMax"}],"returns":[{"type":{"names":["number"]},"description":"The angle (in radians) that the object should be visually set to in order to match its new trajectory."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#accelerateToPointer","scope":"instance","___s":true},{"meta":{"range":[81279,82462],"filename":"World.js","lineno":1888,"path":"src\\physics\\arcade"},"description":"Sets the acceleration.x/y property on the display object so it will move towards the x/y coordinates at the given speed (in pixels per second sq.)\rYou must give a maximum speed value, beyond which the display object won't go any faster.\rNote: The display object does not continuously track the target. If the target changes location during transit the display object will not modify its course.\rNote: The display object doesn't stop moving once it reaches the destination coordinates.","kind":"function","name":"accelerateToXY","params":[{"type":{"names":["any"]},"description":"The display object to move.","name":"displayObject"},{"type":{"names":["number"]},"description":"The x coordinate to accelerate towards.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to accelerate towards.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":60,"description":"The speed it will accelerate in pixels per second.","name":"speed"},{"type":{"names":["number"]},"optional":true,"defaultvalue":500,"description":"The maximum x velocity the display object can reach.","name":"xSpeedMax"},{"type":{"names":["number"]},"optional":true,"defaultvalue":500,"description":"The maximum y velocity the display object can reach.","name":"ySpeedMax"}],"returns":[{"type":{"names":["number"]},"description":"The angle (in radians) that the object should be visually set to in order to match its new trajectory."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#accelerateToXY","scope":"instance","___s":true},{"meta":{"range":[82989,83726],"filename":"World.js","lineno":1918,"path":"src\\physics\\arcade"},"description":"Find the distance between two display objects (like Sprites).\r\rThe optional `world` argument allows you to return the result based on the Game Objects `world` property,\rinstead of its `x` and `y` values. This is useful of the object has been nested inside an offset Group,\ror parent Game Object.","kind":"function","name":"distanceBetween","params":[{"type":{"names":["any"]},"description":"The Display Object to test from.","name":"source"},{"type":{"names":["any"]},"description":"The Display Object to test to.","name":"target"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Calculate the distance using World coordinates (true), or Object coordinates (false, the default)","name":"world"}],"returns":[{"type":{"names":["number"]},"description":"The distance between the source and target objects."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#distanceBetween","scope":"instance","___s":true},{"meta":{"range":[84072,85156],"filename":"World.js","lineno":1942,"path":"src\\physics\\arcade"},"description":"Find the distance between a display object (like a Sprite) and the given x/y coordinates.\rThe calculation is made from the display objects x/y coordinate. This may be the top-left if its anchor hasn't been changed.\rIf you need to calculate from the center of a display object instead use the method distanceBetweenCenters()\r\rThe optional `world` argument allows you to return the result based on the Game Objects `world` property,\rinstead of its `x` and `y` values. This is useful of the object has been nested inside an offset Group,\ror parent Game Object.","kind":"function","name":"distanceToXY","params":[{"type":{"names":["any"]},"description":"The Display Object to test from.","name":"displayObject"},{"type":{"names":["number"]},"description":"The x coordinate to move towards.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to move towards.","name":"y"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Calculate the distance using World coordinates (true), or Object coordinates (false, the default)","name":"world"}],"returns":[{"type":{"names":["number"]},"description":"The distance between the object and the x/y coordinates."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#distanceToXY","scope":"instance","___s":true},{"meta":{"range":[85492,86616],"filename":"World.js","lineno":1969,"path":"src\\physics\\arcade"},"description":"Find the distance between a display object (like a Sprite) and a Pointer. If no Pointer is given the Input.activePointer is used.\rThe calculation is made from the display objects x/y coordinate. This may be the top-left if its anchor hasn't been changed.\rIf you need to calculate from the center of a display object instead use the method distanceBetweenCenters()\r\rThe optional `world` argument allows you to return the result based on the Game Objects `world` property,\rinstead of its `x` and `y` values. This is useful of the object has been nested inside an offset Group,\ror parent Game Object.","kind":"function","name":"distanceToPointer","params":[{"type":{"names":["any"]},"description":"The Display Object to test from.","name":"displayObject"},{"type":{"names":["Phaser.Pointer"]},"optional":true,"description":"The Phaser.Pointer to test to. If none is given then Input.activePointer is used.","name":"pointer"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Calculate the distance using World coordinates (true), or Object coordinates (false, the default)","name":"world"}],"returns":[{"type":{"names":["number"]},"description":"The distance between the object and the Pointer."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#distanceToPointer","scope":"instance","___s":true},{"meta":{"range":[87093,87848],"filename":"World.js","lineno":1996,"path":"src\\physics\\arcade"},"description":"Find the angle in radians between two display objects (like Sprites).\r\rThe optional `world` argument allows you to return the result based on the Game Objects `world` property,\rinstead of its `x` and `y` values. This is useful of the object has been nested inside an offset Group,\ror parent Game Object.","kind":"function","name":"angleBetween","params":[{"type":{"names":["any"]},"description":"The Display Object to test from.","name":"source"},{"type":{"names":["any"]},"description":"The Display Object to test to.","name":"target"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Calculate the angle using World coordinates (true), or Object coordinates (false, the default)","name":"world"}],"returns":[{"type":{"names":["number"]},"description":"The angle in radians between the source and target display objects."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#angleBetween","scope":"instance","___s":true},{"meta":{"range":[88227,88604],"filename":"World.js","lineno":2024,"path":"src\\physics\\arcade"},"description":"Find the angle in radians between centers of two display objects (like Sprites).","kind":"function","name":"angleBetweenCenters","params":[{"type":{"names":["any"]},"description":"The Display Object to test from.","name":"source"},{"type":{"names":["any"]},"description":"The Display Object to test to.","name":"target"}],"returns":[{"type":{"names":["number"]},"description":"The angle in radians between the source and target display objects."}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#angleBetweenCenters","scope":"instance","___s":true},{"meta":{"range":[88818,89668],"filename":"World.js","lineno":2041,"path":"src\\physics\\arcade"},"description":"Find the angle in radians between a display object (like a Sprite) and the given x/y coordinate.\r\rThe optional `world` argument allows you to return the result based on the Game Objects `world` property,\rinstead of its `x` and `y` values. This is useful of the object has been nested inside an offset Group,\ror parent Game Object.","kind":"function","name":"angleToXY","params":[{"type":{"names":["any"]},"description":"The Display Object to test from.","name":"displayObject"},{"type":{"names":["number"]},"description":"The x coordinate to get the angle to.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to get the angle to.","name":"y"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Calculate the angle using World coordinates (true), or Object coordinates (false, the default)","name":"world"}],"returns":[{"type":{"names":["number"]},"description":"The angle in radians between displayObject.x/y to Pointer.x/y"}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#angleToXY","scope":"instance","___s":true},{"meta":{"range":[90037,90914],"filename":"World.js","lineno":2070,"path":"src\\physics\\arcade"},"description":"Find the angle in radians between a display object (like a Sprite) and a Pointer, taking their x/y and center into account.\r\rThe optional `world` argument allows you to return the result based on the Game Objects `world` property,\rinstead of its `x` and `y` values. This is useful of the object has been nested inside an offset Group,\ror parent Game Object.","kind":"function","name":"angleToPointer","params":[{"type":{"names":["any"]},"description":"The Display Object to test from.","name":"displayObject"},{"type":{"names":["Phaser.Pointer"]},"optional":true,"description":"The Phaser.Pointer to test to. If none is given then Input.activePointer is used.","name":"pointer"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Calculate the angle using World coordinates (true), or Object coordinates (false, the default)","name":"world"}],"returns":[{"type":{"names":["number"]},"description":"The angle in radians between displayObject.x/y to Pointer.x/y"}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#angleToPointer","scope":"instance","___s":true},{"meta":{"range":[91424,91958],"filename":"World.js","lineno":2099,"path":"src\\physics\\arcade"},"description":"Find the angle in radians between a display object (like a Sprite) and a Pointer, \rtaking their x/y and center into account relative to the world.","kind":"function","name":"worldAngleToPointer","params":[{"type":{"names":["any"]},"description":"The DisplayObjerct to test from.","name":"displayObject"},{"type":{"names":["Phaser.Pointer"]},"optional":true,"description":"The Phaser.Pointer to test to. If none is given then Input.activePointer is used.","name":"pointer"}],"returns":[{"type":{"names":["number"]},"description":"The angle in radians between displayObject.world.x/y to Pointer.worldX / worldY"}],"memberof":"Phaser.Physics.Arcade","longname":"Phaser.Physics.Arcade#worldAngleToPointer","scope":"instance","___s":true},{"meta":{"range":[748,3135],"filename":"AABB.js","lineno":20,"path":"src\\physics\\ninja"},"description":"Ninja Physics AABB constructor.\rNote: This class could be massively optimised and reduced in size. I leave that challenge up to you.","kind":"class","classdesc":"Phaser.Physics.Ninja.AABB","params":[{"type":{"names":["Phaser.Physics.Ninja.Body"]},"description":"The body that owns this shape.","name":"body"},{"type":{"names":["number"]},"description":"The x coordinate to create this shape at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to create this shape at.","name":"y"},{"type":{"names":["number"]},"description":"The width of this AABB.","name":"width"},{"type":{"names":["number"]},"description":"The height of this AABB.","name":"height"}],"name":"AABB","longname":"Phaser.Physics.Ninja.AABB","memberof":"Phaser.Physics.Ninja","scope":"static","___s":true},{"meta":{"range":[939,955],"filename":"AABB.js","lineno":25,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Physics.Ninja.Body"]},"description":"A reference to the body that owns this shape.","name":"system"}],"name":"body","longname":"Phaser.Physics.Ninja.AABB#body","kind":"member","memberof":"Phaser.Physics.Ninja.AABB","scope":"instance","___s":true},{"meta":{"range":[1065,1090],"filename":"AABB.js","lineno":30,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Physics.Ninja"]},"description":"A reference to the physics system.","name":"system"}],"name":"system","longname":"Phaser.Physics.Ninja.AABB#system","kind":"member","memberof":"Phaser.Physics.Ninja.AABB","scope":"instance","___s":true},{"meta":{"range":[1183,1216],"filename":"AABB.js","lineno":35,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The position of this object.","name":"pos"}],"name":"pos","longname":"Phaser.Physics.Ninja.AABB#pos","kind":"member","memberof":"Phaser.Physics.Ninja.AABB","scope":"instance","___s":true},{"meta":{"range":[1335,1371],"filename":"AABB.js","lineno":40,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The position of this object in the previous update.","name":"oldpos"}],"name":"oldpos","longname":"Phaser.Physics.Ninja.AABB#oldpos","kind":"member","memberof":"Phaser.Physics.Ninja.AABB","scope":"instance","___s":true},{"meta":{"range":[1461,1490],"filename":"AABB.js","lineno":46,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"Half the width.","name":"xw"}],"readonly":true,"name":"xw","longname":"Phaser.Physics.Ninja.AABB#xw","kind":"member","memberof":"Phaser.Physics.Ninja.AABB","scope":"instance","___s":true},{"meta":{"range":[1581,1611],"filename":"AABB.js","lineno":52,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"Half the height.","name":"xw"}],"readonly":true,"name":"yw","longname":"Phaser.Physics.Ninja.AABB#yw","kind":"member","memberof":"Phaser.Physics.Ninja.AABB","scope":"instance","___s":true},{"meta":{"range":[1699,1717],"filename":"AABB.js","lineno":58,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"The width.","name":"width"}],"readonly":true,"name":"width","longname":"Phaser.Physics.Ninja.AABB#width","kind":"member","memberof":"Phaser.Physics.Ninja.AABB","scope":"instance","___s":true},{"meta":{"range":[1807,1827],"filename":"AABB.js","lineno":64,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"The height.","name":"height"}],"readonly":true,"name":"height","longname":"Phaser.Physics.Ninja.AABB#height","kind":"member","memberof":"Phaser.Physics.Ninja.AABB","scope":"instance","___s":true},{"meta":{"range":[2121,2155],"filename":"AABB.js","lineno":81,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The velocity of this object.","name":"velocity"}],"name":"velocity","longname":"Phaser.Physics.Ninja.AABB#velocity","kind":"member","memberof":"Phaser.Physics.Ninja.AABB","scope":"instance","___s":true},{"meta":{"range":[2269,2298],"filename":"AABB.js","lineno":86,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["object"]},"description":"All of the collision response handlers.","name":"aabbTileProjections"}],"name":"aabbTileProjections","longname":"Phaser.Physics.Ninja.AABB#aabbTileProjections","kind":"member","memberof":"Phaser.Physics.Ninja.AABB","scope":"instance","___s":true},{"meta":{"range":[3393,3498],"filename":"AABB.js","lineno":108,"path":"src\\physics\\ninja"},"description":"Updates this AABBs position.","kind":"function","name":"integrate","memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#integrate","scope":"instance","___s":true},{"meta":{"range":[3981,4348],"filename":"AABB.js","lineno":128,"path":"src\\physics\\ninja"},"description":"Process a collision partner-agnostic collision response and apply the resulting forces.","kind":"function","name":"reportCollision","params":[{"type":{"names":["number"]},"description":"The tangent velocity","name":"px"},{"type":{"names":["number"]},"description":"The tangent velocity","name":"py"},{"type":{"names":["number"]},"description":"Collision normal","name":"dx"},{"type":{"names":["number"]},"description":"Collision normal","name":"dy"}],"memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#reportCollision","scope":"instance","___s":true},{"meta":{"range":[6061,6396],"filename":"AABB.js","lineno":202,"path":"src\\physics\\ninja"},"description":"Process a world collision and apply the resulting forces.","kind":"function","name":"reportCollisionVsWorld","params":[{"type":{"names":["number"]},"description":"The tangent velocity","name":"px"},{"type":{"names":["number"]},"description":"The tangent velocity","name":"py"},{"type":{"names":["number"]},"description":"Collision normal","name":"dx"},{"type":{"names":["number"]},"description":"Collision normal","name":"dy"}],"memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#reportCollisionVsWorld","scope":"instance","___s":true},{"meta":{"range":[6515,6575],"filename":"AABB.js","lineno":216,"path":"src\\physics\\ninja"},"kind":"function","name":"reverse","memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#reverse","scope":"instance","___s":true},{"meta":{"range":[7461,7916],"filename":"AABB.js","lineno":248,"path":"src\\physics\\ninja"},"description":"Process a body collision and apply the resulting forces. Still very much WIP and doesn't work fully. Feel free to fix!","kind":"function","name":"reportCollisionVsBody","params":[{"type":{"names":["number"]},"description":"The tangent velocity","name":"px"},{"type":{"names":["number"]},"description":"The tangent velocity","name":"py"},{"type":{"names":["number"]},"description":"Collision normal","name":"dx"},{"type":{"names":["number"]},"description":"Collision normal","name":"dy"},{"type":{"names":["number"]},"description":"Object this AABB collided with","name":"obj"}],"memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#reportCollisionVsBody","scope":"instance","___s":true},{"meta":{"range":[9044,9174],"filename":"AABB.js","lineno":295,"path":"src\\physics\\ninja"},"description":"Collides this AABB against the world bounds.","kind":"function","name":"collideWorldBounds","memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#collideWorldBounds","scope":"instance","___s":true},{"meta":{"range":[10036,10233],"filename":"AABB.js","lineno":336,"path":"src\\physics\\ninja"},"description":"Collides this AABB against a AABB.","kind":"function","name":"collideAABBVsAABB","params":[{"type":{"names":["Phaser.Physics.Ninja.AABB"]},"description":"The AABB to collide against.","name":"aabb"}],"memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#collideAABBVsAABB","scope":"instance","___s":true},{"meta":{"range":[12029,12226],"filename":"AABB.js","lineno":408,"path":"src\\physics\\ninja"},"description":"Collides this AABB against a Tile.","kind":"function","name":"collideAABBVsTile","params":[{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile to collide against.","name":"tile"}],"memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#collideAABBVsTile","scope":"instance","___s":true},{"meta":{"range":[13834,14306],"filename":"AABB.js","lineno":467,"path":"src\\physics\\ninja"},"description":"Resolves tile collision.","kind":"function","name":"resolveTile","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["Phaser.Physics.Ninja.AABB"]},"description":"The AABB involved in the collision.","name":"body"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"tile"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the collision was processed, otherwise false."}],"memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#resolveTile","scope":"instance","___s":true},{"meta":{"range":[14681,15130],"filename":"AABB.js","lineno":491,"path":"src\\physics\\ninja"},"description":"Resolves Full tile collision.","kind":"function","name":"projAABB_Full","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["Phaser.Physics.Ninja.AABB"]},"description":"The AABB involved in the collision.","name":"obj"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The result of the collision."}],"memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#projAABB_Full","scope":"instance","___s":true},{"meta":{"range":[15353,15802],"filename":"AABB.js","lineno":510,"path":"src\\physics\\ninja"},"description":"Resolves Half tile collision.","kind":"function","name":"projAABB_Half","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["Phaser.Physics.Ninja.AABB"]},"description":"The AABB involved in the collision.","name":"obj"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The result of the collision."}],"memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#projAABB_Half","scope":"instance","___s":true},{"meta":{"range":[17695,18150],"filename":"AABB.js","lineno":569,"path":"src\\physics\\ninja"},"description":"Resolves 45 Degree tile collision.","kind":"function","name":"projAABB_45Deg","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["Phaser.Physics.Ninja.AABB"]},"description":"The AABB involved in the collision.","name":"obj"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The result of the collision."}],"memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#projAABB_45Deg","scope":"instance","___s":true},{"meta":{"range":[19578,20034],"filename":"AABB.js","lineno":622,"path":"src\\physics\\ninja"},"description":"Resolves 22 Degree tile collision.","kind":"function","name":"projAABB_22DegS","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["Phaser.Physics.Ninja.AABB"]},"description":"The AABB involved in the collision.","name":"obj"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The result of the collision."}],"memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#projAABB_22DegS","scope":"instance","___s":true},{"meta":{"range":[22742,23198],"filename":"AABB.js","lineno":702,"path":"src\\physics\\ninja"},"description":"Resolves 22 Degree tile collision.","kind":"function","name":"projAABB_22DegB","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["Phaser.Physics.Ninja.AABB"]},"description":"The AABB involved in the collision.","name":"obj"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The result of the collision."}],"memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#projAABB_22DegB","scope":"instance","___s":true},{"meta":{"range":[24618,25074],"filename":"AABB.js","lineno":755,"path":"src\\physics\\ninja"},"description":"Resolves 67 Degree tile collision.","kind":"function","name":"projAABB_67DegS","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["Phaser.Physics.Ninja.AABB"]},"description":"The AABB involved in the collision.","name":"obj"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The result of the collision."}],"memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#projAABB_67DegS","scope":"instance","___s":true},{"meta":{"range":[27457,27913],"filename":"AABB.js","lineno":834,"path":"src\\physics\\ninja"},"description":"Resolves 67 Degree tile collision.","kind":"function","name":"projAABB_67DegB","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["Phaser.Physics.Ninja.AABB"]},"description":"The AABB involved in the collision.","name":"obj"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The result of the collision."}],"memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#projAABB_67DegB","scope":"instance","___s":true},{"meta":{"range":[29329,29782],"filename":"AABB.js","lineno":885,"path":"src\\physics\\ninja"},"description":"Resolves Convex tile collision.","kind":"function","name":"projAABB_Convex","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["Phaser.Physics.Ninja.AABB"]},"description":"The AABB involved in the collision.","name":"obj"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The result of the collision."}],"memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#projAABB_Convex","scope":"instance","___s":true},{"meta":{"range":[31328,31783],"filename":"AABB.js","lineno":935,"path":"src\\physics\\ninja"},"description":"Resolves Concave tile collision.","kind":"function","name":"projAABB_Concave","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["Phaser.Physics.Ninja.AABB"]},"description":"The AABB involved in the collision.","name":"obj"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The result of the collision."}],"memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#projAABB_Concave","scope":"instance","___s":true},{"meta":{"range":[33577,33701],"filename":"AABB.js","lineno":993,"path":"src\\physics\\ninja"},"description":"Destroys this AABB's reference to Body and System","kind":"function","name":"destroy","memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#destroy","scope":"instance","___s":true},{"meta":{"range":[33800,34314],"filename":"AABB.js","lineno":1003,"path":"src\\physics\\ninja"},"description":"Render this AABB for debugging purposes.","kind":"function","name":"render","params":[{"type":{"names":["object"]},"description":"The context to render to.","name":"context"},{"type":{"names":["number"]},"description":"X offset from AABB's position to render at.","name":"xOffset"},{"type":{"names":["number"]},"description":"Y offset from AABB's position to render at.","name":"yOffset"},{"type":{"names":["string"]},"description":"color of the debug shape to be rendered. (format is css color string).","name":"color"},{"type":{"names":["boolean"]},"description":"Render the shape as solid (true) or hollow (false).","name":"filled"}],"memberof":"Phaser.Physics.Ninja.AABB","longname":"Phaser.Physics.Ninja.AABB#render","scope":"instance","___s":true},{"meta":{"range":[1443,6439],"filename":"Body.js","lineno":23,"path":"src\\physics\\ninja"},"description":"The Physics Body is linked to a single Sprite. All physics operations should be performed against the body rather than\rthe Sprite itself. For example you can set the velocity, bounce values etc all on the Body.","kind":"class","classdesc":"Phaser.Physics.Ninja.Body","params":[{"type":{"names":["Phaser.Physics.Ninja"]},"description":"The physics system this Body belongs to.","name":"system"},{"type":{"names":["Phaser.Sprite"]},"description":"The Sprite object this physics body belongs to.","name":"sprite"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The type of Ninja shape to create. 1 = AABB, 2 = Circle or 3 = Tile.","name":"type"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"If this body is using a Tile shape, you can set the Tile id here, i.e. Phaser.Physics.Ninja.Tile.SLOPE_45DEGpn, Phaser.Physics.Ninja.Tile.CONVEXpp, etc.","name":"id"},{"type":{"names":["number"]},"optional":true,"defaultvalue":16,"description":"If this body is using a Circle shape this controls the radius.","name":"radius"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of this Body. This is only used if a sprite is not provided.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of this Body. This is only used if a sprite is not provided.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The width of this Body. This is only used if a sprite is not provided.","name":"width"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The height of this Body. This is only used if a sprite is not provided.","name":"height"}],"name":"Body","longname":"Phaser.Physics.Ninja.Body","memberof":"Phaser.Physics.Ninja","scope":"static","___s":true},{"meta":{"range":[1800,1820],"filename":"Body.js","lineno":34,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Sprite"]},"description":"Reference to the parent Sprite.","name":"sprite"}],"name":"sprite","longname":"Phaser.Physics.Ninja.Body#sprite","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[1909,1932],"filename":"Body.js","lineno":39,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.Physics.Ninja.Body#game","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[2040,2072],"filename":"Body.js","lineno":44,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"The type of physics system this body belongs to.","name":"type"}],"name":"type","longname":"Phaser.Physics.Ninja.Body#type","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[2174,2194],"filename":"Body.js","lineno":49,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Physics.Ninja"]},"description":"The parent physics system.","name":"system"}],"name":"system","longname":"Phaser.Physics.Ninja.Body#system","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[2322,2338],"filename":"Body.js","lineno":54,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Physics.Ninja.AABB"]},"description":"The AABB object this body is using for collision.","name":"aabb"}],"name":"aabb","longname":"Phaser.Physics.Ninja.Body#aabb","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[2466,2482],"filename":"Body.js","lineno":59,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile object this body is using for collision.","name":"tile"}],"name":"tile","longname":"Phaser.Physics.Ninja.Body#tile","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[2616,2634],"filename":"Body.js","lineno":64,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Physics.Ninja.Circle"]},"description":"The Circle object this body is using for collision.","name":"circle"}],"name":"circle","longname":"Phaser.Physics.Ninja.Body#circle","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[2731,2748],"filename":"Body.js","lineno":69,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["object"]},"description":"A local reference to the body shape.","name":"shape"}],"name":"shape","longname":"Phaser.Physics.Ninja.Body#shape","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[2958,2971],"filename":"Body.js","lineno":77,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"The drag applied to this object as it moves.","name":"drag"}],"defaultvalue":1,"name":"drag","longname":"Phaser.Physics.Ninja.Body#drag","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[3099,3119],"filename":"Body.js","lineno":83,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"The friction applied to this object as it moves.","name":"friction"}],"defaultvalue":0.05,"name":"friction","longname":"Phaser.Physics.Ninja.Body#friction","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[3297,3318],"filename":"Body.js","lineno":89,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"How much of the world gravity should be applied to this object? 1 = all of it, 0.5 = 50%, etc.","name":"gravityScale"}],"defaultvalue":1,"name":"gravityScale","longname":"Phaser.Physics.Ninja.Body#gravityScale","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[3521,3538],"filename":"Body.js","lineno":95,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"The bounciness of this object when it collides. A value between 0 and 1. We recommend setting it to 0.999 to avoid jittering.","name":"bounce"}],"defaultvalue":0.3,"name":"bounce","longname":"Phaser.Physics.Ninja.Body#bounce","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[3658,3692],"filename":"Body.js","lineno":100,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The velocity in pixels per second sq. of the Body.","name":"velocity"}],"name":"velocity","longname":"Phaser.Physics.Ninja.Body#velocity","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[3837,3862],"filename":"Body.js","lineno":106,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"A const reference to the direction the Body is traveling or facing.","name":"facing"}],"name":"facing","longname":"Phaser.Physics.Ninja.Body#facing","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[4032,4054],"filename":"Body.js","lineno":112,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["boolean"]},"description":"An immovable Body will not receive any impacts from other bodies. Not fully implemented.","name":"immovable"}],"defaultvalue":false,"name":"immovable","longname":"Phaser.Physics.Ninja.Body#immovable","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[4341,4371],"filename":"Body.js","lineno":118,"path":"src\\physics\\ninja"},"description":"A Body can be set to collide against the World bounds automatically and rebound back into the World if this is set to true. Otherwise it will leave the World.","properties":[{"type":{"names":["boolean"]},"description":"Should the Body collide with the World bounds?","name":"collideWorldBounds"}],"name":"collideWorldBounds","longname":"Phaser.Physics.Ninja.Body#collideWorldBounds","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[4700,4795],"filename":"Body.js","lineno":125,"path":"src\\physics\\ninja"},"description":"Set the checkCollision properties to control which directions collision is processed for this Body.\rFor example checkCollision.up = false means it won't collide when the collision happened while moving up.","properties":[{"type":{"names":["object"]},"description":"An object containing allowed collision.","name":"checkCollision"}],"name":"checkCollision","longname":"Phaser.Physics.Ninja.Body#checkCollision","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[5078,5159],"filename":"Body.js","lineno":132,"path":"src\\physics\\ninja"},"description":"This object is populated with boolean values when the Body collides with another.\rtouching.up = true means the collision happened to the top of this Body for example.","properties":[{"type":{"names":["object"]},"description":"An object containing touching results.","name":"touching"}],"name":"touching","longname":"Phaser.Physics.Ninja.Body#touching","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[5371,5455],"filename":"Body.js","lineno":138,"path":"src\\physics\\ninja"},"description":"This object is populated with previous touching values from the bodies previous collision.","properties":[{"type":{"names":["object"]},"description":"An object containing previous touching results.","name":"wasTouching"}],"name":"wasTouching","longname":"Phaser.Physics.Ninja.Body#wasTouching","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[5616,5633],"filename":"Body.js","lineno":144,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"The maximum speed this body can travel at (taking drag and friction into account)","name":"maxSpeed"}],"defaultvalue":8,"name":"maxSpeed","longname":"Phaser.Physics.Ninja.Body#maxSpeed","kind":"member","memberof":"Phaser.Physics.Ninja.Body","scope":"instance","___s":true},{"meta":{"range":[6491,6602],"filename":"Body.js","lineno":184,"path":"src\\physics\\ninja"},"description":"Internal method.","kind":"function","name":"preUpdate","access":"protected","memberof":"Phaser.Physics.Ninja.Body","longname":"Phaser.Physics.Ninja.Body#preUpdate","scope":"instance","___s":true},{"meta":{"range":[7288,7400],"filename":"Body.js","lineno":214,"path":"src\\physics\\ninja"},"description":"Internal method.","kind":"function","name":"postUpdate","access":"protected","memberof":"Phaser.Physics.Ninja.Body","longname":"Phaser.Physics.Ninja.Body#postUpdate","scope":"instance","___s":true},{"meta":{"range":[8370,8485],"filename":"Body.js","lineno":257,"path":"src\\physics\\ninja"},"description":"Stops all movement of this body.","kind":"function","name":"setZeroVelocity","memberof":"Phaser.Physics.Ninja.Body","longname":"Phaser.Physics.Ninja.Body#setZeroVelocity","scope":"instance","___s":true},{"meta":{"range":[8639,9053],"filename":"Body.js","lineno":269,"path":"src\\physics\\ninja"},"description":"Moves the Body forwards based on its current angle and the given speed.\rThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms).","kind":"function","name":"moveTo","params":[{"type":{"names":["number"]},"description":"The speed at which it should move forwards.","name":"speed"},{"type":{"names":["number"]},"description":"The angle in which it should move, given in degrees.","name":"angle"}],"memberof":"Phaser.Physics.Body","longname":"Phaser.Physics.Body#moveTo","scope":"instance","___s":true},{"meta":{"range":[9393,9815],"filename":"Body.js","lineno":287,"path":"src\\physics\\ninja"},"description":"Moves the Body backwards based on its current angle and the given speed.\rThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms).","kind":"function","name":"moveBackward","params":[{"type":{"names":["number"]},"description":"The speed at which it should move backwards.","name":"speed"},{"type":{"names":["number"]},"description":"The angle in which it should move, given in degrees.","name":"angle"}],"memberof":"Phaser.Physics.Body","longname":"Phaser.Physics.Body#moveBackward","scope":"instance","___s":true},{"meta":{"range":[10158,10548],"filename":"Body.js","lineno":305,"path":"src\\physics\\ninja"},"description":"If this Body is dynamic then this will move it to the left by setting its x velocity to the given speed.\rThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms).","kind":"function","name":"moveLeft","params":[{"type":{"names":["number"]},"description":"The speed at which it should move to the left, in pixels per second.","name":"speed"}],"memberof":"Phaser.Physics.Body","longname":"Phaser.Physics.Body#moveLeft","scope":"instance","___s":true},{"meta":{"range":[10808,11201],"filename":"Body.js","lineno":320,"path":"src\\physics\\ninja"},"description":"If this Body is dynamic then this will move it to the right by setting its x velocity to the given speed.\rThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms).","kind":"function","name":"moveRight","params":[{"type":{"names":["number"]},"description":"The speed at which it should move to the right, in pixels per second.","name":"speed"}],"memberof":"Phaser.Physics.Body","longname":"Phaser.Physics.Body#moveRight","scope":"instance","___s":true},{"meta":{"range":[11461,11831],"filename":"Body.js","lineno":335,"path":"src\\physics\\ninja"},"description":"If this Body is dynamic then this will move it up by setting its y velocity to the given speed.\rThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms).","kind":"function","name":"moveUp","params":[{"type":{"names":["number"]},"description":"The speed at which it should move up, in pixels per second.","name":"speed"}],"memberof":"Phaser.Physics.Body","longname":"Phaser.Physics.Body#moveUp","scope":"instance","___s":true},{"meta":{"range":[12089,12465],"filename":"Body.js","lineno":350,"path":"src\\physics\\ninja"},"description":"If this Body is dynamic then this will move it down by setting its y velocity to the given speed.\rThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms).","kind":"function","name":"moveDown","params":[{"type":{"names":["number"]},"description":"The speed at which it should move down, in pixels per second.","name":"speed"}],"memberof":"Phaser.Physics.Body","longname":"Phaser.Physics.Body#moveDown","scope":"instance","___s":true},{"meta":{"range":[12724,12850],"filename":"Body.js","lineno":365,"path":"src\\physics\\ninja"},"description":"Resets all Body values and repositions on the Sprite.","kind":"function","name":"reset","memberof":"Phaser.Physics.Ninja.Body","longname":"Phaser.Physics.Ninja.Body#reset","scope":"instance","___s":true},{"meta":{"range":[13070,13232],"filename":"Body.js","lineno":381,"path":"src\\physics\\ninja"},"description":"Returns the absolute delta x value.","kind":"function","name":"deltaAbsX","returns":[{"type":{"names":["number"]},"description":"The absolute delta value."}],"memberof":"Phaser.Physics.Ninja.Body","longname":"Phaser.Physics.Ninja.Body#deltaAbsX","scope":"instance","___s":true},{"meta":{"range":[13348,13510],"filename":"Body.js","lineno":391,"path":"src\\physics\\ninja"},"description":"Returns the absolute delta y value.","kind":"function","name":"deltaAbsY","returns":[{"type":{"names":["number"]},"description":"The absolute delta value."}],"memberof":"Phaser.Physics.Ninja.Body","longname":"Phaser.Physics.Ninja.Body#deltaAbsY","scope":"instance","___s":true},{"meta":{"range":[13626,13893],"filename":"Body.js","lineno":401,"path":"src\\physics\\ninja"},"description":"Returns the delta x value. The difference between Body.x now and in the previous step.","kind":"function","name":"deltaX","returns":[{"type":{"names":["number"]},"description":"The delta value. Positive if the motion was to the right, negative if to the left."}],"memberof":"Phaser.Physics.Ninja.Body","longname":"Phaser.Physics.Ninja.Body#deltaX","scope":"instance","___s":true},{"meta":{"range":[13992,14252],"filename":"Body.js","lineno":411,"path":"src\\physics\\ninja"},"description":"Returns the delta y value. The difference between Body.y now and in the previous step.","kind":"function","name":"deltaY","returns":[{"type":{"names":["number"]},"description":"The delta value. Positive if the motion was downwards, negative if upwards."}],"memberof":"Phaser.Physics.Ninja.Body","longname":"Phaser.Physics.Ninja.Body#deltaY","scope":"instance","___s":true},{"meta":{"range":[14351,14506],"filename":"Body.js","lineno":421,"path":"src\\physics\\ninja"},"description":"Destroys this body's reference to the sprite and system, and destroys its shape.","kind":"function","name":"destroy","memberof":"Phaser.Physics.Ninja.Body","longname":"Phaser.Physics.Ninja.Body#destroy","scope":"instance","___s":true},{"meta":{"range":[14750,14836],"filename":"Body.js","lineno":438,"path":"src\\physics\\ninja"},"name":"x","properties":[{"type":{"names":["number"]},"description":"The x position.","name":"x"}],"memberof":"Phaser.Physics.Ninja.Body","longname":"Phaser.Physics.Ninja.Body#x","scope":"instance","kind":"member","___s":true},{"meta":{"range":[15055,15141],"filename":"Body.js","lineno":454,"path":"src\\physics\\ninja"},"name":"y","properties":[{"type":{"names":["number"]},"description":"The y position.","name":"y"}],"memberof":"Phaser.Physics.Ninja.Body","longname":"Phaser.Physics.Ninja.Body#y","scope":"instance","kind":"member","___s":true},{"meta":{"range":[15360,15474],"filename":"Body.js","lineno":470,"path":"src\\physics\\ninja"},"name":"width","properties":[{"type":{"names":["number"]},"description":"The width of this Body","name":"width"}],"readonly":true,"memberof":"Phaser.Physics.Ninja.Body","longname":"Phaser.Physics.Ninja.Body#width","scope":"instance","kind":"member","___s":true},{"meta":{"range":[15623,15740],"filename":"Body.js","lineno":483,"path":"src\\physics\\ninja"},"name":"height","properties":[{"type":{"names":["number"]},"description":"The height of this Body","name":"height"}],"readonly":true,"memberof":"Phaser.Physics.Ninja.Body","longname":"Phaser.Physics.Ninja.Body#height","scope":"instance","kind":"member","___s":true},{"meta":{"range":[15891,16045],"filename":"Body.js","lineno":496,"path":"src\\physics\\ninja"},"name":"bottom","properties":[{"type":{"names":["number"]},"description":"The bottom value of this Body (same as Body.y + Body.height)","name":"bottom"}],"readonly":true,"memberof":"Phaser.Physics.Ninja.Body","longname":"Phaser.Physics.Ninja.Body#bottom","scope":"instance","kind":"member","___s":true},{"meta":{"range":[16211,16361],"filename":"Body.js","lineno":509,"path":"src\\physics\\ninja"},"name":"right","properties":[{"type":{"names":["number"]},"description":"The right value of this Body (same as Body.x + Body.width)","name":"right"}],"readonly":true,"memberof":"Phaser.Physics.Ninja.Body","longname":"Phaser.Physics.Ninja.Body#right","scope":"instance","kind":"member","___s":true},{"meta":{"range":[16526,16640],"filename":"Body.js","lineno":522,"path":"src\\physics\\ninja"},"name":"speed","properties":[{"type":{"names":["number"]},"description":"The speed of this Body","name":"speed"}],"readonly":true,"memberof":"Phaser.Physics.Ninja.Body","longname":"Phaser.Physics.Ninja.Body#speed","scope":"instance","kind":"member","___s":true},{"meta":{"range":[16877,16991],"filename":"Body.js","lineno":535,"path":"src\\physics\\ninja"},"name":"angle","properties":[{"type":{"names":["number"]},"description":"The angle of this Body","name":"angle"}],"readonly":true,"memberof":"Phaser.Physics.Ninja.Body","longname":"Phaser.Physics.Ninja.Body#angle","scope":"instance","kind":"member","___s":true},{"meta":{"range":[17180,17601],"filename":"Body.js","lineno":548,"path":"src\\physics\\ninja"},"description":"Render Sprite's Body.","kind":"function","name":"render","params":[{"type":{"names":["object"]},"description":"The context to render to.","name":"context"},{"type":{"names":["Phaser.Physics.Ninja.Body"]},"description":"The Body to render.","name":"body"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgba(0,255,0,0.4)'","description":"color of the debug shape to be rendered. (format is css color string).","name":"color"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Render the shape as a filled (default, true) or a stroked (false)","name":"filled"}],"memberof":"Phaser.Physics.Ninja.Body","longname":"Phaser.Physics.Ninja.Body#render","scope":"instance","___s":true},{"meta":{"range":[703,3221],"filename":"Circle.js","lineno":19,"path":"src\\physics\\ninja"},"description":"Ninja Physics Circle constructor.\rNote: This class could be massively optimised and reduced in size. I leave that challenge up to you.","kind":"class","classdesc":"Phaser.Physics.Ninja.Circle","params":[{"type":{"names":["Phaser.Physics.Ninja.Body"]},"description":"The body that owns this shape.","name":"body"},{"type":{"names":["number"]},"description":"The x coordinate to create this shape at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to create this shape at.","name":"y"},{"type":{"names":["number"]},"description":"The radius of this Circle.","name":"radius"}],"name":"Circle","longname":"Phaser.Physics.Ninja.Circle","memberof":"Phaser.Physics.Ninja","scope":"static","___s":true},{"meta":{"range":[889,905],"filename":"Circle.js","lineno":24,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Physics.Ninja.Body"]},"description":"A reference to the body that owns this shape.","name":"system"}],"name":"body","longname":"Phaser.Physics.Ninja.Circle#body","kind":"member","memberof":"Phaser.Physics.Ninja.Circle","scope":"instance","___s":true},{"meta":{"range":[1015,1040],"filename":"Circle.js","lineno":29,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Physics.Ninja"]},"description":"A reference to the physics system.","name":"system"}],"name":"system","longname":"Phaser.Physics.Ninja.Circle#system","kind":"member","memberof":"Phaser.Physics.Ninja.Circle","scope":"instance","___s":true},{"meta":{"range":[1133,1166],"filename":"Circle.js","lineno":34,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The position of this object.","name":"pos"}],"name":"pos","longname":"Phaser.Physics.Ninja.Circle#pos","kind":"member","memberof":"Phaser.Physics.Ninja.Circle","scope":"instance","___s":true},{"meta":{"range":[1285,1321],"filename":"Circle.js","lineno":39,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The position of this object in the previous update.","name":"oldpos"}],"name":"oldpos","longname":"Phaser.Physics.Ninja.Circle#oldpos","kind":"member","memberof":"Phaser.Physics.Ninja.Circle","scope":"instance","___s":true},{"meta":{"range":[1415,1435],"filename":"Circle.js","lineno":44,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"The radius of this circle shape.","name":"radius"}],"name":"radius","longname":"Phaser.Physics.Ninja.Circle#radius","kind":"member","memberof":"Phaser.Physics.Ninja.Circle","scope":"instance","___s":true},{"meta":{"range":[1525,1541],"filename":"Circle.js","lineno":50,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"Half the width.","name":"xw"}],"readonly":true,"name":"xw","longname":"Phaser.Physics.Ninja.Circle#xw","kind":"member","memberof":"Phaser.Physics.Ninja.Circle","scope":"instance","___s":true},{"meta":{"range":[1632,1648],"filename":"Circle.js","lineno":56,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"Half the height.","name":"xw"}],"readonly":true,"name":"yw","longname":"Phaser.Physics.Ninja.Circle#yw","kind":"member","memberof":"Phaser.Physics.Ninja.Circle","scope":"instance","___s":true},{"meta":{"range":[1736,1759],"filename":"Circle.js","lineno":62,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"The width.","name":"width"}],"readonly":true,"name":"width","longname":"Phaser.Physics.Ninja.Circle#width","kind":"member","memberof":"Phaser.Physics.Ninja.Circle","scope":"instance","___s":true},{"meta":{"range":[1849,1873],"filename":"Circle.js","lineno":68,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"The height.","name":"height"}],"readonly":true,"name":"height","longname":"Phaser.Physics.Ninja.Circle#height","kind":"member","memberof":"Phaser.Physics.Ninja.Circle","scope":"instance","___s":true},{"meta":{"range":[2167,2201],"filename":"Circle.js","lineno":85,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The velocity of this object.","name":"velocity"}],"name":"velocity","longname":"Phaser.Physics.Ninja.Circle#velocity","kind":"member","memberof":"Phaser.Physics.Ninja.Circle","scope":"instance","___s":true},{"meta":{"range":[2317,2348],"filename":"Circle.js","lineno":90,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["object"]},"description":"All of the collision response handlers.","name":"circleTileProjections"}],"name":"circleTileProjections","longname":"Phaser.Physics.Ninja.Circle#circleTileProjections","kind":"member","memberof":"Phaser.Physics.Ninja.Circle","scope":"instance","___s":true},{"meta":{"range":[3491,3600],"filename":"Circle.js","lineno":112,"path":"src\\physics\\ninja"},"description":"Updates this Circles position.","kind":"function","name":"integrate","memberof":"Phaser.Physics.Ninja.Circle","longname":"Phaser.Physics.Ninja.Circle#integrate","scope":"instance","___s":true},{"meta":{"range":[4079,4478],"filename":"Circle.js","lineno":132,"path":"src\\physics\\ninja"},"description":"Process a world collision and apply the resulting forces.","kind":"function","name":"reportCollisionVsWorld","params":[{"type":{"names":["number"]},"description":"The tangent velocity","name":"px"},{"type":{"names":["number"]},"description":"The tangent velocity","name":"py"},{"type":{"names":["number"]},"description":"Collision normal","name":"dx"},{"type":{"names":["number"]},"description":"Collision normal","name":"dy"},{"type":{"names":["number"]},"description":"Object this Circle collided with","name":"obj"}],"memberof":"Phaser.Physics.Ninja.Circle","longname":"Phaser.Physics.Ninja.Circle#reportCollisionVsWorld","scope":"instance","___s":true},{"meta":{"range":[6199,6333],"filename":"Circle.js","lineno":207,"path":"src\\physics\\ninja"},"description":"Collides this Circle against the world bounds.","kind":"function","name":"collideWorldBounds","memberof":"Phaser.Physics.Ninja.Circle","longname":"Phaser.Physics.Ninja.Circle#collideWorldBounds","scope":"instance","___s":true},{"meta":{"range":[7211,7479],"filename":"Circle.js","lineno":248,"path":"src\\physics\\ninja"},"description":"Collides this Circle with a Tile.","kind":"function","name":"collideCircleVsTile","params":[{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["boolean"]},"description":"True if they collide, otherwise false."}],"memberof":"Phaser.Physics.Ninja.Circle","longname":"Phaser.Physics.Ninja.Circle#collideCircleVsTile","scope":"instance","___s":true},{"meta":{"range":[9011,9567],"filename":"Circle.js","lineno":310,"path":"src\\physics\\ninja"},"description":"Resolves tile collision.","kind":"function","name":"resolveCircleTile","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oH"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oV"},{"type":{"names":["Phaser.Physics.Ninja.Circle"]},"description":"The Circle involved in the collision.","name":"obj"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The result of the collision."}],"memberof":"Phaser.Physics.Ninja.Circle","longname":"Phaser.Physics.Ninja.Circle#resolveCircleTile","scope":"instance","___s":true},{"meta":{"range":[9831,10390],"filename":"Circle.js","lineno":335,"path":"src\\physics\\ninja"},"description":"Resolves Full tile collision.","kind":"function","name":"projCircle_Full","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oH"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oV"},{"type":{"names":["Phaser.Physics.Ninja.Circle"]},"description":"The Circle involved in the collision.","name":"obj"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The result of the collision."}],"memberof":"Phaser.Physics.Ninja.Circle","longname":"Phaser.Physics.Ninja.Circle#projCircle_Full","scope":"instance","___s":true},{"meta":{"range":[13899,14464],"filename":"Circle.js","lineno":447,"path":"src\\physics\\ninja"},"description":"Resolves 45 Degree tile collision.","kind":"function","name":"projCircle_45Deg","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oH"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oV"},{"type":{"names":["Phaser.Physics.Ninja.Circle"]},"description":"The Circle involved in the collision.","name":"obj"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The result of the collision."}],"memberof":"Phaser.Physics.Ninja.Circle","longname":"Phaser.Physics.Ninja.Circle#projCircle_45Deg","scope":"instance","___s":true},{"meta":{"range":[25778,26343],"filename":"Circle.js","lineno":717,"path":"src\\physics\\ninja"},"description":"Resolves Concave tile collision.","kind":"function","name":"projCircle_Concave","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oH"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oV"},{"type":{"names":["Phaser.Physics.Ninja.Circle"]},"description":"The Circle involved in the collision.","name":"obj"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The result of the collision."}],"memberof":"Phaser.Physics.Ninja.Circle","longname":"Phaser.Physics.Ninja.Circle#projCircle_Concave","scope":"instance","___s":true},{"meta":{"range":[34150,34713],"filename":"Circle.js","lineno":951,"path":"src\\physics\\ninja"},"description":"Resolves Convex tile collision.","kind":"function","name":"projCircle_Convex","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oH"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oV"},{"type":{"names":["Phaser.Physics.Ninja.Circle"]},"description":"The Circle involved in the collision.","name":"obj"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The result of the collision."}],"memberof":"Phaser.Physics.Ninja.Circle","longname":"Phaser.Physics.Ninja.Circle#projCircle_Convex","scope":"instance","___s":true},{"meta":{"range":[43453,44012],"filename":"Circle.js","lineno":1193,"path":"src\\physics\\ninja"},"description":"Resolves Half tile collision.","kind":"function","name":"projCircle_Half","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oH"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oV"},{"type":{"names":["Phaser.Physics.Ninja.Circle"]},"description":"The Circle involved in the collision.","name":"obj"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The result of the collision."}],"memberof":"Phaser.Physics.Ninja.Circle","longname":"Phaser.Physics.Ninja.Circle#projCircle_Half","scope":"instance","___s":true},{"meta":{"range":[52422,52988],"filename":"Circle.js","lineno":1427,"path":"src\\physics\\ninja"},"description":"Resolves 22 Degree tile collision.","kind":"function","name":"projCircle_22DegS","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oH"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oV"},{"type":{"names":["Phaser.Physics.Ninja.Circle"]},"description":"The Circle involved in the collision.","name":"obj"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The result of the collision."}],"memberof":"Phaser.Physics.Ninja.Circle","longname":"Phaser.Physics.Ninja.Circle#projCircle_22DegS","scope":"instance","___s":true},{"meta":{"range":[64503,65069],"filename":"Circle.js","lineno":1719,"path":"src\\physics\\ninja"},"description":"Resolves 22 Degree tile collision.","kind":"function","name":"projCircle_22DegB","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oH"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oV"},{"type":{"names":["Phaser.Physics.Ninja.Circle"]},"description":"The Circle involved in the collision.","name":"obj"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The result of the collision."}],"memberof":"Phaser.Physics.Ninja.Circle","longname":"Phaser.Physics.Ninja.Circle#projCircle_22DegB","scope":"instance","___s":true},{"meta":{"range":[77622,78188],"filename":"Circle.js","lineno":2022,"path":"src\\physics\\ninja"},"description":"Resolves 67 Degree tile collision.","kind":"function","name":"projCircle_67DegS","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oH"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oV"},{"type":{"names":["Phaser.Physics.Ninja.Circle"]},"description":"The Circle involved in the collision.","name":"obj"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The result of the collision."}],"memberof":"Phaser.Physics.Ninja.Circle","longname":"Phaser.Physics.Ninja.Circle#projCircle_67DegS","scope":"instance","___s":true},{"meta":{"range":[89632,90198],"filename":"Circle.js","lineno":2307,"path":"src\\physics\\ninja"},"description":"Resolves 67 Degree tile collision.","kind":"function","name":"projCircle_67DegB","params":[{"type":{"names":["number"]},"description":"Penetration depth on the x axis.","name":"x"},{"type":{"names":["number"]},"description":"Penetration depth on the y axis.","name":"y"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oH"},{"type":{"names":["number"]},"description":"Grid / voronoi region.","name":"oV"},{"type":{"names":["Phaser.Physics.Ninja.Circle"]},"description":"The Circle involved in the collision.","name":"obj"},{"type":{"names":["Phaser.Physics.Ninja.Tile"]},"description":"The Tile involved in the collision.","name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The result of the collision."}],"memberof":"Phaser.Physics.Ninja.Circle","longname":"Phaser.Physics.Ninja.Circle#projCircle_67DegB","scope":"instance","___s":true},{"meta":{"range":[102716,102844],"filename":"Circle.js","lineno":2612,"path":"src\\physics\\ninja"},"description":"Destroys this Circle's reference to Body and System","kind":"function","name":"destroy","memberof":"Phaser.Physics.Ninja.Circle","longname":"Phaser.Physics.Ninja.Circle#destroy","scope":"instance","___s":true},{"meta":{"range":[102943,103465],"filename":"Circle.js","lineno":2622,"path":"src\\physics\\ninja"},"description":"Render this circle for debugging purposes.","kind":"function","name":"render","params":[{"type":{"names":["object"]},"description":"The context to render to.","name":"context"},{"type":{"names":["number"]},"description":"X offset from circle's position to render at.","name":"xOffset"},{"type":{"names":["number"]},"description":"Y offset from circle's position to render at.","name":"yOffset"},{"type":{"names":["string"]},"description":"color of the debug shape to be rendered. (format is css color string).","name":"color"},{"type":{"names":["boolean"]},"description":"Render the shape as solid (true) or hollow (false).","name":"filled"}],"memberof":"Phaser.Physics.Ninja.Circle","longname":"Phaser.Physics.Ninja.Circle#render","scope":"instance","___s":true},{"meta":{"range":[1240,3587],"filename":"Tile.js","lineno":25,"path":"src\\physics\\ninja"},"description":"Ninja Physics Tile constructor.\rA Tile is defined by its width, height and type. It's type can include slope data, such as 45 degree slopes, or convex slopes.\rUnderstand that for any type including a slope (types 2 to 29) the Tile must be SQUARE, i.e. have an equal width and height.\rAlso note that as Tiles are primarily used for levels they have gravity disabled and world bounds collision disabled by default.\r\rNote: This class could be massively optimised and reduced in size. I leave that challenge up to you.","kind":"class","classdesc":"Phaser.Physics.Ninja.Tile","params":[{"type":{"names":["Phaser.Physics.Ninja.Body"]},"description":"The body that owns this shape.","name":"body"},{"type":{"names":["number"]},"description":"The x coordinate to create this shape at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to create this shape at.","name":"y"},{"type":{"names":["number"]},"description":"The width of this AABB.","name":"width"},{"type":{"names":["number"]},"description":"The height of this AABB.","name":"height"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The type of Ninja shape to create. 1 = AABB, 2 = Circle or 3 = Tile.","name":"type"}],"name":"Tile","longname":"Phaser.Physics.Ninja.Tile","memberof":"Phaser.Physics.Ninja","scope":"static","___s":true},{"meta":{"range":[1512,1528],"filename":"Tile.js","lineno":32,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Physics.Ninja.Body"]},"description":"A reference to the body that owns this shape.","name":"system"}],"name":"body","longname":"Phaser.Physics.Ninja.Tile#body","kind":"member","memberof":"Phaser.Physics.Ninja.Tile","scope":"instance","___s":true},{"meta":{"range":[1638,1663],"filename":"Tile.js","lineno":37,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Physics.Ninja"]},"description":"A reference to the physics system.","name":"system"}],"name":"system","longname":"Phaser.Physics.Ninja.Tile#system","kind":"member","memberof":"Phaser.Physics.Ninja.Tile","scope":"instance","___s":true},{"meta":{"range":[1758,1772],"filename":"Tile.js","lineno":43,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"The ID of this Tile.","name":"id"}],"readonly":true,"name":"id","longname":"Phaser.Physics.Ninja.Tile#id","kind":"member","memberof":"Phaser.Physics.Ninja.Tile","scope":"instance","___s":true},{"meta":{"range":[1871,1919],"filename":"Tile.js","lineno":49,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"The type of this Tile.","name":"type"}],"readonly":true,"name":"type","longname":"Phaser.Physics.Ninja.Tile#type","kind":"member","memberof":"Phaser.Physics.Ninja.Tile","scope":"instance","___s":true},{"meta":{"range":[2012,2045],"filename":"Tile.js","lineno":54,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The position of this object.","name":"pos"}],"name":"pos","longname":"Phaser.Physics.Ninja.Tile#pos","kind":"member","memberof":"Phaser.Physics.Ninja.Tile","scope":"instance","___s":true},{"meta":{"range":[2164,2200],"filename":"Tile.js","lineno":59,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The position of this object in the previous update.","name":"oldpos"}],"name":"oldpos","longname":"Phaser.Physics.Ninja.Tile#oldpos","kind":"member","memberof":"Phaser.Physics.Ninja.Tile","scope":"instance","___s":true},{"meta":{"range":[2462,2491],"filename":"Tile.js","lineno":71,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"Half the width.","name":"xw"}],"readonly":true,"name":"xw","longname":"Phaser.Physics.Ninja.Tile#xw","kind":"member","memberof":"Phaser.Physics.Ninja.Tile","scope":"instance","___s":true},{"meta":{"range":[2582,2612],"filename":"Tile.js","lineno":77,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"Half the height.","name":"xw"}],"readonly":true,"name":"yw","longname":"Phaser.Physics.Ninja.Tile#yw","kind":"member","memberof":"Phaser.Physics.Ninja.Tile","scope":"instance","___s":true},{"meta":{"range":[2700,2718],"filename":"Tile.js","lineno":83,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"The width.","name":"width"}],"readonly":true,"name":"width","longname":"Phaser.Physics.Ninja.Tile#width","kind":"member","memberof":"Phaser.Physics.Ninja.Tile","scope":"instance","___s":true},{"meta":{"range":[2808,2828],"filename":"Tile.js","lineno":89,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"The height.","name":"height"}],"readonly":true,"name":"height","longname":"Phaser.Physics.Ninja.Tile#height","kind":"member","memberof":"Phaser.Physics.Ninja.Tile","scope":"instance","___s":true},{"meta":{"range":[2926,2960],"filename":"Tile.js","lineno":94,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The velocity of this object.","name":"velocity"}],"name":"velocity","longname":"Phaser.Physics.Ninja.Tile#velocity","kind":"member","memberof":"Phaser.Physics.Ninja.Tile","scope":"instance","___s":true},{"meta":{"range":[3719,3826],"filename":"Tile.js","lineno":135,"path":"src\\physics\\ninja"},"description":"Updates this objects position.","kind":"function","name":"integrate","memberof":"Phaser.Physics.Ninja.Tile","longname":"Phaser.Physics.Ninja.Tile#integrate","scope":"instance","___s":true},{"meta":{"range":[4263,4488],"filename":"Tile.js","lineno":153,"path":"src\\physics\\ninja"},"description":"Tiles cannot collide with the world bounds, it's up to you to keep them where you want them. But we need this API stub to satisfy the Body.","kind":"function","name":"collideWorldBounds","memberof":"Phaser.Physics.Ninja.Tile","longname":"Phaser.Physics.Ninja.Tile#collideWorldBounds","scope":"instance","___s":true},{"meta":{"range":[5350,5745],"filename":"Tile.js","lineno":194,"path":"src\\physics\\ninja"},"description":"Process a world collision and apply the resulting forces.","kind":"function","name":"reportCollisionVsWorld","params":[{"type":{"names":["number"]},"description":"The tangent velocity","name":"px"},{"type":{"names":["number"]},"description":"The tangent velocity","name":"py"},{"type":{"names":["number"]},"description":"Collision normal","name":"dx"},{"type":{"names":["number"]},"description":"Collision normal","name":"dy"},{"type":{"names":["number"]},"description":"Object this Tile collided with","name":"obj"}],"memberof":"Phaser.Physics.Ninja.Tile","longname":"Phaser.Physics.Ninja.Tile#reportCollisionVsWorld","scope":"instance","___s":true},{"meta":{"range":[7464,7825],"filename":"Tile.js","lineno":268,"path":"src\\physics\\ninja"},"description":"Tiles cannot collide with the world bounds, it's up to you to keep them where you want them. But we need this API stub to satisfy the Body.","kind":"function","name":"setType","params":[{"type":{"names":["number"]},"description":"The type of Tile this will use, i.e. Phaser.Physics.Ninja.Tile.SLOPE_45DEGpn, Phaser.Physics.Ninja.Tile.CONVEXpp, etc.","name":"id"}],"memberof":"Phaser.Physics.Ninja.Tile","longname":"Phaser.Physics.Ninja.Tile#setType","scope":"instance","___s":true},{"meta":{"range":[8096,8196],"filename":"Tile.js","lineno":290,"path":"src\\physics\\ninja"},"description":"Sets this tile to be empty.","kind":"function","name":"clear","memberof":"Phaser.Physics.Ninja.Tile","longname":"Phaser.Physics.Ninja.Tile#clear","scope":"instance","___s":true},{"meta":{"range":[8322,8446],"filename":"Tile.js","lineno":302,"path":"src\\physics\\ninja"},"description":"Destroys this Tiles reference to Body and System.","kind":"function","name":"destroy","memberof":"Phaser.Physics.Ninja.Tile","longname":"Phaser.Physics.Ninja.Tile#destroy","scope":"instance","___s":true},{"meta":{"range":[20943,21029],"filename":"Tile.js","lineno":669,"path":"src\\physics\\ninja"},"name":"x","properties":[{"type":{"names":["number"]},"description":"The x position.","name":"x"}],"memberof":"Phaser.Physics.Ninja.Tile","longname":"Phaser.Physics.Ninja.Tile#x","scope":"instance","kind":"member","___s":true},{"meta":{"range":[21246,21332],"filename":"Tile.js","lineno":685,"path":"src\\physics\\ninja"},"name":"y","properties":[{"type":{"names":["number"]},"description":"The y position.","name":"y"}],"memberof":"Phaser.Physics.Ninja.Tile","longname":"Phaser.Physics.Ninja.Tile#y","scope":"instance","kind":"member","___s":true},{"meta":{"range":[21549,21703],"filename":"Tile.js","lineno":701,"path":"src\\physics\\ninja"},"name":"bottom","properties":[{"type":{"names":["number"]},"description":"The bottom value of this Body (same as Body.y + Body.height)","name":"bottom"}],"readonly":true,"memberof":"Phaser.Physics.Ninja.Tile","longname":"Phaser.Physics.Ninja.Tile#bottom","scope":"instance","kind":"member","___s":true},{"meta":{"range":[21857,22007],"filename":"Tile.js","lineno":714,"path":"src\\physics\\ninja"},"name":"right","properties":[{"type":{"names":["number"]},"description":"The right value of this Body (same as Body.x + Body.width)","name":"right"}],"readonly":true,"memberof":"Phaser.Physics.Ninja.Tile","longname":"Phaser.Physics.Ninja.Tile#right","scope":"instance","kind":"member","___s":true},{"meta":{"range":[1390,2684],"filename":"World.js","lineno":29,"path":"src\\physics\\ninja"},"description":"Ninja Physics. The Ninja Physics system was created in Flash by Metanet Software and ported to JavaScript by Richard Davey.\r\rIt allows for AABB and Circle to Tile collision. Tiles can be any of 34 different types, including slopes, convex and concave shapes.\r\rIt does what it does very well, but is ripe for expansion and optimisation. Here are some features that I'd love to see the community add:\r\r* AABB to AABB collision\r* AABB to Circle collision\r* AABB and Circle 'immovable' property support\r* n-way collision, so an AABB/Circle could pass through a tile from below and land upon it.\r* QuadTree or spatial grid for faster Body vs. Tile Group look-ups.\r* Optimise the internal vector math and reduce the quantity of temporary vars created.\r* Expand Gravity and Bounce to allow for separate x/y axis values.\r* Support Bodies linked to Sprites that don't have anchor set to 0.5\r\rFeel free to attempt any of the above and submit a Pull Request with your code! Be sure to include test cases proving they work.","kind":"class","classdesc":"Phaser.Physics.Ninja","params":[{"type":{"names":["Phaser.Game"]},"description":"reference to the current game instance.","name":"game"}],"name":"Ninja","longname":"Phaser.Physics.Ninja","memberof":"Phaser.Physics","scope":"static","___s":true},{"meta":{"range":[1518,1534],"filename":"World.js","lineno":34,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.Physics.Ninja#game","kind":"member","memberof":"Phaser.Physics.Ninja","scope":"instance","___s":true},{"meta":{"range":[1628,1654],"filename":"World.js","lineno":39,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Time"]},"description":"Local reference to game.time.","name":"time"}],"name":"time","longname":"Phaser.Physics.Ninja#time","kind":"member","memberof":"Phaser.Physics.Ninja","scope":"instance","___s":true},{"meta":{"range":[1743,1761],"filename":"World.js","lineno":44,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"The World gravity setting.","name":"gravity"}],"name":"gravity","longname":"Phaser.Physics.Ninja#gravity","kind":"member","memberof":"Phaser.Physics.Ninja","scope":"instance","___s":true},{"meta":{"range":[1921,1998],"filename":"World.js","lineno":49,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.Rectangle"]},"description":"The bounds inside of which the physics world exists. Defaults to match the world bounds.","name":"bounds"}],"name":"bounds","longname":"Phaser.Physics.Ninja#bounds","kind":"member","memberof":"Phaser.Physics.Ninja","scope":"instance","___s":true},{"meta":{"range":[2131,2151],"filename":"World.js","lineno":54,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"Used by the QuadTree to set the maximum number of objects per quad.","name":"maxObjects"}],"name":"maxObjects","longname":"Phaser.Physics.Ninja#maxObjects","kind":"member","memberof":"Phaser.Physics.Ninja","scope":"instance","___s":true},{"meta":{"range":[2283,2301],"filename":"World.js","lineno":59,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["number"]},"description":"Used by the QuadTree to set the maximum number of iteration levels.","name":"maxLevels"}],"name":"maxLevels","longname":"Phaser.Physics.Ninja#maxLevels","kind":"member","memberof":"Phaser.Physics.Ninja","scope":"instance","___s":true},{"meta":{"range":[2393,2574],"filename":"World.js","lineno":64,"path":"src\\physics\\ninja"},"properties":[{"type":{"names":["Phaser.QuadTree"]},"description":"The world QuadTree.","name":"quadTree"}],"name":"quadTree","longname":"Phaser.Physics.Ninja#quadTree","kind":"member","memberof":"Phaser.Physics.Ninja","scope":"instance","___s":true},{"meta":{"range":[2801,3532],"filename":"World.js","lineno":75,"path":"src\\physics\\ninja"},"description":"This will create a Ninja Physics AABB body on the given game object. Its dimensions will match the width and height of the object at the point it is created.\rA game object can only have 1 physics body active at any one time, and it can't be changed until the object is destroyed.","kind":"function","name":"enableAABB","params":[{"type":{"names":["object","array","Phaser.Group"]},"description":"The game object to create the physics body on. Can also be an array or Group of objects, a body will be created on every child that has a `body` property.","name":"object"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should a body be created on all children of this object? If true it will recurse down the display list as far as it can go.","name":"children"}],"memberof":"Phaser.Physics.Ninja","longname":"Phaser.Physics.Ninja#enableAABB","scope":"instance","___s":true},{"meta":{"range":[3648,4352],"filename":"World.js","lineno":89,"path":"src\\physics\\ninja"},"description":"This will create a Ninja Physics Circle body on the given game object.\rA game object can only have 1 physics body active at any one time, and it can't be changed until the object is destroyed.","kind":"function","name":"enableCircle","params":[{"type":{"names":["object","array","Phaser.Group"]},"description":"The game object to create the physics body on. Can also be an array or Group of objects, a body will be created on every child that has a `body` property.","name":"object"},{"type":{"names":["number"]},"description":"The radius of the Circle.","name":"radius"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should a body be created on all children of this object? If true it will recurse down the display list as far as it can go.","name":"children"}],"memberof":"Phaser.Physics.Ninja","longname":"Phaser.Physics.Ninja#enableCircle","scope":"instance","___s":true},{"meta":{"range":[4483,5668],"filename":"World.js","lineno":104,"path":"src\\physics\\ninja"},"description":"This will create a Ninja Physics Tile body on the given game object. There are 34 different types of tile you can create, including 45 degree slopes,\rconvex and concave circles and more. The id parameter controls which Tile type is created, but you can also change it at run-time.\rNote that for all degree based tile types they need to have an equal width and height. If the given object doesn't have equal width and height it will use the width.\rA game object can only have 1 physics body active at any one time, and it can't be changed until the object is destroyed.","kind":"function","name":"enableTile","params":[{"type":{"names":["object","array","Phaser.Group"]},"description":"The game object to create the physics body on. Can also be an array or Group of objects, a body will be created on every child that has a `body` property.","name":"object"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The type of Tile this will use, i.e. Phaser.Physics.Ninja.Tile.SLOPE_45DEGpn, Phaser.Physics.Ninja.Tile.CONVEXpp, etc.","name":"id"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should a body be created on all children of this object? If true it will recurse down the display list as far as it can go.","name":"children"}],"memberof":"Phaser.Physics.Ninja","longname":"Phaser.Physics.Ninja#enableTile","scope":"instance","___s":true},{"meta":{"range":[5789,6834],"filename":"World.js","lineno":121,"path":"src\\physics\\ninja"},"description":"This will create a Ninja Physics body on the given game object or array of game objects.\rA game object can only have 1 physics body active at any one time, and it can't be changed until the object is destroyed.","kind":"function","name":"enable","params":[{"type":{"names":["object","array","Phaser.Group"]},"description":"The game object to create the physics body on. Can also be an array or Group of objects, a body will be created on every child that has a `body` property.","name":"object"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The type of Ninja shape to create. 1 = AABB, 2 = Circle or 3 = Tile.","name":"type"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"If this body is using a Tile shape, you can set the Tile id here, i.e. Phaser.Physics.Ninja.Tile.SLOPE_45DEGpn, Phaser.Physics.Ninja.Tile.CONVEXpp, etc.","name":"id"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If this body is using a Circle shape this controls the radius.","name":"radius"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should a body be created on all children of this object? If true it will recurse down the display list as far as it can go.","name":"children"}],"memberof":"Phaser.Physics.Ninja","longname":"Phaser.Physics.Ninja#enable","scope":"instance","___s":true},{"meta":{"range":[8470,8871],"filename":"World.js","lineno":181,"path":"src\\physics\\ninja"},"description":"Creates a Ninja Physics body on the given game object.\rA game object can only have 1 physics body active at any one time, and it can't be changed until the body is nulled.","kind":"function","name":"enableBody","params":[{"type":{"names":["object"]},"description":"The game object to create the physics body on. A body will only be created if this object has a null `body` property.","name":"object"}],"memberof":"Phaser.Physics.Ninja","longname":"Phaser.Physics.Ninja#enableBody","scope":"instance","___s":true},{"meta":{"range":[9163,9595],"filename":"World.js","lineno":198,"path":"src\\physics\\ninja"},"description":"Updates the size of this physics world.","kind":"function","name":"setBounds","params":[{"type":{"names":["number"]},"description":"Top left most corner of the world.","name":"x"},{"type":{"names":["number"]},"description":"Top left most corner of the world.","name":"y"},{"type":{"names":["number"]},"description":"New width of the world. Can never be smaller than the Game.width.","name":"width"},{"type":{"names":["number"]},"description":"New height of the world. Can never be smaller than the Game.height.","name":"height"}],"memberof":"Phaser.Physics.Ninja","longname":"Phaser.Physics.Ninja#setBounds","scope":"instance","___s":true},{"meta":{"range":[9713,9867],"filename":"World.js","lineno":213,"path":"src\\physics\\ninja"},"description":"Updates the size of this physics world to match the size of the game world.","kind":"function","name":"setBoundsToWorld","memberof":"Phaser.Physics.Ninja","longname":"Phaser.Physics.Ninja#setBoundsToWorld","scope":"instance","___s":true},{"meta":{"range":[10065,10458],"filename":"World.js","lineno":224,"path":"src\\physics\\ninja"},"description":"Clears all physics bodies from the given TilemapLayer that were created with `World.convertTilemap`.","kind":"function","name":"clearTilemapLayerBodies","params":[{"type":{"names":["Phaser.Tilemap"]},"description":"The Tilemap to get the map data from.","name":"map"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to operate on. If not given will default to map.currentLayer.","name":"layer"}],"memberof":"Phaser.Physics.Ninja","longname":"Phaser.Physics.Ninja#clearTilemapLayerBodies","scope":"instance","___s":true},{"meta":{"range":[10768,12462],"filename":"World.js","lineno":246,"path":"src\\physics\\ninja"},"description":"Goes through all tiles in the given Tilemap and TilemapLayer and converts those set to collide into physics tiles.\rOnly call this *after* you have specified all of the tiles you wish to collide with calls like Tilemap.setCollisionBetween, etc.\rEvery time you call this method it will destroy any previously created bodies and remove them from the world.\rTherefore understand it's a very expensive operation and not to be done in a core game update loop.\r\rIn Ninja the Tiles have an ID from 0 to 33, where 0 is 'empty', 1 is a full tile, 2 is a 45-degree slope, etc. You can find the ID\rlist either at the very bottom of `Tile.js`, or in a handy visual reference in the `resources/Ninja Physics Debug Tiles` folder in the repository.\rThe slopeMap parameter is an array that controls how the indexes of the tiles in your tilemap data will map to the Ninja Tile IDs.\rFor example if you had 6 tiles in your tileset: Imagine the first 4 should be converted into fully solid Tiles and the other 2 are 45-degree slopes.\rYour slopeMap array would look like this: `[ 1, 1, 1, 1, 2, 3 ]`.\rWhere each element of the array is a tile in your tilemap and the resulting Ninja Tile it should create.","kind":"function","name":"convertTilemap","params":[{"type":{"names":["Phaser.Tilemap"]},"description":"The Tilemap to get the map data from.","name":"map"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"description":"The layer to operate on. If not given will default to map.currentLayer.","name":"layer"},{"type":{"names":["object"]},"description":"The tilemap index to Tile ID map.","name":"slopeMap"}],"returns":[{"type":{"names":["array"]},"description":"An array of the Phaser.Physics.Ninja.Tile objects that were created."}],"memberof":"Phaser.Physics.Ninja","longname":"Phaser.Physics.Ninja#convertTilemap","scope":"instance","___s":true},{"meta":{"range":[13344,14801],"filename":"World.js","lineno":291,"path":"src\\physics\\ninja"},"description":"Checks for overlaps between two game objects. The objects can be Sprites, Groups or Emitters.\rYou can perform Sprite vs. Sprite, Sprite vs. Group and Group vs. Group overlap checks.\rUnlike collide the objects are NOT automatically separated or have any physics applied, they merely test for overlap results.\rThe second parameter can be an array of objects, of differing types.","kind":"function","name":"overlap","params":[{"type":{"names":["Phaser.Sprite","Phaser.Group","Phaser.Particles.Emitter"]},"description":"The first object to check. Can be an instance of Phaser.Sprite, Phaser.Group or Phaser.Particles.Emitter.","name":"object1"},{"type":{"names":["Phaser.Sprite","Phaser.Group","Phaser.Particles.Emitter","array"]},"description":"The second object or array of objects to check. Can be Phaser.Sprite, Phaser.Group or Phaser.Particles.Emitter.","name":"object2"},{"type":{"names":["function"]},"optional":true,"defaultvalue":null,"description":"An optional callback function that is called if the objects overlap. The two objects will be passed to this function in the same order in which you specified them.","name":"overlapCallback"},{"type":{"names":["function"]},"optional":true,"defaultvalue":null,"description":"A callback function that lets you perform additional checks against the two objects if they overlap. If this is set then overlapCallback will only be called if processCallback returns true.","name":"processCallback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which to run the callbacks.","name":"callbackContext"}],"returns":[{"type":{"names":["boolean"]},"description":"True if an overlap occured otherwise false."}],"memberof":"Phaser.Physics.Ninja","longname":"Phaser.Physics.Ninja#overlap","scope":"instance","___s":true},{"meta":{"range":[15597,17755],"filename":"World.js","lineno":330,"path":"src\\physics\\ninja"},"description":"Checks for collision between two game objects. You can perform Sprite vs. Sprite, Sprite vs. Group, Group vs. Group, Sprite vs. Tilemap Layer or Group vs. Tilemap Layer collisions.\rThe second parameter can be an array of objects, of differing types.\rThe objects are also automatically separated. If you don't require separation then use ArcadePhysics.overlap instead.\rAn optional processCallback can be provided. If given this function will be called when two sprites are found to be colliding. It is called before any separation takes place,\rgiving you the chance to perform additional checks. If the function returns true then the collision and separation is carried out. If it returns false it is skipped.\rThe collideCallback is an optional function that is only called if two sprites collide. If a processCallback has been set then it needs to return true for collideCallback to be called.","kind":"function","name":"collide","params":[{"type":{"names":["Phaser.Sprite","Phaser.Group","Phaser.Particles.Emitter","Phaser.TilemapLayer"]},"description":"The first object to check. Can be an instance of Phaser.Sprite, Phaser.Group, Phaser.Particles.Emitter, or Phaser.TilemapLayer.","name":"object1"},{"type":{"names":["Phaser.Sprite","Phaser.Group","Phaser.Particles.Emitter","Phaser.TilemapLayer","array"]},"description":"The second object or array of objects to check. Can be Phaser.Sprite, Phaser.Group, Phaser.Particles.Emitter or Phaser.TilemapLayer.","name":"object2"},{"type":{"names":["function"]},"optional":true,"defaultvalue":null,"description":"An optional callback function that is called if the objects collide. The two objects will be passed to this function in the same order in which you specified them.","name":"collideCallback"},{"type":{"names":["function"]},"optional":true,"defaultvalue":null,"description":"A callback function that lets you perform additional checks against the two objects if they overlap. If this is set then collision will only happen if processCallback returns true. The two objects will be passed to this function in the same order in which you specified them.","name":"processCallback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which to run the callbacks.","name":"callbackContext"}],"returns":[{"type":{"names":["boolean"]},"description":"True if a collision occured otherwise false."}],"memberof":"Phaser.Physics.Ninja","longname":"Phaser.Physics.Ninja#collide","scope":"instance","___s":true},{"meta":{"range":[27104,27466],"filename":"World.js","lineno":567,"path":"src\\physics\\ninja"},"description":"The core separation function to separate two physics bodies.","kind":"function","name":"separate","params":[{"type":{"names":["Phaser.Physics.Ninja.Body"]},"description":"The Body object to separate.","name":"body1"},{"type":{"names":["Phaser.Physics.Ninja.Body"]},"description":"The Body object to separate.","name":"body2"}],"returns":[{"type":{"names":["boolean"]},"description":"Returns true if the bodies collided, otherwise false."}],"memberof":"Phaser.Physics.Ninja","longname":"Phaser.Physics.Ninja#separate","scope":"instance","___s":true},{"meta":{"range":[1569,6438],"filename":"Body.js","lineno":23,"path":"src\\physics\\p2"},"description":"The Physics Body is typically linked to a single Sprite and defines properties that determine how the physics body is simulated.\rThese properties affect how the body reacts to forces, what forces it generates on itself (to simulate friction), and how it reacts to collisions in the scene.\rIn most cases, the properties are used to simulate physical effects. Each body also has its own property values that determine exactly how it reacts to forces and collisions in the scene.\rBy default a single Rectangle shape is added to the Body that matches the dimensions of the parent Sprite. See addShape, removeShape, clearShapes to add extra shapes around the Body.\rNote: When bound to a Sprite to avoid single-pixel jitters on mobile devices we strongly recommend using Sprite sizes that are even on both axis, i.e. 128x128 not 127x127.\rNote: When a game object is given a P2 body it has its anchor x/y set to 0.5, so it becomes centered.","kind":"class","classdesc":"Phaser.Physics.P2.Body","params":[{"type":{"names":["Phaser.Game"]},"description":"Game reference to the currently running game.","name":"game"},{"type":{"names":["Phaser.Sprite"]},"optional":true,"description":"The Sprite object this physics body belongs to.","name":"sprite"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x coordinate of this Body.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y coordinate of this Body.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The default mass of this Body (0 = static).","name":"mass"}],"name":"Body","longname":"Phaser.Physics.P2.Body","memberof":"Phaser.Physics.P2","scope":"static","___s":true},{"meta":{"range":[1828,1844],"filename":"Body.js","lineno":33,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.Physics.P2.Body#game","kind":"member","memberof":"Phaser.Physics.P2.Body","scope":"instance","___s":true},{"meta":{"range":[1948,1976],"filename":"Body.js","lineno":38,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Physics.P2"]},"description":"Local reference to the P2 World.","name":"world"}],"name":"world","longname":"Phaser.Physics.P2.Body#world","kind":"member","memberof":"Phaser.Physics.P2.Body","scope":"instance","___s":true},{"meta":{"range":[2076,2096],"filename":"Body.js","lineno":43,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Sprite"]},"description":"Reference to the parent Sprite.","name":"sprite"}],"name":"sprite","longname":"Phaser.Physics.P2.Body#sprite","kind":"member","memberof":"Phaser.Physics.P2.Body","scope":"instance","___s":true},{"meta":{"range":[2204,2235],"filename":"Body.js","lineno":48,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["number"]},"description":"The type of physics system this body belongs to.","name":"type"}],"name":"type","longname":"Phaser.Physics.P2.Body#type","kind":"member","memberof":"Phaser.Physics.P2.Body","scope":"instance","___s":true},{"meta":{"range":[2363,2395],"filename":"Body.js","lineno":53,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"The offset of the Physics Body from the Sprite x/y position.","name":"offset"}],"name":"offset","longname":"Phaser.Physics.P2.Body#offset","kind":"member","memberof":"Phaser.Physics.P2.Body","scope":"instance","___s":true},{"meta":{"range":[2491,2584],"filename":"Body.js","lineno":59,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["p2.Body"]},"description":"The p2 Body data.","name":"data"}],"access":"protected","name":"data","longname":"Phaser.Physics.P2.Body#data","kind":"member","memberof":"Phaser.Physics.P2.Body","scope":"instance","___s":true},{"meta":{"range":[2869,2956],"filename":"Body.js","lineno":66,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Physics.P2.InversePointProxy"]},"description":"The velocity of the body. Set velocity.x to a negative value to move to the left, position to the right. velocity.y negative values move up, positive move down.","name":"velocity"}],"name":"velocity","longname":"Phaser.Physics.P2.Body#velocity","kind":"member","memberof":"Phaser.Physics.P2.Body","scope":"instance","___s":true},{"meta":{"range":[3076,3157],"filename":"Body.js","lineno":71,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Physics.P2.InversePointProxy"]},"description":"The force applied to the body.","name":"force"}],"name":"force","longname":"Phaser.Physics.P2.Body#force","kind":"member","memberof":"Phaser.Physics.P2.Body","scope":"instance","___s":true},{"meta":{"range":[3343,3376],"filename":"Body.js","lineno":76,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Point"]},"description":"A locally applied gravity force to the Body. Applied directly before the world step. NOTE: Not currently implemented.","name":"gravity"}],"name":"gravity","longname":"Phaser.Physics.P2.Body#gravity","kind":"member","memberof":"Phaser.Physics.P2.Body","scope":"instance","___s":true},{"meta":{"range":[4008,4049],"filename":"Body.js","lineno":92,"path":"src\\physics\\p2"},"description":"Dispatched when a first contact is created between shapes in two bodies. \rThis event is fired during the step, so collision has already taken place.\r\rThe event will be sent 5 arguments in this order:\r\rThe Phaser.Physics.P2.Body it is in contact with. *This might be null* if the Body was created directly in the p2 world.\rThe p2.Body this Body is in contact with.\rThe Shape from this body that caused the contact.\rThe Shape from the contact body.\rThe Contact Equation data array.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onBeginContact"}],"name":"onBeginContact","longname":"Phaser.Physics.P2.Body#onBeginContact","kind":"member","memberof":"Phaser.Physics.P2.Body","scope":"instance","___s":true},{"meta":{"range":[4637,4676],"filename":"Body.js","lineno":107,"path":"src\\physics\\p2"},"description":"Dispatched when contact ends between shapes in two bodies.\rThis event is fired during the step, so collision has already taken place.\r\rThe event will be sent 4 arguments in this order:\r\rThe Phaser.Physics.P2.Body it is in contact with. *This might be null* if the Body was created directly in the p2 world.\rThe p2.Body this Body has ended contact with.\rThe Shape from this body that caused the original contact.\rThe Shape from the contact body.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onEndContact"}],"name":"onEndContact","longname":"Phaser.Physics.P2.Body#onEndContact","kind":"member","memberof":"Phaser.Physics.P2.Body","scope":"instance","___s":true},{"meta":{"range":[4805,4827],"filename":"Body.js","lineno":112,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["array"]},"description":"Array of CollisionGroups that this Bodies shapes collide with.","name":"collidesWith"}],"name":"collidesWith","longname":"Phaser.Physics.P2.Body#collidesWith","kind":"member","memberof":"Phaser.Physics.P2.Body","scope":"instance","___s":true},{"meta":{"range":[5052,5079],"filename":"Body.js","lineno":117,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["boolean"]},"description":"To avoid deleting this body during a physics step, and causing all kinds of problems, set removeNextStep to true to have it removed in the next preUpdate.","name":"removeNextStep"}],"name":"removeNextStep","longname":"Phaser.Physics.P2.Body#removeNextStep","kind":"member","memberof":"Phaser.Physics.P2.Body","scope":"instance","___s":true},{"meta":{"range":[5193,5214],"filename":"Body.js","lineno":122,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Physics.P2.BodyDebug"]},"description":"Reference to the debug body.","name":"debugBody"}],"name":"debugBody","longname":"Phaser.Physics.P2.Body#debugBody","kind":"member","memberof":"Phaser.Physics.P2.Body","scope":"instance","___s":true},{"meta":{"range":[5305,5323],"filename":"Body.js","lineno":127,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["boolean"]},"description":"Internally used by Sprite.x/y","name":"dirty"}],"name":"dirty","longname":"Phaser.Physics.P2.Body#dirty","kind":"member","memberof":"Phaser.Physics.P2.Body","scope":"instance","___s":true},{"meta":{"range":[6487,7479],"filename":"Body.js","lineno":180,"path":"src\\physics\\p2"},"description":"Sets a callback to be fired any time a shape in this Body impacts with a shape in the given Body. The impact test is performed against body.id values.\rThe callback will be sent 4 parameters: This body, the body that impacted, the Shape in this body and the shape in the impacting body.\rNote that the impact event happens after collision resolution, so it cannot be used to prevent a collision from happening.\rIt also happens mid-step. So do not destroy a Body during this callback, instead set safeDestroy to true so it will be killed on the next preUpdate.","kind":"function","name":"createBodyCallback","params":[{"type":{"names":["Phaser.Sprite","Phaser.TileSprite","Phaser.Physics.P2.Body","p2.Body"]},"description":"The object to send impact events for.","name":"object"},{"type":{"names":["function"]},"description":"The callback to fire on impact. Set to null to clear a previously set callback.","name":"callback"},{"type":{"names":["object"]},"description":"The context under which the callback will fire.","name":"callbackContext"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#createBodyCallback","scope":"instance","___s":true},{"meta":{"range":[8150,9186],"filename":"Body.js","lineno":220,"path":"src\\physics\\p2"},"description":"Sets a callback to be fired any time this Body impacts with the given Group. The impact test is performed against shape.collisionGroup values.\rThe callback will be sent 4 parameters: This body, the body that impacted, the Shape in this body and the shape in the impacting body.\rThis callback will only fire if this Body has been assigned a collision group.\rNote that the impact event happens after collision resolution, so it cannot be used to prevent a collision from happening.\rIt also happens mid-step. So do not destroy a Body during this callback, instead set safeDestroy to true so it will be killed on the next preUpdate.","kind":"function","name":"createGroupCallback","params":[{"type":{"names":["Phaser.Physics.CollisionGroup"]},"description":"The Group to send impact events for.","name":"group"},{"type":{"names":["function"]},"description":"The callback to fire on impact. Set to null to clear a previously set callback.","name":"callback"},{"type":{"names":["object"]},"description":"The context under which the callback will fire.","name":"callbackContext"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#createGroupCallback","scope":"instance","___s":true},{"meta":{"range":[9615,9800],"filename":"Body.js","lineno":247,"path":"src\\physics\\p2"},"description":"Gets the collision bitmask from the groups this body collides with.","kind":"function","name":"getCollisionMask","returns":[{"type":{"names":["number"]},"description":"The bitmask."}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#getCollisionMask","scope":"instance","___s":true},{"meta":{"range":[10173,10415],"filename":"Body.js","lineno":271,"path":"src\\physics\\p2"},"description":"Updates the collisionMask.","kind":"function","name":"updateCollisionMask","params":[{"type":{"names":["p2.Shape"]},"optional":true,"description":"An optional Shape. If not provided the collision group will be added to all Shapes in this Body.","name":"shape"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#updateCollisionMask","scope":"instance","___s":true},{"meta":{"range":[10817,11295],"filename":"Body.js","lineno":295,"path":"src\\physics\\p2"},"description":"Sets the given CollisionGroup to be the collision group for all shapes in this Body, unless a shape is specified.\rThis also resets the collisionMask.","kind":"function","name":"setCollisionGroup","params":[{"type":{"names":["Phaser.Physics.CollisionGroup"]},"description":"The Collision Group that this Bodies shapes will use.","name":"group"},{"type":{"names":["p2.Shape"]},"optional":true,"description":"An optional Shape. If not provided the collision group will be added to all Shapes in this Body.","name":"shape"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#setCollisionGroup","scope":"instance","___s":true},{"meta":{"range":[11816,12306],"filename":"Body.js","lineno":323,"path":"src\\physics\\p2"},"description":"Clears the collision data from the shapes in this Body. Optionally clears Group and/or Mask.","kind":"function","name":"clearCollision","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Clear the collisionGroup value from the shape/s?","name":"clearGroup"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Clear the collisionMask value from the shape/s?","name":"clearMask"},{"type":{"names":["p2.Shape"]},"optional":true,"description":"An optional Shape. If not provided the collision data will be cleared from all Shapes in this Body.","name":"shape"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#clearCollision","scope":"instance","___s":true},{"meta":{"range":[13275,13951],"filename":"Body.js","lineno":371,"path":"src\\physics\\p2"},"description":"Removes the given CollisionGroup, or array of CollisionGroups, from the list of groups that this body will collide with and updates the collision masks.","kind":"function","name":"removeCollisionGroup","params":[{"type":{"names":["Phaser.Physics.CollisionGroup","array"]},"description":"The Collision Group or Array of Collision Groups that this Bodies shapes should not collide with anymore.","name":"group"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Clear the callback that will be triggered when this Body impacts with the given Group?","name":"clearCallback"},{"type":{"names":["p2.Shape"]},"optional":true,"description":"An optional Shape. If not provided the updated collision mask will be added to all Shapes in this Body.","name":"shape"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#removeCollisionGroup","scope":"instance","___s":true},{"meta":{"range":[15446,16169],"filename":"Body.js","lineno":435,"path":"src\\physics\\p2"},"description":"Adds the given CollisionGroup, or array of CollisionGroups, to the list of groups that this body will collide with and updates the collision masks.","kind":"function","name":"collides","params":[{"type":{"names":["Phaser.Physics.CollisionGroup","array"]},"description":"The Collision Group or Array of Collision Groups that this Bodies shapes will collide with.","name":"group"},{"type":{"names":["function"]},"optional":true,"description":"Optional callback that will be triggered when this Body impacts with the given Group.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context under which the callback will be called.","name":"callbackContext"},{"type":{"names":["p2.Shape"]},"optional":true,"description":"An optional Shape. If not provided the collision mask will be added to all Shapes in this Body.","name":"shape"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#collides","scope":"instance","___s":true},{"meta":{"range":[17388,17551],"filename":"Body.js","lineno":490,"path":"src\\physics\\p2"},"description":"Moves the shape offsets so their center of mass becomes the body center of mass.","kind":"function","name":"adjustCenterOfMass","memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#adjustCenterOfMass","scope":"instance","___s":true},{"meta":{"range":[17681,18037],"filename":"Body.js","lineno":502,"path":"src\\physics\\p2"},"description":"Gets the velocity of a point in the body.","kind":"function","name":"getVelocityAtPoint","params":[{"type":{"names":["Array"]},"description":"A vector to store the result in.","name":"result"},{"type":{"names":["Array"]},"description":"A world oriented vector, indicating the position of the point to get the velocity from.","name":"relativePoint"}],"returns":[{"type":{"names":["Array"]},"description":"The result vector."}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#getVelocityAtPoint","scope":"instance","___s":true},{"meta":{"range":[18186,18393],"filename":"Body.js","lineno":516,"path":"src\\physics\\p2"},"description":"Apply damping, see http://code.google.com/p/bullet/issues/detail?id=74 for details.","kind":"function","name":"applyDamping","params":[{"type":{"names":["number"]},"description":"Current time step.","name":"dt"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#applyDamping","scope":"instance","___s":true},{"meta":{"range":[18485,19277],"filename":"Body.js","lineno":528,"path":"src\\physics\\p2"},"description":"Apply impulse to a point relative to the body.\rThis could for example be a point on the Body surface. An impulse is a force added to a body during a short \rperiod of time (impulse = force * time). Impulses will be added to Body.velocity and Body.angularVelocity.","kind":"function","name":"applyImpulse","params":[{"type":{"names":["Float32Array","Array"]},"description":"The impulse vector to add, oriented in world space.","name":"impulse"},{"type":{"names":["number"]},"description":"A point relative to the body in world space. If not given, it is set to zero and all of the impulse will be exerted on the center of mass.","name":"worldX"},{"type":{"names":["number"]},"description":"A point relative to the body in world space. If not given, it is set to zero and all of the impulse will be exerted on the center of mass.","name":"worldY"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#applyImpulse","scope":"instance","___s":true},{"meta":{"range":[19447,20025],"filename":"Body.js","lineno":544,"path":"src\\physics\\p2"},"description":"Apply impulse to a point local to the body.\r\rThis could for example be a point on the Body surface. An impulse is a force added to a body during a short \rperiod of time (impulse = force * time). Impulses will be added to Body.velocity and Body.angularVelocity.","kind":"function","name":"applyImpulseLocal","params":[{"type":{"names":["Float32Array","Array"]},"description":"The impulse vector to add, oriented in local space.","name":"impulse"},{"type":{"names":["number"]},"description":"A local point on the body.","name":"localX"},{"type":{"names":["number"]},"description":"A local point on the body.","name":"localY"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#applyImpulseLocal","scope":"instance","___s":true},{"meta":{"range":[20205,20676],"filename":"Body.js","lineno":561,"path":"src\\physics\\p2"},"description":"Apply force to a world point.\r\rThis could for example be a point on the RigidBody surface. Applying force \rthis way will add to Body.force and Body.angularForce.","kind":"function","name":"applyForce","params":[{"type":{"names":["Float32Array","Array"]},"description":"The force vector to add.","name":"force"},{"type":{"names":["number"]},"description":"The world x point to apply the force on.","name":"worldX"},{"type":{"names":["number"]},"description":"The world y point to apply the force on.","name":"worldY"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#applyForce","scope":"instance","___s":true},{"meta":{"range":[20838,20950],"filename":"Body.js","lineno":578,"path":"src\\physics\\p2"},"description":"Sets the force on the body to zero.","kind":"function","name":"setZeroForce","memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#setZeroForce","scope":"instance","___s":true},{"meta":{"range":[21038,21183],"filename":"Body.js","lineno":589,"path":"src\\physics\\p2"},"description":"If this Body is dynamic then this will zero its angular velocity.","kind":"function","name":"setZeroRotation","memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#setZeroRotation","scope":"instance","___s":true},{"meta":{"range":[21279,21429],"filename":"Body.js","lineno":600,"path":"src\\physics\\p2"},"description":"If this Body is dynamic then this will zero its velocity on both axis.","kind":"function","name":"setZeroVelocity","memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#setZeroVelocity","scope":"instance","___s":true},{"meta":{"range":[21557,21685],"filename":"Body.js","lineno":612,"path":"src\\physics\\p2"},"description":"Sets the Body damping and angularDamping to zero.","kind":"function","name":"setZeroDamping","memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#setZeroDamping","scope":"instance","___s":true},{"meta":{"range":[21811,22080],"filename":"Body.js","lineno":624,"path":"src\\physics\\p2"},"description":"Transform a world point to local body frame.","kind":"function","name":"toLocalFrame","params":[{"type":{"names":["Float32Array","Array"]},"description":"The vector to store the result in.","name":"out"},{"type":{"names":["Float32Array","Array"]},"description":"The input world vector.","name":"worldPoint"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#toLocalFrame","scope":"instance","___s":true},{"meta":{"range":[22205,22443],"filename":"Body.js","lineno":637,"path":"src\\physics\\p2"},"description":"Transform a local point to world frame.","kind":"function","name":"toWorldFrame","params":[{"type":{"names":["Array"]},"description":"The vector to store the result in.","name":"out"},{"type":{"names":["Array"]},"description":"The input local vector.","name":"localPoint"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#toWorldFrame","scope":"instance","___s":true},{"meta":{"range":[22568,22788],"filename":"Body.js","lineno":650,"path":"src\\physics\\p2"},"description":"This will rotate the Body by the given speed to the left (counter-clockwise).","kind":"function","name":"rotateLeft","params":[{"type":{"names":["number"]},"description":"The speed at which it should rotate.","name":"speed"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#rotateLeft","scope":"instance","___s":true},{"meta":{"range":[22905,23118],"filename":"Body.js","lineno":662,"path":"src\\physics\\p2"},"description":"This will rotate the Body by the given speed to the left (clockwise).","kind":"function","name":"rotateRight","params":[{"type":{"names":["number"]},"description":"The speed at which it should rotate.","name":"speed"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#rotateRight","scope":"instance","___s":true},{"meta":{"range":[23235,23573],"filename":"Body.js","lineno":674,"path":"src\\physics\\p2"},"description":"Moves the Body forwards based on its current angle and the given speed.\rThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms).","kind":"function","name":"moveForward","params":[{"type":{"names":["number"]},"description":"The speed at which it should move forwards.","name":"speed"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#moveForward","scope":"instance","___s":true},{"meta":{"range":[23858,24199],"filename":"Body.js","lineno":691,"path":"src\\physics\\p2"},"description":"Moves the Body backwards based on its current angle and the given speed.\rThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms).","kind":"function","name":"moveBackward","params":[{"type":{"names":["number"]},"description":"The speed at which it should move backwards.","name":"speed"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#moveBackward","scope":"instance","___s":true},{"meta":{"range":[24491,24858],"filename":"Body.js","lineno":708,"path":"src\\physics\\p2"},"description":"Applies a force to the Body that causes it to 'thrust' forwards, based on its current angle and the given speed.\rThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms).","kind":"function","name":"thrust","params":[{"type":{"names":["number"]},"description":"The speed at which it should thrust.","name":"speed"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#thrust","scope":"instance","___s":true},{"meta":{"range":[25134,25518],"filename":"Body.js","lineno":725,"path":"src\\physics\\p2"},"description":"Applies a force to the Body that causes it to 'thrust' to the left, based on its current angle and the given speed.\rThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms).","kind":"function","name":"thrustLeft","params":[{"type":{"names":["number"]},"description":"The speed at which it should move to the left.","name":"speed"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#thrustLeft","scope":"instance","___s":true},{"meta":{"range":[25784,26171],"filename":"Body.js","lineno":742,"path":"src\\physics\\p2"},"description":"Applies a force to the Body that causes it to 'thrust' to the right, based on its current angle and the given speed.\rThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms).","kind":"function","name":"thrustRight","params":[{"type":{"names":["number"]},"description":"The speed at which it should move to the right.","name":"speed"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#thrustRight","scope":"instance","___s":true},{"meta":{"range":[26438,26821],"filename":"Body.js","lineno":759,"path":"src\\physics\\p2"},"description":"Applies a force to the Body that causes it to 'thrust' backwards (in reverse), based on its current angle and the given speed.\rThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms).","kind":"function","name":"reverse","params":[{"type":{"names":["number"]},"description":"The speed at which it should reverse.","name":"speed"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#reverse","scope":"instance","___s":true},{"meta":{"range":[27098,27491],"filename":"Body.js","lineno":776,"path":"src\\physics\\p2"},"description":"If this Body is dynamic then this will move it to the left by setting its x velocity to the given speed.\rThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms).","kind":"function","name":"moveLeft","params":[{"type":{"names":["number"]},"description":"The speed at which it should move to the left, in pixels per second.","name":"speed"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#moveLeft","scope":"instance","___s":true},{"meta":{"range":[27603,27999],"filename":"Body.js","lineno":789,"path":"src\\physics\\p2"},"description":"If this Body is dynamic then this will move it to the right by setting its x velocity to the given speed.\rThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms).","kind":"function","name":"moveRight","params":[{"type":{"names":["number"]},"description":"The speed at which it should move to the right, in pixels per second.","name":"speed"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#moveRight","scope":"instance","___s":true},{"meta":{"range":[28111,28484],"filename":"Body.js","lineno":802,"path":"src\\physics\\p2"},"description":"If this Body is dynamic then this will move it up by setting its y velocity to the given speed.\rThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms).","kind":"function","name":"moveUp","params":[{"type":{"names":["number"]},"description":"The speed at which it should move up, in pixels per second.","name":"speed"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#moveUp","scope":"instance","___s":true},{"meta":{"range":[28594,28973],"filename":"Body.js","lineno":815,"path":"src\\physics\\p2"},"description":"If this Body is dynamic then this will move it down by setting its y velocity to the given speed.\rThe speed is represented in pixels per second. So a value of 100 would move 100 pixels in 1 second (1000ms).","kind":"function","name":"moveDown","params":[{"type":{"names":["number"]},"description":"The speed at which it should move down, in pixels per second.","name":"speed"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#moveDown","scope":"instance","___s":true},{"meta":{"range":[29084,29304],"filename":"Body.js","lineno":828,"path":"src\\physics\\p2"},"description":"Internal method. This is called directly before the sprites are sent to the renderer and after the update function has finished.","kind":"function","name":"preUpdate","access":"protected","memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#preUpdate","scope":"instance","___s":true},{"meta":{"range":[29519,29740],"filename":"Body.js","lineno":846,"path":"src\\physics\\p2"},"description":"Internal method. This is called directly before the sprites are sent to the renderer and after the update function has finished.","kind":"function","name":"postUpdate","access":"protected","memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#postUpdate","scope":"instance","___s":true},{"meta":{"range":[30201,30651],"filename":"Body.js","lineno":871,"path":"src\\physics\\p2"},"description":"Resets the Body force, velocity (linear and angular) and rotation. Optionally resets damping and mass.","kind":"function","name":"reset","params":[{"type":{"names":["number"]},"description":"The new x position of the Body.","name":"x"},{"type":{"names":["number"]},"description":"The new x position of the Body.","name":"y"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Resets the linear and angular damping.","name":"resetDamping"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Sets the Body mass back to 1.","name":"resetMass"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#reset","scope":"instance","___s":true},{"meta":{"range":[31159,31270],"filename":"Body.js","lineno":904,"path":"src\\physics\\p2"},"description":"Adds this physics body to the world.","kind":"function","name":"addToWorld","memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#addToWorld","scope":"instance","___s":true},{"meta":{"range":[31798,31919],"filename":"Body.js","lineno":929,"path":"src\\physics\\p2"},"description":"Removes this physics body from the world.","kind":"function","name":"removeFromWorld","memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#removeFromWorld","scope":"instance","___s":true},{"meta":{"range":[32118,32254],"filename":"Body.js","lineno":943,"path":"src\\physics\\p2"},"description":"Destroys this Body and all references it holds to other objects.","kind":"function","name":"destroy","memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#destroy","scope":"instance","___s":true},{"meta":{"range":[32779,32889],"filename":"Body.js","lineno":974,"path":"src\\physics\\p2"},"description":"Removes all Shapes from this Body.","kind":"function","name":"clearShapes","memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#clearShapes","scope":"instance","___s":true},{"meta":{"range":[33117,34012],"filename":"Body.js","lineno":992,"path":"src\\physics\\p2"},"description":"Add a shape to the body. You can pass a local transform when adding a shape, so that the shape gets an offset and an angle relative to the body center of mass.\rWill automatically update the mass properties and bounding radius.\rIf this Body had a previously set Collision Group you will need to re-apply it to the new Shape this creates.","kind":"function","name":"addShape","params":[{"type":{"names":["p2.Shape"]},"description":"The shape to add to the body.","name":"shape"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local horizontal offset of the shape relative to the body center of mass.","name":"offsetX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local vertical offset of the shape relative to the body center of mass.","name":"offsetY"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local rotation of the shape relative to the body center of mass, specified in radians.","name":"rotation"}],"returns":[{"type":{"names":["p2.Shape"]},"description":"The shape that was added to the body."}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#addShape","scope":"instance","___s":true},{"meta":{"range":[34412,35079],"filename":"Body.js","lineno":1017,"path":"src\\physics\\p2"},"description":"Adds a Circle shape to this Body. You can control the offset from the center of the body and the rotation.","kind":"function","name":"addCircle","params":[{"type":{"names":["number"]},"description":"The radius of this circle (in pixels)","name":"radius"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local horizontal offset of the shape relative to the body center of mass.","name":"offsetX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local vertical offset of the shape relative to the body center of mass.","name":"offsetY"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local rotation of the shape relative to the body center of mass, specified in radians.","name":"rotation"}],"returns":[{"type":{"names":["p2.Circle"]},"description":"The Circle shape that was added to the Body."}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#addCircle","scope":"instance","___s":true},{"meta":{"range":[35303,36036],"filename":"Body.js","lineno":1035,"path":"src\\physics\\p2"},"description":"Adds a Rectangle shape to this Body. You can control the offset from the center of the body and the rotation.","kind":"function","name":"addRectangle","params":[{"type":{"names":["number"]},"description":"The width of the rectangle in pixels.","name":"width"},{"type":{"names":["number"]},"description":"The height of the rectangle in pixels.","name":"height"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local horizontal offset of the shape relative to the body center of mass.","name":"offsetX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local vertical offset of the shape relative to the body center of mass.","name":"offsetY"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local rotation of the shape relative to the body center of mass, specified in radians.","name":"rotation"}],"returns":[{"type":{"names":["p2.Box"]},"description":"The shape that was added to the Body."}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#addRectangle","scope":"instance","___s":true},{"meta":{"range":[36296,36929],"filename":"Body.js","lineno":1054,"path":"src\\physics\\p2"},"description":"Adds a Plane shape to this Body. The plane is facing in the Y direction. You can control the offset from the center of the body and the rotation.","kind":"function","name":"addPlane","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local horizontal offset of the shape relative to the body center of mass.","name":"offsetX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local vertical offset of the shape relative to the body center of mass.","name":"offsetY"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local rotation of the shape relative to the body center of mass, specified in radians.","name":"rotation"}],"returns":[{"type":{"names":["p2.Plane"]},"description":"The Plane shape that was added to the Body."}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#addPlane","scope":"instance","___s":true},{"meta":{"range":[37109,37714],"filename":"Body.js","lineno":1071,"path":"src\\physics\\p2"},"description":"Adds a Particle shape to this Body. You can control the offset from the center of the body and the rotation.","kind":"function","name":"addParticle","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local horizontal offset of the shape relative to the body center of mass.","name":"offsetX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local vertical offset of the shape relative to the body center of mass.","name":"offsetY"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local rotation of the shape relative to the body center of mass, specified in radians.","name":"rotation"}],"returns":[{"type":{"names":["p2.Particle"]},"description":"The Particle shape that was added to the Body."}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#addParticle","scope":"instance","___s":true},{"meta":{"range":[37900,38663],"filename":"Body.js","lineno":1088,"path":"src\\physics\\p2"},"description":"Adds a Line shape to this Body.\rThe line shape is along the x direction, and stretches from [-length/2, 0] to [length/2,0].\rYou can control the offset from the center of the body and the rotation.","kind":"function","name":"addLine","params":[{"type":{"names":["number"]},"description":"The length of this line (in pixels)","name":"length"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local horizontal offset of the shape relative to the body center of mass.","name":"offsetX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local vertical offset of the shape relative to the body center of mass.","name":"offsetY"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local rotation of the shape relative to the body center of mass, specified in radians.","name":"rotation"}],"returns":[{"type":{"names":["p2.Line"]},"description":"The Line shape that was added to the Body."}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#addLine","scope":"instance","___s":true},{"meta":{"range":[38882,39634],"filename":"Body.js","lineno":1108,"path":"src\\physics\\p2"},"description":"Adds a Capsule shape to this Body.\rYou can control the offset from the center of the body and the rotation.","kind":"function","name":"addCapsule","params":[{"type":{"names":["number"]},"description":"The distance between the end points in pixels.","name":"length"},{"type":{"names":["number"]},"description":"Radius of the capsule in pixels.","name":"radius"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local horizontal offset of the shape relative to the body center of mass.","name":"offsetX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local vertical offset of the shape relative to the body center of mass.","name":"offsetY"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local rotation of the shape relative to the body center of mass, specified in radians.","name":"rotation"}],"returns":[{"type":{"names":["p2.Capsule"]},"description":"The Capsule shape that was added to the Body."}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#addCapsule","scope":"instance","___s":true},{"meta":{"range":[39900,41292],"filename":"Body.js","lineno":1128,"path":"src\\physics\\p2"},"description":"Reads a polygon shape path, and assembles convex shapes from that and puts them at proper offset points. The shape must be simple and without holes.\rThis function expects the x.y values to be given in pixels. If you want to provide them at p2 world scales then call Body.data.fromPolygon directly.","kind":"function","name":"addPolygon","params":[{"type":{"names":["object"]},"description":"An object containing the build options:","name":"options"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Set to true if you need optimal decomposition. Warning: very slow for polygons with more than 10 vertices.","name":"options.optimalDecomp"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Set to true if you already know that the path is not intersecting itself.","name":"options.skipSimpleCheck"},{"type":{"names":["boolean","number"]},"optional":true,"defaultvalue":false,"description":"Set to a number (angle threshold value) to remove collinear points, or false to keep all points.","name":"options.removeCollinearPoints"},{"type":{"names":["Array.<number>","number"]},"description":"An array of 2d vectors that form the convex or concave polygon.\r                                      Either [[0,0], [0,1],...] or a flat array of numbers that will be interpreted as [x,y, x,y, ...],\r                                      or the arguments passed can be flat x,y values e.g. `setPolygon(options, x,y, x,y, x,y, ...)` where `x` and `y` are numbers.","name":"points"}],"returns":[{"type":{"names":["boolean"]},"description":"True on success, else false."}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#addPolygon","scope":"instance","___s":true},{"meta":{"range":[42624,42985],"filename":"Body.js","lineno":1194,"path":"src\\physics\\p2"},"description":"Remove a shape from the body. Will automatically update the mass properties and bounding radius.","kind":"function","name":"removeShape","params":[{"type":{"names":["p2.Circle","p2.Rectangle","p2.Plane","p2.Line","p2.Particle"]},"description":"The shape to remove from the body.","name":"shape"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the shape was found and removed, else false."}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#removeShape","scope":"instance","___s":true},{"meta":{"range":[43138,43835],"filename":"Body.js","lineno":1210,"path":"src\\physics\\p2"},"description":"Clears any previously set shapes. Then creates a new Circle shape and adds it to this Body.\rIf this Body had a previously set Collision Group you will need to re-apply it to the new Shape this creates.","kind":"function","name":"setCircle","params":[{"type":{"names":["number"]},"description":"The radius of this circle (in pixels)","name":"radius"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local horizontal offset of the shape relative to the body center of mass.","name":"offsetX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local vertical offset of the shape relative to the body center of mass.","name":"offsetY"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local rotation of the shape relative to the body center of mass, specified in radians.","name":"rotation"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#setCircle","scope":"instance","___s":true},{"meta":{"range":[44018,45021],"filename":"Body.js","lineno":1228,"path":"src\\physics\\p2"},"description":"Clears any previously set shapes. The creates a new Rectangle shape at the given size and offset, and adds it to this Body.\rIf you wish to create a Rectangle to match the size of a Sprite or Image see Body.setRectangleFromSprite.\rIf this Body had a previously set Collision Group you will need to re-apply it to the new Shape this creates.","kind":"function","name":"setRectangle","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":16,"description":"The width of the rectangle in pixels.","name":"width"},{"type":{"names":["number"]},"optional":true,"defaultvalue":16,"description":"The height of the rectangle in pixels.","name":"height"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local horizontal offset of the shape relative to the body center of mass.","name":"offsetX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local vertical offset of the shape relative to the body center of mass.","name":"offsetY"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Local rotation of the shape relative to the body center of mass, specified in radians.","name":"rotation"}],"returns":[{"type":{"names":["p2.Rectangle"]},"description":"The Rectangle shape that was added to the Body."}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#setRectangle","scope":"instance","___s":true},{"meta":{"range":[45328,45936],"filename":"Body.js","lineno":1252,"path":"src\\physics\\p2"},"description":"Clears any previously set shapes.\rThen creates a Rectangle shape sized to match the dimensions and orientation of the Sprite given.\rIf no Sprite is given it defaults to using the parent of this Body.\rIf this Body had a previously set Collision Group you will need to re-apply it to the new Shape this creates.","kind":"function","name":"setRectangleFromSprite","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image"]},"optional":true,"description":"The Sprite on which the Rectangle will get its dimensions.","name":"sprite"}],"returns":[{"type":{"names":["p2.Rectangle"]},"description":"The Rectangle shape that was added to the Body."}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#setRectangleFromSprite","scope":"instance","___s":true},{"meta":{"range":[46186,46648],"filename":"Body.js","lineno":1272,"path":"src\\physics\\p2"},"description":"Adds the given Material to all Shapes that belong to this Body.\rIf you only wish to apply it to a specific Shape in this Body then provide that as the 2nd parameter.","kind":"function","name":"setMaterial","params":[{"type":{"names":["Phaser.Physics.P2.Material"]},"description":"The Material that will be applied.","name":"material"},{"type":{"names":["p2.Shape"]},"optional":true,"description":"An optional Shape. If not provided the Material will be added to all Shapes in this Body.","name":"shape"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#setMaterial","scope":"instance","___s":true},{"meta":{"range":[47003,47129],"filename":"Body.js","lineno":1296,"path":"src\\physics\\p2"},"description":"Updates the debug draw if any body shapes change.","kind":"function","name":"shapeChanged","memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#shapeChanged","scope":"instance","___s":true},{"meta":{"range":[47268,48024],"filename":"Body.js","lineno":1310,"path":"src\\physics\\p2"},"description":"Reads the shape data from a physics data file stored in the Game.Cache and adds it as a polygon to this Body.\rThe shape data format is based on the output of the\r{@link https://github.com/photonstorm/phaser/tree/master/resources/PhysicsEditor%20Exporter|custom phaser exporter} for\r{@link https://www.codeandweb.com/physicseditor|PhysicsEditor}","kind":"function","name":"addPhaserPolygon","params":[{"type":{"names":["string"]},"description":"The key of the Physics Data file as stored in Game.Cache.","name":"key"},{"type":{"names":["string"]},"description":"The key of the object within the Physics data file that you wish to load the shape data from.","name":"object"}],"returns":[{"type":{"names":["Array"]},"description":"A list of created fixtures to be used with Phaser.Physics.P2.FixtureList"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#addPhaserPolygon","scope":"instance","___s":true},{"meta":{"range":[48991,49345],"filename":"Body.js","lineno":1350,"path":"src\\physics\\p2"},"description":"Add a polygon fixture. This is used during #loadPolygon.","kind":"function","name":"addFixture","params":[{"type":{"names":["string"]},"description":"The data for the fixture. It contains: isSensor, filter (collision) and the actual polygon shapes.","name":"fixtureData"}],"returns":[{"type":{"names":["array"]},"description":"An array containing the generated shapes for the given polygon."}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#addFixture","scope":"instance","___s":true},{"meta":{"range":[51645,52602],"filename":"Body.js","lineno":1422,"path":"src\\physics\\p2"},"description":"Reads the shape data from a physics data file stored in the Game.Cache and adds it as a polygon to this Body.\r\rAs well as reading the data from the Cache you can also pass `null` as the first argument and a\rphysics data object as the second. When doing this you must ensure the structure of the object is correct in advance.\r\rFor more details see the format of the Lime / Corona Physics Editor export.","kind":"function","name":"loadPolygon","params":[{"type":{"names":["string"]},"description":"The key of the Physics Data file as stored in Game.Cache. Alternatively set to `null` and pass the \r    data as the 2nd argument.","name":"key"},{"type":{"names":["string","object"]},"description":"The key of the object within the Physics data file that you wish to load the shape data from, \r    or if key is null pass the actual physics data object itself as this parameter.","name":"object"}],"returns":[{"type":{"names":["boolean"]},"description":"True on success, else false."}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#loadPolygon","scope":"instance","___s":true},{"meta":{"range":[54267,54301],"filename":"Body.js","lineno":1498,"path":"src\\physics\\p2"},"description":"Dynamic body. Dynamic bodies body can move and respond to collisions and forces.","properties":[{"name":"DYNAMIC"}],"type":{"names":["Number"]},"scope":"static","name":"DYNAMIC","longname":"Phaser.Physics.P2.Body.DYNAMIC","kind":"member","memberof":"Phaser.Physics.P2.Body","___s":true},{"meta":{"range":[54460,54493],"filename":"Body.js","lineno":1506,"path":"src\\physics\\p2"},"description":"Static body. Static bodies do not move, and they do not respond to forces or collision.","properties":[{"name":"STATIC"}],"type":{"names":["Number"]},"scope":"static","name":"STATIC","longname":"Phaser.Physics.P2.Body.STATIC","kind":"member","memberof":"Phaser.Physics.P2.Body","___s":true},{"meta":{"range":[54684,54720],"filename":"Body.js","lineno":1514,"path":"src\\physics\\p2"},"description":"Kinematic body. Kinematic bodies only moves according to its .velocity, and does not respond to collisions or force.","properties":[{"name":"KINEMATIC"}],"type":{"names":["Number"]},"scope":"static","name":"KINEMATIC","longname":"Phaser.Physics.P2.Body.KINEMATIC","kind":"member","memberof":"Phaser.Physics.P2.Body","___s":true},{"meta":{"range":[54725,54892],"filename":"Body.js","lineno":1516,"path":"src\\physics\\p2"},"name":"static","properties":[{"type":{"names":["boolean"]},"description":"Returns true if the Body is static. Setting Body.static to 'false' will make it dynamic.","name":"static"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#static","scope":"instance","kind":"member","___s":true},{"meta":{"range":[55493,55663],"filename":"Body.js","lineno":1545,"path":"src\\physics\\p2"},"name":"dynamic","properties":[{"type":{"names":["boolean"]},"description":"Returns true if the Body is dynamic. Setting Body.dynamic to 'false' will make it static.","name":"dynamic"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#dynamic","scope":"instance","kind":"member","___s":true},{"meta":{"range":[56268,56446],"filename":"Body.js","lineno":1574,"path":"src\\physics\\p2"},"name":"kinematic","properties":[{"type":{"names":["boolean"]},"description":"Returns true if the Body is kinematic. Setting Body.kinematic to 'false' will make it static.","name":"kinematic"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#kinematic","scope":"instance","kind":"member","___s":true},{"meta":{"range":[57061,57147],"filename":"Body.js","lineno":1603,"path":"src\\physics\\p2"},"name":"allowSleep","properties":[{"type":{"names":["boolean"]},"description":"-","name":"allowSleep"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#allowSleep","scope":"instance","kind":"member","___s":true},{"meta":{"range":[57459,58086],"filename":"Body.js","lineno":1626,"path":"src\\physics\\p2"},"description":"The angle of the Body in degrees from its original orientation. Values from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\rValues outside this range are added to or subtracted from 360 to obtain a value within the range. For example, the statement Body.angle = 450 is the same as Body.angle = 90.\rIf you wish to work in radians instead of degrees use the property Body.rotation instead. Working in radians is faster as it doesn't have to convert values.","name":"angle","properties":[{"type":{"names":["number"]},"description":"The angle of this Body in degrees.","name":"angle"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#angle","scope":"instance","kind":"member","___s":true},{"meta":{"range":[58400,58645],"filename":"Body.js","lineno":1650,"path":"src\\physics\\p2"},"description":"Damping is specified as a value between 0 and 1, which is the proportion of velocity lost per second.","name":"angularDamping","properties":[{"type":{"names":["number"]},"description":"The angular damping acting acting on the body.","name":"angularDamping"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#angularDamping","scope":"instance","kind":"member","___s":true},{"meta":{"range":[58898,59025],"filename":"Body.js","lineno":1671,"path":"src\\physics\\p2"},"name":"angularForce","properties":[{"type":{"names":["number"]},"description":"The angular force acting on the body.","name":"angularForce"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#angularForce","scope":"instance","kind":"member","___s":true},{"meta":{"range":[59272,59401],"filename":"Body.js","lineno":1691,"path":"src\\physics\\p2"},"name":"angularVelocity","properties":[{"type":{"names":["number"]},"description":"The angular velocity of the body.","name":"angularVelocity"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#angularVelocity","scope":"instance","kind":"member","___s":true},{"meta":{"range":[59657,59906],"filename":"Body.js","lineno":1711,"path":"src\\physics\\p2"},"description":"Damping is specified as a value between 0 and 1, which is the proportion of velocity lost per second.","name":"damping","properties":[{"type":{"names":["number"]},"description":"The linear damping acting on the body in the velocity direction.","name":"damping"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#damping","scope":"instance","kind":"member","___s":true},{"meta":{"range":[60138,60230],"filename":"Body.js","lineno":1732,"path":"src\\physics\\p2"},"name":"fixedRotation","properties":[{"type":{"names":["boolean"]},"description":"-","name":"fixedRotation"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#fixedRotation","scope":"instance","kind":"member","___s":true},{"meta":{"range":[60554,60677],"filename":"Body.js","lineno":1755,"path":"src\\physics\\p2"},"name":"inertia","properties":[{"type":{"names":["number"]},"description":"The inertia of the body around the Z axis..","name":"inertia"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#inertia","scope":"instance","kind":"member","___s":true},{"meta":{"range":[60909,61004],"filename":"Body.js","lineno":1775,"path":"src\\physics\\p2"},"name":"mass","properties":[{"type":{"names":["number"]},"description":"The mass of the body.","name":"mass"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#mass","scope":"instance","kind":"member","___s":true},{"meta":{"range":[61339,61631],"filename":"Body.js","lineno":1799,"path":"src\\physics\\p2"},"name":"motionState","properties":[{"type":{"names":["number"]},"description":"The type of motion this body has. Should be one of: Body.STATIC (the body does not move), Body.DYNAMIC (body can move and respond to collisions) and Body.KINEMATIC (only moves according to its .velocity).","name":"motionState"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#motionState","scope":"instance","kind":"member","___s":true},{"meta":{"range":[61926,62239],"filename":"Body.js","lineno":1822,"path":"src\\physics\\p2"},"description":"The angle of the Body in radians.\rIf you wish to work in degrees instead of radians use the Body.angle property instead. Working in radians is faster as it doesn't have to convert values.","name":"rotation","properties":[{"type":{"names":["number"]},"description":"The angle of this Body in radians.","name":"rotation"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#rotation","scope":"instance","kind":"member","___s":true},{"meta":{"range":[62466,62563],"filename":"Body.js","lineno":1845,"path":"src\\physics\\p2"},"name":"sleepSpeedLimit","properties":[{"type":{"names":["number"]},"description":".","name":"sleepSpeedLimit"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#sleepSpeedLimit","scope":"instance","kind":"member","___s":true},{"meta":{"range":[62819,62917],"filename":"Body.js","lineno":1865,"path":"src\\physics\\p2"},"name":"x","properties":[{"type":{"names":["number"]},"description":"The x coordinate of this Body.","name":"x"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#x","scope":"instance","kind":"member","___s":true},{"meta":{"range":[63185,63283],"filename":"Body.js","lineno":1885,"path":"src\\physics\\p2"},"name":"y","properties":[{"type":{"names":["number"]},"description":"The y coordinate of this Body.","name":"y"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#y","scope":"instance","kind":"member","___s":true},{"meta":{"range":[63551,63706],"filename":"Body.js","lineno":1905,"path":"src\\physics\\p2"},"name":"id","properties":[{"type":{"names":["number"]},"description":"The Body ID. Each Body that has been added to the World has a unique ID.","name":"id"}],"readonly":true,"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#id","scope":"instance","kind":"member","___s":true},{"meta":{"range":[63849,63970],"filename":"Body.js","lineno":1920,"path":"src\\physics\\p2"},"name":"debug","properties":[{"type":{"names":["boolean"]},"description":"Enable or disable debug drawing of this body","name":"debug"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#debug","scope":"instance","kind":"member","___s":true},{"meta":{"range":[64515,65143],"filename":"Body.js","lineno":1949,"path":"src\\physics\\p2"},"description":"A Body can be set to collide against the World bounds automatically if this is set to true. Otherwise it will leave the World.\rNote that this only applies if your World has bounds! The response to the collision should be managed via CollisionMaterials.\rAlso note that when you set this it will only effect Body shapes that already exist. If you then add further shapes to your Body\rafter setting this it will *not* proactively set them to collide with the bounds.","name":"collideWorldBounds","properties":[{"type":{"names":["boolean"]},"description":"Should the Body collide with the World bounds?","name":"collideWorldBounds"}],"memberof":"Phaser.Physics.P2.Body","longname":"Phaser.Physics.P2.Body#collideWorldBounds","scope":"instance","kind":"member","___s":true},{"meta":{"range":[1068,2083],"filename":"BodyDebug.js","lineno":24,"path":"src\\physics\\p2"},"description":"Draws a P2 Body to a Graphics instance for visual debugging.\rNeedless to say, for every body you enable debug drawing on, you are adding processor and graphical overhead.\rSo use sparingly and rarely (if ever) in production code.\r\rAlso be aware that the Debug body is only updated when the Sprite it is connected to changes position. If you\rmanipulate the sprite in any other way (such as moving it to another Group or bringToTop, etc) then you will\rneed to manually adjust its BodyDebug as well.","kind":"class","classdesc":"Phaser.Physics.P2.BodyDebug","augments":["Phaser.Group"],"params":[{"type":{"names":["Phaser.Game"]},"description":"Game reference to the currently running game.","name":"game"},{"type":{"names":["Phaser.Physics.P2.Body"]},"description":"The P2 Body to display debug data for.","name":"body"},{"type":{"names":["object"]},"description":"Settings object.","name":"settings"}],"name":"BodyDebug","longname":"Phaser.Physics.P2.BodyDebug","memberof":"Phaser.Physics.P2","scope":"static","___s":true},{"meta":{"range":[1588,1632],"filename":"BodyDebug.js","lineno":44,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["number"]},"description":"Pixels per Length Unit.","name":"ppu"}],"name":"ppu","longname":"Phaser.Physics.P2.BodyDebug#ppu","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","___s":true},{"meta":{"range":[1777,1793],"filename":"BodyDebug.js","lineno":50,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Physics.P2.Body"]},"description":"The P2 Body to display debug data for.","name":"body"}],"name":"body","longname":"Phaser.Physics.P2.BodyDebug#body","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","___s":true},{"meta":{"range":[1903,1942],"filename":"BodyDebug.js","lineno":55,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Graphics"]},"description":"The canvas to render the debug info to.","name":"canvas"}],"name":"canvas","longname":"Phaser.Physics.P2.BodyDebug#canvas","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","___s":true},{"meta":{"range":[2320,2423],"filename":"BodyDebug.js","lineno":72,"path":"src\\physics\\p2"},"description":"Core update.","kind":"function","name":"updateSpriteTransform","memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#updateSpriteTransform","scope":"instance","___s":true},{"meta":{"range":[2648,2765],"filename":"BodyDebug.js","lineno":85,"path":"src\\physics\\p2"},"description":"Draws the P2 shapes to the Graphics object.","kind":"function","name":"draw","memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#draw","scope":"instance","___s":true},{"meta":{"range":[351,517],"filename":"CollisionGroup.js","lineno":14,"path":"src\\physics\\p2"},"description":"Collision Group","kind":"class","classdesc":"Phaser.Physics.P2.CollisionGroup","params":[{"type":{"names":["number"]},"description":"The CollisionGroup bitmask.","name":"bitmask"}],"name":"CollisionGroup","longname":"Phaser.Physics.P2.CollisionGroup","memberof":"Phaser.Physics.P2","scope":"static","___s":true},{"meta":{"range":[492,511],"filename":"CollisionGroup.js","lineno":19,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["number"]},"description":"The CollisionGroup bitmask.","name":"mask"}],"name":"mask","longname":"Phaser.Physics.P2.CollisionGroup#mask","kind":"member","memberof":"Phaser.Physics.P2.CollisionGroup","scope":"instance","___s":true},{"meta":{"range":[582,2032],"filename":"ContactMaterial.js","lineno":16,"path":"src\\physics\\p2"},"description":"Defines a physics material","kind":"class","classdesc":"Phaser.Physics.P2.ContactMaterial","params":[{"type":{"names":["Phaser.Physics.P2.Material"]},"description":"First material participating in the contact material.","name":"materialA"},{"type":{"names":["Phaser.Physics.P2.Material"]},"description":"Second material participating in the contact material.","name":"materialB"},{"type":{"names":["object"]},"optional":true,"description":"Additional configuration options.","name":"options"}],"name":"ContactMaterial","longname":"Phaser.Physics.P2.ContactMaterial","memberof":"Phaser.Physics.P2","scope":"static","___s":true},{"meta":{"range":[896,1888],"filename":"DistanceConstraint.js","lineno":20,"path":"src\\physics\\p2"},"description":"A constraint that tries to keep the distance between two bodies constant.","kind":"class","classdesc":"Phaser.Physics.P2.DistanceConstraint","params":[{"type":{"names":["Phaser.Physics.P2"]},"description":"A reference to the P2 World.","name":"world"},{"type":{"names":["p2.Body"]},"description":"First connected body.","name":"bodyA"},{"type":{"names":["p2.Body"]},"description":"Second connected body.","name":"bodyB"},{"type":{"names":["number"]},"description":"The distance to keep between the bodies.","name":"distance"},{"type":{"names":["Array"]},"optional":true,"description":"The anchor point for bodyA, defined locally in bodyA frame. Defaults to [0,0].","name":"localAnchorA"},{"type":{"names":["Array"]},"optional":true,"description":"The anchor point for bodyB, defined locally in bodyB frame. Defaults to [0,0].","name":"localAnchorB"},{"type":{"names":["object"]},"optional":true,"defaultvalue":"Number.MAX_VALUE","description":"Maximum force to apply.","name":"maxForce"}],"name":"DistanceConstraint","longname":"Phaser.Physics.P2.DistanceConstraint","memberof":"Phaser.Physics.P2","scope":"static","___s":true},{"meta":{"range":[1352,1374],"filename":"DistanceConstraint.js","lineno":30,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.Physics.P2.DistanceConstraint#game","kind":"member","memberof":"Phaser.Physics.P2.DistanceConstraint","scope":"instance","___s":true},{"meta":{"range":[1474,1492],"filename":"DistanceConstraint.js","lineno":35,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Physics.P2"]},"description":"Local reference to P2 World.","name":"world"}],"name":"world","longname":"Phaser.Physics.P2.DistanceConstraint#world","kind":"member","memberof":"Phaser.Physics.P2.DistanceConstraint","scope":"instance","___s":true},{"meta":{"range":[971,1173],"filename":"FixtureList.js","lineno":23,"path":"src\\physics\\p2"},"description":"Allow to access a list of created fixture (coming from Body#addPhaserPolygon)\rwhich itself parse the input from PhysicsEditor with the custom phaser exporter.\rYou can access fixtures of a Body by a group index or even by providing a fixture Key.\rYou can set the fixture key and also the group index for a fixture in PhysicsEditor.\rThis gives you the power to create a complex body built of many fixtures and modify them\rduring runtime (to remove parts, set masks, categories & sensor properties)","kind":"class","classdesc":"Phaser.Physics.P2.FixtureList","params":[{"type":{"names":["Array"]},"description":"A list of fixtures (from Phaser.Physics.P2.Body#addPhaserPolygon)","name":"list"}],"name":"FixtureList","longname":"Phaser.Physics.P2.FixtureList","memberof":"Phaser.Physics.P2","scope":"static","___s":true},{"meta":{"range":[1231,1292],"filename":"FixtureList.js","lineno":38,"path":"src\\physics\\p2"},"kind":"function","name":"init","memberof":"Phaser.Physics.P2.FixtureList","longname":"Phaser.Physics.P2.FixtureList#init","scope":"instance","___s":true},{"meta":{"range":[1895,2113],"filename":"FixtureList.js","lineno":63,"path":"src\\physics\\p2"},"kind":"function","name":"setCategory","params":[{"type":{"names":["number"]},"description":"The bit to set as the collision group.","name":"bit"},{"type":{"names":["string"]},"description":"Only apply to the fixture with the given key.","name":"fixtureKey"}],"memberof":"Phaser.Physics.P2.FixtureList","longname":"Phaser.Physics.P2.FixtureList#setCategory","scope":"instance","___s":true},{"meta":{"range":[2336,2547],"filename":"FixtureList.js","lineno":78,"path":"src\\physics\\p2"},"kind":"function","name":"setMask","params":[{"type":{"names":["number"]},"description":"The bit to set as the collision mask","name":"bit"},{"type":{"names":["string"]},"description":"Only apply to the fixture with the given key","name":"fixtureKey"}],"memberof":"Phaser.Physics.P2.FixtureList","longname":"Phaser.Physics.P2.FixtureList#setMask","scope":"instance","___s":true},{"meta":{"range":[2765,2965],"filename":"FixtureList.js","lineno":93,"path":"src\\physics\\p2"},"kind":"function","name":"setSensor","params":[{"type":{"names":["boolean"]},"description":"sensor true or false","name":"value"},{"type":{"names":["string"]},"description":"Only apply to the fixture with the given key","name":"fixtureKey"}],"memberof":"Phaser.Physics.P2.FixtureList","longname":"Phaser.Physics.P2.FixtureList#setSensor","scope":"instance","___s":true},{"meta":{"range":[3180,3398],"filename":"FixtureList.js","lineno":108,"path":"src\\physics\\p2"},"kind":"function","name":"setMaterial","params":[{"type":{"names":["Object"]},"description":"The contact material for a fixture","name":"material"},{"type":{"names":["string"]},"description":"Only apply to the fixture with the given key","name":"fixtureKey"}],"memberof":"Phaser.Physics.P2.FixtureList","longname":"Phaser.Physics.P2.FixtureList#setMaterial","scope":"instance","___s":true},{"meta":{"range":[3623,3843],"filename":"FixtureList.js","lineno":123,"path":"src\\physics\\p2"},"description":"Accessor to get either a list of specified fixtures by key or the whole fixture list","kind":"function","name":"getFixtures","params":[{"type":{"names":["array"]},"description":"A list of fixture keys","name":"keys"}],"memberof":"Phaser.Physics.P2.FixtureList","longname":"Phaser.Physics.P2.FixtureList#getFixtures","scope":"instance","___s":true},{"meta":{"range":[4433,4625],"filename":"FixtureList.js","lineno":158,"path":"src\\physics\\p2"},"description":"Accessor to get either a single fixture by its key.","kind":"function","name":"getFixtureByKey","params":[{"type":{"names":["string"]},"description":"The key of the fixture.","name":"key"}],"memberof":"Phaser.Physics.P2.FixtureList","longname":"Phaser.Physics.P2.FixtureList#getFixtureByKey","scope":"instance","___s":true},{"meta":{"range":[4725,4911],"filename":"FixtureList.js","lineno":170,"path":"src\\physics\\p2"},"description":"Accessor to get a group of fixtures by its group index.","kind":"function","name":"getGroup","params":[{"type":{"names":["number"]},"description":"The group index.","name":"groupID"}],"memberof":"Phaser.Physics.P2.FixtureList","longname":"Phaser.Physics.P2.FixtureList#getGroup","scope":"instance","___s":true},{"meta":{"range":[5016,5158],"filename":"FixtureList.js","lineno":182,"path":"src\\physics\\p2"},"description":"Parser for the output of Phaser.Physics.P2.Body#addPhaserPolygon","kind":"function","name":"parse","memberof":"Phaser.Physics.P2.FixtureList","longname":"Phaser.Physics.P2.FixtureList#parse","scope":"instance","___s":true},{"meta":{"range":[5809,6128],"filename":"FixtureList.js","lineno":212,"path":"src\\physics\\p2"},"description":"A helper to flatten arrays. This is very useful as the fixtures are nested from time to time due to the way P2 creates and splits polygons.","kind":"function","name":"flatten","params":[{"type":{"names":["array"]},"description":"The array to flatten. Notice: This will happen recursive not shallow.","name":"array"}],"memberof":"Phaser.Physics.P2.FixtureList","longname":"Phaser.Physics.P2.FixtureList#flatten","scope":"instance","___s":true},{"meta":{"range":[649,1169],"filename":"GearConstraint.js","lineno":18,"path":"src\\physics\\p2"},"description":"Connects two bodies at given offset points, letting them rotate relative to each other around this point.","kind":"class","classdesc":"Phaser.Physics.P2.GearConstraint","params":[{"type":{"names":["Phaser.Physics.P2"]},"description":"A reference to the P2 World.","name":"world"},{"type":{"names":["p2.Body"]},"description":"First connected body.","name":"bodyA"},{"type":{"names":["p2.Body"]},"description":"Second connected body.","name":"bodyB"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The relative angle","name":"angle"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The gear ratio.","name":"ratio"}],"name":"GearConstraint","longname":"Phaser.Physics.P2.GearConstraint","memberof":"Phaser.Physics.P2","scope":"static","___s":true},{"meta":{"range":[910,932],"filename":"GearConstraint.js","lineno":26,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.Physics.P2.GearConstraint#game","kind":"member","memberof":"Phaser.Physics.P2.GearConstraint","scope":"instance","___s":true},{"meta":{"range":[1032,1050],"filename":"GearConstraint.js","lineno":31,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Physics.P2"]},"description":"Local reference to P2 World.","name":"world"}],"name":"world","longname":"Phaser.Physics.P2.GearConstraint#world","kind":"member","memberof":"Phaser.Physics.P2.GearConstraint","scope":"instance","___s":true},{"meta":{"range":[559,694],"filename":"InversePointProxy.js","lineno":15,"path":"src\\physics\\p2"},"description":"A InversePointProxy is an internal class that allows for direct getter/setter style property access to Arrays and TypedArrays but inverses the values on set.","kind":"class","classdesc":"Phaser.Physics.P2.InversePointProxy","params":[{"type":{"names":["Phaser.Physics.P2"]},"description":"A reference to the P2 World.","name":"world"},{"type":{"names":["any"]},"description":"The object to bind to.","name":"destination"}],"name":"InversePointProxy","longname":"Phaser.Physics.P2.InversePointProxy","memberof":"Phaser.Physics.P2","scope":"static","___s":true},{"meta":{"range":[799,943],"filename":"InversePointProxy.js","lineno":24,"path":"src\\physics\\p2"},"name":"x","properties":[{"type":{"names":["number"]},"description":"The x property of this InversePointProxy get and set in pixels.","name":"x"}],"memberof":"Phaser.Physics.P2.InversePointProxy","longname":"Phaser.Physics.P2.InversePointProxy#x","scope":"instance","kind":"member","___s":true},{"meta":{"range":[1220,1364],"filename":"InversePointProxy.js","lineno":44,"path":"src\\physics\\p2"},"name":"y","properties":[{"type":{"names":["number"]},"description":"The y property of this InversePointProxy get and set in pixels.","name":"y"}],"memberof":"Phaser.Physics.P2.InversePointProxy","longname":"Phaser.Physics.P2.InversePointProxy#y","scope":"instance","kind":"member","___s":true},{"meta":{"range":[1641,1787],"filename":"InversePointProxy.js","lineno":64,"path":"src\\physics\\p2"},"name":"mx","properties":[{"type":{"names":["number"]},"description":"The x property of this InversePointProxy get and set in meters.","name":"mx"}],"memberof":"Phaser.Physics.P2.InversePointProxy","longname":"Phaser.Physics.P2.InversePointProxy#mx","scope":"instance","kind":"member","___s":true},{"meta":{"range":[2032,2178],"filename":"InversePointProxy.js","lineno":84,"path":"src\\physics\\p2"},"name":"my","properties":[{"type":{"names":["number"]},"description":"The y property of this InversePointProxy get and set in meters.","name":"my"}],"memberof":"Phaser.Physics.P2.InversePointProxy","longname":"Phaser.Physics.P2.InversePointProxy#my","scope":"instance","kind":"member","___s":true},{"meta":{"range":[798,1500],"filename":"LockConstraint.js","lineno":19,"path":"src\\physics\\p2"},"description":"Locks the relative position between two bodies.","kind":"class","classdesc":"Phaser.Physics.P2.LockConstraint","params":[{"type":{"names":["Phaser.Physics.P2"]},"description":"A reference to the P2 World.","name":"world"},{"type":{"names":["p2.Body"]},"description":"First connected body.","name":"bodyA"},{"type":{"names":["p2.Body"]},"description":"Second connected body.","name":"bodyB"},{"type":{"names":["Array"]},"optional":true,"description":"The offset of bodyB in bodyA's frame. The value is an array with 2 elements matching x and y, i.e: [32, 32].","name":"offset"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The angle of bodyB in bodyA's frame.","name":"angle"},{"type":{"names":["number"]},"optional":true,"description":"The maximum force that should be applied to constrain the bodies.","name":"maxForce"}],"name":"LockConstraint","longname":"Phaser.Physics.P2.LockConstraint","memberof":"Phaser.Physics.P2","scope":"static","___s":true},{"meta":{"range":[1143,1165],"filename":"LockConstraint.js","lineno":28,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.Physics.P2.LockConstraint#game","kind":"member","memberof":"Phaser.Physics.P2.LockConstraint","scope":"instance","___s":true},{"meta":{"range":[1265,1283],"filename":"LockConstraint.js","lineno":33,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Physics.P2"]},"description":"Local reference to P2 World.","name":"world"}],"name":"world","longname":"Phaser.Physics.P2.LockConstraint#world","kind":"member","memberof":"Phaser.Physics.P2.LockConstraint","scope":"instance","___s":true},{"meta":{"range":[402,621],"filename":"Material.js","lineno":16,"path":"src\\physics\\p2"},"description":"A P2 Material.\r\r\\o/ ~ \"Because I'm a Material girl\"","kind":"class","classdesc":"Phaser.Physics.P2.Material","params":[{"type":{"names":["string"]},"description":"The user defined name given to this Material.","name":"name"}],"name":"Material","longname":"Phaser.Physics.P2.Material","memberof":"Phaser.Physics.P2","scope":"static","___s":true},{"meta":{"range":[568,584],"filename":"Material.js","lineno":22,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["string"]},"description":"The user defined name given to this Material.","name":"name"}],"name":"name","longname":"Phaser.Physics.P2.Material#name","kind":"member","memberof":"Phaser.Physics.P2.Material","scope":"instance","___s":true},{"meta":{"range":[2054,2383],"filename":"p2.js","lineno":35,"path":"src\\physics\\p2"},"description":"Compute the intersection between two lines.","scope":"static","kind":"function","name":"lineInt","params":[{"type":{"names":["Array"]},"description":"Line vector 1","name":"l1"},{"type":{"names":["Array"]},"description":"Line vector 2","name":"l2"},{"type":{"names":["Number"]},"description":"Precision to use when checking if the lines are parallel","name":"precision"}],"returns":[{"type":{"names":["Array"]},"description":"The intersection point."}],"longname":"lineInt","___s":true},{"meta":{"range":[2955,3361],"filename":"p2.js","lineno":62,"path":"src\\physics\\p2"},"description":"Checks if two line segments intersects.","kind":"function","name":"segmentsIntersect","params":[{"type":{"names":["Array"]},"description":"The start vertex of the first line segment.","name":"p1"},{"type":{"names":["Array"]},"description":"The end vertex of the first line segment.","name":"p2"},{"type":{"names":["Array"]},"description":"The start vertex of the second line segment.","name":"q1"},{"type":{"names":["Array"]},"description":"The end vertex of the second line segment.","name":"q2"}],"returns":[{"type":{"names":["Boolean"]},"description":"True if the two line segments intersect"}],"longname":"segmentsIntersect","scope":"global","___s":true},{"meta":{"range":[3982,4264],"filename":"p2.js","lineno":97,"path":"src\\physics\\p2"},"description":"Get the area of a triangle spanned by the three given points. Note that the area will be negative if the points are not given in counter-clockwise order.","scope":"static","kind":"function","name":"area","params":[{"type":{"names":["Array"]},"name":"a"},{"type":{"names":["Array"]},"name":"b"},{"type":{"names":["Array"]},"name":"c"}],"returns":[{"type":{"names":["Number"]}}],"longname":"area","___s":true},{"meta":{"range":[4727,5102],"filename":"p2.js","lineno":129,"path":"src\\physics\\p2"},"description":"Check if three points are collinear","kind":"function","name":"collinear","params":[{"type":{"names":["Array"]},"name":"a"},{"type":{"names":["Array"]},"name":"b"},{"type":{"names":["Array"]},"name":"c"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"Threshold angle to use when comparing the vectors. The function will return true if the angle between the resulting vectors is less than this value. Use zero for max precision.","name":"thresholdAngle"}],"returns":[{"type":{"names":["Boolean"]}}],"longname":"collinear","scope":"global","___s":true},{"meta":{"range":[6255,6426],"filename":"p2.js","lineno":186,"path":"src\\physics\\p2"},"description":"Get a vertex at position i. It does not matter if i is out of bounds, this function will just cycle.","kind":"function","name":"at","params":[{"type":{"names":["Number"]},"name":"i"}],"returns":[{"type":{"names":["Array"]}}],"longname":"at","scope":"global","___s":true},{"meta":{"range":[6564,6631],"filename":"p2.js","lineno":198,"path":"src\\physics\\p2"},"description":"Get first vertex","kind":"function","name":"first","returns":[{"type":{"names":["Array"]}}],"longname":"first","scope":"global","___s":true},{"meta":{"range":[6708,6773],"filename":"p2.js","lineno":207,"path":"src\\physics\\p2"},"description":"Get last vertex","kind":"function","name":"last","returns":[{"type":{"names":["Array"]}}],"longname":"last","scope":"global","___s":true},{"meta":{"range":[6870,6943],"filename":"p2.js","lineno":216,"path":"src\\physics\\p2"},"description":"Clear the polygon data","kind":"function","name":"clear","returns":[{"type":{"names":["Array"]}}],"longname":"clear","scope":"global","___s":true},{"meta":{"range":[7021,7369],"filename":"p2.js","lineno":225,"path":"src\\physics\\p2"},"description":"Append points \"from\" to \"to\"-1 from an other polygon \"poly\" onto this one.","kind":"function","name":"append","params":[{"type":{"names":["Polygon"]},"description":"The polygon to get points from.","name":"poly"},{"type":{"names":["Number"]},"description":"The vertex index in \"poly\".","name":"from"},{"type":{"names":["Number"]},"description":"The end vertex index in \"poly\". Note that this vertex is NOT included when appending.","name":"to"}],"returns":[{"type":{"names":["Array"]}}],"longname":"append","scope":"global","___s":true},{"meta":{"range":[7856,7955],"filename":"p2.js","lineno":246,"path":"src\\physics\\p2"},"description":"Make sure that the polygon vertices are ordered counter-clockwise.","kind":"function","name":"makeCCW","longname":"makeCCW","scope":"global","___s":true},{"meta":{"range":[8397,8465],"filename":"p2.js","lineno":267,"path":"src\\physics\\p2"},"description":"Reverse the vertices in the polygon","kind":"function","name":"reverse","longname":"reverse","scope":"global","___s":true},{"meta":{"range":[8661,8790],"filename":"p2.js","lineno":279,"path":"src\\physics\\p2"},"description":"Check if a point in the polygon is a reflex point","kind":"function","name":"isReflex","params":[{"type":{"names":["Number"]},"name":"i"}],"returns":[{"type":{"names":["Boolean"]}}],"longname":"isReflex","scope":"global","___s":true},{"meta":{"range":[8948,9133],"filename":"p2.js","lineno":292,"path":"src\\physics\\p2"},"description":"Check if two vertices in the polygon can see each other","kind":"function","name":"canSee","params":[{"type":{"names":["Number"]},"description":"Vertex index 1","name":"a"},{"type":{"names":["Number"]},"description":"Vertex index 2","name":"b"}],"returns":[{"type":{"names":["Boolean"]}}],"longname":"canSee","scope":"global","___s":true},{"meta":{"range":[10120,10369],"filename":"p2.js","lineno":324,"path":"src\\physics\\p2"},"description":"Copy the polygon from vertex i to vertex j.","kind":"function","name":"copy","params":[{"type":{"names":["Number"]},"name":"i"},{"type":{"names":["Number"]},"name":"j"},{"type":{"names":["Polygon"]},"optional":true,"description":"Optional target polygon to save in.","name":"targetPoly"}],"returns":[{"type":{"names":["Polygon"]},"description":"The resulting copy."}],"longname":"copy","scope":"global","___s":true},{"meta":{"range":[10926,11200],"filename":"p2.js","lineno":354,"path":"src\\physics\\p2"},"description":"Decomposes the polygon into convex pieces. Returns a list of edges [[p1,p2],[p2,p3],...] that cuts the polygon.\rNote that this algorithm has complexity O(N^4) and will be very slow for polygons with many vertices.","kind":"function","name":"getCutEdges","returns":[{"type":{"names":["Array"]}}],"longname":"getCutEdges","scope":"global","___s":true},{"meta":{"range":[12070,12211],"filename":"p2.js","lineno":387,"path":"src\\physics\\p2"},"description":"Decomposes the polygon into one or more convex sub-Polygons.","kind":"function","name":"decomp","returns":[{"type":{"names":["Array"]},"description":"An array or Polygon objects."}],"longname":"decomp","scope":"global","___s":true},{"meta":{"range":[12391,12668],"filename":"p2.js","lineno":400,"path":"src\\physics\\p2"},"description":"Slices the polygon given one or more cut edges. If given one, this function will return two polygons (false on failure). If many, an array of polygons.","kind":"function","name":"slice","params":[{"type":{"names":["Array"]},"description":"A list of edges, as returned by .getCutEdges()","name":"cutEdges"}],"returns":[{"type":{"names":["Array"]}}],"longname":"slice","scope":"global","___s":true},{"meta":{"range":[13829,14084],"filename":"p2.js","lineno":444,"path":"src\\physics\\p2"},"description":"Checks that the line segments of this polygon do not intersect each other.","kind":"function","name":"isSimple","params":[{"type":{"names":["Array"]},"description":"An array of vertices e.g. [[0,0],[0,1],...]","name":"path"}],"returns":[{"type":{"names":["Boolean"]}}],"todo":["Should it check all segments with all others?"],"longname":"isSimple","scope":"global","___s":true},{"meta":{"range":[15132,15434],"filename":"p2.js","lineno":488,"path":"src\\physics\\p2"},"description":"Quickly decompose the Polygon into convex sub-polygons.","kind":"function","name":"quickDecomp","params":[{"type":{"names":["Array"]},"name":"result"},{"type":{"names":["Array"]},"optional":true,"name":"reflexVertices"},{"type":{"names":["Array"]},"optional":true,"name":"steinerPoints"},{"type":{"names":["Number"]},"optional":true,"name":"delta"},{"type":{"names":["Number"]},"optional":true,"name":"maxlevel"},{"type":{"names":["Number"]},"optional":true,"name":"level"}],"returns":[{"type":{"names":["Array"]}}],"longname":"quickDecomp","scope":"global","___s":true},{"meta":{"range":[22108,22395],"filename":"p2.js","lineno":641,"path":"src\\physics\\p2"},"description":"Remove collinear points in the polygon.","kind":"function","name":"removeCollinearPoints","params":[{"type":{"names":["Number"]},"optional":true,"description":"The threshold angle to use when determining whether two edges are collinear. Use zero for finest precision.","name":"precision"}],"returns":[{"type":{"names":["Number"]},"description":"The number of points removed"}],"longname":"removeCollinearPoints","scope":"global","___s":true},{"meta":{"range":[23057,23228],"filename":"p2.js","lineno":669,"path":"src\\physics\\p2"},"description":"Check if two scalars are equal","scope":"static","kind":"function","name":"eq","params":[{"type":{"names":["Number"]},"name":"a"},{"type":{"names":["Number"]},"name":"b"},{"type":{"names":["Number"]},"optional":true,"name":"precision"}],"returns":[{"type":{"names":["Boolean"]}}],"longname":"eq","___s":true},{"meta":{"range":[25380,25671],"filename":"p2.js","lineno":771,"path":"src\\physics\\p2"},"description":"Set the AABB bounds from a set of points, transformed by the given position and angle.","kind":"function","name":"setFromPoints","params":[{"type":{"names":["Array"]},"description":"An array of vec2's.","name":"points"},{"type":{"names":["Array"]},"name":"position"},{"type":{"names":["number"]},"name":"angle"},{"type":{"names":["number"]},"description":"Some margin to be added to the AABB.","name":"skinSize"}],"longname":"setFromPoints","scope":"global","___s":true},{"meta":{"range":[27031,27122],"filename":"p2.js","lineno":833,"path":"src\\physics\\p2"},"description":"Copy bounds from an AABB to this AABB","kind":"function","name":"copy","params":[{"type":{"names":["AABB"]},"name":"aabb"}],"longname":"copy","scope":"global","___s":true},{"meta":{"range":[27269,27379],"filename":"p2.js","lineno":843,"path":"src\\physics\\p2"},"description":"Extend this AABB so that it covers the given AABB too.","kind":"function","name":"extend","params":[{"type":{"names":["AABB"]},"name":"aabb"}],"longname":"extend","scope":"global","___s":true},{"meta":{"range":[27789,27919],"filename":"p2.js","lineno":866,"path":"src\\physics\\p2"},"description":"Returns true if the given AABB overlaps this AABB.","kind":"function","name":"overlaps","params":[{"type":{"names":["AABB"]},"name":"aabb"}],"returns":[{"type":{"names":["Boolean"]}}],"longname":"overlaps","scope":"global","___s":true},{"meta":{"range":[28366,28448],"filename":"p2.js","lineno":887,"path":"src\\physics\\p2"},"kind":"function","name":"containsPoint","params":[{"type":{"names":["Array"]},"name":"point"}],"returns":[{"type":{"names":["boolean"]}}],"longname":"containsPoint","scope":"global","___s":true},{"meta":{"range":[28655,28816],"filename":"p2.js","lineno":898,"path":"src\\physics\\p2"},"description":"Check if the AABB is hit by a ray.","kind":"function","name":"overlapsRay","params":[{"type":{"names":["Ray"]},"name":"ray"}],"returns":[{"type":{"names":["number"]},"description":"-1 if no hit, a number between 0 and 1 if hit."}],"longname":"overlapsRay","scope":"global","___s":true},{"meta":{"range":[31022,31141],"filename":"p2.js","lineno":985,"path":"src\\physics\\p2"},"description":"Set the world that we are searching for collision pairs in.","kind":"function","name":"setWorld","params":[{"type":{"names":["World"]},"name":"world"}],"longname":"setWorld","scope":"global","___s":true},{"meta":{"range":[31224,31502],"filename":"p2.js","lineno":994,"path":"src\\physics\\p2"},"description":"Get all potential intersecting body pairs.","kind":"function","name":"getCollisionPairs","params":[{"type":{"names":["World"]},"description":"The world to search in.","name":"world"}],"returns":[{"type":{"names":["Array"]},"description":"An array of the bodies, ordered in pairs. Example: A result of [a,b,c,d] means that the potential pairs are: (a,b), (c,d)."}],"longname":"getCollisionPairs","scope":"global","___s":true},{"meta":{"range":[31596,31770],"filename":"p2.js","lineno":1004,"path":"src\\physics\\p2"},"description":"Check whether the bounding radius of two bodies overlap.","kind":"function","name":"boundingRadiusCheck","params":[{"type":{"names":["Body"]},"name":"bodyA"},{"type":{"names":["Body"]},"name":"bodyB"}],"returns":[{"type":{"names":["Boolean"]}}],"longname":"boundingRadiusCheck","scope":"global","___s":true},{"meta":{"range":[32010,32184],"filename":"p2.js","lineno":1018,"path":"src\\physics\\p2"},"description":"Check whether the bounding radius of two bodies overlap.","kind":"function","name":"boundingRadiusCheck","params":[{"type":{"names":["Body"]},"name":"bodyA"},{"type":{"names":["Body"]},"name":"bodyB"}],"returns":[{"type":{"names":["Boolean"]}}],"longname":"boundingRadiusCheck","scope":"global","___s":true},{"meta":{"range":[32295,32469],"filename":"p2.js","lineno":1029,"path":"src\\physics\\p2"},"description":"Check whether the bounding radius of two bodies overlap.","kind":"function","name":"boundingRadiusCheck","params":[{"type":{"names":["Body"]},"name":"bodyA"},{"type":{"names":["Body"]},"name":"bodyB"}],"returns":[{"type":{"names":["Boolean"]}}],"longname":"boundingRadiusCheck","scope":"global","___s":true},{"meta":{"range":[32948,33112],"filename":"p2.js","lineno":1052,"path":"src\\physics\\p2"},"description":"Check whether two bodies are allowed to collide at all.","kind":"function","name":"canCollide","params":[{"type":{"names":["Body"]},"name":"bodyA"},{"type":{"names":["Body"]},"name":"bodyB"}],"returns":[{"type":{"names":["Boolean"]}}],"longname":"canCollide","scope":"global","___s":true},{"meta":{"range":[34890,35002],"filename":"p2.js","lineno":1119,"path":"src\\physics\\p2"},"description":"Get the colliding pairs","kind":"function","name":"getCollisionPairs","params":[{"type":{"names":["World"]},"name":"world"}],"returns":[{"type":{"names":["Array"]}}],"longname":"getCollisionPairs","scope":"global","___s":true},{"meta":{"range":[35504,35712],"filename":"p2.js","lineno":1146,"path":"src\\physics\\p2"},"description":"Returns all the bodies within an AABB.","kind":"function","name":"aabbQuery","params":[{"type":{"names":["World"]},"name":"world"},{"type":{"names":["AABB"]},"name":"aabb"},{"type":{"names":["array"]},"description":"An array to store resulting bodies in.","name":"result"}],"returns":[{"type":{"names":["array"]}}],"longname":"aabbQuery","scope":"global","___s":true},{"meta":{"range":[41639,41788],"filename":"p2.js","lineno":1348,"path":"src\\physics\\p2"},"kind":"function","name":"bodiesOverlap","params":[{"type":{"names":["Body"]},"name":"bodyA"},{"type":{"names":["Body"]},"name":"bodyB"}],"returns":[{"type":{"names":["Boolean"]}}],"todo":["shape world transforms are wrong"],"longname":"bodiesOverlap","scope":"global","___s":true},{"meta":{"range":[42828,43001],"filename":"p2.js","lineno":1390,"path":"src\\physics\\p2"},"description":"Check if the bodies were in contact since the last reset().","kind":"function","name":"collidedLastStep","params":[{"type":{"names":["Body"]},"name":"bodyA"},{"type":{"names":["Body"]},"name":"bodyB"}],"returns":[{"type":{"names":["Boolean"]}}],"longname":"collidedLastStep","scope":"global","___s":true},{"meta":{"range":[43187,43276],"filename":"p2.js","lineno":1403,"path":"src\\physics\\p2"},"description":"Throws away the old equations and gets ready to create new","kind":"function","name":"reset","longname":"reset","scope":"global","___s":true},{"meta":{"range":[43961,44174],"filename":"p2.js","lineno":1432,"path":"src\\physics\\p2"},"description":"Creates a ContactEquation, either by reusing an existing object or creating a new one.","kind":"function","name":"createContactEquation","params":[{"type":{"names":["Body"]},"name":"bodyA"},{"type":{"names":["Body"]},"name":"bodyB"}],"returns":[{"type":{"names":["ContactEquation"]}}],"longname":"createContactEquation","scope":"global","___s":true},{"meta":{"range":[44697,44913],"filename":"p2.js","lineno":1456,"path":"src\\physics\\p2"},"description":"Creates a FrictionEquation, either by reusing an existing object or creating a new one.","kind":"function","name":"createFrictionEquation","params":[{"type":{"names":["Body"]},"name":"bodyA"},{"type":{"names":["Body"]},"name":"bodyB"}],"returns":[{"type":{"names":["FrictionEquation"]}}],"longname":"createFrictionEquation","scope":"global","___s":true},{"meta":{"range":[45493,45792],"filename":"p2.js","lineno":1480,"path":"src\\physics\\p2"},"description":"Creates a FrictionEquation given the data in the ContactEquation. Uses same offset vectors ri and rj, but the tangent vector will be constructed from the collision normal.","kind":"function","name":"createFrictionFromContact","params":[{"type":{"names":["ContactEquation"]},"name":"contactEquation"}],"returns":[{"type":{"names":["FrictionEquation"]}}],"longname":"createFrictionFromContact","scope":"global","___s":true},{"meta":{"range":[47463,47868],"filename":"p2.js","lineno":1526,"path":"src\\physics\\p2"},"description":"Convex/line narrowphase","kind":"function","name":"convexLine","params":[{"type":{"names":["Body"]},"name":"convexBody"},{"type":{"names":["Convex"]},"name":"convexShape"},{"type":{"names":["Array"]},"name":"convexOffset"},{"type":{"names":["Number"]},"name":"convexAngle"},{"type":{"names":["Body"]},"name":"lineBody"},{"type":{"names":["Line"]},"name":"lineShape"},{"type":{"names":["Array"]},"name":"lineOffset"},{"type":{"names":["Number"]},"name":"lineAngle"},{"type":{"names":["boolean"]},"name":"justTest"}],"todo":["Implement me!"],"longname":"convexLine","scope":"global","___s":true},{"meta":{"range":[48223,48604],"filename":"p2.js","lineno":1560,"path":"src\\physics\\p2"},"description":"Line/box narrowphase","kind":"function","name":"lineBox","params":[{"type":{"names":["Body"]},"name":"lineBody"},{"type":{"names":["Line"]},"name":"lineShape"},{"type":{"names":["Array"]},"name":"lineOffset"},{"type":{"names":["Number"]},"name":"lineAngle"},{"type":{"names":["Body"]},"name":"boxBody"},{"type":{"names":["Box"]},"name":"boxShape"},{"type":{"names":["Array"]},"name":"boxOffset"},{"type":{"names":["Number"]},"name":"boxAngle"},{"type":{"names":["Boolean"]},"name":"justTest"}],"todo":["Implement me!"],"longname":"lineBox","scope":"global","___s":true},{"meta":{"range":[49484,49853],"filename":"p2.js","lineno":1604,"path":"src\\physics\\p2"},"description":"Convex/capsule narrowphase","kind":"function","name":"convexCapsule","params":[{"type":{"names":["Body"]},"name":"convexBody"},{"type":{"names":["Convex"]},"name":"convexShape"},{"type":{"names":["Array"]},"name":"convexPosition"},{"type":{"names":["Number"]},"name":"convexAngle"},{"type":{"names":["Body"]},"name":"capsuleBody"},{"type":{"names":["Capsule"]},"name":"capsuleShape"},{"type":{"names":["Array"]},"name":"capsulePosition"},{"type":{"names":["Number"]},"name":"capsuleAngle"}],"longname":"convexCapsule","scope":"global","___s":true},{"meta":{"range":[51306,51687],"filename":"p2.js","lineno":1655,"path":"src\\physics\\p2"},"description":"Capsule/line narrowphase","kind":"function","name":"lineCapsule","params":[{"type":{"names":["Body"]},"name":"lineBody"},{"type":{"names":["Line"]},"name":"lineShape"},{"type":{"names":["Array"]},"name":"linePosition"},{"type":{"names":["Number"]},"name":"lineAngle"},{"type":{"names":["Body"]},"name":"capsuleBody"},{"type":{"names":["Capsule"]},"name":"capsuleShape"},{"type":{"names":["Array"]},"name":"capsulePosition"},{"type":{"names":["Number"]},"name":"capsuleAngle"}],"todo":["Implement me!"],"longname":"lineCapsule","scope":"global","___s":true},{"meta":{"range":[52212,52503],"filename":"p2.js","lineno":1692,"path":"src\\physics\\p2"},"description":"Capsule/capsule narrowphase","kind":"function","name":"capsuleCapsule","params":[{"type":{"names":["Body"]},"name":"bi"},{"type":{"names":["Capsule"]},"name":"si"},{"type":{"names":["Array"]},"name":"xi"},{"type":{"names":["Number"]},"name":"ai"},{"type":{"names":["Body"]},"name":"bj"},{"type":{"names":["Capsule"]},"name":"sj"},{"type":{"names":["Array"]},"name":"xj"},{"type":{"names":["Number"]},"name":"aj"}],"longname":"capsuleCapsule","scope":"global","___s":true},{"meta":{"range":[55195,55534],"filename":"p2.js","lineno":1797,"path":"src\\physics\\p2"},"description":"Line/line narrowphase","kind":"function","name":"lineLine","params":[{"type":{"names":["Body"]},"name":"bodyA"},{"type":{"names":["Line"]},"name":"shapeA"},{"type":{"names":["Array"]},"name":"positionA"},{"type":{"names":["Number"]},"name":"angleA"},{"type":{"names":["Body"]},"name":"bodyB"},{"type":{"names":["Line"]},"name":"shapeB"},{"type":{"names":["Array"]},"name":"positionB"},{"type":{"names":["Number"]},"name":"angleB"}],"todo":["Implement me!"],"longname":"lineLine","scope":"global","___s":true},{"meta":{"range":[55857,56166],"filename":"p2.js","lineno":1830,"path":"src\\physics\\p2"},"description":"Plane/line Narrowphase","kind":"function","name":"planeLine","params":[{"type":{"names":["Body"]},"name":"planeBody"},{"type":{"names":["Plane"]},"name":"planeShape"},{"type":{"names":["Array"]},"name":"planeOffset"},{"type":{"names":["Number"]},"name":"planeAngle"},{"type":{"names":["Body"]},"name":"lineBody"},{"type":{"names":["Line"]},"name":"lineShape"},{"type":{"names":["Array"]},"name":"lineOffset"},{"type":{"names":["Number"]},"name":"lineAngle"}],"longname":"planeLine","scope":"global","___s":true},{"meta":{"range":[59621,60234],"filename":"p2.js","lineno":1952,"path":"src\\physics\\p2"},"description":"Circle/line Narrowphase","kind":"function","name":"circleLine","params":[{"type":{"names":["Body"]},"name":"circleBody"},{"type":{"names":["Circle"]},"name":"circleShape"},{"type":{"names":["Array"]},"name":"circleOffset"},{"type":{"names":["Number"]},"name":"circleAngle"},{"type":{"names":["Body"]},"name":"lineBody"},{"type":{"names":["Line"]},"name":"lineShape"},{"type":{"names":["Array"]},"name":"lineOffset"},{"type":{"names":["Number"]},"name":"lineAngle"},{"type":{"names":["Boolean"]},"description":"If set to true, this function will return the result (intersection or not) without adding equations.","name":"justTest"},{"type":{"names":["Number"]},"description":"Radius to add to the line. Can be used to test Capsules.","name":"lineRadius"},{"type":{"names":["Number"]},"description":"If set, this value overrides the circle shape radius.","name":"circleRadius"}],"longname":"circleLine","scope":"global","___s":true},{"meta":{"range":[65373,65630],"filename":"p2.js","lineno":2122,"path":"src\\physics\\p2"},"description":"Circle/capsule Narrowphase","kind":"function","name":"circleCapsule","params":[{"type":{"names":["Body"]},"name":"bi"},{"type":{"names":["Circle"]},"name":"si"},{"type":{"names":["Array"]},"name":"xi"},{"type":{"names":["Number"]},"name":"ai"},{"type":{"names":["Body"]},"name":"bj"},{"type":{"names":["Line"]},"name":"sj"},{"type":{"names":["Array"]},"name":"xj"},{"type":{"names":["Number"]},"name":"aj"}],"longname":"circleCapsule","scope":"global","___s":true},{"meta":{"range":[65854,66241],"filename":"p2.js","lineno":2139,"path":"src\\physics\\p2"},"description":"Circle/convex Narrowphase.","kind":"function","name":"circleConvex","params":[{"type":{"names":["Body"]},"name":"circleBody"},{"type":{"names":["Circle"]},"name":"circleShape"},{"type":{"names":["Array"]},"name":"circleOffset"},{"type":{"names":["Number"]},"name":"circleAngle"},{"type":{"names":["Body"]},"name":"convexBody"},{"type":{"names":["Convex"]},"name":"convexShape"},{"type":{"names":["Array"]},"name":"convexOffset"},{"type":{"names":["Number"]},"name":"convexAngle"},{"type":{"names":["Boolean"]},"name":"justTest"},{"type":{"names":["Number"]},"name":"circleRadius"}],"longname":"circleConvex","scope":"global","___s":true},{"meta":{"range":[72847,73377],"filename":"p2.js","lineno":2350,"path":"src\\physics\\p2"},"description":"Particle/convex Narrowphase","kind":"function","name":"particleConvex","params":[{"type":{"names":["Body"]},"name":"particleBody"},{"type":{"names":["Particle"]},"name":"particleShape"},{"type":{"names":["Array"]},"name":"particleOffset"},{"type":{"names":["Number"]},"name":"particleAngle"},{"type":{"names":["Body"]},"name":"convexBody"},{"type":{"names":["Convex"]},"name":"convexShape"},{"type":{"names":["Array"]},"name":"convexOffset"},{"type":{"names":["Number"]},"name":"convexAngle"},{"type":{"names":["Boolean"]},"name":"justTest"}],"todo":["use pointInConvex and code more similar to circleConvex","don't transform each vertex, but transform the particle position to convex-local instead"],"longname":"particleConvex","scope":"global","___s":true},{"meta":{"range":[77140,77579],"filename":"p2.js","lineno":2480,"path":"src\\physics\\p2"},"description":"Circle/circle Narrowphase","kind":"function","name":"circleCircle","params":[{"type":{"names":["Body"]},"name":"bodyA"},{"type":{"names":["Circle"]},"name":"shapeA"},{"type":{"names":["Array"]},"name":"offsetA"},{"type":{"names":["Number"]},"name":"angleA"},{"type":{"names":["Body"]},"name":"bodyB"},{"type":{"names":["Circle"]},"name":"shapeB"},{"type":{"names":["Array"]},"name":"offsetB"},{"type":{"names":["Number"]},"name":"angleB"},{"type":{"names":["Boolean"]},"name":"justTest"},{"type":{"names":["Number"]},"optional":true,"description":"Optional radius to use for shapeA","name":"radiusA"},{"type":{"names":["Number"]},"optional":true,"description":"Optional radius to use for shapeB","name":"radiusB"}],"longname":"circleCircle","scope":"global","___s":true},{"meta":{"range":[78791,79135],"filename":"p2.js","lineno":2545,"path":"src\\physics\\p2"},"description":"Plane/Convex Narrowphase","kind":"function","name":"planeConvex","params":[{"type":{"names":["Body"]},"name":"planeBody"},{"type":{"names":["Plane"]},"name":"planeShape"},{"type":{"names":["Array"]},"name":"planeOffset"},{"type":{"names":["Number"]},"name":"planeAngle"},{"type":{"names":["Body"]},"name":"convexBody"},{"type":{"names":["Convex"]},"name":"convexShape"},{"type":{"names":["Array"]},"name":"convexOffset"},{"type":{"names":["Number"]},"name":"convexAngle"},{"type":{"names":["Boolean"]},"name":"justTest"}],"longname":"planeConvex","scope":"global","___s":true},{"meta":{"range":[81130,81536],"filename":"p2.js","lineno":2630,"path":"src\\physics\\p2"},"description":"Narrowphase for particle vs plane","kind":"function","name":"particlePlane","params":[{"type":{"names":["Body"]},"name":"particleBody"},{"type":{"names":["Particle"]},"name":"particleShape"},{"type":{"names":["Array"]},"name":"particleOffset"},{"type":{"names":["Number"]},"name":"particleAngle"},{"type":{"names":["Body"]},"name":"planeBody"},{"type":{"names":["Plane"]},"name":"planeShape"},{"type":{"names":["Array"]},"name":"planeOffset"},{"type":{"names":["Number"]},"name":"planeAngle"},{"type":{"names":["Boolean"]},"name":"justTest"}],"longname":"particlePlane","scope":"global","___s":true},{"meta":{"range":[82866,83232],"filename":"p2.js","lineno":2693,"path":"src\\physics\\p2"},"description":"Circle/Particle Narrowphase","kind":"function","name":"circleParticle","params":[{"type":{"names":["Body"]},"name":"circleBody"},{"type":{"names":["Circle"]},"name":"circleShape"},{"type":{"names":["Array"]},"name":"circleOffset"},{"type":{"names":["Number"]},"name":"circleAngle"},{"type":{"names":["Body"]},"name":"particleBody"},{"type":{"names":["Particle"]},"name":"particleShape"},{"type":{"names":["Array"]},"name":"particleOffset"},{"type":{"names":["Number"]},"name":"particleAngle"},{"type":{"names":["Boolean"]},"name":"justTest"}],"longname":"circleParticle","scope":"global","___s":true},{"meta":{"range":[84645,84968],"filename":"p2.js","lineno":2754,"path":"src\\physics\\p2"},"kind":"function","name":"planeCapsule","params":[{"type":{"names":["Body"]},"name":"planeBody"},{"type":{"names":["Circle"]},"name":"planeShape"},{"type":{"names":["Array"]},"name":"planeOffset"},{"type":{"names":["Number"]},"name":"planeAngle"},{"type":{"names":["Body"]},"name":"capsuleBody"},{"type":{"names":["Particle"]},"name":"capsuleShape"},{"type":{"names":["Array"]},"name":"capsuleOffset"},{"type":{"names":["Number"]},"name":"capsuleAngle"},{"type":{"names":["Boolean"]},"name":"justTest"}],"longname":"planeCapsule","scope":"global","___s":true},{"meta":{"range":[86695,87473],"filename":"p2.js","lineno":2824,"path":"src\\physics\\p2"},"description":"Creates ContactEquations and FrictionEquations for a collision.","kind":"function","name":"circlePlane","params":[{"type":{"names":["Body"]},"description":"The first body that should be connected to the equations.","name":"bi"},{"type":{"names":["Circle"]},"description":"The circle shape participating in the collision.","name":"si"},{"type":{"names":["Array"]},"description":"Extra offset to take into account for the Shape, in addition to the one in circleBody.position. Will *not* be rotated by circleBody.angle (maybe it should, for sake of homogenity?). Set to null if none.","name":"xi"},{"type":{"names":["Body"]},"description":"The second body that should be connected to the equations.","name":"bj"},{"type":{"names":["Plane"]},"description":"The Plane shape that is participating","name":"sj"},{"type":{"names":["Array"]},"description":"Extra offset for the plane shape.","name":"xj"},{"type":{"names":["Number"]},"description":"Extra angle to apply to the plane","name":"aj"}],"longname":"circlePlane","scope":"global","___s":true},{"meta":{"range":[89364,89745],"filename":"p2.js","lineno":2894,"path":"src\\physics\\p2"},"description":"Convex/convex Narrowphase.See <a href=\"http://www.altdevblogaday.com/2011/05/13/contact-generation-between-3d-convex-meshes/\">this article</a> for more info.","kind":"function","name":"convexConvex","params":[{"type":{"names":["Body"]},"name":"bi"},{"type":{"names":["Convex"]},"name":"si"},{"type":{"names":["Array"]},"name":"xi"},{"type":{"names":["Number"]},"name":"ai"},{"type":{"names":["Body"]},"name":"bj"},{"type":{"names":["Convex"]},"name":"sj"},{"type":{"names":["Array"]},"name":"xj"},{"type":{"names":["Number"]},"name":"aj"}],"longname":"convexConvex","scope":"global","___s":true},{"meta":{"range":[95798,96056],"filename":"p2.js","lineno":3076,"path":"src\\physics\\p2"},"description":"Project a Convex onto a world-oriented axis","kind":"function","name":"projectConvexOntoAxis","scope":"static","params":[{"type":{"names":["Convex"]},"name":"convexShape"},{"type":{"names":["Array"]},"name":"convexOffset"},{"type":{"names":["Number"]},"name":"convexAngle"},{"type":{"names":["Array"]},"name":"worldAxis"},{"type":{"names":["Array"]},"name":"result"}],"longname":"projectConvexOntoAxis","___s":true},{"meta":{"range":[97302,97765],"filename":"p2.js","lineno":3128,"path":"src\\physics\\p2"},"description":"Find a separating axis between the shapes, that maximizes the separating distance between them.","kind":"function","name":"findSeparatingAxis","scope":"static","params":[{"type":{"names":["Convex"]},"name":"c1"},{"type":{"names":["Array"]},"name":"offset1"},{"type":{"names":["Number"]},"name":"angle1"},{"type":{"names":["Convex"]},"name":"c2"},{"type":{"names":["Array"]},"name":"offset2"},{"type":{"names":["Number"]},"name":"angle2"},{"type":{"names":["Array"]},"description":"The resulting axis","name":"sepAxis"}],"returns":[{"type":{"names":["Boolean"]},"description":"Whether the axis could be found."}],"longname":"findSeparatingAxis","___s":true},{"meta":{"range":[102514,102874],"filename":"p2.js","lineno":3298,"path":"src\\physics\\p2"},"description":"Get the edge that has a normal closest to an axis.","kind":"function","name":"getClosestEdge","scope":"static","params":[{"type":{"names":["Convex"]},"name":"c"},{"type":{"names":["Number"]},"name":"angle"},{"type":{"names":["Array"]},"name":"axis"},{"type":{"names":["Boolean"]},"name":"flip"}],"returns":[{"type":{"names":["Number"]},"description":"Index of the edge that is closest. This index and the next spans the resulting edge. Returns -1 if failed."}],"longname":"getClosestEdge","___s":true},{"meta":{"range":[104090,104352],"filename":"p2.js","lineno":3348,"path":"src\\physics\\p2"},"kind":"function","name":"circleHeightfield","params":[{"type":{"names":["Body"]},"name":"bi"},{"type":{"names":["Circle"]},"name":"si"},{"type":{"names":["Array"]},"name":"xi"},{"type":{"names":["Body"]},"name":"bj"},{"type":{"names":["Heightfield"]},"name":"sj"},{"type":{"names":["Array"]},"name":"xj"},{"type":{"names":["Number"]},"name":"aj"}],"longname":"circleHeightfield","scope":"global","___s":true},{"meta":{"range":[109809,110071],"filename":"p2.js","lineno":3527,"path":"src\\physics\\p2"},"kind":"function","name":"circleHeightfield","params":[{"type":{"names":["Body"]},"name":"bi"},{"type":{"names":["Circle"]},"name":"si"},{"type":{"names":["Array"]},"name":"xi"},{"type":{"names":["Body"]},"name":"bj"},{"type":{"names":["Heightfield"]},"name":"sj"},{"type":{"names":["Array"]},"name":"xj"},{"type":{"names":["Number"]},"name":"aj"}],"longname":"circleHeightfield","scope":"global","___s":true},{"meta":{"range":[116223,116307],"filename":"p2.js","lineno":3717,"path":"src\\physics\\p2"},"description":"Should be called if you change the from or to point.","kind":"function","name":"update","longname":"update","scope":"global","___s":true},{"meta":{"range":[116522,116610],"filename":"p2.js","lineno":3731,"path":"src\\physics\\p2"},"kind":"function","name":"intersectBodies","params":[{"type":{"names":["Array"]},"description":"An array of Body objects.","name":"bodies"}],"longname":"intersectBodies","scope":"global","___s":true},{"meta":{"range":[118894,118975],"filename":"p2.js","lineno":3817,"path":"src\\physics\\p2"},"description":"Get the AABB of the ray.","kind":"function","name":"getAABB","params":[{"type":{"names":["AABB"]},"name":"aabb"}],"longname":"getAABB","scope":"global","___s":true},{"meta":{"range":[122308,122409],"filename":"p2.js","lineno":3968,"path":"src\\physics\\p2"},"description":"Reset all result data. Must be done before re-using the result object.","kind":"function","name":"reset","longname":"reset","scope":"global","___s":true},{"meta":{"range":[122607,122702],"filename":"p2.js","lineno":3981,"path":"src\\physics\\p2"},"description":"Get the distance to the hit point.","kind":"function","name":"getHitDistance","params":[{"type":{"names":["Ray"]},"name":"ray"}],"longname":"getHitDistance","scope":"global","___s":true},{"meta":{"range":[122827,122920],"filename":"p2.js","lineno":3990,"path":"src\\physics\\p2"},"description":"Returns true if the ray hit something since the last reset().","kind":"function","name":"hasHit","longname":"hasHit","scope":"global","___s":true},{"meta":{"range":[123007,123108],"filename":"p2.js","lineno":3998,"path":"src\\physics\\p2"},"description":"Get world hit point.","kind":"function","name":"getHitPoint","params":[{"type":{"names":["array"]},"name":"out"},{"type":{"names":["Ray"]},"name":"ray"}],"longname":"getHitPoint","scope":"global","___s":true},{"meta":{"range":[123228,123331],"filename":"p2.js","lineno":4008,"path":"src\\physics\\p2"},"description":"Can be called while iterating over hits to stop searching for hit points.","kind":"function","name":"stop","longname":"stop","scope":"global","___s":true},{"meta":{"range":[125254,125329],"filename":"p2.js","lineno":4093,"path":"src\\physics\\p2"},"description":"Change the world","kind":"function","name":"setWorld","params":[{"type":{"names":["World"]},"name":"world"}],"longname":"setWorld","scope":"global","___s":true},{"meta":{"range":[125867,126003],"filename":"p2.js","lineno":4116,"path":"src\\physics\\p2"},"description":"Sorts bodies along an axis.","kind":"function","name":"sortAxisList","params":[{"type":{"names":["Array"]},"name":"a"},{"type":{"names":["number"]},"name":"axisIndex"}],"returns":[{"type":{"names":["Array"]}}],"longname":"sortAxisList","scope":"global","___s":true},{"meta":{"range":[126596,126708],"filename":"p2.js","lineno":4146,"path":"src\\physics\\p2"},"description":"Get the colliding pairs","kind":"function","name":"getCollisionPairs","params":[{"type":{"names":["World"]},"name":"world"}],"returns":[{"type":{"names":["Array"]}}],"longname":"getCollisionPairs","scope":"global","___s":true},{"meta":{"range":[127695,127903],"filename":"p2.js","lineno":4193,"path":"src\\physics\\p2"},"description":"Returns all the bodies within an AABB.","kind":"function","name":"aabbQuery","params":[{"type":{"names":["World"]},"name":"world"},{"type":{"names":["AABB"]},"name":"aabb"},{"type":{"names":["array"]},"description":"An array to store resulting bodies in.","name":"result"}],"returns":[{"type":{"names":["array"]}}],"longname":"aabbQuery","scope":"global","___s":true},{"meta":{"range":[130216,130304],"filename":"p2.js","lineno":4299,"path":"src\\physics\\p2"},"description":"Updates the internal constraint parameters before solve.","kind":"function","name":"update","longname":"update","scope":"global","___s":true},{"meta":{"range":[130838,130940],"filename":"p2.js","lineno":4337,"path":"src\\physics\\p2"},"description":"Set stiffness for this constraint.","kind":"function","name":"setStiffness","params":[{"type":{"names":["Number"]},"name":"stiffness"}],"longname":"setStiffness","scope":"global","___s":true},{"meta":{"range":[131179,131284],"filename":"p2.js","lineno":4351,"path":"src\\physics\\p2"},"description":"Set relaxation for this constraint.","kind":"function","name":"setRelaxation","params":[{"type":{"names":["Number"]},"name":"relaxation"}],"longname":"setRelaxation","scope":"global","___s":true},{"meta":{"range":[137289,137423],"filename":"p2.js","lineno":4545,"path":"src\\physics\\p2"},"description":"Update the constraint equations. Should be done if any of the bodies changed position, before solving.","kind":"function","name":"update","longname":"update","scope":"global","___s":true},{"meta":{"range":[139230,139324],"filename":"p2.js","lineno":4614,"path":"src\\physics\\p2"},"description":"Set the max force to be used","kind":"function","name":"setMaxForce","params":[{"type":{"names":["Number"]},"name":"maxForce"}],"longname":"setMaxForce","scope":"global","___s":true},{"meta":{"range":[139501,139576],"filename":"p2.js","lineno":4625,"path":"src\\physics\\p2"},"description":"Get the max force","kind":"function","name":"getMaxForce","returns":[{"type":{"names":["Number"]}}],"longname":"getMaxForce","scope":"global","___s":true},{"meta":{"range":[142149,142252],"filename":"p2.js","lineno":4710,"path":"src\\physics\\p2"},"description":"Set the max torque for the constraint.","kind":"function","name":"setMaxTorque","params":[{"type":{"names":["Number"]},"name":"torque"}],"longname":"setMaxTorque","scope":"global","___s":true},{"meta":{"range":[142364,142461],"filename":"p2.js","lineno":4719,"path":"src\\physics\\p2"},"description":"Get the max torque for the constraint.","kind":"function","name":"getMaxTorque","returns":[{"type":{"names":["Number"]}}],"longname":"getMaxTorque","scope":"global","___s":true},{"meta":{"range":[146724,146823],"filename":"p2.js","lineno":4846,"path":"src\\physics\\p2"},"description":"Set the maximum force to be applied.","kind":"function","name":"setMaxForce","params":[{"type":{"names":["Number"]},"name":"force"}],"longname":"setMaxForce","scope":"global","___s":true},{"meta":{"range":[147045,147121],"filename":"p2.js","lineno":4859,"path":"src\\physics\\p2"},"description":"Get the max force.","kind":"function","name":"getMaxForce","returns":[{"type":{"names":["Number"]}}],"longname":"getMaxForce","scope":"global","___s":true},{"meta":{"range":[155182,155316],"filename":"p2.js","lineno":5111,"path":"src\\physics\\p2"},"description":"Update the constraint equations. Should be done if any of the bodies changed position, before solving.","kind":"function","name":"update","longname":"update","scope":"global","___s":true},{"meta":{"range":[158812,158865],"filename":"p2.js","lineno":5208,"path":"src\\physics\\p2"},"description":"Enable the motor","kind":"function","name":"enableMotor","longname":"enableMotor","scope":"global","___s":true},{"meta":{"range":[159059,159125],"filename":"p2.js","lineno":5220,"path":"src\\physics\\p2"},"description":"Disable the rotational motor","kind":"function","name":"disableMotor","longname":"disableMotor","scope":"global","___s":true},{"meta":{"range":[159366,159505],"filename":"p2.js","lineno":5233,"path":"src\\physics\\p2"},"description":"Set the constraint limits.","kind":"function","name":"setLimits","params":[{"type":{"names":["number"]},"description":"Lower limit.","name":"lower"},{"type":{"names":["number"]},"description":"Upper limit.","name":"upper"}],"longname":"setLimits","scope":"global","___s":true},{"meta":{"range":[165440,165597],"filename":"p2.js","lineno":5415,"path":"src\\physics\\p2"},"description":"Set the constraint angle limits.","kind":"function","name":"setLimits","params":[{"type":{"names":["number"]},"description":"Lower angle limit.","name":"lower"},{"type":{"names":["number"]},"description":"Upper angle limit.","name":"upper"}],"longname":"setLimits","scope":"global","___s":true},{"meta":{"range":[168748,168812],"filename":"p2.js","lineno":5525,"path":"src\\physics\\p2"},"description":"Enable the rotational motor","kind":"function","name":"enableMotor","longname":"enableMotor","scope":"global","___s":true},{"meta":{"range":[169005,169071],"filename":"p2.js","lineno":5537,"path":"src\\physics\\p2"},"description":"Disable the rotational motor","kind":"function","name":"disableMotor","longname":"disableMotor","scope":"global","___s":true},{"meta":{"range":[169311,169454],"filename":"p2.js","lineno":5550,"path":"src\\physics\\p2"},"description":"Check if the motor is enabled.","kind":"function","name":"motorIsEnabled","deprecated":"use property motorEnabled instead.","returns":[{"type":{"names":["Boolean"]}}],"longname":"motorIsEnabled","scope":"global","___s":true},{"meta":{"range":[169554,169668],"filename":"p2.js","lineno":5560,"path":"src\\physics\\p2"},"description":"Set the speed of the rotational constraint motor","kind":"function","name":"setMotorSpeed","params":[{"type":{"names":["Number"]},"name":"speed"}],"longname":"setMotorSpeed","scope":"global","___s":true},{"meta":{"range":[169898,170063],"filename":"p2.js","lineno":5573,"path":"src\\physics\\p2"},"description":"Get the speed of the rotational constraint motor","kind":"function","name":"getMotorSpeed","returns":[{"type":{"names":["Number"]},"description":"The current speed, or false if the motor is not enabled."}],"longname":"getMotorSpeed","scope":"global","___s":true},{"meta":{"range":[171683,171779],"filename":"p2.js","lineno":5625,"path":"src\\physics\\p2"},"description":"Set the gear ratio for this equation","kind":"function","name":"setRatio","params":[{"type":{"names":["Number"]},"name":"ratio"}],"longname":"setRatio","scope":"global","___s":true},{"meta":{"range":[171926,172026],"filename":"p2.js","lineno":5637,"path":"src\\physics\\p2"},"description":"Set the max force for the equation.","kind":"function","name":"setMaxTorque","params":[{"type":{"names":["Number"]},"name":"torque"}],"longname":"setMaxTorque","scope":"global","___s":true},{"meta":{"range":[178534,178773],"filename":"p2.js","lineno":5883,"path":"src\\physics\\p2"},"description":"Compute SPOOK parameters .a, .b and .epsilon according to the current parameters. See equations 9, 10 and 11 in the <a href=\"http://www8.cs.umu.se/kurser/5DV058/VT09/lectures/spooknotes.pdf\">SPOOK notes</a>.","kind":"function","name":"update","longname":"update","scope":"global","___s":true},{"meta":{"range":[179075,179195],"filename":"p2.js","lineno":5899,"path":"src\\physics\\p2"},"description":"Multiply a jacobian entry with corresponding positions or velocities","kind":"function","name":"gmult","returns":[{"type":{"names":["Number"]}}],"longname":"gmult","scope":"global","___s":true},{"meta":{"range":[179417,179510],"filename":"p2.js","lineno":5913,"path":"src\\physics\\p2"},"description":"Computes the RHS of the SPOOK equation","kind":"function","name":"computeB","returns":[{"type":{"names":["Number"]}}],"longname":"computeB","scope":"global","___s":true},{"meta":{"range":[179706,179821],"filename":"p2.js","lineno":5925,"path":"src\\physics\\p2"},"description":"Computes G\\*q, where q are the generalized body coordinates","kind":"function","name":"computeGq","returns":[{"type":{"names":["Number"]}}],"longname":"computeGq","scope":"global","___s":true},{"meta":{"range":[180157,180259],"filename":"p2.js","lineno":5944,"path":"src\\physics\\p2"},"description":"Computes G\\*W, where W are the body velocities","kind":"function","name":"computeGW","returns":[{"type":{"names":["Number"]}}],"longname":"computeGW","scope":"global","___s":true},{"meta":{"range":[180569,180683],"filename":"p2.js","lineno":5960,"path":"src\\physics\\p2"},"description":"Computes G\\*Wlambda, where W are the body velocities","kind":"function","name":"computeGWlambda","returns":[{"type":{"names":["Number"]}}],"longname":"computeGWlambda","scope":"global","___s":true},{"meta":{"range":[180957,181136],"filename":"p2.js","lineno":5976,"path":"src\\physics\\p2"},"description":"Computes G\\*inv(M)\\*f, where M is the mass matrix with diagonal blocks for each body, and f are the forces on the bodies.","kind":"function","name":"computeGiMf","returns":[{"type":{"names":["Number"]}}],"longname":"computeGiMf","scope":"global","___s":true},{"meta":{"range":[181809,181890],"filename":"p2.js","lineno":6004,"path":"src\\physics\\p2"},"description":"Computes G\\*inv(M)\\*G'","kind":"function","name":"computeGiMGt","returns":[{"type":{"names":["Number"]}}],"longname":"computeGiMGt","scope":"global","___s":true},{"meta":{"range":[182722,182830],"filename":"p2.js","lineno":6033,"path":"src\\physics\\p2"},"description":"Add constraint velocity to the bodies.","kind":"function","name":"addToWlambda","params":[{"type":{"names":["Number"]},"name":"deltalambda"}],"longname":"addToWlambda","scope":"global","___s":true},{"meta":{"range":[184040,184198],"filename":"p2.js","lineno":6076,"path":"src\\physics\\p2"},"description":"Compute the denominator part of the SPOOK equation: C = G\\*inv(M)\\*G' + eps","kind":"function","name":"computeInvC","params":[{"type":{"names":["Number"]},"name":"eps"}],"returns":[{"type":{"names":["Number"]}}],"longname":"computeInvC","scope":"global","___s":true},{"meta":{"range":[186536,186708],"filename":"p2.js","lineno":6160,"path":"src\\physics\\p2"},"description":"Set the slipping condition for the constraint. The friction force cannot be\rlarger than this value.","kind":"function","name":"setSlipForce","params":[{"type":{"names":["Number"]},"name":"slipForce"}],"longname":"setSlipForce","scope":"global","___s":true},{"meta":{"range":[186845,186941],"filename":"p2.js","lineno":6171,"path":"src\\physics\\p2"},"description":"Get the max force for the constraint.","kind":"function","name":"getSlipForce","returns":[{"type":{"names":["Number"]}}],"longname":"getSlipForce","scope":"global","___s":true},{"meta":{"range":[190425,190618],"filename":"p2.js","lineno":6295,"path":"src\\physics\\p2"},"description":"Add an event listener","kind":"function","name":"on","params":[{"type":{"names":["String"]},"name":"type"},{"type":{"names":["function"]},"name":"listener"}],"returns":[{"type":{"names":["EventEmitter"]},"description":"The self object, for chainability."}],"longname":"on","scope":"global","___s":true},{"meta":{"range":[191106,191274],"filename":"p2.js","lineno":6317,"path":"src\\physics\\p2"},"description":"Check if an event listener is added","kind":"function","name":"has","params":[{"type":{"names":["String"]},"name":"type"},{"type":{"names":["function"]},"name":"listener"}],"returns":[{"type":{"names":["Boolean"]}}],"longname":"has","scope":"global","___s":true},{"meta":{"range":[191781,191978],"filename":"p2.js","lineno":6342,"path":"src\\physics\\p2"},"description":"Remove an event listener","kind":"function","name":"off","params":[{"type":{"names":["String"]},"name":"type"},{"type":{"names":["function"]},"name":"listener"}],"returns":[{"type":{"names":["EventEmitter"]},"description":"The self object, for chainability."}],"longname":"off","scope":"global","___s":true},{"meta":{"range":[192336,192525],"filename":"p2.js","lineno":6361,"path":"src\\physics\\p2"},"description":"Emit an event.","kind":"function","name":"emit","params":[{"type":{"names":["Object"]},"name":"event"},{"type":{"names":["String"]},"name":"event.type"}],"returns":[{"type":{"names":["EventEmitter"]},"description":"The self object, for chainability."}],"longname":"emit","scope":"global","___s":true},{"meta":{"range":[214111,214277],"filename":"p2.js","lineno":7025,"path":"src\\physics\\p2"},"description":"Make a cross product and only return the z component","kind":"function","name":"crossLength","scope":"static","params":[{"type":{"names":["Array"]},"name":"a"},{"type":{"names":["Array"]},"name":"b"}],"returns":[{"type":{"names":["Number"]}}],"longname":"crossLength","___s":true},{"meta":{"range":[214359,214562],"filename":"p2.js","lineno":7037,"path":"src\\physics\\p2"},"description":"Cross product between a vector and the Z component of a vector","kind":"function","name":"crossVZ","scope":"static","params":[{"type":{"names":["Array"]},"name":"out"},{"type":{"names":["Array"]},"name":"vec"},{"type":{"names":["Number"]},"name":"zcomp"}],"returns":[{"type":{"names":["Number"]}}],"longname":"crossVZ","___s":true},{"meta":{"range":[214763,214966],"filename":"p2.js","lineno":7052,"path":"src\\physics\\p2"},"description":"Cross product between a vector and the Z component of a vector","kind":"function","name":"crossZV","scope":"static","params":[{"type":{"names":["Array"]},"name":"out"},{"type":{"names":["Number"]},"name":"zcomp"},{"type":{"names":["Array"]},"name":"vec"}],"returns":[{"type":{"names":["Number"]}}],"longname":"crossZV","___s":true},{"meta":{"range":[215167,215311],"filename":"p2.js","lineno":7067,"path":"src\\physics\\p2"},"description":"Rotate a vector by an angle","kind":"function","name":"rotate","scope":"static","params":[{"type":{"names":["Array"]},"name":"out"},{"type":{"names":["Array"]},"name":"a"},{"type":{"names":["Number"]},"name":"angle"}],"longname":"rotate","___s":true},{"meta":{"range":[215618,215775],"filename":"p2.js","lineno":7089,"path":"src\\physics\\p2"},"description":"Rotate a vector 90 degrees clockwise","kind":"function","name":"rotate90cw","scope":"static","params":[{"type":{"names":["Array"]},"name":"out"},{"type":{"names":["Array"]},"name":"a"},{"type":{"names":["Number"]},"name":"angle"}],"longname":"rotate90cw","___s":true},{"meta":{"range":[215894,216095],"filename":"p2.js","lineno":7104,"path":"src\\physics\\p2"},"description":"Transform a point position to local frame.","kind":"function","name":"toLocalFrame","params":[{"type":{"names":["Array"]},"name":"out"},{"type":{"names":["Array"]},"name":"worldPoint"},{"type":{"names":["Array"]},"name":"framePosition"},{"type":{"names":["Number"]},"name":"frameAngle"}],"longname":"toLocalFrame","scope":"global","___s":true},{"meta":{"range":[216292,216495],"filename":"p2.js","lineno":7118,"path":"src\\physics\\p2"},"description":"Transform a point position to global frame.","kind":"function","name":"toGlobalFrame","params":[{"type":{"names":["Array"]},"name":"out"},{"type":{"names":["Array"]},"name":"localPoint"},{"type":{"names":["Array"]},"name":"framePosition"},{"type":{"names":["Number"]},"name":"frameAngle"}],"longname":"toGlobalFrame","scope":"global","___s":true},{"meta":{"range":[216692,216858],"filename":"p2.js","lineno":7132,"path":"src\\physics\\p2"},"description":"Transform a vector to local frame.","kind":"function","name":"vectorToLocalFrame","params":[{"type":{"names":["Array"]},"name":"out"},{"type":{"names":["Array"]},"name":"worldVector"},{"type":{"names":["Number"]},"name":"frameAngle"}],"longname":"vectorToLocalFrame","scope":"global","___s":true},{"meta":{"range":[216982,217152],"filename":"p2.js","lineno":7143,"path":"src\\physics\\p2"},"description":"Transform a point position to global frame.","kind":"function","name":"toGlobalFrame","params":[{"type":{"names":["Array"]},"name":"out"},{"type":{"names":["Array"]},"name":"localVector"},{"type":{"names":["Number"]},"name":"frameAngle"}],"longname":"toGlobalFrame","scope":"global","___s":true},{"meta":{"range":[217276,217565],"filename":"p2.js","lineno":7154,"path":"src\\physics\\p2"},"description":"Compute centroid of a triangle spanned by vectors a,b,c. See http://easycalculation.com/analytical/learn-centroid.php","kind":"function","name":"centroid","scope":"static","params":[{"type":{"names":["Array"]},"name":"out"},{"type":{"names":["Array"]},"name":"a"},{"type":{"names":["Array"]},"name":"b"},{"type":{"names":["Array"]},"name":"c"}],"returns":[{"type":{"names":["Array"]},"description":"The out object"}],"longname":"centroid","___s":true},{"meta":{"range":[217717,217822],"filename":"p2.js","lineno":7171,"path":"src\\physics\\p2"},"description":"Creates a new, empty vec2","scope":"static","kind":"function","name":"create","returns":[{"type":{"names":["Array"]},"description":"a new 2D vector"}],"longname":"create","___s":true},{"meta":{"range":[217949,218131],"filename":"p2.js","lineno":7184,"path":"src\\physics\\p2"},"description":"Creates a new vec2 initialized with values from an existing vector","scope":"static","kind":"function","name":"clone","params":[{"type":{"names":["Array"]},"description":"vector to clone","name":"a"}],"returns":[{"type":{"names":["Array"]},"description":"a new 2D vector"}],"longname":"clone","___s":true},{"meta":{"range":[218264,218468],"filename":"p2.js","lineno":7198,"path":"src\\physics\\p2"},"description":"Creates a new vec2 initialized with the given values","scope":"static","kind":"function","name":"fromValues","params":[{"type":{"names":["Number"]},"description":"X component","name":"x"},{"type":{"names":["Number"]},"description":"Y component","name":"y"}],"returns":[{"type":{"names":["Array"]},"description":"a new 2D vector"}],"longname":"fromValues","___s":true},{"meta":{"range":[218603,218792],"filename":"p2.js","lineno":7213,"path":"src\\physics\\p2"},"description":"Copy the values from one vec2 to another","scope":"static","kind":"function","name":"copy","params":[{"type":{"names":["Array"]},"description":"the receiving vector","name":"out"},{"type":{"names":["Array"]},"description":"the source vector","name":"a"}],"returns":[{"type":{"names":["Array"]},"description":"out"}],"longname":"copy","___s":true},{"meta":{"range":[218889,219114],"filename":"p2.js","lineno":7227,"path":"src\\physics\\p2"},"description":"Set the components of a vec2 to the given values","scope":"static","kind":"function","name":"set","params":[{"type":{"names":["Array"]},"description":"the receiving vector","name":"out"},{"type":{"names":["Number"]},"description":"X component","name":"x"},{"type":{"names":["Number"]},"description":"Y component","name":"y"}],"returns":[{"type":{"names":["Array"]},"description":"out"}],"longname":"set","___s":true},{"meta":{"range":[219207,219410],"filename":"p2.js","lineno":7242,"path":"src\\physics\\p2"},"description":"Adds two vec2's","scope":"static","kind":"function","name":"add","params":[{"type":{"names":["Array"]},"description":"the receiving vector","name":"out"},{"type":{"names":["Array"]},"description":"the first operand","name":"a"},{"type":{"names":["Array"]},"description":"the second operand","name":"b"}],"returns":[{"type":{"names":["Array"]},"description":"out"}],"longname":"add","___s":true},{"meta":{"range":[219523,219736],"filename":"p2.js","lineno":7257,"path":"src\\physics\\p2"},"description":"Subtracts two vec2's","scope":"static","kind":"function","name":"subtract","params":[{"type":{"names":["Array"]},"description":"the receiving vector","name":"out"},{"type":{"names":["Array"]},"description":"the first operand","name":"a"},{"type":{"names":["Array"]},"description":"the second operand","name":"b"}],"returns":[{"type":{"names":["Array"]},"description":"out"}],"longname":"subtract","___s":true},{"meta":{"range":[219854,219918],"filename":"p2.js","lineno":7272,"path":"src\\physics\\p2"},"description":"Alias for vec2.subtract","scope":"static","kind":"function","name":"sub","longname":"sub","___s":true},{"meta":{"range":[219949,220163],"filename":"p2.js","lineno":7279,"path":"src\\physics\\p2"},"description":"Multiplies two vec2's","scope":"static","kind":"function","name":"multiply","params":[{"type":{"names":["Array"]},"description":"the receiving vector","name":"out"},{"type":{"names":["Array"]},"description":"the first operand","name":"a"},{"type":{"names":["Array"]},"description":"the second operand","name":"b"}],"returns":[{"type":{"names":["Array"]},"description":"out"}],"longname":"multiply","___s":true},{"meta":{"range":[220281,220345],"filename":"p2.js","lineno":7294,"path":"src\\physics\\p2"},"description":"Alias for vec2.multiply","scope":"static","kind":"function","name":"mul","longname":"mul","___s":true},{"meta":{"range":[220376,220585],"filename":"p2.js","lineno":7301,"path":"src\\physics\\p2"},"description":"Divides two vec2's","scope":"static","kind":"function","name":"divide","params":[{"type":{"names":["Array"]},"description":"the receiving vector","name":"out"},{"type":{"names":["Array"]},"description":"the first operand","name":"a"},{"type":{"names":["Array"]},"description":"the second operand","name":"b"}],"returns":[{"type":{"names":["Array"]},"description":"out"}],"longname":"divide","___s":true},{"meta":{"range":[220701,220763],"filename":"p2.js","lineno":7316,"path":"src\\physics\\p2"},"description":"Alias for vec2.divide","scope":"static","kind":"function","name":"div","longname":"div","___s":true},{"meta":{"range":[220792,221028],"filename":"p2.js","lineno":7323,"path":"src\\physics\\p2"},"description":"Scales a vec2 by a scalar number","scope":"static","kind":"function","name":"scale","params":[{"type":{"names":["Array"]},"description":"the receiving vector","name":"out"},{"type":{"names":["Array"]},"description":"the vector to scale","name":"a"},{"type":{"names":["Number"]},"description":"amount to scale the vector by","name":"b"}],"returns":[{"type":{"names":["Array"]},"description":"out"}],"longname":"scale","___s":true},{"meta":{"range":[221137,221360],"filename":"p2.js","lineno":7338,"path":"src\\physics\\p2"},"description":"Calculates the euclidian distance between two vec2's","scope":"static","kind":"function","name":"distance","params":[{"type":{"names":["Array"]},"description":"the first operand","name":"a"},{"type":{"names":["Array"]},"description":"the second operand","name":"b"}],"returns":[{"type":{"names":["Number"]},"description":"distance between a and b"}],"longname":"distance","___s":true},{"meta":{"range":[221488,221553],"filename":"p2.js","lineno":7352,"path":"src\\physics\\p2"},"description":"Alias for vec2.distance","scope":"static","kind":"function","name":"dist","longname":"dist","___s":true},{"meta":{"range":[221585,221831],"filename":"p2.js","lineno":7359,"path":"src\\physics\\p2"},"description":"Calculates the squared euclidian distance between two vec2's","scope":"static","kind":"function","name":"squaredDistance","params":[{"type":{"names":["Array"]},"description":"the first operand","name":"a"},{"type":{"names":["Array"]},"description":"the second operand","name":"b"}],"returns":[{"type":{"names":["Number"]},"description":"squared distance between a and b"}],"longname":"squaredDistance","___s":true},{"meta":{"range":[221955,222030],"filename":"p2.js","lineno":7373,"path":"src\\physics\\p2"},"description":"Alias for vec2.squaredDistance","scope":"static","kind":"function","name":"sqrDist","longname":"sqrDist","___s":true},{"meta":{"range":[222072,222231],"filename":"p2.js","lineno":7380,"path":"src\\physics\\p2"},"description":"Calculates the length of a vec2","scope":"static","kind":"function","name":"length","params":[{"type":{"names":["Array"]},"description":"vector to calculate length of","name":"a"}],"returns":[{"type":{"names":["Number"]},"description":"length of a"}],"longname":"length","___s":true},{"meta":{"range":[222341,222403],"filename":"p2.js","lineno":7393,"path":"src\\physics\\p2"},"description":"Alias for vec2.length","kind":"function","name":"len","scope":"static","longname":"len","___s":true},{"meta":{"range":[222432,222622],"filename":"p2.js","lineno":7400,"path":"src\\physics\\p2"},"description":"Calculates the squared length of a vec2","scope":"static","kind":"function","name":"squaredLength","params":[{"type":{"names":["Array"]},"description":"vector to calculate squared length of","name":"a"}],"returns":[{"type":{"names":["Number"]},"description":"squared length of a"}],"longname":"squaredLength","___s":true},{"meta":{"range":[222728,222800],"filename":"p2.js","lineno":7413,"path":"src\\physics\\p2"},"description":"Alias for vec2.squaredLength","scope":"static","kind":"function","name":"sqrLen","longname":"sqrLen","___s":true},{"meta":{"range":[222839,223021],"filename":"p2.js","lineno":7420,"path":"src\\physics\\p2"},"description":"Negates the components of a vec2","scope":"static","kind":"function","name":"negate","params":[{"type":{"names":["Array"]},"description":"the receiving vector","name":"out"},{"type":{"names":["Array"]},"description":"vector to negate","name":"a"}],"returns":[{"type":{"names":["Array"]},"description":"out"}],"longname":"negate","___s":true},{"meta":{"range":[223122,223294],"filename":"p2.js","lineno":7434,"path":"src\\physics\\p2"},"description":"Normalize a vec2","scope":"static","kind":"function","name":"normalize","params":[{"type":{"names":["Array"]},"description":"the receiving vector","name":"out"},{"type":{"names":["Array"]},"description":"vector to normalize","name":"a"}],"returns":[{"type":{"names":["Array"]},"description":"out"}],"longname":"normalize","___s":true},{"meta":{"range":[223593,223797],"filename":"p2.js","lineno":7455,"path":"src\\physics\\p2"},"description":"Calculates the dot product of two vec2's","scope":"static","kind":"function","name":"dot","params":[{"type":{"names":["Array"]},"description":"the first operand","name":"a"},{"type":{"names":["Array"]},"description":"the second operand","name":"b"}],"returns":[{"type":{"names":["Number"]},"description":"dot product of a and b"}],"longname":"dot","___s":true},{"meta":{"range":[223874,224070],"filename":"p2.js","lineno":7467,"path":"src\\physics\\p2"},"description":"Returns a string representation of a vector","scope":"static","kind":"function","name":"str","params":[{"type":{"names":["Array"]},"description":"vector to represent as a string","name":"vec"}],"returns":[{"type":{"names":["String"]},"description":"string representation of the vector"}],"longname":"str","___s":true},{"meta":{"range":[224153,224358],"filename":"p2.js","lineno":7478,"path":"src\\physics\\p2"},"description":"Linearly interpolate/mix two vectors.","scope":"static","kind":"function","name":"lerp","params":[{"type":{"names":["Array"]},"name":"out"},{"type":{"names":["Array"]},"description":"First vector","name":"a"},{"type":{"names":["Array"]},"description":"Second vector","name":"b"},{"type":{"names":["number"]},"description":"Lerp factor","name":"t"}],"longname":"lerp","___s":true},{"meta":{"range":[224534,224686],"filename":"p2.js","lineno":7495,"path":"src\\physics\\p2"},"description":"Reflect a vector along a normal.","scope":"static","kind":"function","name":"reflect","params":[{"type":{"names":["Array"]},"name":"out"},{"type":{"names":["Array"]},"name":"vector"},{"type":{"names":["Array"]},"name":"normal"}],"longname":"reflect","___s":true},{"meta":{"range":[224897,225205],"filename":"p2.js","lineno":7509,"path":"src\\physics\\p2"},"description":"Get the intersection point between two line segments.","scope":"static","kind":"function","name":"getLineSegmentsIntersection","params":[{"type":{"names":["Array"]},"name":"out"},{"type":{"names":["Array"]},"name":"p0"},{"type":{"names":["Array"]},"name":"p1"},{"type":{"names":["Array"]},"name":"p2"},{"type":{"names":["Array"]},"name":"p3"}],"returns":[{"type":{"names":["boolean"]},"description":"True if there was an intersection, otherwise false."}],"longname":"getLineSegmentsIntersection","___s":true},{"meta":{"range":[225532,225900],"filename":"p2.js","lineno":7531,"path":"src\\physics\\p2"},"description":"Get the intersection fraction between two line segments. If successful, the intersection is at p0 + t * (p1 - p0)","scope":"static","kind":"function","name":"getLineSegmentsIntersectionFraction","params":[{"type":{"names":["Array"]},"name":"p0"},{"type":{"names":["Array"]},"name":"p1"},{"type":{"names":["Array"]},"name":"p2"},{"type":{"names":["Array"]},"name":"p3"}],"returns":[{"type":{"names":["number"]},"description":"A number between 0 and 1 if there was an intersection, otherwise -1."}],"longname":"getLineSegmentsIntersectionFraction","___s":true},{"meta":{"range":[240336,240433],"filename":"p2.js","lineno":7994,"path":"src\\physics\\p2"},"description":"Set the total density of the body","kind":"function","name":"setDensity","params":[{"type":{"names":["number"]},"name":"density"}],"longname":"setDensity","scope":"global","___s":true},{"meta":{"range":[240599,240697],"filename":"p2.js","lineno":8005,"path":"src\\physics\\p2"},"description":"Get the total area of all shapes in the body","kind":"function","name":"getArea","returns":[{"type":{"names":["Number"]}}],"longname":"getArea","scope":"global","___s":true},{"meta":{"range":[240887,241030],"filename":"p2.js","lineno":8018,"path":"src\\physics\\p2"},"description":"Get the AABB from the body. The AABB is updated if necessary.","kind":"function","name":"getAABB","returns":[{"type":{"names":["AABB"]},"description":"The AABB instance (this.aabb)"}],"longname":"getAABB","scope":"global","___s":true},{"meta":{"range":[241222,241321],"filename":"p2.js","lineno":8033,"path":"src\\physics\\p2"},"description":"Updates the AABB of the Body, and set .aabbNeedsUpdate = false.","kind":"function","name":"updateAABB","longname":"updateAABB","scope":"global","___s":true},{"meta":{"range":[242001,242180],"filename":"p2.js","lineno":8064,"path":"src\\physics\\p2"},"description":"Update the bounding radius of the body (this.boundingRadius). Should be done if any of the shape dimensions or positions are changed.","kind":"function","name":"updateBoundingRadius","longname":"updateBoundingRadius","scope":"global","___s":true},{"meta":{"range":[242597,243576],"filename":"p2.js","lineno":8085,"path":"src\\physics\\p2"},"description":"Add a shape to the body. You can pass a local transform when adding a shape,\rso that the shape gets an offset and angle relative to the body center of mass.\rWill automatically update the mass properties and bounding radius.","kind":"function","name":"addShape","params":[{"type":{"names":["Shape"]},"name":"shape"},{"type":{"names":["Array"]},"optional":true,"description":"Local body offset of the shape.","name":"offset"},{"type":{"names":["Number"]},"optional":true,"description":"Local body angle.","name":"angle"}],"examples":["var body = new Body(),\r        shape = new Circle({ radius: 1 });\r\r    // Add the shape to the body, positioned in the center\r    body.addShape(shape);\r\r    // Add another shape to the body, positioned 1 unit length from the body center of mass along the local x-axis.\r    body.addShape(shape,[1,0]);\r\r    // Add another shape to the body, positioned 1 unit length from the body center of mass along the local y-axis, and rotated 90 degrees CCW.\r    body.addShape(shape,[0,1],Math.PI/2);"],"longname":"addShape","scope":"global","___s":true},{"meta":{"range":[244088,244240],"filename":"p2.js","lineno":8130,"path":"src\\physics\\p2"},"description":"Remove a shape","kind":"function","name":"removeShape","params":[{"type":{"names":["Shape"]},"name":"shape"}],"returns":[{"type":{"names":["Boolean"]},"description":"True if the shape was found and removed, else false."}],"longname":"removeShape","scope":"global","___s":true},{"meta":{"range":[244529,244781],"filename":"p2.js","lineno":8149,"path":"src\\physics\\p2"},"description":"Updates .inertia, .invMass, .invInertia for this Body. Should be called when\rchanging the structure or mass of the Body.","kind":"function","name":"updateMassProperties","examples":["body.mass += 1;\r    body.updateMassProperties();"],"longname":"updateMassProperties","scope":"global","___s":true},{"meta":{"range":[245926,246395],"filename":"p2.js","lineno":8202,"path":"src\\physics\\p2"},"description":"Apply force to a point relative to the center of mass of the body. This could for example be a point on the RigidBody surface. Applying force this way will add to Body.force and Body.angularForce. If relativePoint is zero, the force will be applied directly on the center of mass, and the torque produced will be zero.","kind":"function","name":"applyForce","params":[{"type":{"names":["Array"]},"description":"The force to add.","name":"force"},{"type":{"names":["Array"]},"optional":true,"description":"A world point to apply the force on.","name":"relativePoint"}],"longname":"applyForce","scope":"global","___s":true},{"meta":{"range":[246756,247088],"filename":"p2.js","lineno":8223,"path":"src\\physics\\p2"},"description":"Apply force to a body-local point.","kind":"function","name":"applyForceLocal","params":[{"type":{"names":["Array"]},"description":"The force vector to add, oriented in local body space.","name":"localForce"},{"type":{"names":["Array"]},"description":"A point relative to the body in world space. If not given, it is set to zero and all of the impulse will be excerted on the center of mass.","name":"localPoint"}],"longname":"applyForceLocal","scope":"global","___s":true},{"meta":{"range":[247625,248180],"filename":"p2.js","lineno":8241,"path":"src\\physics\\p2"},"description":"Apply impulse to a point relative to the body. This could for example be a point on the Body surface. An impulse is a force added to a body during a short period of time (impulse = force * time). Impulses will be added to Body.velocity and Body.angularVelocity.","kind":"function","name":"applyImpulse","params":[{"type":{"names":["Array"]},"description":"The impulse vector to add, oriented in world space.","name":"impulse"},{"type":{"names":["Array"]},"optional":true,"description":"A point relative to the body in world space. If not given, it is set to zero and all of the impulse will be excerted on the center of mass.","name":"relativePoint"}],"longname":"applyImpulse","scope":"global","___s":true},{"meta":{"range":[248919,249479],"filename":"p2.js","lineno":8271,"path":"src\\physics\\p2"},"description":"Apply impulse to a point relative to the body. This could for example be a point on the Body surface. An impulse is a force added to a body during a short period of time (impulse = force * time). Impulses will be added to Body.velocity and Body.angularVelocity.","kind":"function","name":"applyImpulseLocal","params":[{"type":{"names":["Array"]},"description":"The impulse vector to add, oriented in world space.","name":"impulse"},{"type":{"names":["Array"]},"optional":true,"description":"A point relative to the body in world space. If not given, it is set to zero and all of the impulse will be excerted on the center of mass.","name":"relativePoint"}],"longname":"applyImpulseLocal","scope":"global","___s":true},{"meta":{"range":[250046,250250],"filename":"p2.js","lineno":8289,"path":"src\\physics\\p2"},"description":"Transform a world point to local body frame.","kind":"function","name":"toLocalFrame","params":[{"type":{"names":["Array"]},"description":"The vector to store the result in","name":"out"},{"type":{"names":["Array"]},"description":"The input world point","name":"worldPoint"}],"longname":"toLocalFrame","scope":"global","___s":true},{"meta":{"range":[250384,250583],"filename":"p2.js","lineno":8299,"path":"src\\physics\\p2"},"description":"Transform a local point to world frame.","kind":"function","name":"toWorldFrame","params":[{"type":{"names":["Array"]},"description":"The vector to store the result in","name":"out"},{"type":{"names":["Array"]},"description":"The input local point","name":"localPoint"}],"longname":"toWorldFrame","scope":"global","___s":true},{"meta":{"range":[250718,250929],"filename":"p2.js","lineno":8309,"path":"src\\physics\\p2"},"description":"Transform a world point to local body frame.","kind":"function","name":"vectorToLocalFrame","params":[{"type":{"names":["Array"]},"description":"The vector to store the result in","name":"out"},{"type":{"names":["Array"]},"description":"The input world vector","name":"worldVector"}],"longname":"vectorToLocalFrame","scope":"global","___s":true},{"meta":{"range":[251062,251268],"filename":"p2.js","lineno":8319,"path":"src\\physics\\p2"},"description":"Transform a local point to world frame.","kind":"function","name":"vectorToWorldFrame","params":[{"type":{"names":["Array"]},"description":"The vector to store the result in","name":"out"},{"type":{"names":["Array"]},"description":"The input local vector","name":"localVector"}],"longname":"vectorToWorldFrame","scope":"global","___s":true},{"meta":{"range":[251402,252233],"filename":"p2.js","lineno":8329,"path":"src\\physics\\p2"},"description":"Reads a polygon shape path, and assembles convex shapes from that and puts them at proper offset points.","kind":"function","name":"fromPolygon","params":[{"type":{"names":["Array"]},"description":"An array of 2d vectors, e.g. [[0,0],[0,1],...] that resembles a concave or convex polygon. The shape must be simple and without holes.","name":"path"},{"type":{"names":["Object"]},"optional":true,"name":"options"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"Set to true if you need optimal decomposition. Warning: very slow for polygons with more than 10 vertices.","name":"options.optimalDecomp"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"Set to true if you already know that the path is not intersecting itself.","name":"options.skipSimpleCheck"},{"type":{"names":["Boolean","Number"]},"optional":true,"defaultvalue":false,"description":"Set to a number (angle threshold value) to remove collinear points, or false to keep all points.","name":"options.removeCollinearPoints"}],"returns":[{"type":{"names":["Boolean"]},"description":"True on success, else false."}],"longname":"fromPolygon","scope":"global","___s":true},{"meta":{"range":[254238,254362],"filename":"p2.js","lineno":8414,"path":"src\\physics\\p2"},"description":"Moves the shape offsets so their center of mass becomes the body center of mass.","kind":"function","name":"adjustCenterOfMass","longname":"adjustCenterOfMass","scope":"global","___s":true},{"meta":{"range":[255393,255466],"filename":"p2.js","lineno":8452,"path":"src\\physics\\p2"},"description":"Sets the force on the body to zero.","kind":"function","name":"setZeroForce","longname":"setZeroForce","scope":"global","___s":true},{"meta":{"range":[255911,256093],"filename":"p2.js","lineno":8475,"path":"src\\physics\\p2"},"description":"Apply damping, see <a href=\"http://code.google.com/p/bullet/issues/detail?id=74\">this</a> for details.","kind":"function","name":"applyDamping","params":[{"type":{"names":["number"]},"description":"Current time step","name":"dt"}],"longname":"applyDamping","scope":"global","___s":true},{"meta":{"range":[256382,256680],"filename":"p2.js","lineno":8488,"path":"src\\physics\\p2"},"description":"Wake the body up. Normally you should not need this, as the body is automatically awoken at events such as collisions.\rSets the sleepState to {{#crossLink \"Body/AWAKE:property\"}}Body.AWAKE{{/crossLink}} and emits the wakeUp event if the body wasn't awake before.","kind":"function","name":"wakeUp","longname":"wakeUp","scope":"global","___s":true},{"meta":{"range":[256886,256933],"filename":"p2.js","lineno":8502,"path":"src\\physics\\p2"},"description":"Force body sleep","kind":"function","name":"sleep","longname":"sleep","scope":"global","___s":true},{"meta":{"range":[257172,257398],"filename":"p2.js","lineno":8515,"path":"src\\physics\\p2"},"description":"Called every timestep to update internal sleep timer and change sleep state if needed.","kind":"function","name":"sleepTick","params":[{"type":{"names":["number"]},"description":"The world time in seconds","name":"time"},{"type":{"names":["boolean"]},"name":"dontSleep"},{"type":{"names":["number"]},"name":"dt"}],"longname":"sleepTick","scope":"global","___s":true},{"meta":{"range":[258181,258409],"filename":"p2.js","lineno":8550,"path":"src\\physics\\p2"},"description":"Check if the body is overlapping another body. Note that this method only works if the body was added to a World and if at least one step was taken.","kind":"function","name":"overlaps","params":[{"type":{"names":["Body"]},"name":"body"}],"returns":[{"type":{"names":["boolean"]}}],"longname":"overlaps","scope":"global","___s":true},{"meta":{"range":[258611,258727],"filename":"p2.js","lineno":8563,"path":"src\\physics\\p2"},"description":"Move the body forward in time given its current velocity.","kind":"function","name":"integrate","params":[{"type":{"names":["Number"]},"name":"dt"}],"longname":"integrate","scope":"global","___s":true},{"meta":{"range":[262323,262621],"filename":"p2.js","lineno":8694,"path":"src\\physics\\p2"},"description":"Get velocity of a point in the body.","kind":"function","name":"getVelocityAtPoint","params":[{"type":{"names":["Array"]},"description":"A vector to store the result in","name":"result"},{"type":{"names":["Array"]},"description":"A world oriented vector, indicating the position of the point to get the velocity from","name":"relativePoint"}],"returns":[{"type":{"names":["Array"]},"description":"The result vector"}],"longname":"getVelocityAtPoint","scope":"global","___s":true},{"meta":{"range":[266223,266352],"filename":"p2.js","lineno":8840,"path":"src\\physics\\p2"},"description":"Set the anchor point on body A, using world coordinates.","kind":"function","name":"setWorldAnchorA","params":[{"type":{"names":["Array"]},"name":"worldAnchorA"}],"longname":"setWorldAnchorA","scope":"global","___s":true},{"meta":{"range":[266489,266618],"filename":"p2.js","lineno":8849,"path":"src\\physics\\p2"},"description":"Set the anchor point on body B, using world coordinates.","kind":"function","name":"setWorldAnchorB","params":[{"type":{"names":["Array"]},"name":"worldAnchorB"}],"longname":"setWorldAnchorB","scope":"global","___s":true},{"meta":{"range":[266755,266910],"filename":"p2.js","lineno":8858,"path":"src\\physics\\p2"},"description":"Get the anchor point on body A, in world coordinates.","kind":"function","name":"getWorldAnchorA","params":[{"type":{"names":["Array"]},"description":"The vector to store the result in.","name":"result"}],"longname":"getWorldAnchorA","scope":"global","___s":true},{"meta":{"range":[267035,267190],"filename":"p2.js","lineno":8867,"path":"src\\physics\\p2"},"description":"Get the anchor point on body B, in world coordinates.","kind":"function","name":"getWorldAnchorB","params":[{"type":{"names":["Array"]},"description":"The vector to store the result in.","name":"result"}],"longname":"getWorldAnchorB","scope":"global","___s":true},{"meta":{"range":[267749,267832],"filename":"p2.js","lineno":8886,"path":"src\\physics\\p2"},"description":"Apply the spring force to the connected bodies.","kind":"function","name":"applyForce","longname":"applyForce","scope":"global","___s":true},{"meta":{"range":[270907,270990],"filename":"p2.js","lineno":8980,"path":"src\\physics\\p2"},"description":"Apply the spring force to the connected bodies.","kind":"function","name":"applyForce","longname":"applyForce","scope":"global","___s":true},{"meta":{"range":[273083,273166],"filename":"p2.js","lineno":9055,"path":"src\\physics\\p2"},"description":"Apply the spring force to the connected bodies.","kind":"function","name":"applyForce","longname":"applyForce","scope":"global","___s":true},{"meta":{"range":[275342,275398],"filename":"p2.js","lineno":9135,"path":"src\\physics\\p2"},"kind":"function","name":"addToWorld","params":[{"type":{"names":["World"]},"name":"world"}],"longname":"addToWorld","scope":"global","___s":true},{"meta":{"range":[275705,275766],"filename":"p2.js","lineno":9149,"path":"src\\physics\\p2"},"kind":"function","name":"removeFromWorld","params":[{"type":{"names":["World"]},"name":"world"}],"longname":"removeFromWorld","scope":"global","___s":true},{"meta":{"range":[276108,276202],"filename":"p2.js","lineno":9164,"path":"src\\physics\\p2"},"kind":"function","name":"addWheel","params":[{"type":{"names":["object"]},"optional":true,"name":"wheelOptions"}],"returns":[{"type":{"names":["WheelConstraint"]}}],"longname":"addWheel","scope":"global","___s":true},{"meta":{"range":[276377,276404],"filename":"p2.js","lineno":9175,"path":"src\\physics\\p2"},"kind":"function","name":"update","longname":"update","scope":"global","___s":true},{"meta":{"range":[278285,278324],"filename":"p2.js","lineno":9242,"path":"src\\physics\\p2"},"kind":"function","name":"setForwardFriction","longname":"setForwardFriction","scope":"global","___s":true},{"meta":{"range":[278439,278475],"filename":"p2.js","lineno":9249,"path":"src\\physics\\p2"},"kind":"function","name":"setSideFriction","longname":"setSideFriction","scope":"global","___s":true},{"meta":{"range":[278663,278692],"filename":"p2.js","lineno":9259,"path":"src\\physics\\p2"},"kind":"function","name":"getSpeed","longname":"getSpeed","scope":"global","___s":true},{"meta":{"range":[279003,279030],"filename":"p2.js","lineno":9270,"path":"src\\physics\\p2"},"kind":"function","name":"update","longname":"update","scope":"global","___s":true},{"meta":{"range":[286620,286740],"filename":"p2.js","lineno":9410,"path":"src\\physics\\p2"},"description":"Compute moment of inertia","kind":"function","name":"computeMomentOfInertia","params":[{"type":{"names":["Number"]},"name":"mass"}],"returns":[{"type":{"names":["Number"]}}],"longname":"computeMomentOfInertia","scope":"global","___s":true},{"meta":{"range":[286892,286964],"filename":"p2.js","lineno":9422,"path":"src\\physics\\p2"},"description":"Update the bounding radius","kind":"function","name":"updateBoundingRadius","longname":"updateBoundingRadius","scope":"global","___s":true},{"meta":{"range":[287248,287387],"filename":"p2.js","lineno":9437,"path":"src\\physics\\p2"},"kind":"function","name":"computeAABB","params":[{"type":{"names":["AABB"]},"description":"The resulting AABB.","name":"out"},{"type":{"names":["Array"]},"name":"position"},{"type":{"names":["Number"]},"name":"angle"}],"longname":"computeAABB","scope":"global","___s":true},{"meta":{"range":[289113,289268],"filename":"p2.js","lineno":9501,"path":"src\\physics\\p2"},"description":"Compute the mass moment of inertia of the Capsule.","kind":"function","name":"conputeMomentOfInertia","params":[{"type":{"names":["Number"]},"name":"mass"}],"returns":[{"type":{"names":["Number"]}}],"todo":[null],"longname":"conputeMomentOfInertia","scope":"global","___s":true},{"meta":{"range":[289518,289559],"filename":"p2.js","lineno":9516,"path":"src\\physics\\p2"},"kind":"function","name":"updateBoundingRadius","longname":"updateBoundingRadius","scope":"global","___s":true},{"meta":{"range":[289677,289708],"filename":"p2.js","lineno":9523,"path":"src\\physics\\p2"},"kind":"function","name":"updateArea","longname":"updateArea","scope":"global","___s":true},{"meta":{"range":[289872,290011],"filename":"p2.js","lineno":9532,"path":"src\\physics\\p2"},"kind":"function","name":"computeAABB","params":[{"type":{"names":["AABB"]},"description":"The resulting AABB.","name":"out"},{"type":{"names":["Array"]},"name":"position"},{"type":{"names":["Number"]},"name":"angle"}],"longname":"computeAABB","scope":"global","___s":true},{"meta":{"range":[290980,291121],"filename":"p2.js","lineno":9564,"path":"src\\physics\\p2"},"kind":"function","name":"raycast","params":[{"type":{"names":["RaycastResult"]},"name":"result"},{"type":{"names":["Ray"]},"name":"ray"},{"type":{"names":["array"]},"name":"position"},{"type":{"names":["number"]},"name":"angle"}],"longname":"raycast","scope":"global","___s":true},{"meta":{"range":[295732,295822],"filename":"p2.js","lineno":9703,"path":"src\\physics\\p2"},"kind":"function","name":"computeMomentOfInertia","params":[{"type":{"names":["Number"]},"name":"mass"}],"returns":[{"type":{"names":["Number"]}}],"longname":"computeMomentOfInertia","scope":"global","___s":true},{"meta":{"range":[295945,296007],"filename":"p2.js","lineno":9713,"path":"src\\physics\\p2"},"kind":"function","name":"updateBoundingRadius","returns":[{"type":{"names":["Number"]}}],"longname":"updateBoundingRadius","scope":"global","___s":true},{"meta":{"range":[296108,296160],"filename":"p2.js","lineno":9721,"path":"src\\physics\\p2"},"kind":"function","name":"updateArea","returns":[{"type":{"names":["Number"]}}],"longname":"updateArea","scope":"global","___s":true},{"meta":{"range":[296265,296404],"filename":"p2.js","lineno":9729,"path":"src\\physics\\p2"},"kind":"function","name":"computeAABB","params":[{"type":{"names":["AABB"]},"description":"The resulting AABB.","name":"out"},{"type":{"names":["Array"]},"name":"position"},{"type":{"names":["Number"]},"name":"angle"}],"longname":"computeAABB","scope":"global","___s":true},{"meta":{"range":[296839,296980],"filename":"p2.js","lineno":9748,"path":"src\\physics\\p2"},"kind":"function","name":"raycast","params":[{"type":{"names":["RaycastResult"]},"name":"result"},{"type":{"names":["Ray"]},"name":"ray"},{"type":{"names":["array"]},"name":"position"},{"type":{"names":["number"]},"name":"angle"}],"longname":"raycast","scope":"global","___s":true},{"meta":{"range":[302432,302612],"filename":"p2.js","lineno":9934,"path":"src\\physics\\p2"},"description":"Project a Convex onto a world-oriented axis","kind":"function","name":"projectOntoAxis","scope":"static","params":[{"type":{"names":["Array"]},"name":"offset"},{"type":{"names":["Array"]},"name":"localAxis"},{"type":{"names":["Array"]},"name":"result"}],"longname":"projectOntoAxis","___s":true},{"meta":{"range":[303773,303844],"filename":"p2.js","lineno":9987,"path":"src\\physics\\p2"},"description":"Update the .triangles property","kind":"function","name":"updateTriangles","longname":"updateTriangles","scope":"global","___s":true},{"meta":{"range":[304935,305013],"filename":"p2.js","lineno":10026,"path":"src\\physics\\p2"},"description":"Update the .centerOfMass property.","kind":"function","name":"updateCenterOfMass","longname":"updateCenterOfMass","scope":"global","___s":true},{"meta":{"range":[306211,306435],"filename":"p2.js","lineno":10068,"path":"src\\physics\\p2"},"description":"Compute the mass moment of inertia of the Convex.","kind":"function","name":"computeMomentOfInertia","params":[{"type":{"names":["Number"]},"name":"mass"}],"returns":[{"type":{"names":["Number"]}}],"see":["http://www.gamedev.net/topic/342822-moment-of-inertia-of-a-polygon-2d/"],"longname":"computeMomentOfInertia","scope":"global","___s":true},{"meta":{"range":[306922,307004],"filename":"p2.js","lineno":10090,"path":"src\\physics\\p2"},"description":"Updates the .boundingRadius property","kind":"function","name":"updateBoundingRadius","longname":"updateBoundingRadius","scope":"global","___s":true},{"meta":{"range":[307312,307604],"filename":"p2.js","lineno":10108,"path":"src\\physics\\p2"},"description":"Get the area of the triangle spanned by the three points a, b, c. The area is positive if the points are given in counter-clockwise order, otherwise negative.","scope":"static","kind":"function","name":"triangleArea","params":[{"type":{"names":["Array"]},"name":"a"},{"type":{"names":["Array"]},"name":"b"},{"type":{"names":["Array"]},"name":"c"}],"returns":[{"type":{"names":["Number"]}}],"longname":"triangleArea","___s":true},{"meta":{"range":[307733,307785],"filename":"p2.js","lineno":10121,"path":"src\\physics\\p2"},"description":"Update the .area","kind":"function","name":"updateArea","longname":"updateArea","scope":"global","___s":true},{"meta":{"range":[308265,308379],"filename":"p2.js","lineno":10143,"path":"src\\physics\\p2"},"kind":"function","name":"computeAABB","params":[{"type":{"names":["AABB"]},"name":"out"},{"type":{"names":["Array"]},"name":"position"},{"type":{"names":["Number"]},"name":"angle"}],"longname":"computeAABB","scope":"global","___s":true},{"meta":{"range":[308649,308790],"filename":"p2.js","lineno":10157,"path":"src\\physics\\p2"},"kind":"function","name":"raycast","params":[{"type":{"names":["RaycastResult"]},"name":"result"},{"type":{"names":["Ray"]},"name":"ray"},{"type":{"names":["array"]},"name":"position"},{"type":{"names":["number"]},"name":"angle"}],"longname":"raycast","scope":"global","___s":true},{"meta":{"range":[312759,312841],"filename":"p2.js","lineno":10277,"path":"src\\physics\\p2"},"description":"Update the .minValue and the .maxValue","kind":"function","name":"updateMaxMinValues","longname":"updateMaxMinValues","scope":"global","___s":true},{"meta":{"range":[313261,313351],"filename":"p2.js","lineno":10298,"path":"src\\physics\\p2"},"kind":"function","name":"computeMomentOfInertia","params":[{"type":{"names":["Number"]},"name":"mass"}],"returns":[{"type":{"names":["Number"]}}],"longname":"computeMomentOfInertia","scope":"global","___s":true},{"meta":{"range":[313899,314038],"filename":"p2.js","lineno":10327,"path":"src\\physics\\p2"},"kind":"function","name":"computeAABB","params":[{"type":{"names":["AABB"]},"description":"The resulting AABB.","name":"out"},{"type":{"names":["Array"]},"name":"position"},{"type":{"names":["Number"]},"name":"angle"}],"longname":"computeAABB","scope":"global","___s":true},{"meta":{"range":[314416,314646],"filename":"p2.js","lineno":10341,"path":"src\\physics\\p2"},"description":"Get a line segment in the heightfield","kind":"function","name":"getLineSegment","params":[{"type":{"names":["array"]},"description":"Where to store the resulting start point","name":"start"},{"type":{"names":["array"]},"description":"Where to store the resulting end point","name":"end"},{"type":{"names":["number"]},"name":"i"}],"longname":"getLineSegment","scope":"global","___s":true},{"meta":{"range":[316286,316423],"filename":"p2.js","lineno":10395,"path":"src\\physics\\p2"},"kind":"function","name":"raycast","params":[{"type":{"names":["RayResult"]},"name":"result"},{"type":{"names":["Ray"]},"name":"ray"},{"type":{"names":["array"]},"name":"position"},{"type":{"names":["number"]},"name":"angle"}],"longname":"raycast","scope":"global","___s":true},{"meta":{"range":[319233,319372],"filename":"p2.js","lineno":10488,"path":"src\\physics\\p2"},"kind":"function","name":"computeAABB","params":[{"type":{"names":["AABB"]},"description":"The resulting AABB.","name":"out"},{"type":{"names":["Array"]},"name":"position"},{"type":{"names":["Number"]},"name":"angle"}],"longname":"computeAABB","scope":"global","___s":true},{"meta":{"range":[319780,319921],"filename":"p2.js","lineno":10507,"path":"src\\physics\\p2"},"kind":"function","name":"raycast","params":[{"type":{"names":["RaycastResult"]},"name":"result"},{"type":{"names":["Ray"]},"name":"ray"},{"type":{"names":["number"]},"name":"angle"},{"type":{"names":["array"]},"name":"position"}],"longname":"raycast","scope":"global","___s":true},{"meta":{"range":[321475,321589],"filename":"p2.js","lineno":10564,"path":"src\\physics\\p2"},"kind":"function","name":"computeAABB","params":[{"type":{"names":["AABB"]},"name":"out"},{"type":{"names":["Array"]},"name":"position"},{"type":{"names":["Number"]},"name":"angle"}],"longname":"computeAABB","scope":"global","___s":true},{"meta":{"range":[322422,322495],"filename":"p2.js","lineno":10597,"path":"src\\physics\\p2"},"description":"Compute moment of inertia","kind":"function","name":"computeMomentOfInertia","longname":"computeMomentOfInertia","scope":"global","___s":true},{"meta":{"range":[322670,322742],"filename":"p2.js","lineno":10605,"path":"src\\physics\\p2"},"description":"Update the bounding radius","kind":"function","name":"updateBoundingRadius","longname":"updateBoundingRadius","scope":"global","___s":true},{"meta":{"range":[322847,322961],"filename":"p2.js","lineno":10613,"path":"src\\physics\\p2"},"kind":"function","name":"computeAABB","params":[{"type":{"names":["AABB"]},"name":"out"},{"type":{"names":["Array"]},"name":"position"},{"type":{"names":["Number"]},"name":"angle"}],"longname":"computeAABB","scope":"global","___s":true},{"meta":{"range":[324323,324460],"filename":"p2.js","lineno":10670,"path":"src\\physics\\p2"},"kind":"function","name":"raycast","params":[{"type":{"names":["RayResult"]},"name":"result"},{"type":{"names":["Ray"]},"name":"ray"},{"type":{"names":["array"]},"name":"position"},{"type":{"names":["number"]},"name":"angle"}],"longname":"raycast","scope":"global","___s":true},{"meta":{"range":[331505,331888],"filename":"p2.js","lineno":10912,"path":"src\\physics\\p2"},"description":"Should return the moment of inertia around the Z axis of the body given the total mass. See <a href=\"http://en.wikipedia.org/wiki/List_of_moments_of_inertia\">Wikipedia's list of moments of inertia</a>.","kind":"function","name":"computeMomentOfInertia","params":[{"type":{"names":["Number"]},"name":"mass"}],"returns":[{"type":{"names":["Number"]},"description":"If the inertia is infinity or if the object simply isn't possible to rotate, return 0."}],"longname":"computeMomentOfInertia","scope":"global","___s":true},{"meta":{"range":[331952,332068],"filename":"p2.js","lineno":10920,"path":"src\\physics\\p2"},"description":"Returns the bounding circle radius of this shape.","kind":"function","name":"updateBoundingRadius","returns":[{"type":{"names":["Number"]}}],"longname":"updateBoundingRadius","scope":"global","___s":true},{"meta":{"range":[332126,332201],"filename":"p2.js","lineno":10927,"path":"src\\physics\\p2"},"description":"Update the .area property of the shape.","kind":"function","name":"updateArea","longname":"updateArea","scope":"global","___s":true},{"meta":{"range":[332295,332551],"filename":"p2.js","lineno":10935,"path":"src\\physics\\p2"},"description":"Compute the world axis-aligned bounding box (AABB) of this shape.","kind":"function","name":"computeAABB","params":[{"type":{"names":["AABB"]},"description":"The resulting AABB.","name":"out"},{"type":{"names":["Array"]},"description":"World position of the shape.","name":"position"},{"type":{"names":["Number"]},"description":"World angle of the shape.","name":"angle"}],"longname":"computeAABB","scope":"global","___s":true},{"meta":{"range":[332665,333054],"filename":"p2.js","lineno":10946,"path":"src\\physics\\p2"},"description":"Perform raycasting on this shape.","kind":"function","name":"raycast","params":[{"type":{"names":["RayResult"]},"description":"Where to store the resulting data.","name":"result"},{"type":{"names":["Ray"]},"description":"The Ray that you want to use for raycasting.","name":"ray"},{"type":{"names":["array"]},"description":"World position of the shape (the .position property will be ignored).","name":"position"},{"type":{"names":["number"]},"description":"World angle of the shape (the .angle property will be ignored).","name":"angle"}],"longname":"raycast","scope":"global","___s":true},{"meta":{"range":[335825,335971],"filename":"p2.js","lineno":11030,"path":"src\\physics\\p2"},"description":"Solve the system of equations","kind":"function","name":"solve","params":[{"type":{"names":["Number"]},"description":"Time step","name":"h"},{"type":{"names":["World"]},"description":"World to solve","name":"world"}],"longname":"solve","scope":"global","___s":true},{"meta":{"range":[342018,342140],"filename":"p2.js","lineno":11240,"path":"src\\physics\\p2"},"description":"Method to be implemented in each subclass","kind":"function","name":"solve","params":[{"type":{"names":["Number"]},"name":"dt"},{"type":{"names":["World"]},"name":"world"}],"longname":"solve","scope":"global","___s":true},{"meta":{"range":[342301,342426],"filename":"p2.js","lineno":11252,"path":"src\\physics\\p2"},"description":"Solves all constraints in an island.","kind":"function","name":"solveIsland","params":[{"type":{"names":["Number"]},"name":"dt"},{"type":{"names":["Island"]},"name":"island"}],"longname":"solveIsland","scope":"global","___s":true},{"meta":{"range":[342837,342974],"filename":"p2.js","lineno":11275,"path":"src\\physics\\p2"},"description":"Sort all equations using the .equationSortFunction. Should be called by subclasses before solving.","kind":"function","name":"sortEquations","longname":"sortEquations","scope":"global","___s":true},{"meta":{"range":[343128,343223],"filename":"p2.js","lineno":11285,"path":"src\\physics\\p2"},"description":"Add an equation to be solved.","kind":"function","name":"addEquation","params":[{"type":{"names":["Equation"]},"name":"eq"}],"longname":"addEquation","scope":"global","___s":true},{"meta":{"range":[343339,343492],"filename":"p2.js","lineno":11297,"path":"src\\physics\\p2"},"description":"Add equations. Same as .addEquation, but this time the argument is an array of Equations","kind":"function","name":"addEquations","params":[{"type":{"names":["Array"]},"name":"eqs"}],"longname":"addEquations","scope":"global","___s":true},{"meta":{"range":[343746,343834],"filename":"p2.js","lineno":11313,"path":"src\\physics\\p2"},"description":"Remove an equation.","kind":"function","name":"removeEquation","params":[{"type":{"names":["Equation"]},"name":"eq"}],"longname":"removeEquation","scope":"global","___s":true},{"meta":{"range":[343995,344080],"filename":"p2.js","lineno":11326,"path":"src\\physics\\p2"},"description":"Remove all currently added equations.","kind":"function","name":"removeAllEquations","longname":"removeAllEquations","scope":"global","___s":true},{"meta":{"range":[344639,344696],"filename":"p2.js","lineno":11353,"path":"src\\physics\\p2"},"kind":"function","name":"create","returns":[{"type":{"names":["ContactEquation"]}}],"longname":"create","scope":"global","___s":true},{"meta":{"range":[344790,344890],"filename":"p2.js","lineno":11361,"path":"src\\physics\\p2"},"kind":"function","name":"destroy","params":[{"type":{"names":["ContactEquation"]},"name":"equation"}],"returns":[{"type":{"names":["ContactEquationPool"]}}],"longname":"destroy","scope":"global","___s":true},{"meta":{"range":[345455,345513],"filename":"p2.js","lineno":11386,"path":"src\\physics\\p2"},"kind":"function","name":"create","returns":[{"type":{"names":["FrictionEquation"]}}],"longname":"create","scope":"global","___s":true},{"meta":{"range":[345609,345711],"filename":"p2.js","lineno":11394,"path":"src\\physics\\p2"},"kind":"function","name":"destroy","params":[{"type":{"names":["FrictionEquation"]},"name":"equation"}],"returns":[{"type":{"names":["FrictionEquationPool"]}}],"longname":"destroy","scope":"global","___s":true},{"meta":{"range":[346232,346284],"filename":"p2.js","lineno":11419,"path":"src\\physics\\p2"},"kind":"function","name":"create","returns":[{"type":{"names":["IslandNode"]}}],"longname":"create","scope":"global","___s":true},{"meta":{"range":[346368,346454],"filename":"p2.js","lineno":11427,"path":"src\\physics\\p2"},"kind":"function","name":"destroy","params":[{"type":{"names":["IslandNode"]},"name":"node"}],"returns":[{"type":{"names":["IslandNodePool"]}}],"longname":"destroy","scope":"global","___s":true},{"meta":{"range":[346901,346949],"filename":"p2.js","lineno":11452,"path":"src\\physics\\p2"},"kind":"function","name":"create","returns":[{"type":{"names":["Island"]}}],"longname":"create","scope":"global","___s":true},{"meta":{"range":[347025,347105],"filename":"p2.js","lineno":11460,"path":"src\\physics\\p2"},"kind":"function","name":"destroy","params":[{"type":{"names":["Island"]},"name":"island"}],"returns":[{"type":{"names":["IslandPool"]}}],"longname":"destroy","scope":"global","___s":true},{"meta":{"range":[347949,348112],"filename":"p2.js","lineno":11491,"path":"src\\physics\\p2"},"description":"Ticks one step forward in time. This will move the current overlap state to the \"old\" overlap state, and create a new one as current.","kind":"function","name":"tick","longname":"tick","scope":"global","___s":true},{"meta":{"range":[348852,348985],"filename":"p2.js","lineno":11521,"path":"src\\physics\\p2"},"kind":"function","name":"setOverlapping","params":[{"type":{"names":["Body"]},"name":"bodyA"},{"type":{"names":["Body"]},"name":"shapeA"},{"type":{"names":["Body"]},"name":"bodyB"},{"type":{"names":["Body"]},"name":"shapeB"}],"longname":"setOverlapping","scope":"global","___s":true},{"meta":{"range":[349750,349915],"filename":"p2.js","lineno":11548,"path":"src\\physics\\p2"},"description":"Checks if two bodies are currently overlapping.","kind":"function","name":"bodiesAreOverlapping","params":[{"type":{"names":["Body"]},"name":"bodyA"},{"type":{"names":["Body"]},"name":"bodyB"}],"returns":[{"type":{"names":["boolean"]}}],"longname":"bodiesAreOverlapping","scope":"global","___s":true},{"meta":{"range":[353092,353248],"filename":"p2.js","lineno":11672,"path":"src\\physics\\p2"},"description":"Set the data for the record","kind":"function","name":"set","params":[{"type":{"names":["Body"]},"name":"bodyA"},{"type":{"names":["Shape"]},"name":"shapeA"},{"type":{"names":["Body"]},"name":"bodyB"},{"type":{"names":["Shape"]},"name":"shapeB"}],"longname":"set","scope":"global","___s":true},{"meta":{"range":[353802,353863],"filename":"p2.js","lineno":11699,"path":"src\\physics\\p2"},"kind":"function","name":"create","returns":[{"type":{"names":["OverlapKeeperRecord"]}}],"longname":"create","scope":"global","___s":true},{"meta":{"range":[353965,354071],"filename":"p2.js","lineno":11707,"path":"src\\physics\\p2"},"kind":"function","name":"destroy","params":[{"type":{"names":["OverlapKeeperRecord"]},"name":"record"}],"returns":[{"type":{"names":["OverlapKeeperRecordPool"]}}],"longname":"destroy","scope":"global","___s":true},{"meta":{"range":[354596,354686],"filename":"p2.js","lineno":11737,"path":"src\\physics\\p2"},"kind":"function","name":"resize","params":[{"type":{"names":["number"]},"name":"size"}],"returns":[{"type":{"names":["Pool"]},"description":"Self, for chaining"}],"longname":"resize","scope":"global","___s":true},{"meta":{"range":[354914,355017],"filename":"p2.js","lineno":11756,"path":"src\\physics\\p2"},"description":"Get an object from the pool or create a new instance.","kind":"function","name":"get","returns":[{"type":{"names":["Object"]}}],"longname":"get","scope":"global","___s":true},{"meta":{"range":[355148,355306],"filename":"p2.js","lineno":11766,"path":"src\\physics\\p2"},"description":"Clean up and put the object back into the pool for later use.","kind":"function","name":"release","params":[{"type":{"names":["Object"]},"name":"object"}],"returns":[{"type":{"names":["Pool"]},"description":"Self for chaining"}],"longname":"release","scope":"global","___s":true},{"meta":{"range":[355856,355988],"filename":"p2.js","lineno":11803,"path":"src\\physics\\p2"},"description":"Generate a key given two integers","kind":"function","name":"getKey","params":[{"type":{"names":["number"]},"name":"i"},{"type":{"names":["number"]},"name":"j"}],"returns":[{"type":{"names":["string"]}}],"longname":"getKey","scope":"global","___s":true},{"meta":{"range":[356310,356385],"filename":"p2.js","lineno":11825,"path":"src\\physics\\p2"},"kind":"function","name":"getByKey","params":[{"type":{"names":["Number"]},"name":"key"}],"returns":[{"type":{"names":["Object"]}}],"longname":"getByKey","scope":"global","___s":true},{"meta":{"range":[356493,356584],"filename":"p2.js","lineno":11835,"path":"src\\physics\\p2"},"kind":"function","name":"get","params":[{"type":{"names":["Number"]},"name":"i"},{"type":{"names":["Number"]},"name":"j"}],"returns":[{"type":{"names":["Number"]}}],"longname":"get","scope":"global","___s":true},{"meta":{"range":[356684,356797],"filename":"p2.js","lineno":11845,"path":"src\\physics\\p2"},"description":"Set a value.","kind":"function","name":"set","params":[{"type":{"names":["Number"]},"name":"i"},{"type":{"names":["Number"]},"name":"j"},{"type":{"names":["Number"]},"name":"value"}],"longname":"set","scope":"global","___s":true},{"meta":{"range":[357111,357158],"filename":"p2.js","lineno":11869,"path":"src\\physics\\p2"},"description":"Remove all data.","kind":"function","name":"reset","longname":"reset","scope":"global","___s":true},{"meta":{"range":[357376,357567],"filename":"p2.js","lineno":11885,"path":"src\\physics\\p2"},"description":"Copy another TupleDictionary. Note that all data in this dictionary will be removed.","kind":"function","name":"copy","params":[{"type":{"names":["TupleDictionary"]},"description":"The TupleDictionary to copy into this one.","name":"dict"}],"longname":"copy","scope":"global","___s":true},{"meta":{"range":[358028,358322],"filename":"p2.js","lineno":11912,"path":"src\\physics\\p2"},"description":"Append the values in array b to the array a. See <a href=\"http://stackoverflow.com/questions/1374126/how-to-append-an-array-to-an-existing-javascript-array/1374131#1374131\">this</a> for an explanation.","kind":"function","name":"appendArray","scope":"static","params":[{"type":{"names":["Array"]},"name":"a"},{"type":{"names":["Array"]},"name":"b"}],"longname":"appendArray","___s":true},{"meta":{"range":[358543,358728],"filename":"p2.js","lineno":11929,"path":"src\\physics\\p2"},"description":"Garbage free Array.splice(). Does not allocate a new array.","kind":"function","name":"splice","scope":"static","params":[{"type":{"names":["Array"]},"name":"array"},{"type":{"names":["Number"]},"name":"index"},{"type":{"names":["Number"]},"name":"howmany"}],"longname":"splice","___s":true},{"meta":{"range":[359677,359814],"filename":"p2.js","lineno":11964,"path":"src\\physics\\p2"},"description":"Extend an object with the properties of another","scope":"static","kind":"function","name":"extend","params":[{"type":{"names":["object"]},"name":"a"},{"type":{"names":["object"]},"name":"b"}],"longname":"extend","___s":true},{"meta":{"range":[359910,360233],"filename":"p2.js","lineno":11977,"path":"src\\physics\\p2"},"description":"Extend an options object with default values.","scope":"static","kind":"function","name":"defaults","params":[{"type":{"names":["object"]},"description":"The options object. May be falsy: in this case, a new object is created and returned.","name":"options"},{"type":{"names":["object"]},"description":"An object containing default values.","name":"defaults"}],"returns":[{"type":{"names":["object"]},"description":"The modified options object."}],"longname":"defaults","___s":true},{"meta":{"range":[360965,361040],"filename":"p2.js","lineno":12022,"path":"src\\physics\\p2"},"description":"Clean this island from bodies and equations.","kind":"function","name":"reset","longname":"reset","scope":"global","___s":true},{"meta":{"range":[361160,361269],"filename":"p2.js","lineno":12032,"path":"src\\physics\\p2"},"description":"Get all unique bodies in this island.","kind":"function","name":"getBodies","returns":[{"type":{"names":["Array"]},"description":"An array of Body"}],"longname":"getBodies","scope":"global","___s":true},{"meta":{"range":[361776,361878],"filename":"p2.js","lineno":12055,"path":"src\\physics\\p2"},"description":"Check if the entire island wants to sleep.","kind":"function","name":"wantsToSleep","returns":[{"type":{"names":["Boolean"]}}],"longname":"wantsToSleep","scope":"global","___s":true},{"meta":{"range":[362130,362197],"filename":"p2.js","lineno":12070,"path":"src\\physics\\p2"},"description":"Make all bodies in the island sleep.","kind":"function","name":"sleep","longname":"sleep","scope":"global","___s":true},{"meta":{"range":[363777,363964],"filename":"p2.js","lineno":12140,"path":"src\\physics\\p2"},"description":"Get an unvisited node from a list of nodes.","scope":"static","kind":"function","name":"getUnvisitedNode","params":[{"type":{"names":["Array"]},"name":"nodes"}],"returns":[{"type":{"names":["IslandNode","boolean"]},"description":"The node if found, else false."}],"longname":"getUnvisitedNode","___s":true},{"meta":{"range":[364247,364369],"filename":"p2.js","lineno":12158,"path":"src\\physics\\p2"},"description":"Visit a node.","kind":"function","name":"visit","params":[{"type":{"names":["IslandNode"]},"name":"node"},{"type":{"names":["Array"]},"name":"bds"},{"type":{"names":["Array"]},"name":"eqs"}],"longname":"visit","scope":"global","___s":true},{"meta":{"range":[364671,365011],"filename":"p2.js","lineno":12176,"path":"src\\physics\\p2"},"description":"Runs the search algorithm, starting at a root node. The resulting bodies and equations will be stored in the provided arrays.","kind":"function","name":"bfs","params":[{"type":{"names":["IslandNode"]},"description":"The node to start from","name":"root"},{"type":{"names":["Array"]},"description":"An array to append resulting Bodies to.","name":"bds"},{"type":{"names":["Array"]},"description":"An array to append resulting Equations to.","name":"eqs"}],"longname":"bfs","scope":"global","___s":true},{"meta":{"range":[365816,365990],"filename":"p2.js","lineno":12214,"path":"src\\physics\\p2"},"description":"Split the world into independent islands. The result is stored in .islands.","kind":"function","name":"split","params":[{"type":{"names":["World"]},"name":"world"}],"returns":[{"type":{"names":["Array"]},"description":"The generated islands"}],"longname":"split","scope":"global","___s":true},{"meta":{"range":[368618,368691],"filename":"p2.js","lineno":12318,"path":"src\\physics\\p2"},"description":"Clean this node from bodies and equations.","kind":"function","name":"reset","longname":"reset","scope":"global","___s":true},{"meta":{"range":[381319,381545],"filename":"p2.js","lineno":12728,"path":"src\\physics\\p2"},"description":"Add a constraint to the simulation.","kind":"function","name":"addConstraint","params":[{"type":{"names":["Constraint"]},"name":"constraint"}],"examples":["var constraint = new LockConstraint(bodyA, bodyB);\r    world.addConstraint(constraint);"],"longname":"addConstraint","scope":"global","___s":true},{"meta":{"range":[381648,381777],"filename":"p2.js","lineno":12741,"path":"src\\physics\\p2"},"description":"Add a ContactMaterial to the simulation.","kind":"function","name":"addContactMaterial","params":[{"type":{"names":["ContactMaterial"]},"name":"contactMaterial"}],"longname":"addContactMaterial","scope":"global","___s":true},{"meta":{"range":[381900,382009],"filename":"p2.js","lineno":12750,"path":"src\\physics\\p2"},"description":"Removes a contact material","kind":"function","name":"removeContactMaterial","params":[{"type":{"names":["ContactMaterial"]},"name":"cm"}],"longname":"removeContactMaterial","scope":"global","___s":true},{"meta":{"range":[382200,382487],"filename":"p2.js","lineno":12763,"path":"src\\physics\\p2"},"description":"Get a contact material given two materials","kind":"function","name":"getContactMaterial","params":[{"type":{"names":["Material"]},"name":"materialA"},{"type":{"names":["Material"]},"name":"materialB"}],"returns":[{"type":{"names":["ContactMaterial"]},"description":"The matching ContactMaterial, or false on fail."}],"todo":["Use faster hash map to lookup from material id's"],"longname":"getContactMaterial","scope":"global","___s":true},{"meta":{"range":[382918,383019],"filename":"p2.js","lineno":12783,"path":"src\\physics\\p2"},"description":"Removes a constraint","kind":"function","name":"removeConstraint","params":[{"type":{"names":["Constraint"]},"name":"constraint"}],"longname":"removeConstraint","scope":"global","___s":true},{"meta":{"range":[383571,385348],"filename":"p2.js","lineno":12808,"path":"src\\physics\\p2"},"description":"Step the physics world forward in time.\r\rThere are two modes. The simple mode is fixed timestepping without interpolation. In this case you only use the first argument. The second case uses interpolation. In that you also provide the time since the function was last used, as well as the maximum fixed timesteps to take.","kind":"function","name":"step","params":[{"type":{"names":["Number"]},"description":"The fixed time step size to use.","name":"dt"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The time elapsed since the function was last called.","name":"timeSinceLastCalled"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":10,"description":"Maximum number of fixed steps to take per function call.","name":"maxSubSteps"}],"examples":["// Simple fixed timestepping without interpolation\r    var fixedTimeStep = 1 / 60;\r    var world = new World();\r    var body = new Body({ mass: 1 });\r    world.addBody(body);\r\r    function animate(){\r        requestAnimationFrame(animate);\r        world.step(fixedTimeStep);\r        renderBody(body.position, body.angle);\r    }\r\r    // Start animation loop\r    requestAnimationFrame(animate);","// Fixed timestepping with interpolation\r    var maxSubSteps = 10;\r    var lastTimeSeconds;\r\r    function animate(t){\r        requestAnimationFrame(animate);\r        timeSeconds = t / 1000;\r        lastTimeSeconds = lastTimeSeconds || timeSeconds;\r\r        deltaTime = timeSeconds - lastTimeSeconds;\r        world.step(fixedTimeStep, deltaTime, maxSubSteps);\r\r        renderBody(body.interpolatedPosition, body.interpolatedAngle);\r    }\r\r    // Start animation loop\r    requestAnimationFrame(animate);"],"see":["http://bulletphysics.org/mediawiki-1.5.8/index.php/Stepping_The_World"],"longname":"step","scope":"global","___s":true},{"meta":{"range":[394835,395156],"filename":"p2.js","lineno":13161,"path":"src\\physics\\p2"},"description":"Runs narrowphase for the shape pair i and j.","kind":"function","name":"runNarrowphase","params":[{"type":{"names":["Narrowphase"]},"name":"np"},{"type":{"names":["Body"]},"name":"bi"},{"type":{"names":["Shape"]},"name":"si"},{"type":{"names":["Array"]},"name":"xi"},{"type":{"names":["Number"]},"name":"ai"},{"type":{"names":["Body"]},"name":"bj"},{"type":{"names":["Shape"]},"name":"sj"},{"type":{"names":["Array"]},"name":"xj"},{"type":{"names":["Number"]},"name":"aj"},{"type":{"names":["Number"]},"name":"mu"}],"longname":"runNarrowphase","scope":"global","___s":true},{"meta":{"range":[399487,399583],"filename":"p2.js","lineno":13284,"path":"src\\physics\\p2"},"description":"Add a spring to the simulation","kind":"function","name":"addSpring","params":[{"type":{"names":["Spring"]},"name":"spring"}],"longname":"addSpring","scope":"global","___s":true},{"meta":{"range":[399777,399861],"filename":"p2.js","lineno":13298,"path":"src\\physics\\p2"},"description":"Remove a spring","kind":"function","name":"removeSpring","params":[{"type":{"names":["Spring"]},"name":"spring"}],"longname":"removeSpring","scope":"global","___s":true},{"meta":{"range":[400035,400277],"filename":"p2.js","lineno":13311,"path":"src\\physics\\p2"},"description":"Add a body to the simulation","kind":"function","name":"addBody","params":[{"type":{"names":["Body"]},"name":"body"}],"examples":["var world = new World(),\r        body = new Body();\r    world.addBody(body);"],"todo":["What if this is done during step?"],"longname":"addBody","scope":"global","___s":true},{"meta":{"range":[400554,400740],"filename":"p2.js","lineno":13334,"path":"src\\physics\\p2"},"description":"Remove a body from the simulation. If this method is called during step(), the body removal is scheduled to after the step.","kind":"function","name":"removeBody","params":[{"type":{"names":["Body"]},"name":"body"}],"longname":"removeBody","scope":"global","___s":true},{"meta":{"range":[401222,401362],"filename":"p2.js","lineno":13356,"path":"src\\physics\\p2"},"description":"Get a body by its id.","kind":"function","name":"getBodyById","params":[{"type":{"names":["number"]},"name":"id"}],"returns":[{"type":{"names":["Body"]},"description":"The body, or false if it was not found."}],"longname":"getBodyById","scope":"global","___s":true},{"meta":{"range":[401601,401731],"filename":"p2.js","lineno":13373,"path":"src\\physics\\p2"},"description":"Disable collision between two bodies","kind":"function","name":"disableBodyCollision","params":[{"type":{"names":["Body"]},"name":"bodyA"},{"type":{"names":["Body"]},"name":"bodyB"}],"longname":"disableBodyCollision","scope":"global","___s":true},{"meta":{"range":[401858,401997],"filename":"p2.js","lineno":13383,"path":"src\\physics\\p2"},"description":"Enable collisions between the given two bodies","kind":"function","name":"enableBodyCollision","params":[{"type":{"names":["Body"]},"name":"bodyA"},{"type":{"names":["Body"]},"name":"bodyB"}],"longname":"enableBodyCollision","scope":"global","___s":true},{"meta":{"range":[402336,402433],"filename":"p2.js","lineno":13399,"path":"src\\physics\\p2"},"description":"Resets the World, removes all bodies, constraints and springs.","kind":"function","name":"clear","longname":"clear","scope":"global","___s":true},{"meta":{"range":[403411,403988],"filename":"p2.js","lineno":13444,"path":"src\\physics\\p2"},"description":"Test if a world point overlaps bodies","kind":"function","name":"hitTest","params":[{"type":{"names":["Array"]},"description":"Point to use for intersection tests","name":"worldPoint"},{"type":{"names":["Array"]},"description":"A list of objects to check for intersection","name":"bodies"},{"type":{"names":["Number"]},"description":"Used for matching against particles and lines. Adds some margin to these infinitesimal objects.","name":"precision"}],"returns":[{"type":{"names":["Array"]},"description":"Array of bodies that overlap the point"}],"todo":["Should use an api similar to the raycast function","Should probably implement a .containsPoint method for all shapes. Would be more efficient"],"longname":"hitTest","scope":"global","___s":true},{"meta":{"range":[405461,405593],"filename":"p2.js","lineno":13496,"path":"src\\physics\\p2"},"description":"Set the stiffness for all equations and contact materials.","kind":"function","name":"setGlobalStiffness","params":[{"type":{"names":["Number"]},"name":"stiffness"}],"longname":"setGlobalStiffness","scope":"global","___s":true},{"meta":{"range":[406387,406522],"filename":"p2.js","lineno":13526,"path":"src\\physics\\p2"},"description":"Set the relaxation for all equations and contact materials.","kind":"function","name":"setGlobalRelaxation","params":[{"type":{"names":["Number"]},"name":"relaxation"}],"longname":"setGlobalRelaxation","scope":"global","___s":true},{"meta":{"range":[407303,408721],"filename":"p2.js","lineno":13557,"path":"src\\physics\\p2"},"description":"Ray cast against all bodies in the world.","kind":"function","name":"raycast","params":[{"type":{"names":["RaycastResult"]},"name":"result"},{"type":{"names":["Ray"]},"name":"ray"}],"returns":[{"type":{"names":["boolean"]},"description":"True if any body was hit."}],"examples":["var ray = new Ray({\r        mode: Ray.CLOSEST, // or ANY\r        from: [0, 0],\r        to: [10, 0],\r    });\r    var result = new RaycastResult();\r    world.raycast(result, ray);\r\r    // Get the hit point\r    var hitPoint = vec2.create();\r    result.getHitPoint(hitPoint, ray);\r    console.log('Hit point: ', hitPoint[0], hitPoint[1], ' at distance ' + result.getHitDistance(ray));","var ray = new Ray({\r        mode: Ray.ALL,\r        from: [0, 0],\r        to: [10, 0],\r        callback: function(result){\r\r            // Print some info about the hit\r            console.log('Hit body and shape: ', result.body, result.shape);\r\r            // Get the hit point\r            var hitPoint = vec2.create();\r            result.getHitPoint(hitPoint, ray);\r            console.log('Hit point: ', hitPoint[0], hitPoint[1], ' at distance ' + result.getHitDistance(ray));\r\r            // If you are happy with the hits you got this far, you can stop the traversal here:\r            result.stop();\r        }\r    });\r    var result = new RaycastResult();\r    world.raycast(result, ray);"],"longname":"raycast","scope":"global","___s":true},{"meta":{"range":[514,642],"filename":"PointProxy.js","lineno":15,"path":"src\\physics\\p2"},"description":"A PointProxy is an internal class that allows for direct getter/setter style property access to Arrays and TypedArrays.","kind":"class","classdesc":"Phaser.Physics.P2.PointProxy","params":[{"type":{"names":["Phaser.Physics.P2"]},"description":"A reference to the P2 World.","name":"world"},{"type":{"names":["any"]},"description":"The object to bind to.","name":"destination"}],"name":"PointProxy","longname":"Phaser.Physics.P2.PointProxy","memberof":"Phaser.Physics.P2","scope":"static","___s":true},{"meta":{"range":[733,863],"filename":"PointProxy.js","lineno":24,"path":"src\\physics\\p2"},"name":"x","properties":[{"type":{"names":["number"]},"description":"The x property of this PointProxy get and set in pixels.","name":"x"}],"memberof":"Phaser.Physics.P2.PointProxy","longname":"Phaser.Physics.P2.PointProxy#x","scope":"instance","kind":"member","___s":true},{"meta":{"range":[1131,1261],"filename":"PointProxy.js","lineno":44,"path":"src\\physics\\p2"},"name":"y","properties":[{"type":{"names":["number"]},"description":"The y property of this PointProxy get and set in pixels.","name":"y"}],"memberof":"Phaser.Physics.P2.PointProxy","longname":"Phaser.Physics.P2.PointProxy#y","scope":"instance","kind":"member","___s":true},{"meta":{"range":[1529,1661],"filename":"PointProxy.js","lineno":64,"path":"src\\physics\\p2"},"name":"mx","properties":[{"type":{"names":["number"]},"description":"The x property of this PointProxy get and set in meters.","name":"mx"}],"memberof":"Phaser.Physics.P2.PointProxy","longname":"Phaser.Physics.P2.PointProxy#mx","scope":"instance","kind":"member","___s":true},{"meta":{"range":[1898,2030],"filename":"PointProxy.js","lineno":84,"path":"src\\physics\\p2"},"name":"my","properties":[{"type":{"names":["number"]},"description":"The x property of this PointProxy get and set in meters.","name":"my"}],"memberof":"Phaser.Physics.P2.PointProxy","longname":"Phaser.Physics.P2.PointProxy#my","scope":"instance","kind":"member","___s":true},{"meta":{"range":[1256,2244],"filename":"PrismaticConstraint.js","lineno":21,"path":"src\\physics\\p2"},"description":"Connects two bodies at given offset points, letting them rotate relative to each other around this point.","kind":"class","classdesc":"Phaser.Physics.P2.PrismaticConstraint","params":[{"type":{"names":["Phaser.Physics.P2"]},"description":"A reference to the P2 World.","name":"world"},{"type":{"names":["p2.Body"]},"description":"First connected body.","name":"bodyA"},{"type":{"names":["p2.Body"]},"description":"Second connected body.","name":"bodyB"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If set to false, bodyB will be free to rotate around its anchor point.","name":"lockRotation"},{"type":{"names":["Array"]},"optional":true,"description":"Body A's anchor point, defined in its own local frame. The value is an array with 2 elements matching x and y, i.e: [32, 32].","name":"anchorA"},{"type":{"names":["Array"]},"optional":true,"description":"Body A's anchor point, defined in its own local frame. The value is an array with 2 elements matching x and y, i.e: [32, 32].","name":"anchorB"},{"type":{"names":["Array"]},"optional":true,"description":"An axis, defined in body A frame, that body B's anchor point may slide along. The value is an array with 2 elements matching x and y, i.e: [32, 32].","name":"axis"},{"type":{"names":["number"]},"optional":true,"description":"The maximum force that should be applied to constrain the bodies.","name":"maxForce"}],"name":"PrismaticConstraint","longname":"Phaser.Physics.P2.PrismaticConstraint","memberof":"Phaser.Physics.P2","scope":"static","___s":true},{"meta":{"range":[1750,1772],"filename":"PrismaticConstraint.js","lineno":32,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.Physics.P2.PrismaticConstraint#game","kind":"member","memberof":"Phaser.Physics.P2.PrismaticConstraint","scope":"instance","___s":true},{"meta":{"range":[1872,1890],"filename":"PrismaticConstraint.js","lineno":37,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Physics.P2"]},"description":"Local reference to P2 World.","name":"world"}],"name":"world","longname":"Phaser.Physics.P2.PrismaticConstraint#world","kind":"member","memberof":"Phaser.Physics.P2.PrismaticConstraint","scope":"instance","___s":true},{"meta":{"range":[1261,2152],"filename":"RevoluteConstraint.js","lineno":21,"path":"src\\physics\\p2"},"description":"Connects two bodies at given offset points, letting them rotate relative to each other around this point.\rThe pivot points are given in world (pixel) coordinates.","kind":"class","classdesc":"Phaser.Physics.P2.RevoluteConstraint","params":[{"type":{"names":["Phaser.Physics.P2"]},"description":"A reference to the P2 World.","name":"world"},{"type":{"names":["p2.Body"]},"description":"First connected body.","name":"bodyA"},{"type":{"names":["Float32Array"]},"description":"The point relative to the center of mass of bodyA which bodyA is constrained to. The value is an array with 2 elements matching x and y, i.e: [32, 32].","name":"pivotA"},{"type":{"names":["p2.Body"]},"description":"Second connected body.","name":"bodyB"},{"type":{"names":["Float32Array"]},"description":"The point relative to the center of mass of bodyB which bodyB is constrained to. The value is an array with 2 elements matching x and y, i.e: [32, 32].","name":"pivotB"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The maximum force that should be applied to constrain the bodies.","name":"maxForce"},{"type":{"names":["Float32Array"]},"optional":true,"defaultvalue":null,"description":"A pivot point given in world coordinates. If specified, localPivotA and localPivotB are automatically computed from this value.","name":"worldPivot"}],"name":"RevoluteConstraint","longname":"Phaser.Physics.P2.RevoluteConstraint","memberof":"Phaser.Physics.P2","scope":"static","___s":true},{"meta":{"range":[1584,1606],"filename":"RevoluteConstraint.js","lineno":29,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.Physics.P2.RevoluteConstraint#game","kind":"member","memberof":"Phaser.Physics.P2.RevoluteConstraint","scope":"instance","___s":true},{"meta":{"range":[1706,1724],"filename":"RevoluteConstraint.js","lineno":34,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Physics.P2"]},"description":"Local reference to P2 World.","name":"world"}],"name":"world","longname":"Phaser.Physics.P2.RevoluteConstraint#world","kind":"member","memberof":"Phaser.Physics.P2.RevoluteConstraint","scope":"instance","___s":true},{"meta":{"range":[876,1761],"filename":"RotationalSpring.js","lineno":19,"path":"src\\physics\\p2"},"description":"Creates a rotational spring, connecting two bodies. A spring can have a resting length, a stiffness and damping.","kind":"class","classdesc":"Phaser.Physics.P2.RotationalSpring","params":[{"type":{"names":["Phaser.Physics.P2"]},"description":"A reference to the P2 World.","name":"world"},{"type":{"names":["p2.Body"]},"description":"First connected body.","name":"bodyA"},{"type":{"names":["p2.Body"]},"description":"Second connected body.","name":"bodyB"},{"type":{"names":["number"]},"optional":true,"description":"The relative angle of bodies at which the spring is at rest. If not given, it's set to the current relative angle between the bodies.","name":"restAngle"},{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"Stiffness of the spring. A number >= 0.","name":"stiffness"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"Damping of the spring. A number >= 0.","name":"damping"}],"name":"RotationalSpring","longname":"Phaser.Physics.P2.RotationalSpring","memberof":"Phaser.Physics.P2","scope":"static","___s":true},{"meta":{"range":[1064,1086],"filename":"RotationalSpring.js","lineno":24,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.Physics.P2.RotationalSpring#game","kind":"member","memberof":"Phaser.Physics.P2.RotationalSpring","scope":"instance","___s":true},{"meta":{"range":[1186,1204],"filename":"RotationalSpring.js","lineno":29,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Physics.P2"]},"description":"Local reference to P2 World.","name":"world"}],"name":"world","longname":"Phaser.Physics.P2.RotationalSpring#world","kind":"member","memberof":"Phaser.Physics.P2.RotationalSpring","scope":"instance","___s":true},{"meta":{"range":[1665,1723],"filename":"RotationalSpring.js","lineno":49,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["p2.RotationalSpring"]},"description":"The actual p2 spring object.","name":"data"}],"name":"data","longname":"Phaser.Physics.P2.RotationalSpring#data","kind":"member","memberof":"Phaser.Physics.P2.RotationalSpring","scope":"instance","___s":true},{"meta":{"range":[1414,2899],"filename":"Spring.js","lineno":23,"path":"src\\physics\\p2"},"description":"Creates a linear spring, connecting two bodies. A spring can have a resting length, a stiffness and damping.","kind":"class","classdesc":"Phaser.Physics.P2.Spring","params":[{"type":{"names":["Phaser.Physics.P2"]},"description":"A reference to the P2 World.","name":"world"},{"type":{"names":["p2.Body"]},"description":"First connected body.","name":"bodyA"},{"type":{"names":["p2.Body"]},"description":"Second connected body.","name":"bodyB"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"Rest length of the spring. A number > 0.","name":"restLength"},{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"Stiffness of the spring. A number >= 0.","name":"stiffness"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"Damping of the spring. A number >= 0.","name":"damping"},{"type":{"names":["Array"]},"optional":true,"description":"Where to hook the spring to body A in world coordinates. This value is an array with 2 elements matching x and y, i.e: [32, 32].","name":"worldA"},{"type":{"names":["Array"]},"optional":true,"description":"Where to hook the spring to body B in world coordinates. This value is an array with 2 elements matching x and y, i.e: [32, 32].","name":"worldB"},{"type":{"names":["Array"]},"optional":true,"description":"Where to hook the spring to body A in local body coordinates. This value is an array with 2 elements matching x and y, i.e: [32, 32].","name":"localA"},{"type":{"names":["Array"]},"optional":true,"description":"Where to hook the spring to body B in local body coordinates. This value is an array with 2 elements matching x and y, i.e: [32, 32].","name":"localB"}],"name":"Spring","longname":"Phaser.Physics.P2.Spring","memberof":"Phaser.Physics.P2","scope":"static","___s":true},{"meta":{"range":[1625,1647],"filename":"Spring.js","lineno":28,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.Physics.P2.Spring#game","kind":"member","memberof":"Phaser.Physics.P2.Spring","scope":"instance","___s":true},{"meta":{"range":[1747,1765],"filename":"Spring.js","lineno":33,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Physics.P2"]},"description":"Local reference to P2 World.","name":"world"}],"name":"world","longname":"Phaser.Physics.P2.Spring#world","kind":"member","memberof":"Phaser.Physics.P2.Spring","scope":"instance","___s":true},{"meta":{"range":[2807,2861],"filename":"Spring.js","lineno":70,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["p2.LinearSpring"]},"description":"The actual p2 spring object.","name":"data"}],"name":"data","longname":"Phaser.Physics.P2.Spring#data","kind":"member","memberof":"Phaser.Physics.P2.Spring","scope":"instance","___s":true},{"meta":{"range":[252,283],"filename":"World.js","lineno":8,"path":"src\\physics\\p2"},"author":["Richard Davey <rich@photonstorm.com>"],"copyright":"2016 Photon Storm Ltd.","license":"{@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}","name":"parent","longname":"p2.Body#parent","kind":"member","memberof":"p2.Body","scope":"instance","___s":true},{"meta":{"range":[702,9467],"filename":"World.js","lineno":20,"path":"src\\physics\\p2"},"description":"This is your main access to the P2 Physics World.\rFrom here you can create materials, listen for events and add bodies into the physics simulation.","kind":"class","classdesc":"Phaser.Physics.P2","params":[{"type":{"names":["Phaser.Game"]},"description":"Reference to the current game instance.","name":"game"},{"type":{"names":["object"]},"optional":true,"description":"Physics configuration object passed in from the game constructor.","name":"config"}],"name":"P2","longname":"Phaser.Physics.P2","memberof":"Phaser.Physics","scope":"static","___s":true},{"meta":{"range":[835,851],"filename":"World.js","lineno":25,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.Physics.P2#game","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[1351,1371],"filename":"World.js","lineno":48,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["object"]},"description":"The p2 World configuration object.","name":"config"}],"access":"protected","name":"config","longname":"Phaser.Physics.P2#config","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[1496,1534],"filename":"World.js","lineno":54,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["p2.World"]},"description":"The p2 World in which the simulation is run.","name":"world"}],"access":"protected","name":"world","longname":"Phaser.Physics.P2#world","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[1738,1761],"filename":"World.js","lineno":60,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["number"]},"description":"The frame rate the world will be stepped at. Defaults to 1 / 60, but you can change here. Also see useElapsedTime property.","name":"frameRate"}],"name":"frameRate","longname":"Phaser.Physics.P2#frameRate","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[1989,2016],"filename":"World.js","lineno":66,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["boolean"]},"description":"If true the frameRate value will be ignored and instead p2 will step with the value of Game.Time.physicsElapsed, which is a delta time value.","name":"useElapsedTime"}],"defaultvalue":false,"name":"useElapsedTime","longname":"Phaser.Physics.P2#useElapsedTime","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[2128,2147],"filename":"World.js","lineno":72,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["boolean"]},"description":"The paused state of the P2 World.","name":"paused"}],"defaultvalue":false,"name":"paused","longname":"Phaser.Physics.P2#paused","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[2296,2315],"filename":"World.js","lineno":78,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["array.<Phaser.Physics.P2.Material>"]},"description":"A local array of all created Materials.","name":"materials"}],"access":"protected","name":"materials","longname":"Phaser.Physics.P2#materials","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[2451,2531],"filename":"World.js","lineno":83,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Physics.P2.InversePointProxy"]},"description":"The gravity applied to all bodies each step.","name":"gravity"}],"name":"gravity","longname":"Phaser.Physics.P2#gravity","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[2660,2725],"filename":"World.js","lineno":88,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["object"]},"description":"An object containing the 4 wall bodies that bound the physics world.","name":"walls"}],"name":"walls","longname":"Phaser.Physics.P2#walls","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[2985,3023],"filename":"World.js","lineno":97,"path":"src\\physics\\p2"},"description":"This signal is dispatched when a new Body is added to the World.\r\rIt sends 1 argument: `body` which is the `Phaser.Physics.P2.Body` that was added to the world.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onBodyAdded"}],"name":"onBodyAdded","longname":"Phaser.Physics.P2#onBodyAdded","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[3287,3327],"filename":"World.js","lineno":106,"path":"src\\physics\\p2"},"description":"This signal is dispatched when a Body is removed to the World.\r\rIt sends 1 argument: `body` which is the `Phaser.Physics.P2.Body` that was removed from the world.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onBodyRemoved"}],"name":"onBodyRemoved","longname":"Phaser.Physics.P2#onBodyRemoved","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[3640,3680],"filename":"World.js","lineno":115,"path":"src\\physics\\p2"},"description":"This signal is dispatched when a Spring is added to the World.\r\rIt sends 1 argument: `spring` which is either a `Phaser.Physics.P2.Spring`, `p2.LinearSpring` or `p2.RotationalSpring` that was added to the world.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onSpringAdded"}],"name":"onSpringAdded","longname":"Phaser.Physics.P2#onSpringAdded","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[4003,4045],"filename":"World.js","lineno":124,"path":"src\\physics\\p2"},"description":"This signal is dispatched when a Spring is removed from the World.\r\rIt sends 1 argument: `spring` which is either a `Phaser.Physics.P2.Spring`, `p2.LinearSpring` or `p2.RotationalSpring` that was removed from the world.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onSpringRemoved"}],"name":"onSpringRemoved","longname":"Phaser.Physics.P2#onSpringRemoved","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[4325,4369],"filename":"World.js","lineno":133,"path":"src\\physics\\p2"},"description":"This signal is dispatched when a Constraint is added to the World.\r\rIt sends 1 argument: `constraint` which is the `Phaser.Physics.P2.Constraint` that was added to the world.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onConstraintAdded"}],"name":"onConstraintAdded","longname":"Phaser.Physics.P2#onConstraintAdded","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[4659,4705],"filename":"World.js","lineno":142,"path":"src\\physics\\p2"},"description":"This signal is dispatched when a Constraint is removed from the World.\r\rIt sends 1 argument: `constraint` which is the `Phaser.Physics.P2.Constraint` that was removed from the world.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onConstraintRemoved"}],"name":"onConstraintRemoved","longname":"Phaser.Physics.P2#onConstraintRemoved","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[4999,5048],"filename":"World.js","lineno":151,"path":"src\\physics\\p2"},"description":"This signal is dispatched when a Contact Material is added to the World.\r\rIt sends 1 argument: `material` which is the `Phaser.Physics.P2.ContactMaterial` that was added to the world.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onContactMaterialAdded"}],"name":"onContactMaterialAdded","longname":"Phaser.Physics.P2#onContactMaterialAdded","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[5352,5403],"filename":"World.js","lineno":160,"path":"src\\physics\\p2"},"description":"This signal is dispatched when a Contact Material is removed from the World.\r\rIt sends 1 argument: `material` which is the `Phaser.Physics.P2.ContactMaterial` that was removed from the world.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onContactMaterialRemoved"}],"name":"onContactMaterialRemoved","longname":"Phaser.Physics.P2#onContactMaterialRemoved","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[5509,5543],"filename":"World.js","lineno":165,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["function"]},"description":"A postBroadphase callback.","name":"postBroadphaseCallback"}],"name":"postBroadphaseCallback","longname":"Phaser.Physics.P2#postBroadphaseCallback","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[5662,5689],"filename":"World.js","lineno":170,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["object"]},"description":"The context under which the callbacks are fired.","name":"callbackContext"}],"name":"callbackContext","longname":"Phaser.Physics.P2#callbackContext","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[6202,6243],"filename":"World.js","lineno":182,"path":"src\\physics\\p2"},"description":"This Signal is dispatched when a first contact is created between two bodies. This happens *before* the step has been done.\r\rIt sends 5 arguments: `bodyA`, `bodyB`, `shapeA`, `shapeB` and `contactEquations`.\r\rIt is possible that in certain situations the `bodyA` or `bodyB` values are `null`. You should check for this\rin your own code to avoid processing potentially null physics bodies.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onBeginContact"}],"name":"onBeginContact","longname":"Phaser.Physics.P2#onBeginContact","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[6728,6767],"filename":"World.js","lineno":194,"path":"src\\physics\\p2"},"description":"This Signal is dispatched when final contact occurs between two bodies. This happens *before* the step has been done.\r\rIt sends 4 arguments: `bodyA`, `bodyB`, `shapeA` and `shapeB`.\r\rIt is possible that in certain situations the `bodyA` or `bodyB` values are `null`. You should check for this\rin your own code to avoid processing potentially null physics bodies.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onEndContact"}],"name":"onEndContact","longname":"Phaser.Physics.P2#onEndContact","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[7412,7437],"filename":"World.js","lineno":212,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["array"]},"description":"An array containing the collision groups that have been defined in the World.","name":"collisionGroups"}],"name":"collisionGroups","longname":"Phaser.Physics.P2#collisionGroups","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[7566,7634],"filename":"World.js","lineno":217,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Physics.P2.CollisionGroup"]},"description":"A default collision group.","name":"nothingCollisionGroup"}],"name":"nothingCollisionGroup","longname":"Phaser.Physics.P2#nothingCollisionGroup","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[7762,7829],"filename":"World.js","lineno":222,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Physics.P2.CollisionGroup"]},"description":"A default collision group.","name":"boundsCollisionGroup"}],"name":"boundsCollisionGroup","longname":"Phaser.Physics.P2#boundsCollisionGroup","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[7961,8041],"filename":"World.js","lineno":227,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["Phaser.Physics.P2.CollisionGroup"]},"description":"A default collision group.","name":"everythingCollisionGroup"}],"name":"everythingCollisionGroup","longname":"Phaser.Physics.P2#everythingCollisionGroup","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[8168,8196],"filename":"World.js","lineno":232,"path":"src\\physics\\p2"},"properties":[{"type":{"names":["array"]},"description":"An array of the bodies the world bounds collides with.","name":"boundsCollidesWith"}],"name":"boundsCollidesWith","longname":"Phaser.Physics.P2#boundsCollidesWith","kind":"member","memberof":"Phaser.Physics.P2","scope":"instance","___s":true},{"meta":{"range":[9511,9757],"filename":"World.js","lineno":283,"path":"src\\physics\\p2"},"description":"This will add a P2 Physics body into the removal list for the next step.","kind":"function","name":"removeBodyNextStep","params":[{"type":{"names":["Phaser.Physics.P2.Body"]},"description":"The body to remove at the start of the next step.","name":"body"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#removeBodyNextStep","scope":"instance","___s":true},{"meta":{"range":[9856,10007],"filename":"World.js","lineno":295,"path":"src\\physics\\p2"},"description":"Called at the start of the core update loop. Purges flagged bodies from the world.","kind":"function","name":"preUpdate","memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#preUpdate","scope":"instance","___s":true},{"meta":{"range":[10229,11082],"filename":"World.js","lineno":313,"path":"src\\physics\\p2"},"description":"This will create a P2 Physics body on the given game object or array of game objects.\rA game object can only have 1 physics body active at any one time, and it can't be changed until the object is destroyed.\rNote: When the game object is enabled for P2 physics it has its anchor x/y set to 0.5 so it becomes centered.","kind":"function","name":"enable","params":[{"type":{"names":["object","array","Phaser.Group"]},"description":"The game object to create the physics body on. Can also be an array or Group of objects, a body will be created on every child that has a `body` property.","name":"object"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Create a debug object to go with this body?","name":"debug"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should a body be created on all children of this object? If true it will recurse down the display list as far as it can go.","name":"children"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#enable","scope":"instance","___s":true},{"meta":{"range":[12571,13042],"filename":"World.js","lineno":372,"path":"src\\physics\\p2"},"description":"Creates a P2 Physics body on the given game object.\rA game object can only have 1 physics body active at any one time, and it can't be changed until the body is nulled.","kind":"function","name":"enableBody","params":[{"type":{"names":["object"]},"description":"The game object to create the physics body on. A body will only be created if this object has a null `body` property.","name":"object"},{"type":{"names":["boolean"]},"description":"Create a debug object to go with this body?","name":"debug"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#enableBody","scope":"instance","___s":true},{"meta":{"range":[13416,13847],"filename":"World.js","lineno":393,"path":"src\\physics\\p2"},"description":"Impact event handling is disabled by default. Enable it before any impact events will be dispatched.\rIn a busy world hundreds of impact events can be generated every step, so only enable this if you cannot do what you need via beginContact or collision masks.","kind":"function","name":"setImpactEvents","params":[{"type":{"names":["boolean"]},"description":"Set to true to enable impact events, or false to disable.","name":"state"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#setImpactEvents","scope":"instance","___s":true},{"meta":{"range":[14115,14884],"filename":"World.js","lineno":413,"path":"src\\physics\\p2"},"description":"Sets a callback to be fired after the Broadphase has collected collision pairs in the world.\rJust because a pair exists it doesn't mean they *will* collide, just that they potentially could do.\rIf your calback returns `false` the pair will be removed from the narrowphase. This will stop them testing for collision this step.\rReturning `true` from the callback will ensure they are checked in the narrowphase.","kind":"function","name":"setPostBroadphaseCallback","params":[{"type":{"names":["function"]},"description":"The callback that will receive the postBroadphase event data. It must return a boolean. Set to null to disable an existing callback.","name":"callback"},{"type":{"names":["object"]},"description":"The context under which the callback will be fired.","name":"context"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#setPostBroadphaseCallback","scope":"instance","___s":true},{"meta":{"range":[17413,17572],"filename":"World.js","lineno":502,"path":"src\\physics\\p2"},"description":"Handles a p2 begin contact event.","kind":"function","name":"beginContactHandler","params":[{"type":{"names":["object"]},"description":"The event data.","name":"event"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#beginContactHandler","scope":"instance","___s":true},{"meta":{"range":[18251,18406],"filename":"World.js","lineno":527,"path":"src\\physics\\p2"},"description":"Handles a p2 end contact event.","kind":"function","name":"endContactHandler","params":[{"type":{"names":["object"]},"description":"The event data.","name":"event"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#endContactHandler","scope":"instance","___s":true},{"meta":{"range":[19005,19671],"filename":"World.js","lineno":552,"path":"src\\physics\\p2"},"description":"Sets the bounds of the Physics world to match the Game.World dimensions.\rYou can optionally set which 'walls' to create: left, right, top or bottom.","kind":"function","name":"setBoundsToWorld","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true will create the left bounds wall.","name":"left"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true will create the right bounds wall.","name":"right"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true will create the top bounds wall.","name":"top"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true will create the bottom bounds wall.","name":"bottom"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true the Bounds will be set to use its own Collision Group.","name":"setCollisionGroup"}],"memberof":"Phaser.Physics","longname":"Phaser.Physics#setBoundsToWorld","scope":"instance","___s":true},{"meta":{"range":[19954,20537],"filename":"World.js","lineno":569,"path":"src\\physics\\p2"},"description":"Sets the given material against the 4 bounds of this World.","kind":"function","name":"setWorldMaterial","params":[{"type":{"names":["Phaser.Physics.P2.Material"]},"description":"The material to set.","name":"material"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true will set the material on the left bounds wall.","name":"left"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true will set the material on the right bounds wall.","name":"right"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true will set the material on the top bounds wall.","name":"top"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true will set the material on the bottom bounds wall.","name":"bottom"}],"memberof":"Phaser.Physics","longname":"Phaser.Physics#setWorldMaterial","scope":"instance","___s":true},{"meta":{"range":[21326,21908],"filename":"World.js","lineno":608,"path":"src\\physics\\p2"},"description":"By default the World will be set to collide everything with everything. The bounds of the world is a Body with 4 shapes, one for each face.\rIf you start to use your own collision groups then your objects will no longer collide with the bounds.\rTo fix this you need to adjust the bounds to use its own collision group first BEFORE changing your Sprites collision group.","kind":"function","name":"updateBoundsCollisionGroup","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true the Bounds will be set to use its own Collision Group.","name":"setCollisionGroup"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#updateBoundsCollisionGroup","scope":"instance","___s":true},{"meta":{"range":[22702,24000],"filename":"World.js","lineno":646,"path":"src\\physics\\p2"},"description":"Sets the bounds of the Physics world to match the given world pixel dimensions.\rYou can optionally set which 'walls' to create: left, right, top or bottom.\rIf none of the walls are given it will default to use the walls settings it had previously.\rI.e. if you previously told it to not have the left or right walls, and you then adjust the world size\rthe newly created bounds will also not have the left and right walls.\rExplicitly state them in the parameters to override this.","kind":"function","name":"setBounds","params":[{"type":{"names":["number"]},"description":"The x coordinate of the top-left corner of the bounds.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the top-left corner of the bounds.","name":"y"},{"type":{"names":["number"]},"description":"The width of the bounds.","name":"width"},{"type":{"names":["number"]},"description":"The height of the bounds.","name":"height"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true will create the left bounds wall.","name":"left"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true will create the right bounds wall.","name":"right"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true will create the top bounds wall.","name":"top"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true will create the bottom bounds wall.","name":"bottom"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true the Bounds will be set to use its own Collision Group.","name":"setCollisionGroup"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#setBounds","scope":"instance","___s":true},{"meta":{"range":[26694,26815],"filename":"World.js","lineno":733,"path":"src\\physics\\p2"},"description":"Pauses the P2 World independent of the game pause state.","kind":"function","name":"pause","memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#pause","scope":"instance","___s":true},{"meta":{"range":[26893,26985],"filename":"World.js","lineno":744,"path":"src\\physics\\p2"},"description":"Resumes a paused P2 World.","kind":"function","name":"resume","memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#resume","scope":"instance","___s":true},{"meta":{"range":[27061,27151],"filename":"World.js","lineno":755,"path":"src\\physics\\p2"},"description":"Internal P2 update loop.","kind":"function","name":"update","memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#update","scope":"instance","___s":true},{"meta":{"range":[27531,27703],"filename":"World.js","lineno":779,"path":"src\\physics\\p2"},"description":"Called by Phaser.Physics when a State swap occurs.\rStarts the begin and end Contact listeners again.","kind":"function","name":"reset","memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#reset","scope":"instance","___s":true},{"meta":{"range":[28243,28684],"filename":"World.js","lineno":800,"path":"src\\physics\\p2"},"description":"Clears all bodies from the simulation, resets callbacks and resets the collision bitmask.\r\rThe P2 world is also cleared:\r\r* Removes all solver equations\r* Removes all constraints\r* Removes all bodies\r* Removes all springs\r* Removes all contact materials\r\rThis is called automatically when you switch state.","kind":"function","name":"clear","memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#clear","scope":"instance","___s":true},{"meta":{"range":[30300,30505],"filename":"World.js","lineno":874,"path":"src\\physics\\p2"},"description":"Clears all bodies from the simulation and unlinks World from Game. Should only be called on game shutdown. Call `clear` on a State change.","kind":"function","name":"destroy","memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#destroy","scope":"instance","___s":true},{"meta":{"range":[30605,30855],"filename":"World.js","lineno":887,"path":"src\\physics\\p2"},"description":"Add a body to the world.","kind":"function","name":"addBody","params":[{"type":{"names":["Phaser.Physics.P2.Body"]},"description":"The Body to add to the World.","name":"body"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the Body was added successfully, otherwise false."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#addBody","scope":"instance","___s":true},{"meta":{"range":[31142,31466],"filename":"World.js","lineno":911,"path":"src\\physics\\p2"},"description":"Removes a body from the world. This will silently fail if the body wasn't part of the world to begin with.","kind":"function","name":"removeBody","params":[{"type":{"names":["Phaser.Physics.P2.Body"]},"description":"The Body to remove from the World.","name":"body"}],"returns":[{"type":{"names":["Phaser.Physics.P2.Body"]},"description":"The Body that was removed."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#removeBody","scope":"instance","___s":true},{"meta":{"range":[31709,31992],"filename":"World.js","lineno":931,"path":"src\\physics\\p2"},"description":"Adds a Spring to the world.","kind":"function","name":"addSpring","params":[{"type":{"names":["Phaser.Physics.P2.Spring","p2.LinearSpring","p2.RotationalSpring"]},"description":"The Spring to add to the World.","name":"spring"}],"returns":[{"type":{"names":["Phaser.Physics.P2.Spring"]},"description":"The Spring that was added."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#addSpring","scope":"instance","___s":true},{"meta":{"range":[32384,32646],"filename":"World.js","lineno":955,"path":"src\\physics\\p2"},"description":"Removes a Spring from the world.","kind":"function","name":"removeSpring","params":[{"type":{"names":["Phaser.Physics.P2.Spring"]},"description":"The Spring to remove from the World.","name":"spring"}],"returns":[{"type":{"names":["Phaser.Physics.P2.Spring"]},"description":"The Spring that was removed."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#removeSpring","scope":"instance","___s":true},{"meta":{"range":[33049,33879],"filename":"World.js","lineno":979,"path":"src\\physics\\p2"},"description":"Creates a constraint that tries to keep the distance between two bodies constant.","kind":"function","name":"createDistanceConstraint","params":[{"type":{"names":["Phaser.Sprite","Phaser.Physics.P2.Body","p2.Body"]},"description":"First connected body.","name":"bodyA"},{"type":{"names":["Phaser.Sprite","Phaser.Physics.P2.Body","p2.Body"]},"description":"Second connected body.","name":"bodyB"},{"type":{"names":["number"]},"description":"The distance to keep between the bodies.","name":"distance"},{"type":{"names":["Array"]},"optional":true,"description":"The anchor point for bodyA, defined locally in bodyA frame. Defaults to [0,0].","name":"localAnchorA"},{"type":{"names":["Array"]},"optional":true,"description":"The anchor point for bodyB, defined locally in bodyB frame. Defaults to [0,0].","name":"localAnchorB"},{"type":{"names":["number"]},"optional":true,"description":"The maximum force that should be applied to constrain the bodies.","name":"maxForce"}],"returns":[{"type":{"names":["Phaser.Physics.P2.DistanceConstraint"]},"description":"The constraint"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#createDistanceConstraint","scope":"instance","___s":true},{"meta":{"range":[34404,34918],"filename":"World.js","lineno":1007,"path":"src\\physics\\p2"},"description":"Creates a constraint that tries to keep the distance between two bodies constant.","kind":"function","name":"createGearConstraint","params":[{"type":{"names":["Phaser.Sprite","Phaser.Physics.P2.Body","p2.Body"]},"description":"First connected body.","name":"bodyA"},{"type":{"names":["Phaser.Sprite","Phaser.Physics.P2.Body","p2.Body"]},"description":"Second connected body.","name":"bodyB"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The relative angle","name":"angle"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The gear ratio.","name":"ratio"}],"returns":[{"type":{"names":["Phaser.Physics.P2.GearConstraint"]},"description":"The constraint"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#createGearConstraint","scope":"instance","___s":true},{"meta":{"range":[35367,36519],"filename":"World.js","lineno":1033,"path":"src\\physics\\p2"},"description":"Connects two bodies at given offset points, letting them rotate relative to each other around this point.\rThe pivot points are given in world (pixel) coordinates.","kind":"function","name":"createRevoluteConstraint","params":[{"type":{"names":["Phaser.Sprite","Phaser.Physics.P2.Body","p2.Body"]},"description":"First connected body.","name":"bodyA"},{"type":{"names":["Array"]},"description":"The point relative to the center of mass of bodyA which bodyA is constrained to. The value is an array with 2 elements matching x and y, i.e: [32, 32].","name":"pivotA"},{"type":{"names":["Phaser.Sprite","Phaser.Physics.P2.Body","p2.Body"]},"description":"Second connected body.","name":"bodyB"},{"type":{"names":["Array"]},"description":"The point relative to the center of mass of bodyB which bodyB is constrained to. The value is an array with 2 elements matching x and y, i.e: [32, 32].","name":"pivotB"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The maximum force that should be applied to constrain the bodies.","name":"maxForce"},{"type":{"names":["Float32Array"]},"optional":true,"defaultvalue":null,"description":"A pivot point given in world coordinates. If specified, localPivotA and localPivotB are automatically computed from this value.","name":"worldPivot"}],"returns":[{"type":{"names":["Phaser.Physics.P2.RevoluteConstraint"]},"description":"The constraint"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#createRevoluteConstraint","scope":"instance","___s":true},{"meta":{"range":[37024,37715],"filename":"World.js","lineno":1062,"path":"src\\physics\\p2"},"description":"Locks the relative position between two bodies.","kind":"function","name":"createLockConstraint","params":[{"type":{"names":["Phaser.Sprite","Phaser.Physics.P2.Body","p2.Body"]},"description":"First connected body.","name":"bodyA"},{"type":{"names":["Phaser.Sprite","Phaser.Physics.P2.Body","p2.Body"]},"description":"Second connected body.","name":"bodyB"},{"type":{"names":["Array"]},"optional":true,"description":"The offset of bodyB in bodyA's frame. The value is an array with 2 elements matching x and y, i.e: [32, 32].","name":"offset"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The angle of bodyB in bodyA's frame.","name":"angle"},{"type":{"names":["number"]},"optional":true,"description":"The maximum force that should be applied to constrain the bodies.","name":"maxForce"}],"returns":[{"type":{"names":["Phaser.Physics.P2.LockConstraint"]},"description":"The constraint"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#createLockConstraint","scope":"instance","___s":true},{"meta":{"range":[38186,39382],"filename":"World.js","lineno":1089,"path":"src\\physics\\p2"},"description":"Constraint that only allows bodies to move along a line, relative to each other.\rSee http://www.iforce2d.net/b2dtut/joints-prismatic","kind":"function","name":"createPrismaticConstraint","params":[{"type":{"names":["Phaser.Sprite","Phaser.Physics.P2.Body","p2.Body"]},"description":"First connected body.","name":"bodyA"},{"type":{"names":["Phaser.Sprite","Phaser.Physics.P2.Body","p2.Body"]},"description":"Second connected body.","name":"bodyB"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If set to false, bodyB will be free to rotate around its anchor point.","name":"lockRotation"},{"type":{"names":["Array"]},"optional":true,"description":"Body A's anchor point, defined in its own local frame. The value is an array with 2 elements matching x and y, i.e: [32, 32].","name":"anchorA"},{"type":{"names":["Array"]},"optional":true,"description":"Body A's anchor point, defined in its own local frame. The value is an array with 2 elements matching x and y, i.e: [32, 32].","name":"anchorB"},{"type":{"names":["Array"]},"optional":true,"description":"An axis, defined in body A frame, that body B's anchor point may slide along. The value is an array with 2 elements matching x and y, i.e: [32, 32].","name":"axis"},{"type":{"names":["number"]},"optional":true,"description":"The maximum force that should be applied to constrain the bodies.","name":"maxForce"}],"returns":[{"type":{"names":["Phaser.Physics.P2.PrismaticConstraint"]},"description":"The constraint"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#createPrismaticConstraint","scope":"instance","___s":true},{"meta":{"range":[39909,40184],"filename":"World.js","lineno":1119,"path":"src\\physics\\p2"},"description":"Adds a Constraint to the world.","kind":"function","name":"addConstraint","params":[{"type":{"names":["Phaser.Physics.P2.Constraint"]},"description":"The Constraint to add to the World.","name":"constraint"}],"returns":[{"type":{"names":["Phaser.Physics.P2.Constraint"]},"description":"The Constraint that was added."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#addConstraint","scope":"instance","___s":true},{"meta":{"range":[40381,40675],"filename":"World.js","lineno":1136,"path":"src\\physics\\p2"},"description":"Removes a Constraint from the world.","kind":"function","name":"removeConstraint","params":[{"type":{"names":["Phaser.Physics.P2.Constraint"]},"description":"The Constraint to be removed from the World.","name":"constraint"}],"returns":[{"type":{"names":["Phaser.Physics.P2.Constraint"]},"description":"The Constraint that was removed."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#removeConstraint","scope":"instance","___s":true},{"meta":{"range":[40880,41191],"filename":"World.js","lineno":1153,"path":"src\\physics\\p2"},"description":"Adds a Contact Material to the world.","kind":"function","name":"addContactMaterial","params":[{"type":{"names":["Phaser.Physics.P2.ContactMaterial"]},"description":"The Contact Material to be added to the World.","name":"material"}],"returns":[{"type":{"names":["Phaser.Physics.P2.ContactMaterial"]},"description":"The Contact Material that was added."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#addContactMaterial","scope":"instance","___s":true},{"meta":{"range":[41395,41720],"filename":"World.js","lineno":1170,"path":"src\\physics\\p2"},"description":"Removes a Contact Material from the world.","kind":"function","name":"removeContactMaterial","params":[{"type":{"names":["Phaser.Physics.P2.ContactMaterial"]},"description":"The Contact Material to be removed from the World.","name":"material"}],"returns":[{"type":{"names":["Phaser.Physics.P2.ContactMaterial"]},"description":"The Contact Material that was removed."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#removeContactMaterial","scope":"instance","___s":true},{"meta":{"range":[41932,42383],"filename":"World.js","lineno":1187,"path":"src\\physics\\p2"},"description":"Gets a Contact Material based on the two given Materials.","kind":"function","name":"getContactMaterial","params":[{"type":{"names":["Phaser.Physics.P2.Material"]},"description":"The first Material to search for.","name":"materialA"},{"type":{"names":["Phaser.Physics.P2.Material"]},"description":"The second Material to search for.","name":"materialB"}],"returns":[{"type":{"names":["Phaser.Physics.P2.ContactMaterial","boolean"]},"description":"The Contact Material or false if none was found matching the Materials given."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#getContactMaterial","scope":"instance","___s":true},{"meta":{"range":[42531,42910],"filename":"World.js","lineno":1201,"path":"src\\physics\\p2"},"description":"Sets the given Material against all Shapes owned by all the Bodies in the given array.","kind":"function","name":"setMaterial","params":[{"type":{"names":["Phaser.Physics.P2.Material"]},"description":"The Material to be applied to the given Bodies.","name":"material"},{"type":{"names":["array.<Phaser.Physics.P2.Body>"]},"description":"An Array of Body objects that the given Material will be set on.","name":"bodies"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#setMaterial","scope":"instance","___s":true},{"meta":{"range":[43101,43962],"filename":"World.js","lineno":1219,"path":"src\\physics\\p2"},"description":"Creates a Material. Materials are applied to Shapes owned by a Body and can be set with Body.setMaterial().\rMaterials are a way to control what happens when Shapes collide. Combine unique Materials together to create Contact Materials.\rContact Materials have properties such as friction and restitution that allow for fine-grained collision control between different Materials.","kind":"function","name":"createMaterial","params":[{"type":{"names":["string"]},"optional":true,"description":"Optional name of the Material. Each Material has a unique ID but string names are handy for debugging.","name":"name"},{"type":{"names":["Phaser.Physics.P2.Body"]},"optional":true,"description":"Optional Body. If given it will assign the newly created Material to the Body shapes.","name":"body"}],"returns":[{"type":{"names":["Phaser.Physics.P2.Material"]},"description":"The Material that was created. This is also stored in Phaser.Physics.P2.materials."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#createMaterial","scope":"instance","___s":true},{"meta":{"range":[44296,44989],"filename":"World.js","lineno":1246,"path":"src\\physics\\p2"},"description":"Creates a Contact Material from the two given Materials. You can then edit the properties of the Contact Material directly.","kind":"function","name":"createContactMaterial","params":[{"type":{"names":["Phaser.Physics.P2.Material"]},"optional":true,"description":"The first Material to create the ContactMaterial from. If undefined it will create a new Material object first.","name":"materialA"},{"type":{"names":["Phaser.Physics.P2.Material"]},"optional":true,"description":"The second Material to create the ContactMaterial from. If undefined it will create a new Material object first.","name":"materialB"},{"type":{"names":["object"]},"optional":true,"description":"Material options object.","name":"options"}],"returns":[{"type":{"names":["Phaser.Physics.P2.ContactMaterial"]},"description":"The Contact Material that was created."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#createContactMaterial","scope":"instance","___s":true},{"meta":{"range":[45381,45635],"filename":"World.js","lineno":1266,"path":"src\\physics\\p2"},"description":"Populates and returns an array with references to of all current Bodies in the world.","kind":"function","name":"getBodies","returns":[{"type":{"names":["array.<Phaser.Physics.P2.Body>"]},"description":"An array containing all current Bodies in the world."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#getBodies","scope":"instance","___s":true},{"meta":{"range":[45880,46149],"filename":"World.js","lineno":1286,"path":"src\\physics\\p2"},"description":"Checks the given object to see if it has a p2.Body and if so returns it.","kind":"function","name":"getBody","params":[{"type":{"names":["object"]},"description":"The object to check for a p2.Body on.","name":"object"}],"returns":[{"type":{"names":["p2.Body"]},"description":"The p2.Body, or null if not found."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#getBody","scope":"instance","___s":true},{"meta":{"range":[46678,46918],"filename":"World.js","lineno":1315,"path":"src\\physics\\p2"},"description":"Populates and returns an array of all current Springs in the world.","kind":"function","name":"getSprings","returns":[{"type":{"names":["array.<Phaser.Physics.P2.Spring>"]},"description":"An array containing all current Springs in the world."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#getSprings","scope":"instance","___s":true},{"meta":{"range":[47166,47625],"filename":"World.js","lineno":1335,"path":"src\\physics\\p2"},"description":"Populates and returns an array of all current Constraints in the world.\rYou will get an array of p2 constraints back. This can be of mixed types, for example the array may contain\rPrismaticConstraints, RevoluteConstraints or any other valid p2 constraint type.","kind":"function","name":"getConstraints","returns":[{"type":{"names":["array.<Phaser.Physics.P2.Constraint>"]},"description":"An array containing all current Constraints in the world."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#getConstraints","scope":"instance","___s":true},{"meta":{"range":[47878,48843],"filename":"World.js","lineno":1357,"path":"src\\physics\\p2"},"description":"Test if a world point overlaps bodies. You will get an array of actual P2 bodies back. You can find out which Sprite a Body belongs to\r(if any) by checking the Body.parent.sprite property. Body.parent is a Phaser.Physics.P2.Body property.","kind":"function","name":"hitTest","params":[{"type":{"names":["Phaser.Point"]},"description":"Point to use for intersection tests. The points values must be in world (pixel) coordinates.","name":"worldPoint"},{"type":{"names":["Array.<(Phaser.Physics.P2.Body|Phaser.Sprite|p2.Body)>"]},"optional":true,"description":"A list of objects to check for intersection. If not given it will check Phaser.Physics.P2.world.bodies (i.e. all world bodies)","name":"bodies"},{"type":{"names":["number"]},"optional":true,"defaultvalue":5,"description":"Used for matching against particles and lines. Adds some margin to these infinitesimal objects.","name":"precision"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true all Static objects will be removed from the results array.","name":"filterStatic"}],"returns":[{"type":{"names":["Array"]},"description":"Array of bodies that overlap the point."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#hitTest","scope":"instance","___s":true},{"meta":{"range":[50025,50197],"filename":"World.js","lineno":1399,"path":"src\\physics\\p2"},"description":"Converts the current world into a JSON object.","kind":"function","name":"toJSON","returns":[{"type":{"names":["object"]},"description":"A JSON representation of the world."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#toJSON","scope":"instance","___s":true},{"meta":{"range":[50281,50758],"filename":"World.js","lineno":1411,"path":"src\\physics\\p2"},"description":"Creates a new Collision Group and optionally applies it to the given object.\rCollision Groups are handled using bitmasks, therefore you have a fixed limit you can create before you need to re-use older groups.","kind":"function","name":"createCollisionGroup","params":[{"type":{"names":["Phaser.Group","Phaser.Sprite"]},"optional":true,"description":"An optional Sprite or Group to apply the Collision Group to. If a Group is given it will be applied to all top-level children.","name":"object"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#createCollisionGroup","scope":"instance","___s":true},{"meta":{"range":[51805,52391],"filename":"World.js","lineno":1457,"path":"src\\physics\\p2"},"description":"Sets the given CollisionGroup to be the collision group for all shapes in this Body, unless a shape is specified.\rNote that this resets the collisionMask and any previously set groups. See Body.collides() for appending them.","kind":"function","name":"setCollisionGroup","params":[{"type":{"names":["Phaser.Group","Phaser.Sprite"]},"description":"A Sprite or Group to apply the Collision Group to. If a Group is given it will be applied to all top-level children.","name":"object"},{"type":{"names":["Phaser.Physics.CollisionGroup"]},"description":"The Collision Group that this Bodies shapes will use.","name":"group"}],"memberof":"Phaser.Physics.P2y","longname":"Phaser.Physics.P2y#setCollisionGroup","scope":"instance","___s":true},{"meta":{"range":[52915,54186],"filename":"World.js","lineno":1484,"path":"src\\physics\\p2"},"description":"Creates a linear spring, connecting two bodies. A spring can have a resting length, a stiffness and damping.","kind":"function","name":"createSpring","params":[{"type":{"names":["Phaser.Sprite","Phaser.Physics.P2.Body","p2.Body"]},"description":"First connected body.","name":"bodyA"},{"type":{"names":["Phaser.Sprite","Phaser.Physics.P2.Body","p2.Body"]},"description":"Second connected body.","name":"bodyB"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"Rest length of the spring. A number > 0.","name":"restLength"},{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"Stiffness of the spring. A number >= 0.","name":"stiffness"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"Damping of the spring. A number >= 0.","name":"damping"},{"type":{"names":["Array"]},"optional":true,"description":"Where to hook the spring to body A in world coordinates. This value is an array by 2 elements, x and y, i.e: [32, 32].","name":"worldA"},{"type":{"names":["Array"]},"optional":true,"description":"Where to hook the spring to body B in world coordinates. This value is an array by 2 elements, x and y, i.e: [32, 32].","name":"worldB"},{"type":{"names":["Array"]},"optional":true,"description":"Where to hook the spring to body A in local body coordinates. This value is an array by 2 elements, x and y, i.e: [32, 32].","name":"localA"},{"type":{"names":["Array"]},"optional":true,"description":"Where to hook the spring to body B in local body coordinates. This value is an array by 2 elements, x and y, i.e: [32, 32].","name":"localB"}],"returns":[{"type":{"names":["Phaser.Physics.P2.Spring"]},"description":"The spring"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#createSpring","scope":"instance","___s":true},{"meta":{"range":[54711,55478],"filename":"World.js","lineno":1515,"path":"src\\physics\\p2"},"description":"Creates a rotational spring, connecting two bodies. A spring can have a resting length, a stiffness and damping.","kind":"function","name":"createRotationalSpring","params":[{"type":{"names":["Phaser.Sprite","Phaser.Physics.P2.Body","p2.Body"]},"description":"First connected body.","name":"bodyA"},{"type":{"names":["Phaser.Sprite","Phaser.Physics.P2.Body","p2.Body"]},"description":"Second connected body.","name":"bodyB"},{"type":{"names":["number"]},"optional":true,"description":"The relative angle of bodies at which the spring is at rest. If not given, it's set to the current relative angle between the bodies.","name":"restAngle"},{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"Stiffness of the spring. A number >= 0.","name":"stiffness"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"Damping of the spring. A number >= 0.","name":"damping"}],"returns":[{"type":{"names":["Phaser.Physics.P2.RotationalSpring"]},"description":"The spring"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#createRotationalSpring","scope":"instance","___s":true},{"meta":{"range":[55968,57442],"filename":"World.js","lineno":1542,"path":"src\\physics\\p2"},"description":"Creates a new Body and adds it to the World.","kind":"function","name":"createBody","params":[{"type":{"names":["number"]},"description":"The x coordinate of Body.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of Body.","name":"y"},{"type":{"names":["number"]},"description":"The mass of the Body. A mass of 0 means a 'static' Body is created.","name":"mass"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Automatically add this Body to the world? (usually false as it won't have any shapes on construction).","name":"addToWorld"},{"type":{"names":["object"]},"description":"An object containing the build options:","name":"options"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Set to true if you need optimal decomposition. Warning: very slow for polygons with more than 10 vertices.","name":"options.optimalDecomp"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Set to true if you already know that the path is not intersecting itself.","name":"options.skipSimpleCheck"},{"type":{"names":["boolean","number"]},"optional":true,"defaultvalue":false,"description":"Set to a number (angle threshold value) to remove collinear points, or false to keep all points.","name":"options.removeCollinearPoints"},{"type":{"names":["Array.<number>","number"]},"description":"An array of 2d vectors that form the convex or concave polygon.\r                                      Either [[0,0], [0,1],...] or a flat array of numbers that will be interpreted as [x,y, x,y, ...],\r                                      or the arguments passed can be flat x,y values e.g. `setPolygon(options, x,y, x,y, x,y, ...)` where `x` and `y` are numbers.","name":"points"}],"returns":[{"type":{"names":["Phaser.Physics.P2.Body"]},"description":"The body"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#createBody","scope":"instance","___s":true},{"meta":{"range":[57979,59412],"filename":"World.js","lineno":1584,"path":"src\\physics\\p2"},"description":"Creates a new Particle and adds it to the World.","kind":"function","name":"createParticle","params":[{"type":{"names":["number"]},"description":"The x coordinate of Body.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of Body.","name":"y"},{"type":{"names":["number"]},"description":"The mass of the Body. A mass of 0 means a 'static' Body is created.","name":"mass"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Automatically add this Body to the world? (usually false as it won't have any shapes on construction).","name":"addToWorld"},{"type":{"names":["object"]},"description":"An object containing the build options:","name":"options"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Set to true if you need optimal decomposition. Warning: very slow for polygons with more than 10 vertices.","name":"options.optimalDecomp"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Set to true if you already know that the path is not intersecting itself.","name":"options.skipSimpleCheck"},{"type":{"names":["boolean","number"]},"optional":true,"defaultvalue":false,"description":"Set to a number (angle threshold value) to remove collinear points, or false to keep all points.","name":"options.removeCollinearPoints"},{"type":{"names":["Array.<number>","number"]},"description":"An array of 2d vectors that form the convex or concave polygon.\r                                      Either [[0,0], [0,1],...] or a flat array of numbers that will be interpreted as [x,y, x,y, ...],\r                                      or the arguments passed can be flat x,y values e.g. `setPolygon(options, x,y, x,y, x,y, ...)` where `x` and `y` are numbers.","name":"points"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#createParticle","scope":"instance","___s":true},{"meta":{"range":[59953,60657],"filename":"World.js","lineno":1625,"path":"src\\physics\\p2"},"description":"Converts all of the polylines objects inside a Tiled ObjectGroup into physics bodies that are added to the world.\rNote that the polylines must be created in such a way that they can withstand polygon decomposition.","kind":"function","name":"convertCollisionObjects","params":[{"type":{"names":["Phaser.Tilemap"]},"description":"The Tilemap to get the map data from.","name":"map"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to operate on. If not given will default to map.currentLayer.","name":"layer"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true it will automatically add each body to the world.","name":"addToWorld"}],"returns":[{"type":{"names":["array"]},"description":"An array of the Phaser.Physics.Body objects that have been created."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#convertCollisionObjects","scope":"instance","___s":true},{"meta":{"range":[61651,62041],"filename":"World.js","lineno":1666,"path":"src\\physics\\p2"},"description":"Clears all physics bodies from the given TilemapLayer that were created with `World.convertTilemap`.","kind":"function","name":"clearTilemapLayerBodies","params":[{"type":{"names":["Phaser.Tilemap"]},"description":"The Tilemap to get the map data from.","name":"map"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to operate on. If not given will default to map.currentLayer.","name":"layer"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#clearTilemapLayerBodies","scope":"instance","___s":true},{"meta":{"range":[62350,63542],"filename":"World.js","lineno":1688,"path":"src\\physics\\p2"},"description":"Goes through all tiles in the given Tilemap and TilemapLayer and converts those set to collide into physics bodies.\rOnly call this *after* you have specified all of the tiles you wish to collide with calls like Tilemap.setCollisionBetween, etc.\rEvery time you call this method it will destroy any previously created bodies and remove them from the world.\rTherefore understand it's a very expensive operation and not to be done in a core game update loop.","kind":"function","name":"convertTilemap","params":[{"type":{"names":["Phaser.Tilemap"]},"description":"The Tilemap to get the map data from.","name":"map"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to operate on. If not given will default to map.currentLayer.","name":"layer"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true it will automatically add each body to the world, otherwise it's up to you to do so.","name":"addToWorld"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true adjacent colliding tiles will be combined into a single body to save processing. However it means you cannot perform specific Tile to Body collision responses.","name":"optimize"}],"returns":[{"type":{"names":["array"]},"description":"An array of the Phaser.Physics.P2.Body objects that were created."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#convertTilemap","scope":"instance","___s":true},{"meta":{"range":[65999,66365],"filename":"World.js","lineno":1777,"path":"src\\physics\\p2"},"description":"Convert p2 physics value (meters) to pixel scale.\rBy default Phaser uses a scale of 20px per meter.\rIf you need to modify this you can over-ride these functions via the Physics Configuration object.","kind":"function","name":"mpx","params":[{"type":{"names":["number"]},"description":"The value to convert.","name":"v"}],"returns":[{"type":{"names":["number"]},"description":"The scaled value."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#mpx","scope":"instance","___s":true},{"meta":{"range":[66435,66801],"filename":"World.js","lineno":1792,"path":"src\\physics\\p2"},"description":"Convert pixel value to p2 physics scale (meters).\rBy default Phaser uses a scale of 20px per meter.\rIf you need to modify this you can over-ride these functions via the Physics Configuration object.","kind":"function","name":"pxm","params":[{"type":{"names":["number"]},"description":"The value to convert.","name":"v"}],"returns":[{"type":{"names":["number"]},"description":"The scaled value."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#pxm","scope":"instance","___s":true},{"meta":{"range":[66872,67255],"filename":"World.js","lineno":1807,"path":"src\\physics\\p2"},"description":"Convert p2 physics value (meters) to pixel scale and inverses it.\rBy default Phaser uses a scale of 20px per meter.\rIf you need to modify this you can over-ride these functions via the Physics Configuration object.","kind":"function","name":"mpxi","params":[{"type":{"names":["number"]},"description":"The value to convert.","name":"v"}],"returns":[{"type":{"names":["number"]},"description":"The scaled value."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#mpxi","scope":"instance","___s":true},{"meta":{"range":[67327,67710],"filename":"World.js","lineno":1822,"path":"src\\physics\\p2"},"description":"Convert pixel value to p2 physics scale (meters) and inverses it.\rBy default Phaser uses a scale of 20px per meter.\rIf you need to modify this you can over-ride these functions via the Physics Configuration object.","kind":"function","name":"pxmi","params":[{"type":{"names":["number"]},"description":"The value to convert.","name":"v"}],"returns":[{"type":{"names":["number"]},"description":"The scaled value."}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#pxmi","scope":"instance","___s":true},{"meta":{"range":[67784,67975],"filename":"World.js","lineno":1839,"path":"src\\physics\\p2"},"name":"friction","properties":[{"type":{"names":["number"]},"description":"Friction between colliding bodies. This value is used if no matching ContactMaterial is found for a Material pair.","name":"friction"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#friction","scope":"instance","kind":"member","___s":true},{"meta":{"range":[68253,68476],"filename":"World.js","lineno":1859,"path":"src\\physics\\p2"},"name":"restitution","properties":[{"type":{"names":["number"]},"description":"Default coefficient of restitution between colliding bodies. This value is used if no matching ContactMaterial is found for a Material pair.","name":"restitution"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#restitution","scope":"instance","kind":"member","___s":true},{"meta":{"range":[68763,68919],"filename":"World.js","lineno":1879,"path":"src\\physics\\p2"},"name":"contactMaterial","properties":[{"type":{"names":["p2.ContactMaterial"]},"description":"The default Contact Material being used by the World.","name":"contactMaterial"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#contactMaterial","scope":"instance","kind":"member","___s":true},{"meta":{"range":[69186,69336],"filename":"World.js","lineno":1899,"path":"src\\physics\\p2"},"name":"applySpringForces","properties":[{"type":{"names":["boolean"]},"description":"Enable to automatically apply spring forces each step.","name":"applySpringForces"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#applySpringForces","scope":"instance","kind":"member","___s":true},{"meta":{"range":[69595,69734],"filename":"World.js","lineno":1919,"path":"src\\physics\\p2"},"name":"applyDamping","properties":[{"type":{"names":["boolean"]},"description":"Enable to automatically apply body damping each step.","name":"applyDamping"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#applyDamping","scope":"instance","kind":"member","___s":true},{"meta":{"range":[69978,70112],"filename":"World.js","lineno":1939,"path":"src\\physics\\p2"},"name":"applyGravity","properties":[{"type":{"names":["boolean"]},"description":"Enable to automatically apply gravity each step.","name":"applyGravity"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#applyGravity","scope":"instance","kind":"member","___s":true},{"meta":{"range":[70356,70497],"filename":"World.js","lineno":1959,"path":"src\\physics\\p2"},"name":"solveConstraints","properties":[{"type":{"names":["boolean"]},"description":"Enable/disable constraint solving in each step.","name":"solveConstraints"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#solveConstraints","scope":"instance","kind":"member","___s":true},{"meta":{"range":[70753,70851],"filename":"World.js","lineno":1979,"path":"src\\physics\\p2"},"name":"time","properties":[{"type":{"names":["boolean"]},"description":"The World time.","name":"time"}],"readonly":true,"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#time","scope":"instance","kind":"member","___s":true},{"meta":{"range":[70994,71194],"filename":"World.js","lineno":1994,"path":"src\\physics\\p2"},"name":"emitImpactEvent","properties":[{"type":{"names":["boolean"]},"description":"Set to true if you want to the world to emit the \"impact\" event. Turning this off could improve performance.","name":"emitImpactEvent"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#emitImpactEvent","scope":"instance","kind":"member","___s":true},{"meta":{"range":[71447,71873],"filename":"World.js","lineno":2014,"path":"src\\physics\\p2"},"description":"How to deactivate bodies during simulation. Possible modes are: World.NO_SLEEPING, World.BODY_SLEEPING and World.ISLAND_SLEEPING.\rIf sleeping is enabled, you might need to wake up the bodies if they fall asleep when they shouldn't. If you want to enable sleeping in the world, but want to disable it for a particular body, see Body.allowSleep.","name":"sleepMode","properties":[{"type":{"names":["number"]},"name":"sleepMode"}],"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#sleepMode","scope":"instance","kind":"member","___s":true},{"meta":{"range":[72108,72232],"filename":"World.js","lineno":2036,"path":"src\\physics\\p2"},"name":"total","properties":[{"type":{"names":["number"]},"description":"The total number of bodies in the world.","name":"total"}],"readonly":true,"memberof":"Phaser.Physics.P2","longname":"Phaser.Physics.P2#total","scope":"instance","kind":"member","___s":true},{"meta":{"range":[994,2097],"filename":"Physics.js","lineno":21,"path":"src\\physics"},"description":"The Physics Manager is responsible for looking after all of the running physics systems.\rPhaser supports 4 physics systems: Arcade Physics, P2, Ninja Physics and Box2D via a commercial plugin.\r\rGame Objects (such as Sprites) can only belong to 1 physics system, but you can have multiple systems active in a single game.\r\rFor example you could have P2 managing a polygon-built terrain landscape that an vehicle drives over, while it could be firing bullets that use the\rfaster (due to being much simpler) Arcade Physics system.","kind":"class","classdesc":"Phaser.Physics","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["object"]},"optional":true,"defaultvalue":null,"description":"A physics configuration object to pass to the Physics world on creation.","name":"physicsConfig"}],"name":"Physics","longname":"Phaser.Physics","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1154,1170],"filename":"Physics.js","lineno":28,"path":"src\\physics"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.Physics#game","kind":"member","memberof":"Phaser.Physics","scope":"instance","___s":true},{"meta":{"range":[1299,1319],"filename":"Physics.js","lineno":33,"path":"src\\physics"},"properties":[{"type":{"names":["object"]},"description":"The physics configuration object as passed to the game on creation.","name":"config"}],"name":"config","longname":"Phaser.Physics#config","kind":"member","memberof":"Phaser.Physics","scope":"instance","___s":true},{"meta":{"range":[1422,1440],"filename":"Physics.js","lineno":38,"path":"src\\physics"},"properties":[{"type":{"names":["Phaser.Physics.Arcade"]},"description":"The Arcade Physics system.","name":"arcade"}],"name":"arcade","longname":"Phaser.Physics#arcade","kind":"member","memberof":"Phaser.Physics","scope":"instance","___s":true},{"meta":{"range":[1534,1548],"filename":"Physics.js","lineno":43,"path":"src\\physics"},"properties":[{"type":{"names":["Phaser.Physics.P2"]},"description":"The P2.JS Physics system.","name":"p2"}],"name":"p2","longname":"Phaser.Physics#p2","kind":"member","memberof":"Phaser.Physics","scope":"instance","___s":true},{"meta":{"range":[1651,1668],"filename":"Physics.js","lineno":48,"path":"src\\physics"},"properties":[{"type":{"names":["Phaser.Physics.Ninja"]},"description":"The N+ Ninja Physics system.","name":"ninja"}],"name":"ninja","longname":"Phaser.Physics#ninja","kind":"member","memberof":"Phaser.Physics","scope":"instance","___s":true},{"meta":{"range":[1768,1785],"filename":"Physics.js","lineno":53,"path":"src\\physics"},"properties":[{"type":{"names":["Phaser.Physics.Box2D"]},"description":"The Box2D Physics system.","name":"box2d"}],"name":"box2d","longname":"Phaser.Physics#box2d","kind":"member","memberof":"Phaser.Physics","scope":"instance","___s":true},{"meta":{"range":[1907,1927],"filename":"Physics.js","lineno":58,"path":"src\\physics"},"properties":[{"type":{"names":["Phaser.Physics.Chipmunk"]},"description":"The Chipmunk Physics system (to be done).","name":"chipmunk"}],"name":"chipmunk","longname":"Phaser.Physics#chipmunk","kind":"member","memberof":"Phaser.Physics","scope":"instance","___s":true},{"meta":{"range":[2046,2064],"filename":"Physics.js","lineno":63,"path":"src\\physics"},"properties":[{"type":{"names":["Phaser.Physics.Matter"]},"description":"The MatterJS Physics system (coming soon).","name":"matter"}],"name":"matter","longname":"Phaser.Physics#matter","kind":"member","memberof":"Phaser.Physics","scope":"instance","___s":true},{"meta":{"range":[2139,2164],"filename":"Physics.js","lineno":73,"path":"src\\physics"},"kind":"constant","type":{"names":["number"]},"name":"ARCADE","longname":"Phaser.Physics.ARCADE","memberof":"Phaser.Physics","scope":"static","___s":true},{"meta":{"range":[2206,2229],"filename":"Physics.js","lineno":79,"path":"src\\physics"},"kind":"constant","type":{"names":["number"]},"name":"P2JS","longname":"Phaser.Physics.P2JS","memberof":"Phaser.Physics","scope":"static","___s":true},{"meta":{"range":[2271,2295],"filename":"Physics.js","lineno":85,"path":"src\\physics"},"kind":"constant","type":{"names":["number"]},"name":"NINJA","longname":"Phaser.Physics.NINJA","memberof":"Phaser.Physics","scope":"static","___s":true},{"meta":{"range":[2337,2361],"filename":"Physics.js","lineno":91,"path":"src\\physics"},"kind":"constant","type":{"names":["number"]},"name":"BOX2D","longname":"Phaser.Physics.BOX2D","memberof":"Phaser.Physics","scope":"static","___s":true},{"meta":{"range":[2403,2430],"filename":"Physics.js","lineno":97,"path":"src\\physics"},"kind":"constant","type":{"names":["number"]},"name":"CHIPMUNK","longname":"Phaser.Physics.CHIPMUNK","memberof":"Phaser.Physics","scope":"static","___s":true},{"meta":{"range":[2472,2499],"filename":"Physics.js","lineno":103,"path":"src\\physics"},"kind":"constant","type":{"names":["number"]},"name":"MATTERJS","longname":"Phaser.Physics.MATTERJS","memberof":"Phaser.Physics","scope":"static","___s":true},{"meta":{"range":[2540,2727],"filename":"Physics.js","lineno":107,"path":"src\\physics"},"description":"Parses the Physics Configuration object passed to the Game constructor and starts any physics systems specified within.","kind":"function","name":"parseConfig","memberof":"Phaser.Physics","longname":"Phaser.Physics#parseConfig","scope":"instance","___s":true},{"meta":{"range":[3955,5166],"filename":"Physics.js","lineno":142,"path":"src\\physics"},"description":"This will create an instance of the requested physics simulation.\rPhaser.Physics.Arcade is running by default, but all others need activating directly.\r\rYou can start the following physics systems:\r\rPhaser.Physics.P2JS - A full-body advanced physics system by Stefan Hedman.\rPhaser.Physics.NINJA - A port of Metanet Softwares N+ physics system.\rPhaser.Physics.BOX2D - A commercial Phaser Plugin (see http://phaser.io)\r\rBoth Ninja Physics and Box2D require their respective plugins to be loaded before you can start them.\rThey are not bundled into the core Phaser library.\r\rIf the physics world has already been created (i.e. in another state in your game) then \rcalling startSystem will reset the physics world, not re-create it. If you need to start them again from their constructors \rthen set Phaser.Physics.p2 (or whichever system you want to recreate) to `null` before calling `startSystem`.","kind":"function","name":"startSystem","params":[{"type":{"names":["number"]},"description":"The physics system to start: Phaser.Physics.ARCADE, Phaser.Physics.P2JS, Phaser.Physics.NINJA or Phaser.Physics.BOX2D.","name":"system"}],"memberof":"Phaser.Physics","longname":"Phaser.Physics#startSystem","scope":"instance","___s":true},{"meta":{"range":[6406,8044],"filename":"Physics.js","lineno":208,"path":"src\\physics"},"description":"This will create a default physics body on the given game object or array of objects.\rA game object can only have 1 physics body active at any one time, and it can't be changed until the object is destroyed.\rIt can be for any of the physics systems that have been started:\r\rPhaser.Physics.Arcade - A light weight AABB based collision system with basic separation.\rPhaser.Physics.P2JS - A full-body advanced physics system supporting multiple object shapes, polygon loading, contact materials, springs and constraints.\rPhaser.Physics.NINJA - A port of Metanet Softwares N+ physics system. Advanced AABB and Circle vs. Tile collision.\rPhaser.Physics.BOX2D - A port of https://code.google.com/p/box2d-html5\rPhaser.Physics.MATTER - A full-body and light-weight advanced physics system (still in development)\rPhaser.Physics.CHIPMUNK is still in development.\r\rIf you require more control over what type of body is created, for example to create a Ninja Physics Circle instead of the default AABB, then see the\rindividual physics systems `enable` methods instead of using this generic one.","kind":"function","name":"enable","params":[{"type":{"names":["object","array"]},"description":"The game object to create the physics body on. Can also be an array of objects, a body will be created on every object in the array.","name":"object"},{"type":{"names":["number"]},"optional":true,"defaultvalue":"Phaser.Physics.ARCADE","description":"The physics system that will be used to create the body. Defaults to Arcade Physics.","name":"system"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Enable the debug drawing for this body. Defaults to false.","name":"debug"}],"memberof":"Phaser.Physics","longname":"Phaser.Physics#enable","scope":"instance","___s":true},{"meta":{"range":[9017,9118],"filename":"Physics.js","lineno":260,"path":"src\\physics"},"description":"preUpdate checks.","kind":"function","name":"preUpdate","access":"protected","memberof":"Phaser.Physics","longname":"Phaser.Physics#preUpdate","scope":"instance","___s":true},{"meta":{"range":[9488,9605],"filename":"Physics.js","lineno":287,"path":"src\\physics"},"description":"Updates all running physics systems.","kind":"function","name":"update","access":"protected","memberof":"Phaser.Physics","longname":"Phaser.Physics#update","scope":"instance","___s":true},{"meta":{"range":[9960,10108],"filename":"Physics.js","lineno":314,"path":"src\\physics"},"description":"Updates the physics bounds to match the world dimensions.","kind":"function","name":"setBoundsToWorld","access":"protected","memberof":"Phaser.Physics","longname":"Phaser.Physics#setBoundsToWorld","scope":"instance","___s":true},{"meta":{"range":[10626,10841],"filename":"Physics.js","lineno":349,"path":"src\\physics"},"description":"Clears down all active physics systems. This doesn't destroy them, it just clears them of objects and is called when the State changes.","kind":"function","name":"clear","access":"protected","memberof":"Phaser.Physics","longname":"Phaser.Physics#clear","scope":"instance","___s":true},{"meta":{"range":[11127,11285],"filename":"Physics.js","lineno":374,"path":"src\\physics"},"description":"Resets the active physics system. Called automatically on a Phaser.State swap.","kind":"function","name":"reset","access":"protected","memberof":"Phaser.Physics","longname":"Phaser.Physics#reset","scope":"instance","___s":true},{"meta":{"range":[11571,11732],"filename":"Physics.js","lineno":399,"path":"src\\physics"},"description":"Destroys all active physics systems. Usually only called on a Game Shutdown, not on a State swap.","kind":"function","name":"destroy","memberof":"Phaser.Physics","longname":"Phaser.Physics#destroy","scope":"instance","___s":true},{"meta":{"range":[571,8925],"filename":"DisplayObject.js","lineno":18,"path":"src\\pixi\\display"},"description":"The base class for all objects that are rendered. Contains properties for position, scaling,\rrotation, masks and cache handling.\r\rThis is an abstract class and should not be used on its own, rather it should be extended.\r\rIt is used internally by the likes of PIXI.Sprite.","kind":"class","classdesc":"PIXI.DisplayObject","name":"DisplayObject","longname":"PIXI.DisplayObject","memberof":"PIXI","scope":"static","___s":true},{"meta":{"range":[968,1004],"filename":"DisplayObject.js","lineno":29,"path":"src\\pixi\\display"},"description":"The coordinates, in pixels, of this DisplayObject, relative to its parent container.\r\rThe value of this property does not reflect any positioning happening further up the display list.\rTo obtain that value please see the `worldPosition` property.","properties":[{"type":{"names":["PIXI.Point"]},"name":"position"}],"name":"position","longname":"PIXI.DisplayObject#position","kind":"member","memberof":"PIXI.DisplayObject","scope":"instance","___s":true},{"meta":{"range":[1444,1477],"filename":"DisplayObject.js","lineno":41,"path":"src\\pixi\\display"},"description":"The scale of this DisplayObject. A scale of 1:1 represents the DisplayObject\rat its default size. A value of 0.5 would scale this DisplayObject by half, and so on.\r\rThe value of this property does not reflect any scaling happening further up the display list.\rTo obtain that value please see the `worldScale` property.","properties":[{"type":{"names":["PIXI.Point"]},"name":"scale"}],"name":"scale","longname":"PIXI.DisplayObject#scale","kind":"member","memberof":"PIXI.DisplayObject","scope":"instance","___s":true},{"meta":{"range":[1673,1706],"filename":"DisplayObject.js","lineno":49,"path":"src\\pixi\\display"},"description":"The pivot point of this DisplayObject that it rotates around. The values are expressed\rin pixel values.","properties":[{"type":{"names":["PIXI.Point"]},"name":"pivot"}],"name":"pivot","longname":"PIXI.DisplayObject#pivot","kind":"member","memberof":"PIXI.DisplayObject","scope":"instance","___s":true},{"meta":{"range":[2112,2129],"filename":"DisplayObject.js","lineno":61,"path":"src\\pixi\\display"},"description":"The rotation of this DisplayObject. The value is given, and expressed, in radians, and is based on\ra right-handed orientation.\r\rThe value of this property does not reflect any rotation happening further up the display list.\rTo obtain that value please see the `worldRotation` property.","properties":[{"type":{"names":["number"]},"name":"rotation"}],"defaultvalue":0,"name":"rotation","longname":"PIXI.DisplayObject#rotation","kind":"member","memberof":"PIXI.DisplayObject","scope":"instance","___s":true},{"meta":{"range":[2585,2599],"filename":"DisplayObject.js","lineno":73,"path":"src\\pixi\\display"},"description":"The alpha value of this DisplayObject. A value of 1 is fully opaque. A value of 0 is transparent.\rPlease note that an object with an alpha value of 0 is skipped during the render pass.\r\rThe value of this property does not reflect any alpha values set further up the display list.\rTo obtain that value please see the `worldAlpha` property.","properties":[{"type":{"names":["number"]},"name":"alpha"}],"defaultvalue":1,"name":"alpha","longname":"PIXI.DisplayObject#alpha","kind":"member","memberof":"PIXI.DisplayObject","scope":"instance","___s":true},{"meta":{"range":[3186,3205],"filename":"DisplayObject.js","lineno":87,"path":"src\\pixi\\display"},"description":"The visibility of this DisplayObject. A value of `false` makes the object invisible.\rA value of `true` makes it visible. Please note that an object with a visible value of\r`false` is skipped during the render pass. Equally a DisplayObject with visible false will\rnot render any of its children.\r\rThe value of this property does not reflect any visible values set further up the display list.\rTo obtain that value please see the `worldVisible` property.","properties":[{"type":{"names":["boolean"]},"name":"visible"}],"defaultvalue":true,"name":"visible","longname":"PIXI.DisplayObject#visible","kind":"member","memberof":"PIXI.DisplayObject","scope":"instance","___s":true},{"meta":{"range":[3565,3584],"filename":"DisplayObject.js","lineno":96,"path":"src\\pixi\\display"},"description":"This is the defined area that will pick up mouse / touch events. It is null by default.\rSetting it is a neat way of optimising the hitTest function that the interactionManager will use (as it will not need to hit test all the children)","properties":[{"name":"hitArea"}],"type":{"names":["Rectangle","Circle","Ellipse","Polygon"]},"name":"hitArea","longname":"PIXI.DisplayObject#hitArea","kind":"member","memberof":"PIXI.DisplayObject","scope":"instance","___s":true},{"meta":{"range":[3821,3844],"filename":"DisplayObject.js","lineno":105,"path":"src\\pixi\\display"},"description":"Should this DisplayObject be rendered by the renderer? An object with a renderable value of\r`false` is skipped during the render pass.","properties":[{"type":{"names":["boolean"]},"name":"renderable"}],"defaultvalue":false,"name":"renderable","longname":"PIXI.DisplayObject#renderable","kind":"member","memberof":"PIXI.DisplayObject","scope":"instance","___s":true},{"meta":{"range":[4285,4303],"filename":"DisplayObject.js","lineno":117,"path":"src\\pixi\\display"},"description":"The parent DisplayObjectContainer that this DisplayObject is a child of.\rAll DisplayObjects must belong to a parent in order to be rendered.\rThe root parent is the Stage object. This property is set automatically when the\rDisplayObject is added to, or removed from, a DisplayObjectContainer.","properties":[{"type":{"names":["PIXI.DisplayObjectContainer"]},"name":"parent"}],"defaultvalue":null,"readonly":true,"name":"parent","longname":"PIXI.DisplayObject#parent","kind":"member","memberof":"PIXI.DisplayObject","scope":"instance","___s":true},{"meta":{"range":[5054,5073],"filename":"DisplayObject.js","lineno":133,"path":"src\\pixi\\display"},"description":"The multiplied alpha value of this DisplayObject. A value of 1 is fully opaque. A value of 0 is transparent.\rThis value is the calculated total, based on the alpha values of all parents of this DisplayObjects \rin the display list.\r\rTo obtain, and set, the local alpha value, see the `alpha` property.\r\rNote: This property is only updated at the end of the `updateTransform` call, once per render. Until \rthat happens this property will contain values based on the previous frame. Be mindful of this if\raccessing this property outside of the normal game flow, i.e. from an asynchronous event callback.","properties":[{"type":{"names":["number"]},"name":"worldAlpha"}],"readonly":true,"name":"worldAlpha","longname":"PIXI.DisplayObject#worldAlpha","kind":"member","memberof":"PIXI.DisplayObject","scope":"instance","___s":true},{"meta":{"range":[5698,5737],"filename":"DisplayObject.js","lineno":148,"path":"src\\pixi\\display"},"description":"The current transform of this DisplayObject.\r\rThis property contains the calculated total, based on the transforms of all parents of this \rDisplayObject in the display list.\r\rNote: This property is only updated at the end of the `updateTransform` call, once per render. Until \rthat happens this property will contain values based on the previous frame. Be mindful of this if\raccessing this property outside of the normal game flow, i.e. from an asynchronous event callback.","properties":[{"type":{"names":["PIXI.Matrix"]},"name":"worldTransform"}],"readonly":true,"name":"worldTransform","longname":"PIXI.DisplayObject#worldTransform","kind":"member","memberof":"PIXI.DisplayObject","scope":"instance","___s":true},{"meta":{"range":[6383,6424],"filename":"DisplayObject.js","lineno":163,"path":"src\\pixi\\display"},"description":"The coordinates, in pixels, of this DisplayObject within the world.\r\rThis property contains the calculated total, based on the positions of all parents of this \rDisplayObject in the display list.\r\rNote: This property is only updated at the end of the `updateTransform` call, once per render. Until \rthat happens this property will contain values based on the previous frame. Be mindful of this if\raccessing this property outside of the normal game flow, i.e. from an asynchronous event callback.","properties":[{"type":{"names":["PIXI.Point"]},"name":"worldPosition"}],"readonly":true,"name":"worldPosition","longname":"PIXI.DisplayObject#worldPosition","kind":"member","memberof":"PIXI.DisplayObject","scope":"instance","___s":true},{"meta":{"range":[7036,7074],"filename":"DisplayObject.js","lineno":178,"path":"src\\pixi\\display"},"description":"The global scale of this DisplayObject.\r\rThis property contains the calculated total, based on the scales of all parents of this \rDisplayObject in the display list.\r\rNote: This property is only updated at the end of the `updateTransform` call, once per render. Until \rthat happens this property will contain values based on the previous frame. Be mindful of this if\raccessing this property outside of the normal game flow, i.e. from an asynchronous event callback.","properties":[{"type":{"names":["PIXI.Point"]},"name":"worldScale"}],"readonly":true,"name":"worldScale","longname":"PIXI.DisplayObject#worldScale","kind":"member","memberof":"PIXI.DisplayObject","scope":"instance","___s":true},{"meta":{"range":[7697,7719],"filename":"DisplayObject.js","lineno":193,"path":"src\\pixi\\display"},"description":"The rotation, in radians, of this DisplayObject.\r\rThis property contains the calculated total, based on the rotations of all parents of this \rDisplayObject in the display list.\r\rNote: This property is only updated at the end of the `updateTransform` call, once per render. Until \rthat happens this property will contain values based on the previous frame. Be mindful of this if\raccessing this property outside of the normal game flow, i.e. from an asynchronous event callback.","properties":[{"type":{"names":["number"]},"name":"worldRotation"}],"readonly":true,"name":"worldRotation","longname":"PIXI.DisplayObject#worldRotation","kind":"member","memberof":"PIXI.DisplayObject","scope":"instance","___s":true},{"meta":{"range":[7928,7950],"filename":"DisplayObject.js","lineno":202,"path":"src\\pixi\\display"},"description":"The rectangular area used by filters when rendering a shader for this DisplayObject.","properties":[{"type":{"names":["PIXI.Rectangle"]},"name":"filterArea"}],"type":{"names":["Rectangle"]},"defaultvalue":null,"name":"filterArea","longname":"PIXI.DisplayObject#filterArea","kind":"member","memberof":"PIXI.DisplayObject","scope":"instance","___s":true},{"meta":{"range":[9036,9304],"filename":"DisplayObject.js","lineno":252,"path":"src\\pixi\\display"},"description":"Destroy this DisplayObject.\r\rRemoves any cached sprites, sets renderable flag to false, and nulls filters, bounds and mask.\r\rAlso iteratively calls `destroy` on any children.","kind":"function","name":"destroy","memberof":"PIXI.DisplayObject","longname":"PIXI.DisplayObject#destroy","scope":"instance","___s":true},{"meta":{"range":[14195,14309],"filename":"DisplayObject.js","lineno":403,"path":"src\\pixi\\display"},"description":"To be overridden by classes that require it.","kind":"function","name":"preUpdate","memberof":"PIXI.DisplayObject","longname":"PIXI.DisplayObject#preUpdate","scope":"instance","___s":true},{"meta":{"range":[14357,15313],"filename":"DisplayObject.js","lineno":412,"path":"src\\pixi\\display"},"description":"Generates a RenderTexture based on this DisplayObject, which can they be used to texture other Sprites.\rThis can be useful if your DisplayObject is static, or complicated, and needs to be reused multiple times.\r\rPlease note that no garbage collection takes place on old textures. It is up to you to destroy old textures,\rand references to them, so they don't linger in memory.","kind":"function","name":"generateTexture","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The resolution of the texture being generated.","name":"resolution"},{"type":{"names":["number"]},"optional":true,"defaultvalue":"PIXI.scaleModes.DEFAULT","description":"See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values.","name":"scaleMode"},{"type":{"names":["PIXI.CanvasRenderer","PIXI.WebGLRenderer"]},"description":"The renderer used to generate the texture.","name":"renderer"}],"returns":[{"type":{"names":["PIXI.RenderTexture"]},"description":"- A RenderTexture containing an image of this DisplayObject at the time it was invoked."}],"memberof":"PIXI.DisplayObject","longname":"PIXI.DisplayObject#generateTexture","scope":"instance","___s":true},{"meta":{"range":[15804,16029],"filename":"DisplayObject.js","lineno":440,"path":"src\\pixi\\display"},"description":"If this DisplayObject has a cached Sprite, this method generates and updates it.","kind":"function","name":"updateCache","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"- A reference to this DisplayObject."}],"memberof":"PIXI.DisplayObject","longname":"PIXI.DisplayObject#updateCache","scope":"instance","___s":true},{"meta":{"range":[16144,16501],"filename":"DisplayObject.js","lineno":454,"path":"src\\pixi\\display"},"description":"Calculates the global position of this DisplayObject, based on the position given.","kind":"function","name":"toGlobal","params":[{"type":{"names":["PIXI.Point"]},"description":"The global position to calculate from.","name":"position"}],"returns":[{"type":{"names":["PIXI.Point"]},"description":"- A point object representing the position of this DisplayObject based on the global position given."}],"memberof":"PIXI.DisplayObject","longname":"PIXI.DisplayObject#toGlobal","scope":"instance","___s":true},{"meta":{"range":[16646,17105],"filename":"DisplayObject.js","lineno":469,"path":"src\\pixi\\display"},"description":"Calculates the local position of this DisplayObject, relative to another point.","kind":"function","name":"toLocal","params":[{"type":{"names":["PIXI.Point"]},"description":"The world origin to calculate from.","name":"position"},{"type":{"names":["PIXI.DisplayObject"]},"optional":true,"description":"An optional DisplayObject to calculate the global position from.","name":"from"}],"returns":[{"type":{"names":["PIXI.Point"]},"description":"- A point object representing the position of this DisplayObject based on the global position given."}],"memberof":"PIXI.DisplayObject","longname":"PIXI.DisplayObject#toLocal","scope":"instance","___s":true},{"meta":{"range":[19969,20316],"filename":"DisplayObject.js","lineno":586,"path":"src\\pixi\\display"},"description":"The horizontal position of the DisplayObject, in pixels, relative to its parent.\rIf you need the world position of the DisplayObject, use `DisplayObject.worldPosition` instead.","name":"x","properties":[{"type":{"names":["number"]},"description":"The horizontal position of the DisplayObject, in pixels, relative to its parent.","name":"x"}],"memberof":"PIXI.DisplayObject","longname":"PIXI.DisplayObject#x","scope":"instance","kind":"member","___s":true},{"meta":{"range":[20517,20860],"filename":"DisplayObject.js","lineno":608,"path":"src\\pixi\\display"},"description":"The vertical position of the DisplayObject, in pixels, relative to its parent.\rIf you need the world position of the DisplayObject, use `DisplayObject.worldPosition` instead.","name":"y","properties":[{"type":{"names":["number"]},"description":"The vertical position of the DisplayObject, in pixels, relative to its parent.","name":"y"}],"memberof":"PIXI.DisplayObject","longname":"PIXI.DisplayObject#y","scope":"instance","kind":"member","___s":true},{"meta":{"range":[21061,21382],"filename":"DisplayObject.js","lineno":630,"path":"src\\pixi\\display"},"description":"Indicates if this DisplayObject is visible, based on it, and all of its parents, `visible` property values.","name":"worldVisible","properties":[{"type":{"names":["boolean"]},"description":"Indicates if this DisplayObject is visible, based on it, and all of its parents, `visible` property values.","name":"worldVisible"}],"memberof":"PIXI.DisplayObject","longname":"PIXI.DisplayObject#worldVisible","scope":"instance","kind":"member","___s":true},{"meta":{"range":[22147,22665],"filename":"DisplayObject.js","lineno":673,"path":"src\\pixi\\display"},"description":"Sets a mask for this DisplayObject. A mask is an instance of a Graphics object.\rWhen applied it limits the visible area of this DisplayObject to the shape of the mask.\rUnder a Canvas renderer it uses shape clipping. Under a WebGL renderer it uses a Stencil Buffer.\rTo remove a mask, set this property to `null`.","name":"mask","properties":[{"type":{"names":["PIXI.Graphics"]},"description":"The mask applied to this DisplayObject. Set to `null` to remove an existing mask.","name":"mask"}],"memberof":"PIXI.DisplayObject","longname":"PIXI.DisplayObject#mask","scope":"instance","kind":"member","___s":true},{"meta":{"range":[23063,23730],"filename":"DisplayObject.js","lineno":708,"path":"src\\pixi\\display"},"description":"Sets the filters for this DisplayObject. This is a WebGL only feature, and is ignored by the Canvas\rRenderer. A filter is a shader applied to this DisplayObject. You can modify the placement of the filter\rusing `DisplayObject.filterArea`.\r\rTo remove filters, set this property to `null`.\r\rNote: You cannot have a filter set, and a MULTIPLY Blend Mode active, at the same time. Setting a \rfilter will reset this DisplayObjects blend mode to NORMAL.","name":"filters","properties":[{"type":{"names":["Array"]},"description":"An Array of PIXI.AbstractFilter objects, or objects that extend them.","name":"filters"}],"memberof":"PIXI.DisplayObject","longname":"PIXI.DisplayObject#filters","scope":"instance","kind":"member","___s":true},{"meta":{"range":[24702,25577],"filename":"DisplayObject.js","lineno":761,"path":"src\\pixi\\display"},"description":"Sets if this DisplayObject should be cached as a bitmap.\r\rWhen invoked it will take a snapshot of the DisplayObject, as it is at that moment, and store it \rin a RenderTexture. This is then used whenever this DisplayObject is rendered. It can provide a\rperformance benefit for complex, but static, DisplayObjects. I.e. those with lots of children.\r\rCached Bitmaps do not track their parents. If you update a property of this DisplayObject, it will not\rre-generate the cached bitmap automatically. To do that you need to call `DisplayObject.updateCache`.\r\rTo remove a cached bitmap, set this property to `null`.","name":"cacheAsBitmap","properties":[{"type":{"names":["boolean"]},"description":"Cache this DisplayObject as a Bitmap. Set to `null` to remove an existing cached bitmap.","name":"cacheAsBitmap"}],"memberof":"PIXI.DisplayObject","longname":"PIXI.DisplayObject#cacheAsBitmap","scope":"instance","kind":"member","___s":true},{"meta":{"range":[324,1084],"filename":"DisplayObjectContainer.js","lineno":13,"path":"src\\pixi\\display"},"description":"A DisplayObjectContainer represents a collection of display objects.\rIt is the base class of all display objects that act as a container for other objects.","kind":"class","classdesc":"DisplayObjectContainer","augments":["DisplayObject"],"name":"DisplayObjectContainer","longname":"PIXI.DisplayObjectContainer","memberof":"PIXI","scope":"static","___s":true},{"meta":{"range":[580,598],"filename":"DisplayObjectContainer.js","lineno":24,"path":"src\\pixi\\display"},"description":"[read-only] The array of children of this container.","properties":[{"name":"children"}],"type":{"names":["Array(DisplayObject)"]},"readonly":true,"name":"children","longname":"PIXI.DisplayObjectContainer#children","kind":"member","memberof":"PIXI.DisplayObjectContainer","scope":"instance","___s":true},{"meta":{"range":[1045,1074],"filename":"DisplayObjectContainer.js","lineno":35,"path":"src\\pixi\\display"},"description":"If `ignoreChildInput`  is `false` it will allow this objects _children_ to be considered as valid for Input events.\r\rIf this property is `true` then the children will _not_ be considered as valid for Input events.\r\rNote that this property isn't recursive: only immediate children are influenced, it doesn't scan further down.","properties":[{"type":{"names":["boolean"]},"name":"ignoreChildInput"}],"defaultvalue":false,"name":"ignoreChildInput","longname":"PIXI.DisplayObjectContainer#ignoreChildInput","kind":"member","memberof":"PIXI.DisplayObjectContainer","scope":"instance","___s":true},{"meta":{"range":[1261,1458],"filename":"DisplayObjectContainer.js","lineno":42,"path":"src\\pixi\\display"},"description":"Adds a child to the container.","kind":"function","name":"addChild","params":[{"type":{"names":["DisplayObject"]},"description":"The DisplayObject to add to the container","name":"child"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was added."}],"longname":"addChild","scope":"global","___s":true},{"meta":{"range":[1597,1904],"filename":"DisplayObjectContainer.js","lineno":55,"path":"src\\pixi\\display"},"description":"Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown","kind":"function","name":"addChildAt","params":[{"type":{"names":["DisplayObject"]},"description":"The child to add","name":"child"},{"type":{"names":["Number"]},"description":"The index to place the child in","name":"index"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was added."}],"longname":"addChildAt","scope":"global","___s":true},{"meta":{"range":[2409,2580],"filename":"DisplayObjectContainer.js","lineno":85,"path":"src\\pixi\\display"},"description":"Swaps the position of 2 Display Objects within this container.","kind":"function","name":"swapChildren","params":[{"type":{"names":["DisplayObject"]},"name":"child"},{"type":{"names":["DisplayObject"]},"name":"child2"}],"longname":"swapChildren","scope":"global","___s":true},{"meta":{"range":[3057,3312],"filename":"DisplayObjectContainer.js","lineno":112,"path":"src\\pixi\\display"},"description":"Returns the index position of a child DisplayObject instance","kind":"function","name":"getChildIndex","params":[{"type":{"names":["DisplayObject"]},"description":"The DisplayObject instance to identify","name":"child"}],"returns":[{"type":{"names":["Number"]},"description":"The index position of the child display object to identify"}],"longname":"getChildIndex","scope":"global","___s":true},{"meta":{"range":[3591,3901],"filename":"DisplayObjectContainer.js","lineno":132,"path":"src\\pixi\\display"},"description":"Changes the position of an existing child in the display object container","kind":"function","name":"setChildIndex","params":[{"type":{"names":["DisplayObject"]},"description":"The child DisplayObject instance for which you want to change the index number","name":"child"},{"type":{"names":["Number"]},"description":"The resulting index number for the child display object","name":"index"}],"longname":"setChildIndex","scope":"global","___s":true},{"meta":{"range":[4318,4522],"filename":"DisplayObjectContainer.js","lineno":153,"path":"src\\pixi\\display"},"description":"Returns the child at the specified index","kind":"function","name":"getChildAt","params":[{"type":{"names":["Number"]},"description":"The index to get the child from","name":"index"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child at the given index, if any."}],"longname":"getChildAt","scope":"global","___s":true},{"meta":{"range":[4874,5067],"filename":"DisplayObjectContainer.js","lineno":171,"path":"src\\pixi\\display"},"description":"Removes a child from the container.","kind":"function","name":"removeChild","params":[{"type":{"names":["DisplayObject"]},"description":"The DisplayObject to remove","name":"child"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was removed."}],"longname":"removeChild","scope":"global","___s":true},{"meta":{"range":[5299,5506],"filename":"DisplayObjectContainer.js","lineno":191,"path":"src\\pixi\\display"},"description":"Removes a child from the specified index position.","kind":"function","name":"removeChildAt","params":[{"type":{"names":["Number"]},"description":"The index to get the child from","name":"index"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was removed."}],"longname":"removeChildAt","scope":"global","___s":true},{"meta":{"range":[5764,6050],"filename":"DisplayObjectContainer.js","lineno":213,"path":"src\\pixi\\display"},"description":"Removes all children from this container that are within the begin and end indexes.","kind":"function","name":"removeChildren","params":[{"type":{"names":["Number"]},"description":"The beginning position. Default value is 0.","name":"beginIndex"},{"type":{"names":["Number"]},"description":"The ending position. Default value is size of the container.","name":"endIndex"}],"longname":"removeChildren","scope":"global","___s":true},{"meta":{"range":[7515,7954],"filename":"DisplayObjectContainer.js","lineno":280,"path":"src\\pixi\\display"},"description":"Retrieves the global bounds of the displayObjectContainer as a rectangle. The bounds calculation takes all visible children into consideration.","kind":"function","name":"getBounds","params":[{"type":{"names":["PIXI.DisplayObject","PIXI.Matrix"]},"optional":true,"description":"Returns a rectangle that defines the area of the display object relative to the coordinate system of the targetCoordinateSpace object.","name":"targetCoordinateSpace"}],"returns":[{"type":{"names":["Rectangle"]},"description":"The rectangular bounding area"}],"longname":"getBounds","scope":"global","___s":true},{"meta":{"range":[11846,12118],"filename":"DisplayObjectContainer.js","lineno":437,"path":"src\\pixi\\display"},"description":"Retrieves the non-global local bounds of the displayObjectContainer as a rectangle without any transformations. The calculation takes all visible children into consideration.","kind":"function","name":"getLocalBounds","returns":[{"type":{"names":["Rectangle"]},"description":"The rectangular bounding area"}],"longname":"getLocalBounds","scope":"global","___s":true},{"meta":{"range":[12234,12443],"filename":"DisplayObjectContainer.js","lineno":449,"path":"src\\pixi\\display"},"description":"Determines whether the specified display object is a child of the DisplayObjectContainer instance or the instance itself.","kind":"function","name":"contains","params":[{"type":{"names":["DisplayObject"]},"name":"child"}],"returns":[{"type":{"names":["boolean"]}}],"longname":"contains","scope":"global","___s":true},{"meta":{"range":[301,3071],"filename":"Sprite.js","lineno":13,"path":"src\\pixi\\display"},"description":"The Sprite object is the base for all textured objects that are rendered to the screen","kind":"class","classdesc":"Sprite","augments":["DisplayObjectContainer"],"params":[{"type":{"names":["Texture"]},"description":"The texture for this sprite","name":"texture"}],"name":"Sprite","longname":"PIXI.Sprite","memberof":"PIXI","scope":"static","___s":true},{"meta":{"range":[774,804],"filename":"Sprite.js","lineno":26,"path":"src\\pixi\\display"},"description":"The anchor sets the origin point of the texture.\rThe default is 0,0 this means the texture's origin is the top left\rSetting than anchor to 0.5,0.5 means the textures origin is centered\rSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner","properties":[{"name":"anchor"}],"type":{"names":["Point"]},"name":"anchor","longname":"PIXI.Sprite#anchor","kind":"member","memberof":"PIXI.Sprite","scope":"instance","___s":true},{"meta":{"range":[932,983],"filename":"Sprite.js","lineno":34,"path":"src\\pixi\\display"},"description":"The texture that the sprite is using","properties":[{"name":"texture"}],"type":{"names":["Texture"]},"name":"texture","longname":"PIXI.Sprite#texture","kind":"member","memberof":"PIXI.Sprite","scope":"instance","___s":true},{"meta":{"range":[1569,1589],"filename":"Sprite.js","lineno":61,"path":"src\\pixi\\display"},"description":"The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.","properties":[{"name":"tint"}],"type":{"names":["Number"]},"defaultvalue":"0xFFFFFF","name":"tint","longname":"PIXI.Sprite#tint","kind":"member","memberof":"PIXI.Sprite","scope":"instance","___s":true},{"meta":{"range":[2061,2086],"filename":"Sprite.js","lineno":80,"path":"src\\pixi\\display"},"description":"A canvas that contains the tinted version of the Sprite (in Canvas mode, WebGL doesn't populate this)","properties":[{"name":"tintedTexture"}],"type":{"names":["Canvas"]},"defaultvalue":"null","name":"tintedTexture","longname":"PIXI.Sprite#tintedTexture","kind":"member","memberof":"PIXI.Sprite","scope":"instance","___s":true},{"meta":{"range":[2456,2495],"filename":"Sprite.js","lineno":91,"path":"src\\pixi\\display"},"description":"The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode.\r\rWarning: You cannot have a blend mode and a filter active on the same Sprite. Doing so will render the sprite invisible.","properties":[{"name":"blendMode"}],"type":{"names":["Number"]},"defaultvalue":"PIXI.blendModes.NORMAL;","name":"blendMode","longname":"PIXI.Sprite#blendMode","kind":"member","memberof":"PIXI.Sprite","scope":"instance","___s":true},{"meta":{"range":[2714,2732],"filename":"Sprite.js","lineno":101,"path":"src\\pixi\\display"},"description":"The shader that will be used to render this Sprite.\rSet to null to remove a current shader.","properties":[{"name":"shader"}],"type":{"names":["AbstractFilter"]},"defaultvalue":"null","name":"shader","longname":"PIXI.Sprite#shader","kind":"member","memberof":"PIXI.Sprite","scope":"instance","___s":true},{"meta":{"range":[2922,2940],"filename":"Sprite.js","lineno":110,"path":"src\\pixi\\display"},"description":"Controls if this Sprite is processed by the core Phaser game loops and Group loops.","properties":[{"name":"exists"}],"type":{"names":["Boolean"]},"defaultvalue":"true","name":"exists","longname":"PIXI.Sprite#exists","kind":"member","memberof":"PIXI.Sprite","scope":"instance","___s":true},{"meta":{"range":[4090,4452],"filename":"Sprite.js","lineno":163,"path":"src\\pixi\\display"},"description":"Sets the texture of the sprite. Be warned that this doesn't remove or destroy the previous\rtexture this Sprite was using.","kind":"function","name":"setTexture","params":[{"type":{"names":["Texture"]},"description":"The PIXI texture that is displayed by the sprite","name":"texture"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Call Texture.destroy on the current texture before replacing it with the new one?","name":"destroy"}],"longname":"setTexture","scope":"global","___s":true},{"meta":{"range":[5236,5984],"filename":"Sprite.js","lineno":199,"path":"src\\pixi\\display"},"description":"Returns the bounds of the Sprite as a rectangle.\rThe bounds calculation takes the worldTransform into account.\r\rIt is important to note that the transform is not updated when you call this method.\rSo if this Sprite is the child of a Display Object which has had its transform\rupdated since the last render pass, those changes will not yet have been applied\rto this Sprites worldTransform. If you need to ensure that all parent transforms\rare factored into this getBounds operation then you should call `updateTransform`\ron the root most object in this Sprites display list first.","kind":"function","name":"getBounds","params":[{"type":{"names":["Matrix"]},"description":"the transformation matrix of the sprite","name":"matrix"}],"returns":[{"type":{"names":["Rectangle"]},"description":"the framing rectangle"}],"longname":"getBounds","scope":"global","___s":true},{"meta":{"range":[8608,8836],"filename":"Sprite.js","lineno":315,"path":"src\\pixi\\display"},"description":"Retrieves the non-global local bounds of the Sprite as a rectangle. The calculation takes all visible children into consideration.","kind":"function","name":"getLocalBounds","returns":[{"type":{"names":["Rectangle"]},"description":"The rectangular bounding area"}],"longname":"getLocalBounds","scope":"global","___s":true},{"meta":{"range":[624,775],"filename":"SpriteBatch.js","lineno":23,"path":"src\\pixi\\display"},"description":"The SpriteBatch class is a really fast version of the DisplayObjectContainer \rbuilt solely for speed, so use when you need a lot of sprites or particles.\rAnd it's extremely easy to use : \r\n\r\n    var container = new PIXI.SpriteBatch();\r\n \r\n    for(var i  = 0; i < 100; i++)\r\n    {\r\n        var sprite = new PIXI.Sprite.fromImage(\"myImage.png\");\r\n        container.addChild(sprite);\r\n    }\rAnd here you have a hundred sprites that will be renderer at the speed of light","kind":"class","classdesc":"SpriteBatch","params":[{"type":{"names":["Texture"]},"name":"texture"}],"name":"SpriteBatch","longname":"PIXI.SpriteBatch","memberof":"PIXI","scope":"static","___s":true},{"meta":{"range":[298,677],"filename":"Rope.js","lineno":15,"path":"src\\pixi\\extras"},"kind":"class","classdesc":"Rope","augments":["Strip"],"params":[{"type":{"names":["Texture"]},"description":"The texture to use on the rope.","name":"texture"},{"type":{"names":["Array"]},"description":"An array of {PIXI.Point}.","name":"points"}],"name":"Rope","longname":"PIXI.Rope","memberof":"PIXI","scope":"static","___s":true},{"meta":{"range":[268,1753],"filename":"Strip.js","lineno":15,"path":"src\\pixi\\extras"},"kind":"class","classdesc":"Strip","augments":["DisplayObjectContainer"],"params":[{"type":{"names":["Texture"]},"description":"The texture to use","name":"texture"},{"type":{"names":["Number"]},"description":"the width","name":"width"},{"type":{"names":["Number"]},"description":"the height","name":"height"}],"name":"Strip","longname":"PIXI.Strip","memberof":"PIXI","scope":"static","___s":true},{"meta":{"range":[465,487],"filename":"Strip.js","lineno":26,"path":"src\\pixi\\extras"},"description":"The texture of the strip","properties":[{"name":"texture"}],"type":{"names":["Texture"]},"name":"texture","longname":"PIXI.Strip#texture","kind":"member","memberof":"PIXI.Strip","scope":"instance","___s":true},{"meta":{"range":[1156,1173],"filename":"Strip.js","lineno":49,"path":"src\\pixi\\extras"},"description":"Whether the strip is dirty or not","properties":[{"name":"dirty"}],"type":{"names":["Boolean"]},"name":"dirty","longname":"PIXI.Strip#dirty","kind":"member","memberof":"PIXI.Strip","scope":"instance","___s":true},{"meta":{"range":[1406,1445],"filename":"Strip.js","lineno":58,"path":"src\\pixi\\extras"},"description":"The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode.","properties":[{"name":"blendMode"}],"type":{"names":["Number"]},"defaultvalue":"PIXI.blendModes.NORMAL;","name":"blendMode","longname":"PIXI.Strip#blendMode","kind":"member","memberof":"PIXI.Strip","scope":"instance","___s":true},{"meta":{"range":[1665,1687],"filename":"Strip.js","lineno":66,"path":"src\\pixi\\extras"},"description":"Triangles in canvas mode are automatically antialiased, use this value to force triangles to overlap a bit with each other.","properties":[{"name":"canvasPadding"}],"type":{"names":["Number"]},"name":"canvasPadding","longname":"PIXI.Strip#canvasPadding","kind":"member","memberof":"PIXI.Strip","scope":"instance","___s":true},{"meta":{"range":[12299,12559],"filename":"Strip.js","lineno":405,"path":"src\\pixi\\extras"},"description":"Returns the bounds of the mesh as a rectangle. The bounds calculation takes the worldTransform into account.","kind":"function","name":"getBounds","params":[{"type":{"names":["Matrix"]},"description":"the transformation matrix of the sprite","name":"matrix"}],"returns":[{"type":{"names":["Rectangle"]},"description":"the framing rectangle"}],"longname":"getBounds","scope":"global","___s":true},{"meta":{"range":[13962,14031],"filename":"Strip.js","lineno":469,"path":"src\\pixi\\extras"},"description":"Different drawing buffer modes supported","properties":[null],"type":{"names":["Object"]},"scope":"static","name":"DrawModes","longname":"PIXI.Strip.DrawModes","kind":"member","memberof":"PIXI.Strip","___s":true},{"meta":{"range":[373,3164],"filename":"TilingSprite.js","lineno":15,"path":"src\\pixi\\extras"},"description":"A tiling sprite is a fast way of rendering a tiling image","kind":"class","classdesc":"TilingSprite","augments":["Sprite"],"params":[{"type":{"names":["Texture"]},"description":"the texture of the tiling sprite","name":"texture"},{"type":{"names":["Number"]},"description":"the width of the tiling sprite","name":"width"},{"type":{"names":["Number"]},"description":"the height of the tiling sprite","name":"height"}],"name":"TilingSprite","longname":"PIXI.TilingSprite","memberof":"PIXI","scope":"static","___s":true},{"meta":{"range":[584,610],"filename":"TilingSprite.js","lineno":25,"path":"src\\pixi\\extras"},"description":"The width of the tiling sprite","properties":[{"name":"width"}],"type":{"names":["Number"]},"name":"_width","longname":"PIXI.TilingSprite#_width","kind":"member","memberof":"PIXI.TilingSprite","scope":"instance","___s":true},{"meta":{"range":[731,759],"filename":"TilingSprite.js","lineno":33,"path":"src\\pixi\\extras"},"description":"The height of the tiling sprite","properties":[{"name":"height"}],"type":{"names":["Number"]},"name":"_height","longname":"PIXI.TilingSprite#_height","kind":"member","memberof":"PIXI.TilingSprite","scope":"instance","___s":true},{"meta":{"range":[895,932],"filename":"TilingSprite.js","lineno":41,"path":"src\\pixi\\extras"},"description":"The scaling of the image that is being tiled","properties":[{"name":"tileScale"}],"type":{"names":["Point"]},"name":"tileScale","longname":"PIXI.TilingSprite#tileScale","kind":"member","memberof":"PIXI.TilingSprite","scope":"instance","___s":true},{"meta":{"range":[1085,1128],"filename":"TilingSprite.js","lineno":49,"path":"src\\pixi\\extras"},"description":"A point that represents the scale of the texture object","properties":[{"name":"tileScaleOffset"}],"type":{"names":["Point"]},"name":"tileScaleOffset","longname":"PIXI.TilingSprite#tileScaleOffset","kind":"member","memberof":"PIXI.TilingSprite","scope":"instance","___s":true},{"meta":{"range":[1279,1315],"filename":"TilingSprite.js","lineno":57,"path":"src\\pixi\\extras"},"description":"The offset position of the image that is being tiled","properties":[{"name":"tilePosition"}],"type":{"names":["Point"]},"name":"tilePosition","longname":"PIXI.TilingSprite#tilePosition","kind":"member","memberof":"PIXI.TilingSprite","scope":"instance","___s":true},{"meta":{"range":[1472,1494],"filename":"TilingSprite.js","lineno":66,"path":"src\\pixi\\extras"},"description":"Whether this sprite is renderable or not","properties":[{"name":"renderable"}],"type":{"names":["Boolean"]},"defaultvalue":"true","name":"renderable","longname":"PIXI.TilingSprite#renderable","kind":"member","memberof":"PIXI.TilingSprite","scope":"instance","___s":true},{"meta":{"range":[1659,1679],"filename":"TilingSprite.js","lineno":75,"path":"src\\pixi\\extras"},"description":"The tint applied to the sprite. This is a hex value","properties":[{"name":"tint"}],"type":{"names":["Number"]},"defaultvalue":"0xFFFFFF","name":"tint","longname":"PIXI.TilingSprite#tint","kind":"member","memberof":"PIXI.TilingSprite","scope":"instance","___s":true},{"meta":{"range":[1918,1943],"filename":"TilingSprite.js","lineno":84,"path":"src\\pixi\\extras"},"description":"If enabled a green rectangle will be drawn behind the generated tiling texture, allowing you to visually\rdebug the texture being used.","properties":[{"name":"textureDebug"}],"type":{"names":["Boolean"]},"name":"textureDebug","longname":"PIXI.TilingSprite#textureDebug","kind":"member","memberof":"PIXI.TilingSprite","scope":"instance","___s":true},{"meta":{"range":[2123,2162],"filename":"TilingSprite.js","lineno":93,"path":"src\\pixi\\extras"},"description":"The blend mode to be applied to the sprite","properties":[{"name":"blendMode"}],"type":{"names":["Number"]},"defaultvalue":"PIXI.blendModes.NORMAL;","name":"blendMode","longname":"PIXI.TilingSprite#blendMode","kind":"member","memberof":"PIXI.TilingSprite","scope":"instance","___s":true},{"meta":{"range":[2328,2352],"filename":"TilingSprite.js","lineno":101,"path":"src\\pixi\\extras"},"description":"The CanvasBuffer object that the tiled texture is drawn to.","properties":[{"name":"canvasBuffer"}],"type":{"names":["PIXI.CanvasBuffer"]},"name":"canvasBuffer","longname":"PIXI.TilingSprite#canvasBuffer","kind":"member","memberof":"PIXI.TilingSprite","scope":"instance","___s":true},{"meta":{"range":[2557,2582],"filename":"TilingSprite.js","lineno":109,"path":"src\\pixi\\extras"},"description":"An internal Texture object that holds the tiling texture that was generated from TilingSprite.texture.","properties":[{"name":"tilingTexture"}],"type":{"names":["PIXI.Texture"]},"name":"tilingTexture","longname":"PIXI.TilingSprite#tilingTexture","kind":"member","memberof":"PIXI.TilingSprite","scope":"instance","___s":true},{"meta":{"range":[2790,2813],"filename":"TilingSprite.js","lineno":117,"path":"src\\pixi\\extras"},"description":"The Context fill pattern that is used to draw the TilingSprite in Canvas mode only (will be null in WebGL).","properties":[{"name":"tilePattern"}],"type":{"names":["PIXI.Texture"]},"name":"tilePattern","longname":"PIXI.TilingSprite#tilePattern","kind":"member","memberof":"PIXI.TilingSprite","scope":"instance","___s":true},{"meta":{"range":[3077,3103],"filename":"TilingSprite.js","lineno":127,"path":"src\\pixi\\extras"},"description":"If true the TilingSprite will run generateTexture on its **next** render pass.\rThis is set by the likes of Phaser.LoadTexture.setFrame.","properties":[{"name":"refreshTexture"}],"type":{"names":["Boolean"]},"defaultvalue":"true","name":"refreshTexture","longname":"PIXI.TilingSprite#refreshTexture","kind":"member","memberof":"PIXI.TilingSprite","scope":"instance","___s":true},{"meta":{"range":[8301,8484],"filename":"TilingSprite.js","lineno":332,"path":"src\\pixi\\extras"},"kind":"function","name":"generateTilingTexture","params":[{"type":{"names":["Boolean"]},"description":"Whether we want to force the texture to be a power of two","name":"forcePowerOfTwo"},{"type":{"names":["RenderSession"]},"name":"renderSession"}],"longname":"generateTilingTexture","scope":"global","___s":true},{"meta":{"range":[10774,10924],"filename":"TilingSprite.js","lineno":417,"path":"src\\pixi\\extras"},"description":"Returns the framing rectangle of the sprite as a PIXI.Rectangle object","kind":"function","name":"getBounds","returns":[{"type":{"names":["Rectangle"]},"description":"the framing rectangle"}],"longname":"getBounds","scope":"global","___s":true},{"meta":{"range":[447,1319],"filename":"AbstractFilter.js","lineno":14,"path":"src\\pixi\\filters"},"description":"This is the base class for creating a PIXI filter. Currently only webGL supports filters.\rIf you want to make a custom filter this should be your base class.","kind":"class","classdesc":"AbstractFilter","params":[{"type":{"names":["Array"]},"description":"The fragment source in an array of strings.","name":"fragmentSrc"},{"type":{"names":["Object"]},"description":"An object containing the uniforms for this filter.","name":"uniforms"}],"name":"AbstractFilter","longname":"PIXI.AbstractFilter","memberof":"PIXI","scope":"static","___s":true},{"meta":{"range":[967,984],"filename":"AbstractFilter.js","lineno":36,"path":"src\\pixi\\filters"},"properties":[{"name":"dirty"}],"type":{"names":["Boolean"]},"name":"dirty","longname":"PIXI.AbstractFilter#dirty","kind":"member","memberof":"PIXI.AbstractFilter","scope":"instance","___s":true},{"meta":{"range":[1055,1071],"filename":"AbstractFilter.js","lineno":42,"path":"src\\pixi\\filters"},"properties":[{"name":"padding"}],"type":{"names":["Number"]},"name":"padding","longname":"PIXI.AbstractFilter#padding","kind":"member","memberof":"PIXI.AbstractFilter","scope":"instance","___s":true},{"meta":{"range":[1392,1494],"filename":"AbstractFilter.js","lineno":61,"path":"src\\pixi\\filters"},"description":"Syncs the uniforms between the class object and the shaders.","kind":"function","name":"syncUniforms","longname":"syncUniforms","scope":"global","___s":true},{"meta":{"range":[162,323],"filename":"Pixi.js","lineno":11,"path":"src\\pixi"},"description":"Namespace-class for [pixi.js](http://www.pixijs.com/).\r\rContains assorted static properties and enumerations.","kind":"class","name":"PIXI","scope":"static","longname":"module:PIXI.PIXI","memberof":"module:PIXI","___s":true},{"meta":{"range":[3505,3967],"filename":"Graphics.js","lineno":149,"path":"src\\pixi\\primitives"},"description":"Specifies the line style used for subsequent calls to Graphics methods such as the lineTo() method or the drawCircle() method.","kind":"function","name":"lineStyle","params":[{"type":{"names":["Number"]},"description":"width of the line to draw, will update the objects stored style","name":"lineWidth"},{"type":{"names":["Number"]},"description":"color of the line to draw, will update the objects stored style","name":"color"},{"type":{"names":["Number"]},"description":"alpha of the line to draw, will update the objects stored style","name":"alpha"}],"returns":[{"type":{"names":["Graphics"]}}],"longname":"lineStyle","scope":"global","___s":true},{"meta":{"range":[4742,4945],"filename":"Graphics.js","lineno":183,"path":"src\\pixi\\primitives"},"description":"Moves the current drawing position to x, y.","kind":"function","name":"moveTo","params":[{"type":{"names":["Number"]},"description":"the X coordinate to move to","name":"x"},{"type":{"names":["Number"]},"description":"the Y coordinate to move to","name":"y"}],"returns":[{"type":{"names":["Graphics"]}}],"longname":"moveTo","scope":"global","___s":true},{"meta":{"range":[5072,5373],"filename":"Graphics.js","lineno":198,"path":"src\\pixi\\primitives"},"description":"Draws a line using the current line style from the current drawing position to (x, y);\rThe current drawing position is then set to (x, y).","kind":"function","name":"lineTo","params":[{"type":{"names":["Number"]},"description":"the X coordinate to draw to","name":"x"},{"type":{"names":["Number"]},"description":"the Y coordinate to draw to","name":"y"}],"returns":[{"type":{"names":["Graphics"]}}],"longname":"lineTo","scope":"global","___s":true},{"meta":{"range":[5627,6028],"filename":"Graphics.js","lineno":221,"path":"src\\pixi\\primitives"},"description":"Calculate the points for a quadratic bezier curve and then draws it.\rBased on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c","kind":"function","name":"quadraticCurveTo","params":[{"type":{"names":["Number"]},"description":"Control point x","name":"cpX"},{"type":{"names":["Number"]},"description":"Control point y","name":"cpY"},{"type":{"names":["Number"]},"description":"Destination point x","name":"toX"},{"type":{"names":["Number"]},"description":"Destination point y","name":"toY"}],"returns":[{"type":{"names":["Graphics"]}}],"longname":"quadraticCurveTo","scope":"global","___s":true},{"meta":{"range":[6993,7381],"filename":"Graphics.js","lineno":276,"path":"src\\pixi\\primitives"},"description":"Calculate the points for a bezier curve and then draws it.","kind":"function","name":"bezierCurveTo","params":[{"type":{"names":["Number"]},"description":"Control point x","name":"cpX"},{"type":{"names":["Number"]},"description":"Control point y","name":"cpY"},{"type":{"names":["Number"]},"description":"Second Control point x","name":"cpX2"},{"type":{"names":["Number"]},"description":"Second Control point y","name":"cpY2"},{"type":{"names":["Number"]},"description":"Destination point x","name":"toX"},{"type":{"names":["Number"]},"description":"Destination point y","name":"toY"}],"returns":[{"type":{"names":["Graphics"]}}],"longname":"bezierCurveTo","scope":"global","___s":true},{"meta":{"range":[10466,11325],"filename":"Graphics.js","lineno":405,"path":"src\\pixi\\primitives"},"description":"The arc method creates an arc/curve (used to create circles, or parts of circles).","kind":"function","name":"arc","params":[{"type":{"names":["Number"]},"description":"The x-coordinate of the center of the circle","name":"cx"},{"type":{"names":["Number"]},"description":"The y-coordinate of the center of the circle","name":"cy"},{"type":{"names":["Number"]},"description":"The radius of the circle","name":"radius"},{"type":{"names":["Number"]},"description":"The starting angle, in radians (0 is at the 3 o'clock position of the arc's circle)","name":"startAngle"},{"type":{"names":["Number"]},"description":"The ending angle, in radians","name":"endAngle"},{"type":{"names":["Boolean"]},"description":"Optional. Specifies whether the drawing should be counterclockwise or clockwise. False is default, and indicates clockwise, while true indicates counter-clockwise.","name":"anticlockwise"},{"type":{"names":["Number"]},"description":"Optional. The number of segments to use when calculating the arc. The default is 40. If you need more fidelity use a higher number.","name":"segments"}],"returns":[{"type":{"names":["Graphics"]}}],"longname":"arc","scope":"global","___s":true},{"meta":{"range":[13260,13556],"filename":"Graphics.js","lineno":491,"path":"src\\pixi\\primitives"},"description":"Specifies a simple one-color fill that subsequent calls to other Graphics methods\r(such as lineTo() or drawCircle()) use when drawing.","kind":"function","name":"beginFill","params":[{"type":{"names":["Number"]},"description":"the color of the fill","name":"color"},{"type":{"names":["Number"]},"description":"the alpha of the fill","name":"alpha"}],"returns":[{"type":{"names":["Graphics"]}}],"longname":"beginFill","scope":"global","___s":true},{"meta":{"range":[14052,14213],"filename":"Graphics.js","lineno":519,"path":"src\\pixi\\primitives"},"description":"Applies a fill to the lines and shapes that were added since the last call to the beginFill() method.","kind":"function","name":"endFill","returns":[{"type":{"names":["Graphics"]}}],"longname":"endFill","scope":"global","___s":true},{"meta":{"range":[14370,14668],"filename":"Graphics.js","lineno":534,"path":"src\\pixi\\primitives"},"kind":"function","name":"drawRect","params":[{"type":{"names":["Number"]},"description":"The X coord of the top-left of the rectangle","name":"x"},{"type":{"names":["Number"]},"description":"The Y coord of the top-left of the rectangle","name":"y"},{"type":{"names":["Number"]},"description":"The width of the rectangle","name":"width"},{"type":{"names":["Number"]},"description":"The height of the rectangle","name":"height"}],"returns":[{"type":{"names":["Graphics"]}}],"longname":"drawRect","scope":"global","___s":true},{"meta":{"range":[14827,15212],"filename":"Graphics.js","lineno":550,"path":"src\\pixi\\primitives"},"kind":"function","name":"drawRoundedRect","params":[{"type":{"names":["Number"]},"description":"The X coord of the top-left of the rectangle","name":"x"},{"type":{"names":["Number"]},"description":"The Y coord of the top-left of the rectangle","name":"y"},{"type":{"names":["Number"]},"description":"The width of the rectangle","name":"width"},{"type":{"names":["Number"]},"description":"The height of the rectangle","name":"height"},{"type":{"names":["Number"]},"description":"Radius of the rectangle corners. In WebGL this must be a value between 0 and 9.","name":"radius"}],"longname":"drawRoundedRect","scope":"global","___s":true},{"meta":{"range":[15401,15669],"filename":"Graphics.js","lineno":565,"path":"src\\pixi\\primitives"},"description":"Draws a circle.","kind":"function","name":"drawCircle","params":[{"type":{"names":["Number"]},"description":"The X coordinate of the center of the circle","name":"x"},{"type":{"names":["Number"]},"description":"The Y coordinate of the center of the circle","name":"y"},{"type":{"names":["Number"]},"description":"The diameter of the circle","name":"diameter"}],"returns":[{"type":{"names":["Graphics"]}}],"longname":"drawCircle","scope":"global","___s":true},{"meta":{"range":[15817,16148],"filename":"Graphics.js","lineno":581,"path":"src\\pixi\\primitives"},"description":"Draws an ellipse.","kind":"function","name":"drawEllipse","params":[{"type":{"names":["Number"]},"description":"The X coordinate of the center of the ellipse","name":"x"},{"type":{"names":["Number"]},"description":"The Y coordinate of the center of the ellipse","name":"y"},{"type":{"names":["Number"]},"description":"The half width of the ellipse","name":"width"},{"type":{"names":["Number"]},"description":"The half height of the ellipse","name":"height"}],"returns":[{"type":{"names":["Graphics"]}}],"longname":"drawEllipse","scope":"global","___s":true},{"meta":{"range":[16308,16554],"filename":"Graphics.js","lineno":598,"path":"src\\pixi\\primitives"},"description":"Draws a polygon using the given path.","kind":"function","name":"drawPolygon","params":[{"type":{"names":["Array","Phaser.Polygon"]},"description":"The path data used to construct the polygon. Can either be an array of points or a Phaser.Polygon object.","name":"path"}],"returns":[{"type":{"names":["Graphics"]}}],"longname":"drawPolygon","scope":"global","___s":true},{"meta":{"range":[17360,17519],"filename":"Graphics.js","lineno":633,"path":"src\\pixi\\primitives"},"description":"Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings.","kind":"function","name":"clear","returns":[{"type":{"names":["Graphics"]}}],"longname":"clear","scope":"global","___s":true},{"meta":{"range":[17794,18349],"filename":"Graphics.js","lineno":654,"path":"src\\pixi\\primitives"},"description":"Useful function that returns a texture of the graphics object that can then be used to create sprites\rThis can be quite useful if your geometry is complicated and needs to be reused multiple times.","kind":"function","name":"generateTexture","params":[{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"The resolution of the texture being generated","name":"resolution"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"Should be one of the PIXI.scaleMode consts","name":"scaleMode"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"Add optional extra padding to the generated texture (default 0)","name":"padding"}],"returns":[{"type":{"names":["Texture"]},"description":"a texture of the graphics object"}],"longname":"generateTexture","scope":"global","___s":true},{"meta":{"range":[24177,24333],"filename":"Graphics.js","lineno":848,"path":"src\\pixi\\primitives"},"description":"Retrieves the bounds of the graphic shape as a rectangle object","kind":"function","name":"getBounds","returns":[{"type":{"names":["Rectangle"]},"description":"the rectangular bounding area"}],"longname":"getBounds","scope":"global","___s":true},{"meta":{"range":[26412,26647],"filename":"Graphics.js","lineno":936,"path":"src\\pixi\\primitives"},"description":"Retrieves the non-global local bounds of the graphic shape as a rectangle. The calculation takes all visible children into consideration.","kind":"function","name":"getLocalBounds","returns":[{"type":{"names":["Rectangle"]},"description":"The rectangular bounding area"}],"longname":"getLocalBounds","scope":"global","___s":true},{"meta":{"range":[27846,27924],"filename":"Graphics.js","lineno":997,"path":"src\\pixi\\primitives"},"description":"Update the bounds of the object","kind":"function","name":"updateLocalBounds","longname":"updateLocalBounds","scope":"global","___s":true},{"meta":{"range":[33255,33338],"filename":"Graphics.js","lineno":1173,"path":"src\\pixi\\primitives"},"description":"Destroys a previous cached sprite.","kind":"function","name":"destroyCachedSprite","longname":"destroyCachedSprite","scope":"global","___s":true},{"meta":{"range":[33486,33775],"filename":"Graphics.js","lineno":1184,"path":"src\\pixi\\primitives"},"description":"Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon.","kind":"function","name":"drawShape","params":[{"type":{"names":["Circle","Rectangle","Ellipse","Line","Polygon"]},"description":"The Shape object to draw.","name":"shape"}],"returns":[{"type":{"names":["GraphicsData"]},"description":"The generated GraphicsData object."}],"longname":"drawShape","scope":"global","___s":true},{"meta":{"range":[1026,2250],"filename":"GraphicsData.js","lineno":37,"path":"src\\pixi\\primitives"},"description":"A GraphicsData object.","kind":"class","memberof":"PIXI","params":[{"type":{"names":["number"]},"description":"the width of the line to draw","name":"lineWidth"},{"type":{"names":["number"]},"description":"the color of the line to draw","name":"lineColor"},{"type":{"names":["number"]},"description":"the alpha of the line to draw","name":"lineAlpha"},{"type":{"names":["number"]},"description":"the color of the fill","name":"fillColor"},{"type":{"names":["number"]},"description":"the alpha of the fill","name":"fillAlpha"},{"type":{"names":["boolean"]},"description":"whether or not the shape is filled with a colour","name":"fill"},{"type":{"names":["Circle","Rectangle","Ellipse","Line","Polygon"]},"description":"The shape object to draw.","name":"shape"}],"name":"GraphicsData","longname":"PIXI.GraphicsData","scope":"static","___s":true},{"meta":{"range":[70,208],"filename":"CanvasGraphics.js","lineno":6,"path":"src\\pixi\\renderers\\canvas"},"description":"A set of functions used by the canvas renderer to draw the primitive graphics data.","kind":"class","name":"CanvasGraphics","scope":"static","longname":"CanvasGraphics","___s":true},{"meta":{"range":[3945,4155],"filename":"CanvasRenderer.js","lineno":152,"path":"src\\pixi\\renderers\\canvas"},"description":"Renders the DisplayObjectContainer, usually the Phaser.Stage, to this canvas view.","kind":"function","name":"render","params":[{"type":{"names":["Phaser.Stage","PIXI.DisplayObjectContainer"]},"description":"The root element to be rendered.","name":"root"}],"longname":"render","scope":"global","___s":true},{"meta":{"range":[5089,5289],"filename":"CanvasRenderer.js","lineno":194,"path":"src\\pixi\\renderers\\canvas"},"description":"Removes everything from the renderer and optionally removes the Canvas DOM element.","kind":"function","name":"destroy","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Removes the Canvas element from the DOM.","name":"removeView"}],"longname":"destroy","scope":"global","___s":true},{"meta":{"range":[5644,5857],"filename":"CanvasRenderer.js","lineno":216,"path":"src\\pixi\\renderers\\canvas"},"description":"Resizes the canvas view to the specified width and height","kind":"function","name":"resize","params":[{"type":{"names":["Number"]},"description":"the new width of the canvas view","name":"width"},{"type":{"names":["Number"]},"description":"the new height of the canvas view","name":"height"}],"longname":"resize","scope":"global","___s":true},{"meta":{"range":[1505,1704],"filename":"CanvasBuffer.js","lineno":65,"path":"src\\pixi\\renderers\\canvas\\utils"},"description":"Resizes the canvas to the specified width and height.","kind":"function","name":"resize","params":[{"type":{"names":["Number"]},"description":"the new width of the canvas","name":"width"},{"type":{"names":["Number"]},"description":"the new height of the canvas","name":"height"}],"longname":"resize","scope":"global","___s":true},{"meta":{"range":[1870,1941],"filename":"CanvasBuffer.js","lineno":78,"path":"src\\pixi\\renderers\\canvas\\utils"},"description":"Frees the canvas up for use again.","kind":"function","name":"destroy","longname":"destroy","scope":"global","___s":true},{"meta":{"range":[295,547],"filename":"CanvasMaskManager.js","lineno":17,"path":"src\\pixi\\renderers\\canvas\\utils"},"description":"This method adds it to the current stack of masks.","kind":"function","name":"pushMask","params":[{"type":{"names":["Object"]},"description":"the maskData that will be pushed","name":"maskData"},{"type":{"names":["Object"]},"description":"The renderSession whose context will be used for this mask manager.","name":"renderSession"}],"longname":"pushMask","scope":"global","___s":true},{"meta":{"range":[1287,1511],"filename":"CanvasMaskManager.js","lineno":49,"path":"src\\pixi\\renderers\\canvas\\utils"},"description":"Restores the current drawing context to the state it was before the mask was applied.","kind":"function","name":"popMask","params":[{"type":{"names":["Object"]},"description":"The renderSession whose context will be used for this mask manager.","name":"renderSession"}],"longname":"popMask","scope":"global","___s":true},{"meta":{"range":[68,164],"filename":"CanvasTinter.js","lineno":5,"path":"src\\pixi\\renderers\\canvas\\utils"},"description":"Utility methods for Sprite/Texture tinting.","kind":"class","name":"CanvasTinter","scope":"static","longname":"CanvasTinter","___s":true},{"meta":{"range":[204,523],"filename":"CanvasTinter.js","lineno":13,"path":"src\\pixi\\renderers\\canvas\\utils"},"description":"Basically this method just needs a sprite and a color and tints the sprite with the given color.","kind":"function","name":"getTintedTexture","scope":"static","params":[{"type":{"names":["Sprite"]},"description":"the sprite to tint","name":"sprite"},{"type":{"names":["Number"]},"description":"the color to use to tint the sprite with","name":"color"}],"returns":[{"type":{"names":["HTMLCanvasElement"]},"description":"The tinted canvas"}],"longname":"getTintedTexture","___s":true},{"meta":{"range":[762,1040],"filename":"CanvasTinter.js","lineno":31,"path":"src\\pixi\\renderers\\canvas\\utils"},"description":"Tint a texture using the \"multiply\" operation.","kind":"function","name":"tintWithMultiply","scope":"static","params":[{"type":{"names":["Texture"]},"description":"the texture to tint","name":"texture"},{"type":{"names":["Number"]},"description":"the color to use to tint the sprite with","name":"color"},{"type":{"names":["HTMLCanvasElement"]},"description":"the current canvas","name":"canvas"}],"longname":"tintWithMultiply","___s":true},{"meta":{"range":[1918,2177],"filename":"CanvasTinter.js","lineno":65,"path":"src\\pixi\\renderers\\canvas\\utils"},"description":"Tint a texture pixel per pixel.","kind":"function","name":"tintPerPixel","scope":"static","params":[{"type":{"names":["Texture"]},"description":"the texture to tint","name":"texture"},{"type":{"names":["Number"]},"description":"the color to use to tint the sprite with","name":"color"},{"type":{"names":["HTMLCanvasElement"]},"description":"the current canvas","name":"canvas"}],"longname":"tintPerPixel","___s":true},{"meta":{"range":[3241,3370],"filename":"CanvasTinter.js","lineno":113,"path":"src\\pixi\\renderers\\canvas\\utils"},"description":"Checks if the browser correctly supports putImageData alpha channels.","kind":"function","name":"checkInverseAlpha","scope":"static","longname":"checkInverseAlpha","___s":true},{"meta":{"range":[4629,4719],"filename":"CanvasTinter.js","lineno":165,"path":"src\\pixi\\renderers\\canvas\\utils"},"description":"The tinting method that will be used.","kind":"function","name":"tintMethod","scope":"static","longname":"tintMethod","___s":true},{"meta":{"range":[1827,1881],"filename":"ComplexPrimitiveShader.js","lineno":79,"path":"src\\pixi\\renderers\\webgl\\shaders"},"description":"Initialises the shader.","kind":"function","name":"init","longname":"init","scope":"global","___s":true},{"meta":{"range":[2899,2953],"filename":"ComplexPrimitiveShader.js","lineno":110,"path":"src\\pixi\\renderers\\webgl\\shaders"},"description":"Destroys the shader.","kind":"function","name":"destroy","longname":"destroy","scope":"global","___s":true},{"meta":{"range":[2395,2449],"filename":"PixiFastShader.js","lineno":94,"path":"src\\pixi\\renderers\\webgl\\shaders"},"description":"Initialises the shader.","kind":"function","name":"init","longname":"init","scope":"global","___s":true},{"meta":{"range":[4247,4301],"filename":"PixiFastShader.js","lineno":143,"path":"src\\pixi\\renderers\\webgl\\shaders"},"description":"Destroys the shader.","kind":"function","name":"destroy","longname":"destroy","scope":"global","___s":true},{"meta":{"range":[1626,1679],"filename":"PixiShader.js","lineno":83,"path":"src\\pixi\\renderers\\webgl\\shaders"},"description":"Initialises the shader.","kind":"function","name":"init","longname":"init","scope":"global","___s":true},{"meta":{"range":[3415,3689],"filename":"PixiShader.js","lineno":134,"path":"src\\pixi\\renderers\\webgl\\shaders"},"description":"Initialises the shader uniform values.\r\rUniforms are specified in the GLSL_ES Specification: http://www.khronos.org/registry/webgl/specs/latest/1.0/\rhttp://www.khronos.org/registry/gles/specs/2.0/GLSL_ES_Specification_1.0.17.pdf","kind":"function","name":"initUniforms","longname":"initUniforms","scope":"global","___s":true},{"meta":{"range":[5355,5511],"filename":"PixiShader.js","lineno":208,"path":"src\\pixi\\renderers\\webgl\\shaders"},"description":"Initialises a Sampler2D uniform (which may only be available later on after initUniforms once the texture has loaded)","kind":"function","name":"initSampler2D","longname":"initSampler2D","scope":"global","___s":true},{"meta":{"range":[8326,8398],"filename":"PixiShader.js","lineno":283,"path":"src\\pixi\\renderers\\webgl\\shaders"},"description":"Updates the shader uniform values.","kind":"function","name":"syncUniforms","longname":"syncUniforms","scope":"global","___s":true},{"meta":{"range":[10589,10642],"filename":"PixiShader.js","lineno":351,"path":"src\\pixi\\renderers\\webgl\\shaders"},"description":"Destroys the shader.","kind":"function","name":"destroy","longname":"destroy","scope":"global","___s":true},{"meta":{"range":[1719,1773],"filename":"PrimitiveShader.js","lineno":75,"path":"src\\pixi\\renderers\\webgl\\shaders"},"description":"Initialises the shader.","kind":"function","name":"init","longname":"init","scope":"global","___s":true},{"meta":{"range":[2723,2777],"filename":"PrimitiveShader.js","lineno":105,"path":"src\\pixi\\renderers\\webgl\\shaders"},"description":"Destroys the shader.","kind":"function","name":"destroy","longname":"destroy","scope":"global","___s":true},{"meta":{"range":[2022,2076],"filename":"StripShader.js","lineno":80,"path":"src\\pixi\\renderers\\webgl\\shaders"},"description":"Initialises the shader.","kind":"function","name":"init","longname":"init","scope":"global","___s":true},{"meta":{"range":[3115,3169],"filename":"StripShader.js","lineno":111,"path":"src\\pixi\\renderers\\webgl\\shaders"},"description":"Destroys the shader.","kind":"function","name":"destroy","longname":"destroy","scope":"global","___s":true},{"meta":{"range":[2020,2078],"filename":"FilterTexture.js","lineno":61,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Clears the filter texture.","kind":"function","name":"clear","longname":"clear","scope":"global","___s":true},{"meta":{"range":[2233,2434],"filename":"FilterTexture.js","lineno":74,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Resizes the texture to the specified width and height","kind":"function","name":"resize","params":[{"type":{"names":["Number"]},"description":"the new width of the texture","name":"width"},{"type":{"names":["Number"]},"description":"the new height of the texture","name":"height"}],"longname":"resize","scope":"global","___s":true},{"meta":{"range":[2999,3061],"filename":"FilterTexture.js","lineno":97,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Destroys the filter texture.","kind":"function","name":"destroy","longname":"destroy","scope":"global","___s":true},{"meta":{"range":[429,555],"filename":"WebGLBlendModeManager.js","lineno":21,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Sets the WebGL Context.","kind":"function","name":"setContext","params":[{"type":{"names":["WebGLContext"]},"description":"the current WebGL drawing context","name":"gl"}],"longname":"setContext","scope":"global","___s":true},{"meta":{"range":[649,840],"filename":"WebGLBlendModeManager.js","lineno":32,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Sets-up the given blendMode from WebGL's point of view.","kind":"function","name":"setBlendMode","params":[{"type":{"names":["Number"]},"description":"the blendMode, should be a Pixi const, such as PIXI.BlendModes.ADD","name":"blendMode"}],"longname":"setBlendMode","scope":"global","___s":true},{"meta":{"range":[1232,1287],"filename":"WebGLBlendModeManager.js","lineno":54,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Destroys this object.","kind":"function","name":"destroy","longname":"destroy","scope":"global","___s":true},{"meta":{"range":[2689,2815],"filename":"WebGLFastSpriteBatch.js","lineno":130,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Sets the WebGL Context.","kind":"function","name":"setContext","params":[{"type":{"names":["WebGLContext"]},"description":"the current WebGL drawing context","name":"gl"}],"longname":"setContext","scope":"global","___s":true},{"meta":{"range":[3380,3482],"filename":"WebGLFastSpriteBatch.js","lineno":154,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"begin","params":[{"type":{"names":["WebGLSpriteBatch"]},"name":"spriteBatch"},{"type":{"names":["Object"]},"name":"renderSession"}],"longname":"begin","scope":"global","___s":true},{"meta":{"range":[3764,3788],"filename":"WebGLFastSpriteBatch.js","lineno":169,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"end","longname":"end","scope":"global","___s":true},{"meta":{"range":[3872,3941],"filename":"WebGLFastSpriteBatch.js","lineno":177,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"render","params":[{"type":{"names":["WebGLSpriteBatch"]},"name":"spriteBatch"}],"longname":"render","scope":"global","___s":true},{"meta":{"range":[4652,4712],"filename":"WebGLFastSpriteBatch.js","lineno":208,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"renderSprite","params":[{"type":{"names":["Sprite"]},"name":"sprite"}],"longname":"renderSprite","scope":"global","___s":true},{"meta":{"range":[8043,8069],"filename":"WebGLFastSpriteBatch.js","lineno":349,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"flush","longname":"flush","scope":"global","___s":true},{"meta":{"range":[9132,9157],"filename":"WebGLFastSpriteBatch.js","lineno":389,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"stop","longname":"stop","scope":"global","___s":true},{"meta":{"range":[9242,9268],"filename":"WebGLFastSpriteBatch.js","lineno":397,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"start","longname":"start","scope":"global","___s":true},{"meta":{"range":[525,668],"filename":"WebGLFilterManager.js","lineno":32,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Initialises the context and the properties.","kind":"function","name":"setContext","params":[{"type":{"names":["WebGLContext"]},"description":"the current WebGL drawing context","name":"gl"}],"longname":"setContext","scope":"global","___s":true},{"meta":{"range":[820,917],"filename":"WebGLFilterManager.js","lineno":46,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"begin","params":[{"type":{"names":["RenderSession"]},"name":"renderSession"},{"type":{"names":["ArrayBuffer"]},"name":"buffer"}],"longname":"begin","scope":"global","___s":true},{"meta":{"range":[1269,1455],"filename":"WebGLFilterManager.js","lineno":62,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Applies the filter and adds it to the current filter stack.","kind":"function","name":"pushFilter","params":[{"type":{"names":["Object"]},"description":"the filter that will be pushed to the current filter stack","name":"filterBlock"}],"longname":"pushFilter","scope":"global","___s":true},{"meta":{"range":[4292,4396],"filename":"WebGLFilterManager.js","lineno":145,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Removes the last filter from the filter stack and doesn't return it.","kind":"function","name":"popFilter","longname":"popFilter","scope":"global","___s":true},{"meta":{"range":[10518,10849],"filename":"WebGLFilterManager.js","lineno":336,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Applies the filter to the specified area.","kind":"function","name":"applyFilterPass","params":[{"type":{"names":["AbstractFilter"]},"description":"the filter that needs to be applied","name":"filter"},{"type":{"names":["Texture"]},"description":"TODO - might need an update","name":"filterArea"},{"type":{"names":["Number"]},"description":"the horizontal range of the filter","name":"width"},{"type":{"names":["Number"]},"description":"the vertical range of the filter","name":"height"}],"longname":"applyFilterPass","scope":"global","___s":true},{"meta":{"range":[12485,12560],"filename":"WebGLFilterManager.js","lineno":397,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Initialises the shader buffers.","kind":"function","name":"initShaderBuffers","longname":"initShaderBuffers","scope":"global","___s":true},{"meta":{"range":[14213,14304],"filename":"WebGLFilterManager.js","lineno":445,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Destroys the filter and removes it from the filter stack.","kind":"function","name":"destroy","longname":"destroy","scope":"global","___s":true},{"meta":{"range":[24359,24385],"filename":"WebGLGraphics.js","lineno":874,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"reset","longname":"reset","scope":"global","___s":true},{"meta":{"range":[24496,24523],"filename":"WebGLGraphics.js","lineno":883,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"upload","longname":"upload","scope":"global","___s":true},{"meta":{"range":[249,404],"filename":"WebGLMaskManager.js","lineno":16,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Sets the drawing context to the one given in parameter.","kind":"function","name":"setContext","params":[{"type":{"names":["WebGLContext"]},"description":"the current WebGL drawing context","name":"gl"}],"longname":"setContext","scope":"global","___s":true},{"meta":{"range":[493,645],"filename":"WebGLMaskManager.js","lineno":27,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Applies the Mask and adds it to the current filter stack.","kind":"function","name":"pushMask","params":[{"type":{"names":["Array"]},"name":"maskData"},{"type":{"names":["Object"]},"name":"renderSession"}],"longname":"pushMask","scope":"global","___s":true},{"meta":{"range":[1140,1349],"filename":"WebGLMaskManager.js","lineno":51,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Removes the last filter from the filter stack and doesn't return it.","kind":"function","name":"popMask","params":[{"type":{"names":["Array"]},"name":"maskData"},{"type":{"names":["Object"]},"description":"an object containing all the useful parameters","name":"renderSession"}],"longname":"popMask","scope":"global","___s":true},{"meta":{"range":[1736,1794],"filename":"WebGLMaskManager.js","lineno":71,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Destroys the mask stack.","kind":"function","name":"destroy","longname":"destroy","scope":"global","___s":true},{"meta":{"range":[742,885],"filename":"WebGLShaderManager.js","lineno":45,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Initialises the context and the properties.","kind":"function","name":"setContext","params":[{"type":{"names":["WebGLContext"]},"description":"the current WebGL drawing context","name":"gl"}],"longname":"setContext","scope":"global","___s":true},{"meta":{"range":[1607,1720],"filename":"WebGLShaderManager.js","lineno":73,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Takes the attributes given in parameters.","kind":"function","name":"setAttribs","params":[{"type":{"names":["Array"]},"description":"attribs","name":"attribs"}],"longname":"setAttribs","scope":"global","___s":true},{"meta":{"range":[2570,2653],"filename":"WebGLShaderManager.js","lineno":116,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Sets the current shader.","kind":"function","name":"setShader","params":[{"type":{"names":["Any"]},"name":"shader"}],"longname":"setShader","scope":"global","___s":true},{"meta":{"range":[2964,3019],"filename":"WebGLShaderManager.js","lineno":136,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Destroys this object.","kind":"function","name":"destroy","longname":"destroy","scope":"global","___s":true},{"meta":{"range":[177,333],"filename":"WebGLShaderUtils.js","lineno":14,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"CompileVertexShader","scope":"static","params":[{"type":{"names":["WebGLContext"]},"description":"the current WebGL drawing context","name":"gl"},{"type":{"names":["Array"]},"name":"shaderSrc"}],"returns":[{"type":{"names":["Any"]}}],"longname":"CompileVertexShader","___s":true},{"meta":{"range":[462,620],"filename":"WebGLShaderUtils.js","lineno":26,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"CompileFragmentShader","scope":"static","params":[{"type":{"names":["WebGLContext"]},"description":"the current WebGL drawing context","name":"gl"},{"type":{"names":["Array"]},"name":"shaderSrc"}],"returns":[{"type":{"names":["Any"]}}],"longname":"CompileFragmentShader","___s":true},{"meta":{"range":[1423,1604],"filename":"WebGLShaderUtils.js","lineno":69,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"compileProgram","scope":"static","params":[{"type":{"names":["WebGLContext"]},"description":"the current WebGL drawing context","name":"gl"},{"type":{"names":["Array"]},"name":"vertexSrc"},{"type":{"names":["Array"]},"name":"fragmentSrc"}],"returns":[{"type":{"names":["Any"]}}],"longname":"compileProgram","___s":true},{"meta":{"range":[3333,3424],"filename":"WebGLSpriteBatch.js","lineno":149,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"setContext","params":[{"type":{"names":["WebGLContext"]},"description":"the current WebGL drawing context","name":"gl"}],"longname":"setContext","scope":"global","___s":true},{"meta":{"range":[4226,4308],"filename":"WebGLSpriteBatch.js","lineno":181,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"begin","params":[{"type":{"names":["Object"]},"description":"The RenderSession object","name":"renderSession"}],"longname":"begin","scope":"global","___s":true},{"meta":{"range":[4513,4535],"filename":"WebGLSpriteBatch.js","lineno":193,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"end","longname":"end","scope":"global","___s":true},{"meta":{"range":[4615,4871],"filename":"WebGLSpriteBatch.js","lineno":201,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"render","params":[{"type":{"names":["Sprite"]},"description":"the sprite to render when using this spritebatch","name":"sprite"},{"type":{"names":["Matrix"]},"optional":true,"description":"Optional matrix. If provided the Display Object will be rendered using this matrix, otherwise it will use its worldTransform.","name":"matrix"}],"longname":"render","scope":"global","___s":true},{"meta":{"range":[8116,8259],"filename":"WebGLSpriteBatch.js","lineno":335,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Renders a TilingSprite using the spriteBatch.","kind":"function","name":"renderTilingSprite","params":[{"type":{"names":["TilingSprite"]},"description":"the sprite to render","name":"sprite"}],"longname":"renderTilingSprite","scope":"global","___s":true},{"meta":{"range":[11455,11536],"filename":"WebGLSpriteBatch.js","lineno":462,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Renders the content and empties the current batch.","kind":"function","name":"flush","longname":"flush","scope":"global","___s":true},{"meta":{"range":[15873,15985],"filename":"WebGLSpriteBatch.js","lineno":610,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"renderBatch","params":[{"type":{"names":["Texture"]},"name":"texture"},{"type":{"names":["Number"]},"name":"size"},{"type":{"names":["Number"]},"name":"startIndex"}],"longname":"renderBatch","scope":"global","___s":true},{"meta":{"range":[16764,16787],"filename":"WebGLSpriteBatch.js","lineno":647,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"stop","longname":"stop","scope":"global","___s":true},{"meta":{"range":[16892,16916],"filename":"WebGLSpriteBatch.js","lineno":656,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"start","longname":"start","scope":"global","___s":true},{"meta":{"range":[17003,17062],"filename":"WebGLSpriteBatch.js","lineno":664,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Destroys the SpriteBatch.","kind":"function","name":"destroy","longname":"destroy","scope":"global","___s":true},{"meta":{"range":[259,414],"filename":"WebGLStencilManager.js","lineno":17,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Sets the drawing context to the one given in parameter.","kind":"function","name":"setContext","params":[{"type":{"names":["WebGLContext"]},"description":"the current WebGL drawing context","name":"gl"}],"longname":"setContext","scope":"global","___s":true},{"meta":{"range":[506,689],"filename":"WebGLStencilManager.js","lineno":28,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Applies the Mask and adds it to the current filter stack.","kind":"function","name":"pushMask","params":[{"type":{"names":["Graphics"]},"name":"graphics"},{"type":{"names":["Array"]},"name":"webGLData"},{"type":{"names":["Object"]},"name":"renderSession"}],"longname":"pushMask","scope":"global","___s":true},{"meta":{"range":[2892,3060],"filename":"WebGLStencilManager.js","lineno":120,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"TODO this does not belong here!","kind":"function","name":"bindGraphics","params":[{"type":{"names":["Graphics"]},"name":"graphics"},{"type":{"names":["Array"]},"name":"webGLData"},{"type":{"names":["Object"]},"name":"renderSession"}],"longname":"bindGraphics","scope":"global","___s":true},{"meta":{"range":[5470,5595],"filename":"WebGLStencilManager.js","lineno":193,"path":"src\\pixi\\renderers\\webgl\\utils"},"kind":"function","name":"popStencil","params":[{"type":{"names":["Graphics"]},"name":"graphics"},{"type":{"names":["Array"]},"name":"webGLData"},{"type":{"names":["Object"]},"name":"renderSession"}],"longname":"popStencil","scope":"global","___s":true},{"meta":{"range":[8030,8088],"filename":"WebGLStencilManager.js","lineno":288,"path":"src\\pixi\\renderers\\webgl\\utils"},"description":"Destroys the mask stack.","kind":"function","name":"destroy","longname":"destroy","scope":"global","___s":true},{"meta":{"range":[5527,5557],"filename":"WebGLRenderer.js","lineno":204,"path":"src\\pixi\\renderers\\webgl"},"kind":"function","name":"initContext","longname":"initContext","scope":"global","___s":true},{"meta":{"range":[6666,6795],"filename":"WebGLRenderer.js","lineno":243,"path":"src\\pixi\\renderers\\webgl"},"description":"Renders the stage to its webGL view","kind":"function","name":"render","params":[{"type":{"names":["Stage"]},"description":"the Stage element to be rendered","name":"stage"}],"longname":"render","scope":"global","___s":true},{"meta":{"range":[7563,7801],"filename":"WebGLRenderer.js","lineno":278,"path":"src\\pixi\\renderers\\webgl"},"description":"Renders a Display Object.","kind":"function","name":"renderDisplayObject","params":[{"type":{"names":["DisplayObject"]},"description":"The DisplayObject to render","name":"displayObject"},{"type":{"names":["Point"]},"description":"The projection","name":"projection"},{"type":{"names":["Array"]},"description":"a standard WebGL buffer","name":"buffer"}],"longname":"renderDisplayObject","scope":"global","___s":true},{"meta":{"range":[8679,8890],"filename":"WebGLRenderer.js","lineno":315,"path":"src\\pixi\\renderers\\webgl"},"description":"Resizes the webGL view to the specified width and height.","kind":"function","name":"resize","params":[{"type":{"names":["Number"]},"description":"the new width of the webGL view","name":"width"},{"type":{"names":["Number"]},"description":"the new height of the webGL view","name":"height"}],"longname":"resize","scope":"global","___s":true},{"meta":{"range":[9485,9724],"filename":"WebGLRenderer.js","lineno":341,"path":"src\\pixi\\renderers\\webgl"},"description":"Updates and Creates a WebGL texture for the renderers context.","kind":"function","name":"updateTexture","params":[{"type":{"names":["Texture"]},"description":"the texture to update","name":"texture"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the texture was successfully bound, otherwise false."}],"longname":"updateTexture","scope":"global","___s":true},{"meta":{"range":[11315,11427],"filename":"WebGLRenderer.js","lineno":398,"path":"src\\pixi\\renderers\\webgl"},"description":"Removes everything from the renderer (event listeners, spritebatch, etc...)","kind":"function","name":"destroy","longname":"destroy","scope":"global","___s":true},{"meta":{"range":[12037,12123],"filename":"WebGLRenderer.js","lineno":430,"path":"src\\pixi\\renderers\\webgl"},"description":"Maps Pixi blend modes to WebGL blend modes.","kind":"function","name":"mapBlendModes","longname":"mapBlendModes","scope":"global","___s":true},{"meta":{"range":[3389,3823],"filename":"BaseTexture.js","lineno":137,"path":"src\\pixi\\textures"},"description":"Forces this BaseTexture to be set as loaded, with the given width and height.\rThen calls BaseTexture.dirty.\rImportant for when you don't want to modify the source object by forcing in `complete` or dimension properties it may not have.","kind":"function","name":"forceLoaded","params":[{"type":{"names":["number"]},"description":"The new width to force the BaseTexture to be.","name":"width"},{"type":{"names":["number"]},"description":"The new height to force the BaseTexture to be.","name":"height"}],"longname":"forceLoaded","scope":"global","___s":true},{"meta":{"range":[3999,4062],"filename":"BaseTexture.js","lineno":154,"path":"src\\pixi\\textures"},"description":"Destroys this base texture","kind":"function","name":"destroy","longname":"destroy","scope":"global","___s":true},{"meta":{"range":[4268,4492],"filename":"BaseTexture.js","lineno":171,"path":"src\\pixi\\textures"},"description":"Changes the source image of the texture","kind":"function","name":"updateSourceImage","params":[{"type":{"names":["String"]},"description":"the path of the image","name":"newSrc"}],"deprecated":"This method is deprecated. Please use Phaser.Sprite.loadTexture instead.","longname":"updateSourceImage","scope":"global","___s":true},{"meta":{"range":[4679,4746],"filename":"BaseTexture.js","lineno":183,"path":"src\\pixi\\textures"},"description":"Sets all glTextures to be dirty.","kind":"function","name":"dirty","longname":"dirty","scope":"global","___s":true},{"meta":{"range":[4905,5141],"filename":"BaseTexture.js","lineno":196,"path":"src\\pixi\\textures"},"description":"Removes the base texture from the GPU, useful for managing resources on the GPU.\rAtexture is still 100% usable and will simply be reuploaded if there is a sprite on screen that is using it.","kind":"function","name":"unloadFromGPU","longname":"unloadFromGPU","scope":"global","___s":true},{"meta":{"range":[5590,5935],"filename":"BaseTexture.js","lineno":224,"path":"src\\pixi\\textures"},"description":"Helper function that creates a base texture from the given canvas element.","scope":"static","kind":"function","name":"fromCanvas","params":[{"type":{"names":["Canvas"]},"description":"The canvas element source of the texture","name":"canvas"},{"type":{"names":["Number"]},"description":"See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values","name":"scaleMode"}],"returns":[{"type":{"names":["BaseTexture"]}}],"longname":"fromCanvas","___s":true},{"meta":{"range":[4712,4975],"filename":"RenderTexture.js","lineno":139,"path":"src\\pixi\\textures"},"description":"Resizes the RenderTexture.","kind":"function","name":"resize","params":[{"type":{"names":["Number"]},"description":"The width to resize to.","name":"width"},{"type":{"names":["Number"]},"description":"The height to resize to.","name":"height"},{"type":{"names":["Boolean"]},"description":"Should the baseTexture.width and height values be resized as well?","name":"updateBase"}],"longname":"resize","scope":"global","___s":true},{"meta":{"range":[5780,5840],"filename":"RenderTexture.js","lineno":175,"path":"src\\pixi\\textures"},"description":"Clears the RenderTexture.","kind":"function","name":"clear","longname":"clear","scope":"global","___s":true},{"meta":{"range":[9206,9303],"filename":"RenderTexture.js","lineno":296,"path":"src\\pixi\\textures"},"description":"Will return a HTML Image of the texture","kind":"function","name":"getImage","returns":[{"type":{"names":["Image"]}}],"longname":"getImage","scope":"global","___s":true},{"meta":{"range":[9450,9682],"filename":"RenderTexture.js","lineno":309,"path":"src\\pixi\\textures"},"description":"Will return a base64 encoded string of this texture. It works by calling RenderTexture.getCanvas and then running toDataURL on that.","kind":"function","name":"getBase64","returns":[{"type":{"names":["String"]},"description":"A base64 encoded string of the texture."}],"longname":"getBase64","scope":"global","___s":true},{"meta":{"range":[9788,9985],"filename":"RenderTexture.js","lineno":320,"path":"src\\pixi\\textures"},"description":"Creates a Canvas element, renders this RenderTexture to it and then returns it.","kind":"function","name":"getCanvas","returns":[{"type":{"names":["HTMLCanvasElement"]},"description":"A Canvas element with the texture rendered on."}],"longname":"getCanvas","scope":"global","___s":true},{"meta":{"range":[4073,4208],"filename":"Texture.js","lineno":165,"path":"src\\pixi\\textures"},"description":"Destroys this texture","kind":"function","name":"destroy","params":[{"type":{"names":["Boolean"]},"description":"Whether to destroy the base texture as well","name":"destroyBase"}],"longname":"destroy","scope":"global","___s":true},{"meta":{"range":[4352,4524],"filename":"Texture.js","lineno":178,"path":"src\\pixi\\textures"},"description":"Specifies the region of the baseTexture that this texture will use.","kind":"function","name":"setFrame","params":[{"type":{"names":["Rectangle"]},"description":"The frame of the texture to set it to","name":"frame"}],"longname":"setFrame","scope":"global","___s":true},{"meta":{"range":[6225,6571],"filename":"Texture.js","lineno":249,"path":"src\\pixi\\textures"},"description":"Helper function that creates a new a Texture based on the given canvas element.","scope":"static","kind":"function","name":"fromCanvas","params":[{"type":{"names":["Canvas"]},"description":"The canvas element source of the texture","name":"canvas"},{"type":{"names":["Number"]},"description":"See {{#crossLink \"PIXI/scaleModes:property\"}}PIXI.scaleModes{{/crossLink}} for possible values","name":"scaleMode"}],"returns":[{"type":{"names":["Texture"]}}],"longname":"fromCanvas","___s":true},{"meta":{"range":[204,347],"filename":"CanvasPool.js","lineno":7,"path":"src\\pixi\\utils"},"description":"The CanvasPool is a global static object that allows Pixi and Phaser to pool canvas DOM elements.","kind":"class","name":"CanvasPool","scope":"static","longname":"CanvasPool","___s":true},{"meta":{"range":[376,751],"filename":"CanvasPool.js","lineno":15,"path":"src\\pixi\\utils"},"description":"Creates a new Canvas DOM element, or pulls one from the pool if free.","kind":"function","name":"create","scope":"static","params":[{"type":{"names":["any"]},"description":"The parent of the canvas element.","name":"parent"},{"type":{"names":["number"]},"description":"The width of the canvas element.","name":"width"},{"type":{"names":["number"]},"description":"The height of the canvas element.","name":"height"}],"returns":[{"type":{"names":["HTMLCanvasElement"]},"description":"The canvas element."}],"longname":"create","___s":true},{"meta":{"range":[1474,1611],"filename":"CanvasPool.js","lineno":58,"path":"src\\pixi\\utils"},"description":"Gets the first free canvas index from the pool.","kind":"function","name":"getFirst","scope":"static","returns":[{"type":{"names":["number"]}}],"longname":"getFirst","___s":true},{"meta":{"range":[1886,2092],"filename":"CanvasPool.js","lineno":81,"path":"src\\pixi\\utils"},"description":"Removes the parent from a canvas element from the pool, freeing it up for re-use.","kind":"function","name":"remove","params":[{"type":{"names":["any"]},"description":"The parent of the canvas element.","name":"parent"}],"scope":"static","longname":"remove","___s":true},{"meta":{"range":[2459,2682],"filename":"CanvasPool.js","lineno":104,"path":"src\\pixi\\utils"},"description":"Removes the parent from a canvas element from the pool, freeing it up for re-use.","kind":"function","name":"removeByCanvas","params":[{"type":{"names":["HTMLCanvasElement"]},"description":"The canvas element to remove","name":"canvas"}],"scope":"static","longname":"removeByCanvas","___s":true},{"meta":{"range":[3057,3266],"filename":"CanvasPool.js","lineno":127,"path":"src\\pixi\\utils"},"description":"Gets the total number of used canvas elements in the pool.","kind":"function","name":"getTotal","scope":"static","returns":[{"type":{"names":["number"]},"description":"The number of in-use (parented) canvas elements in the pool."}],"longname":"getTotal","___s":true},{"meta":{"range":[3554,3763],"filename":"CanvasPool.js","lineno":151,"path":"src\\pixi\\utils"},"description":"Gets the total number of free canvas elements in the pool.","kind":"function","name":"getFree","scope":"static","returns":[{"type":{"names":["number"]},"description":"The number of free (un-parented) canvas elements in the pool."}],"longname":"getFree","___s":true},{"meta":{"range":[889,1063],"filename":"EventTarget.js","lineno":34,"path":"src\\pixi\\utils"},"description":"Mixes in the properties of the EventTarget prototype onto another object","kind":"function","name":"mixin","params":[{"type":{"names":["Object"]},"description":"The obj to mix into","name":"object"}],"longname":"mixin","scope":"global","___s":true},{"meta":{"range":[1107,1351],"filename":"EventTarget.js","lineno":41,"path":"src\\pixi\\utils"},"description":"Return a list of assigned event listeners.","kind":"function","name":"listeners","params":[{"type":{"names":["String"]},"description":"The events that should be listed.","name":"eventName"}],"returns":[{"type":{"names":["Array"]},"description":"An array of listener functions"}],"longname":"listeners","scope":"global","___s":true},{"meta":{"range":[1578,1854],"filename":"EventTarget.js","lineno":54,"path":"src\\pixi\\utils"},"description":"Emit an event to all registered event listeners.","kind":"function","name":"emit","alias":"dispatchEvent","params":[{"type":{"names":["String"]},"description":"The name of the event.","name":"eventName"}],"returns":[{"type":{"names":["Boolean"]},"description":"Indication if we've emitted an event."}],"longname":"emit","scope":"global","___s":true},{"meta":{"range":[3486,3752],"filename":"EventTarget.js","lineno":107,"path":"src\\pixi\\utils"},"description":"Register a new EventListener for the given event.","kind":"function","name":"on","alias":"addEventListener","params":[{"type":{"names":["String"]},"description":"Name of the event.","name":"eventName"},{"type":{"names":["Functon"]},"description":"fn Callback function.","name":"callback"}],"longname":"on","scope":"global","___s":true},{"meta":{"range":[4035,4261],"filename":"EventTarget.js","lineno":124,"path":"src\\pixi\\utils"},"description":"Add an EventListener that's only called once.","kind":"function","name":"once","params":[{"type":{"names":["String"]},"description":"Name of the event.","name":"eventName"},{"type":{"names":["function"]},"description":"Callback function.","name":"callback"}],"longname":"once","scope":"global","___s":true},{"meta":{"range":[4678,4946],"filename":"EventTarget.js","lineno":143,"path":"src\\pixi\\utils"},"description":"Remove event listeners.","kind":"function","name":"off","alias":"removeEventListener","params":[{"type":{"names":["String"]},"description":"The event we want to remove.","name":"eventName"},{"type":{"names":["function"]},"description":"The listener that we need to find.","name":"callback"}],"longname":"off","scope":"global","___s":true},{"meta":{"range":[5586,5819],"filename":"EventTarget.js","lineno":173,"path":"src\\pixi\\utils"},"description":"Remove all listeners or only the listeners for the specified event.","kind":"function","name":"removeAllListeners","params":[{"type":{"names":["String"]},"description":"The event you want to remove all listeners for.","name":"eventName"}],"longname":"removeAllListeners","scope":"global","___s":true},{"meta":{"range":[7944,8060],"filename":"EventTarget.js","lineno":268,"path":"src\\pixi\\utils"},"description":"Stops the propagation of events up the scene graph (prevents bubbling).","kind":"function","name":"stopPropagation","longname":"stopPropagation","scope":"global","___s":true},{"meta":{"range":[8163,8302],"filename":"EventTarget.js","lineno":277,"path":"src\\pixi\\utils"},"description":"Stops the propagation of events to sibling listeners (no longer calls any listeners).","kind":"function","name":"stopImmediatePropagation","longname":"stopImmediatePropagation","scope":"global","___s":true},{"meta":{"range":[69,179],"filename":"Utils.js","lineno":5,"path":"src\\pixi\\utils"},"description":"Converts a hex color number to an [R, G, B] array","kind":"function","name":"hex2rgb","params":[{"type":{"names":["Number"]},"name":"hex"}],"longname":"hex2rgb","scope":"global","___s":true},{"meta":{"range":[304,418],"filename":"Utils.js","lineno":15,"path":"src\\pixi\\utils"},"description":"Converts a color as an [R, G, B] array to a hex number","kind":"function","name":"rgb2hex","params":[{"type":{"names":["Array"]},"name":"rgb"}],"longname":"rgb2hex","scope":"global","___s":true},{"meta":{"range":[525,716],"filename":"Utils.js","lineno":25,"path":"src\\pixi\\utils"},"description":"Checks whether the Canvas BlendModes are supported by the current browser for drawImage","kind":"function","name":"canUseNewCanvasBlendModes","returns":[{"type":{"names":["Boolean"]},"description":"whether they are supported"}],"longname":"canUseNewCanvasBlendModes","scope":"global","___s":true},{"meta":{"range":[1627,1916],"filename":"Utils.js","lineno":63,"path":"src\\pixi\\utils"},"description":"Given a number, this function returns the closest number that is a power of two\rthis function is taken from Starling Framework as its pretty neat ;)","kind":"function","name":"getNextPowerOfTwo","params":[{"type":{"names":["Number"]},"name":"number"}],"returns":[{"type":{"names":["Number"]},"description":"the closest number that is a power of two"}],"longname":"getNextPowerOfTwo","scope":"global","___s":true},{"meta":{"range":[2196,2374],"filename":"Utils.js","lineno":83,"path":"src\\pixi\\utils"},"description":"checks if the given width and height make a power of two texture","kind":"function","name":"isPowerOfTwo","params":[{"type":{"names":["Number"]},"name":"width"},{"type":{"names":["Number"]},"name":"height"}],"returns":[{"type":{"names":["Boolean"]}}],"longname":"isPowerOfTwo","scope":"global","___s":true},{"meta":{"range":[732,886],"filename":"EventTarget.js","lineno":27,"path":"src\\plugins\\path"},"description":"Backward compat from when this used to be a function","name":"call","longname":"Phaser.EventTarget.call","kind":"function","memberof":"Phaser.EventTarget","scope":"static","___s":true},{"meta":{"range":[895,1069],"filename":"EventTarget.js","lineno":34,"path":"src\\plugins\\path"},"description":"Mixes in the properties of the EventTarget prototype onto another object","kind":"function","name":"mixin","params":[{"type":{"names":["Object"]},"description":"The obj to mix into","name":"object"}],"longname":"mixin","scope":"global","___s":true},{"meta":{"range":[1113,1357],"filename":"EventTarget.js","lineno":41,"path":"src\\plugins\\path"},"description":"Return a list of assigned event listeners.","kind":"function","name":"listeners","params":[{"type":{"names":["String"]},"description":"The events that should be listed.","name":"eventName"}],"returns":[{"type":{"names":["Array"]},"description":"An array of listener functions"}],"longname":"listeners","scope":"global","___s":true},{"meta":{"range":[1584,1860],"filename":"EventTarget.js","lineno":54,"path":"src\\plugins\\path"},"description":"Emit an event to all registered event listeners.","kind":"function","name":"emit","alias":"dispatchEvent","params":[{"type":{"names":["String"]},"description":"The name of the event.","name":"eventName"}],"returns":[{"type":{"names":["Boolean"]},"description":"Indication if we've emitted an event."}],"longname":"emit","scope":"global","___s":true},{"meta":{"range":[3494,3760],"filename":"EventTarget.js","lineno":107,"path":"src\\plugins\\path"},"description":"Register a new EventListener for the given event.","kind":"function","name":"on","alias":"addEventListener","params":[{"type":{"names":["String"]},"description":"Name of the event.","name":"eventName"},{"type":{"names":["Functon"]},"description":"fn Callback function.","name":"callback"}],"longname":"on","scope":"global","___s":true},{"meta":{"range":[4043,4269],"filename":"EventTarget.js","lineno":124,"path":"src\\plugins\\path"},"description":"Add an EventListener that's only called once.","kind":"function","name":"once","params":[{"type":{"names":["String"]},"description":"Name of the event.","name":"eventName"},{"type":{"names":["function"]},"description":"Callback function.","name":"callback"}],"longname":"once","scope":"global","___s":true},{"meta":{"range":[4686,4954],"filename":"EventTarget.js","lineno":143,"path":"src\\plugins\\path"},"description":"Remove event listeners.","kind":"function","name":"off","alias":"removeEventListener","params":[{"type":{"names":["String"]},"description":"The event we want to remove.","name":"eventName"},{"type":{"names":["function"]},"description":"The listener that we need to find.","name":"callback"}],"longname":"off","scope":"global","___s":true},{"meta":{"range":[5594,5827],"filename":"EventTarget.js","lineno":173,"path":"src\\plugins\\path"},"description":"Remove all listeners or only the listeners for the specified event.","kind":"function","name":"removeAllListeners","params":[{"type":{"names":["String"]},"description":"The event you want to remove all listeners for.","name":"eventName"}],"longname":"removeAllListeners","scope":"global","___s":true},{"meta":{"range":[6499,7949],"filename":"EventTarget.js","lineno":202,"path":"src\\plugins\\path"},"description":"Creates an homogenous object for tracking events so users can know what to expect.","kind":"class","classdesc":"Event","augments":["Object"],"params":[{"type":{"names":["Object"]},"description":"The target object that the event is called on","name":"target"},{"type":{"names":["String"]},"description":"The string name of the event that was triggered","name":"name"},{"type":{"names":["Object"]},"description":"Arbitrary event data to pass along","name":"data"}],"name":"Event","longname":"Phaser.Event","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[7330,7350],"filename":"EventTarget.js","lineno":235,"path":"src\\plugins\\path"},"description":"The original target the event triggered on.","properties":[{"name":"target"}],"type":{"names":["Object"]},"readonly":true,"name":"target","longname":"Phaser.Event#target","kind":"member","memberof":"Phaser.Event","scope":"instance","___s":true},{"meta":{"range":[7506,7522],"filename":"EventTarget.js","lineno":244,"path":"src\\plugins\\path"},"description":"The string name of the event that this represents.","properties":[{"name":"type"}],"type":{"names":["String"]},"readonly":true,"name":"type","longname":"Phaser.Event#type","kind":"member","memberof":"Phaser.Event","scope":"instance","___s":true},{"meta":{"range":[7672,7688],"filename":"EventTarget.js","lineno":253,"path":"src\\plugins\\path"},"description":"The data that was passed in with this event.","properties":[{"name":"data"}],"type":{"names":["Object"]},"readonly":true,"name":"data","longname":"Phaser.Event#data","kind":"member","memberof":"Phaser.Event","scope":"instance","___s":true},{"meta":{"range":[7918,7945],"filename":"EventTarget.js","lineno":265,"path":"src\\plugins\\path"},"description":"The timestamp when the event occurred.","properties":[{"name":"timeStamp"}],"type":{"names":["Number"]},"readonly":true,"name":"timeStamp","longname":"Phaser.Event#timeStamp","kind":"member","memberof":"Phaser.Event","scope":"instance","___s":true},{"meta":{"range":[7954,8070],"filename":"EventTarget.js","lineno":268,"path":"src\\plugins\\path"},"description":"Stops the propagation of events up the scene graph (prevents bubbling).","kind":"function","name":"stopPropagation","longname":"stopPropagation","scope":"global","___s":true},{"meta":{"range":[8175,8314],"filename":"EventTarget.js","lineno":277,"path":"src\\plugins\\path"},"description":"Stops the propagation of events to sibling listeners (no longer calls any listeners).","kind":"function","name":"stopImmediatePropagation","longname":"stopImmediatePropagation","scope":"global","___s":true},{"meta":{"range":[755,2800],"filename":"Path.js","lineno":18,"path":"src\\plugins\\path"},"description":"A Phaser.Path contains all the functions need to create and manipulate a single Path object.\rA Path is a list of PathPoint objects connected by Hermite curves.","kind":"class","classdesc":"Phaser.Path","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the Phaser.Game instance.","name":"game"},{"type":{"names":["number"]},"optional":true,"defaultvalue":"Phaser.Path.CoordinateSystems.WORLD","description":"The coordinate system used by the Path.","name":"type"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should this Path loop or not when a PathFollower reaches the end of it?","name":"loops"}],"name":"Path","longname":"Phaser.Path","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1033,1049],"filename":"Path.js","lineno":26,"path":"src\\plugins\\path"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"game","longname":"Phaser.Path#game","kind":"member","memberof":"Phaser.Path","scope":"instance","___s":true},{"meta":{"range":[1160,1188],"filename":"Path.js","lineno":31,"path":"src\\plugins\\path"},"properties":[{"type":{"names":["number"]},"description":"The coordinate system used by the Path.","name":"coordinateSystem"}],"name":"coordinateSystem","longname":"Phaser.Path#coordinateSystem","kind":"member","memberof":"Phaser.Path","scope":"instance","___s":true},{"meta":{"range":[1321,1339],"filename":"Path.js","lineno":36,"path":"src\\plugins\\path"},"properties":[{"type":{"names":["boolean"]},"description":"Should this Path loop or not when a PathFollower reaches the end of it?","name":"loops"}],"name":"loops","longname":"Phaser.Path#loops","kind":"member","memberof":"Phaser.Path","scope":"instance","___s":true},{"meta":{"range":[1466,1484],"filename":"Path.js","lineno":41,"path":"src\\plugins\\path"},"properties":[{"type":{"names":["string"]},"description":"The key of the JSON file in the cache used to define this path.","name":"cacheKey"}],"name":"cacheKey","longname":"Phaser.Path#cacheKey","kind":"member","memberof":"Phaser.Path","scope":"instance","___s":true},{"meta":{"range":[1634,1647],"filename":"Path.js","lineno":46,"path":"src\\plugins\\path"},"properties":[{"type":{"names":["string"]},"description":"The key of the object within the JSON data. Used if there are multiple paths per JSON file.","name":"key"}],"name":"key","longname":"Phaser.Path#key","kind":"member","memberof":"Phaser.Path","scope":"instance","___s":true},{"meta":{"range":[2996,3026],"filename":"Path.js","lineno":105,"path":"src\\plugins\\path"},"kind":"constant","type":{"names":["number"]},"name":"PATH","longname":"Phaser.Path.PathTypes.PATH","memberof":"Phaser.Path.PathTypes","scope":"static","___s":true},{"meta":{"range":[3071,3103],"filename":"Path.js","lineno":111,"path":"src\\plugins\\path"},"kind":"constant","type":{"names":["number"]},"name":"BRANCH","longname":"Phaser.Path.PathTypes.BRANCH","memberof":"Phaser.Path.PathTypes","scope":"static","___s":true},{"meta":{"range":[3148,3184],"filename":"Path.js","lineno":117,"path":"src\\plugins\\path"},"kind":"constant","type":{"names":["number"]},"name":"ATTACHED","longname":"Phaser.Path.BranchTypes.ATTACHED","memberof":"Phaser.Path.BranchTypes","scope":"static","___s":true},{"meta":{"range":[3229,3263],"filename":"Path.js","lineno":123,"path":"src\\plugins\\path"},"kind":"constant","type":{"names":["number"]},"name":"JOINED","longname":"Phaser.Path.BranchTypes.JOINED","memberof":"Phaser.Path.BranchTypes","scope":"static","___s":true},{"meta":{"range":[3352,3391],"filename":"Path.js","lineno":130,"path":"src\\plugins\\path"},"description":"Points are relative to the World origin.","kind":"constant","type":{"names":["number"]},"name":"WORLD","longname":"Phaser.Path.CoordinateSystems.WORLD","memberof":"Phaser.Path.CoordinateSystems","scope":"static","___s":true},{"meta":{"range":[3481,3521],"filename":"Path.js","lineno":137,"path":"src\\plugins\\path"},"description":"Points are relative to the screen origin.","kind":"constant","type":{"names":["number"]},"name":"SCREEN","longname":"Phaser.Path.CoordinateSystems.SCREEN","memberof":"Phaser.Path.CoordinateSystems","scope":"static","___s":true},{"meta":{"range":[3609,3649],"filename":"Path.js","lineno":144,"path":"src\\plugins\\path"},"description":"Points are relative to the first point.","kind":"constant","type":{"names":["number"]},"name":"OFFSET","longname":"Phaser.Path.CoordinateSystems.OFFSET","memberof":"Phaser.Path.CoordinateSystems","scope":"static","___s":true},{"meta":{"range":[3687,4057],"filename":"Path.js","lineno":148,"path":"src\\plugins\\path"},"description":"Initialize a Path based on the given coordinate system.","kind":"function","name":"create","params":[{"type":{"names":["number","string"]},"description":"The Phaser.Path.CoordinateSystems type to use.","name":"coordinateSystem"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should this Path loop or not when a PathFollower reaches the end of it?","name":"loops"}],"returns":[{"type":{"names":["Phaser.Path"]},"description":"This Path object."}],"memberof":"Phaser.Path","longname":"Phaser.Path#create","scope":"instance","___s":true},{"meta":{"range":[4780,4946],"filename":"Path.js","lineno":185,"path":"src\\plugins\\path"},"description":"Clone this Path object. It clones the origin and points data.","kind":"function","name":"clone","returns":[{"type":{"names":["Phaser.Path"]},"description":"The cloned Path."}],"memberof":"Phaser.Path","longname":"Phaser.Path#clone","scope":"instance","___s":true},{"meta":{"range":[5236,5987],"filename":"Path.js","lineno":205,"path":"src\\plugins\\path"},"description":"Creates a new PathPoint object, relative to the path origin, and adds it to this path.","kind":"function","name":"addPathPoint","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x position of the PathPoint.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y position of the PathPoint.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The vx tangent vector value of the PathPoint.","name":"vx"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The vy tangent vector value of the PathPoint.","name":"vy"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The speed value of the PathPoint.","name":"speed"},{"type":{"names":["number"]},"optional":true,"defaultvalue":"{}","description":"The data object","name":"data"},{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"The index of the new path point. If not given, will add point to end of point list.","name":"index"}],"returns":[{"type":{"names":["Phaser.PathPoint"]},"description":"The PathPoint object that was created."}],"memberof":"Phaser.Path","longname":"Phaser.Path#addPathPoint","scope":"instance","___s":true},{"meta":{"range":[6559,6809],"filename":"Path.js","lineno":240,"path":"src\\plugins\\path"},"description":"Remove a PathPoint from this paths point list.","kind":"function","name":"removePathPoint","params":[{"type":{"names":["number"]},"optional":true,"description":"The index of the PathPoint to remove.","name":"index"}],"returns":[{"type":{"names":["Phaser.PathPoint"]},"description":"The removed PathPoint object."}],"memberof":"Phaser.Path","longname":"Phaser.Path#removePathPoint","scope":"instance","___s":true},{"meta":{"range":[7027,7631],"filename":"Path.js","lineno":260,"path":"src\\plugins\\path"},"description":"Set a PathPoint objects position and tangent vector.","kind":"function","name":"setPathPoint","params":[{"type":{"names":["number"]},"description":"The index of the PathPoint in this paths point list.","name":"index"},{"type":{"names":["number"]},"description":"The x coordinate of the PathPoint.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the PathPoint.","name":"y"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate of the tangent vector to create the curve from.","name":"vx"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate of the tangent vector to create the curve from.","name":"vy"}],"returns":[{"type":{"names":["Phaser.PathPoint"]},"description":"A reference to the PathPoint object that was updated."}],"memberof":"Phaser.Path","longname":"Phaser.Path#setPathPoint","scope":"instance","___s":true},{"meta":{"range":[7852,8202],"filename":"Path.js","lineno":284,"path":"src\\plugins\\path"},"description":"Translate all points in a path by the given point.","kind":"function","name":"translatePoints","params":[{"type":{"names":["Phaser.Point","object"]},"description":"A Phaser.Point, or a Point-like Object with public `x` and `y` properties, that will be used to modify all points in this paths point list.","name":"point"}],"returns":[{"type":{"names":["Phaser.Path"]},"description":"This Path object."}],"memberof":"Phaser.Path","longname":"Phaser.Path#translatePoints","scope":"instance","___s":true},{"meta":{"range":[8408,8676],"filename":"Path.js","lineno":302,"path":"src\\plugins\\path"},"description":"Set the Path level offset which will affect all of this paths PathFollowers.","kind":"function","name":"setOffset","params":[{"type":{"names":["number"]},"description":"The x offset.","name":"x"},{"type":{"names":["number"]},"description":"The y offset.","name":"y"}],"returns":[{"type":{"names":["Phaser.Path"]},"description":"This Path object."}],"memberof":"Phaser.Path","longname":"Phaser.Path#setOffset","scope":"instance","___s":true},{"meta":{"range":[8812,9255],"filename":"Path.js","lineno":319,"path":"src\\plugins\\path"},"description":"Get a point on the the current Path curve.","kind":"function","name":"getPointOnThisCurve","params":[{"type":{"names":["Phaser.Hermite"]},"description":"A Phaser.Hermite curve object.","name":"curve"},{"type":{"names":["number"]},"optional":true,"defaultvalue":"0 .. 1.0","description":"The distance on the curve to get the point from. Where 0 is the start of the curve, and 1 is the end.","name":"t"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"A point containing the x and y values at the specified distance (t) value in the curve."}],"memberof":"Phaser.Path","longname":"Phaser.Path#getPointOnThisCurve","scope":"instance","___s":true},{"meta":{"range":[9525,9884],"filename":"Path.js","lineno":343,"path":"src\\plugins\\path"},"description":"Gets the points on the curve representing the end points of the line segments that make up the curve.","kind":"function","name":"getControlPointsOnThisCurve","params":[{"type":{"names":["Phaser.Hermite"]},"description":"A Phaser.Hermite curve.","name":"curve"}],"returns":[{"type":{"names":["array"]},"description":"An array of points representing the end points of 10 line segments that make up the curve."}],"memberof":"Phaser.Path","longname":"Phaser.Path#getControlPointsOnThisCurve","scope":"instance","___s":true},{"meta":{"range":[10145,10755],"filename":"Path.js","lineno":360,"path":"src\\plugins\\path"},"description":"Get a PathPoint from this path. Automatically handles path looping.\r\rThe values from the PathPoint are copied into the given PathPoint object, which must\rbe a reference to a pre-existing PathPoint, as it's not returned by this method.","kind":"function","name":"getPathPoint","params":[{"type":{"names":["number"]},"description":"The index of the point in this path to get.","name":"index"},{"type":{"names":["Phaser.PathPoint"]},"description":"A PathPoint object into which the found point object is cloned.","name":"point"}],"returns":[{"type":{"names":["boolean"]},"description":"false if the index is past the end of the path and it doesn't loop, otherwise true."}],"memberof":"Phaser.Path","longname":"Phaser.Path#getPathPoint","scope":"instance","___s":true},{"meta":{"range":[11666,12161],"filename":"Path.js","lineno":405,"path":"src\\plugins\\path"},"description":"Get a reference to a PathPoint from this Path, handle path looping.\r\rNOTE: because this is a PathPoint reference, it does not take into account the coordinateSystem selected, it will be WORLD, or OFFSET unmodified","kind":"function","name":"getPathPointReference","params":[{"type":{"names":["number"]},"description":"The index of the point in this path to get.","name":"index"}],"returns":[{"type":{"names":["Phaser.PathPoint"]},"description":"A reference to the PathPoint object in this Path, or null if index is out of range."}],"memberof":"Phaser.Path","longname":"Phaser.Path#getPathPointReference","scope":"instance","___s":true},{"meta":{"range":[12539,12972],"filename":"Path.js","lineno":429,"path":"src\\plugins\\path"},"description":"Get the curve from the given point index to the next.\r\rIf the curve has been created previously, use that definition again, otherwise calculate it now.","kind":"function","name":"getCurve","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The index of the point in this path to get the curve from.","name":"index"}],"returns":[{"type":{"names":["Phaser.Hermite"]},"description":"A new Hermite object representing the curve starting at the 'index' path point."}],"memberof":"Phaser.Path","longname":"Phaser.Path#getCurve","scope":"instance","___s":true},{"meta":{"range":[14110,14657],"filename":"Path.js","lineno":481,"path":"src\\plugins\\path"},"description":"Find the first matching PathPoint in this path.\rIt works by taking the given PathPoint object, and then iterating through all points\rin this Path until it finds one with the same values, then returns the index to it.","kind":"function","name":"pointIndex","params":[{"type":{"names":["Phaser.PathPoint"]},"description":"The PathPoint object that will have its values compared to all the points in this Path.","name":"pathPoint"}],"returns":[{"type":{"names":["number"]},"description":"The index of the PathPoint in this Path if an equal match is found, or -1 if no match is found."}],"memberof":"Phaser.Path","longname":"Phaser.Path#pointIndex","scope":"instance","___s":true},{"meta":{"range":[15296,15543],"filename":"Path.js","lineno":516,"path":"src\\plugins\\path"},"description":"Is the given PathPoint index the end of this path?","kind":"function","name":"atEnd","params":[{"type":{"names":["number"]},"description":"The index of the PathPoint to test.","name":"index"}],"returns":[{"type":{"names":["boolean"]},"description":"true if index is the last point in this path."}],"memberof":"Phaser.Path","longname":"Phaser.Path#atEnd","scope":"instance","___s":true},{"meta":{"range":[15913,16089],"filename":"Path.js","lineno":536,"path":"src\\plugins\\path"},"description":"The total number of PathPoints in this Path.","kind":"function","name":"Phaser.Path#numPoints\rreturn {number} The total number of PathPoints in this Path.","longname":"Phaser.Path#numPoints\rreturn {number} The total number of PathPoints in this Path.","scope":"global","___s":true},{"meta":{"range":[16218,16759],"filename":"Path.js","lineno":552,"path":"src\\plugins\\path"},"description":"Process the data associated with a point on this Path.\rUsed by Phaser.PathFollower objects as they pass each control point.","kind":"function","name":"processData","params":[{"type":{"names":["Phaser.PathFollower"]},"description":"The PathFollower that is processing the data.","name":"follower"},{"type":{"names":["number"]},"description":"The index of the path point to process.","name":"pathPointIndex"},{"type":{"names":["boolean"]},"description":"Whether or not the follower is traversing the path in reverse.","name":"reversing"}],"returns":[{"type":{"names":["Phaser.PathPoint"]},"description":"The PathPoint that has been processed."}],"memberof":"Phaser.Path","longname":"Phaser.Path#processData","scope":"instance","___s":true},{"meta":{"range":[19256,19483],"filename":"Path.js","lineno":628,"path":"src\\plugins\\path"},"description":"If your Path has 3 points or more, this will walk through it and auto-smooth them out.\rNote: It ignores branches.","kind":"function","name":"smooth","returns":[{"type":{"names":["Phaser.Path"]},"description":"This Path object."}],"memberof":"Phaser.Path","longname":"Phaser.Path#smooth","scope":"instance","___s":true},{"meta":{"range":[20777,21130],"filename":"Path.js","lineno":693,"path":"src\\plugins\\path"},"description":"Draw the path on given canvas context. Used for debugging.","kind":"function","name":"debug","params":[{"type":{"names":["CanvasContext2D"]},"description":"The canvas context to draw the path on.","name":"ctx"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Whether or not to highlight the active segments of this Path or not.","name":"active"}],"returns":[{"type":{"names":["Phaser.Path"]},"description":"This Path object."}],"memberof":"Phaser.Path","longname":"Phaser.Path#debug","scope":"instance","___s":true},{"meta":{"range":[23386,23751],"filename":"Path.js","lineno":799,"path":"src\\plugins\\path"},"description":"Serializes this Path into a JSON object and returns it.","tags":[{"originalTitle":"methods","title":"methods","text":"Phaser.Path#toJSON","value":"Phaser.Path#toJSON"}],"returns":[{"type":{"names":["Object"]},"description":"A JSON object representing this Path."}],"name":"toJSON","longname":"Phaser.Path#toJSON","kind":"function","memberof":"Phaser.Path","scope":"instance","___s":true},{"meta":{"range":[1591,6080],"filename":"PathFollower.js","lineno":25,"path":"src\\plugins\\path"},"description":"A PathFollower is a virtual entity that follows the Path.\rIt is usually linked to a game object such as a Sprite and it will control either the\rposition of that object, or its velocity if it is a physics object.\r\rCallbacks will be triggered when certain events happen as the follower moves.  These\rmay be used to aid in the creation of complex behaviours for the game objects.","kind":"class","classdesc":"Phaser.PathFollower","params":[{"type":{"names":["Phaser.Path"]},"description":"The Path object which this follower is created on.","name":"path"},{"type":{"names":["Phaser.Sprite","object"]},"description":"The game object which this follower controls. Requires public properties: `x`, `y` for position and `rotation` for angle control (if specified).","name":"follower"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The current speed of this follower in pixels per frame. This value is multiplied with the Path segment speed to give the final value used.","name":"speed"},{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"If `null` then the PathFollower won't rotate. Otherwise it will face in the paths direction plus this offset which is given in radians.","name":"angleOffset"},{"type":{"names":["function"]},"optional":true,"description":"A callback to be invoked when the follower reaches the end of a path.","name":"callbackAtEnd"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If non-zero then the follower expects to control a physics object using \"arcade.moveToObject\" to control velocity.","name":"physicsAdjustTime"}],"name":"PathFollower","longname":"Phaser.PathFollower","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[633,1005],"filename":"PathManagerPlugin.js","lineno":17,"path":"src\\plugins\\path"},"description":"PathManager controls a list of Paths and a list of PathFollowers.\rIt is the central control for the majority of the Pathing API.","kind":"class","classdesc":"Phaser.Plugin.PathManager","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the current Phaser.Game instance.","name":"game"},{"type":{"names":["Phaser.PluginManager"]},"description":"The Phaser Plugin Manager which looks after this plugin.","name":"parent"}],"name":"PathManager","longname":"Phaser.Plugin.PathManager","memberof":"Phaser.Plugin","scope":"static","___s":true},{"meta":{"range":[1429,3219],"filename":"PathManagerPlugin.js","lineno":47,"path":"src\\plugins\\path"},"description":"create a new Path from JSON data\r\rJSON data format:\rrequired: \"coordinateSystem\":, \"smoothness\":, \"loops\":, \"speed\":, \"pointList\":[ {\"x\":, \"y\":}, ... ]\roptional: \"branchFrom\": { \"path\":, \"point\": }, \"joinTo\": { \"path\":, \"point\": }","name":"createPathsFromJSON","longname":"Phaser.Plugin.PathManager#createPathsFromJSON","kind":"function","memberof":"Phaser.Plugin.PathManager","scope":"instance","___s":true},{"meta":{"range":[1074,3189],"filename":"PathPoint.js","lineno":22,"path":"src\\plugins\\path"},"description":"The PathPoint class contains data and functions for each point on a Path.","kind":"class","classdesc":"Phaser.PathPoint","params":[{"type":{"names":["number"]},"description":"The x coordinate of the PathPoint.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the PathPoint.","name":"y"},{"type":{"names":["number"]},"description":"The x coordinate of the tangent vector to create the curve from.","name":"vx"},{"type":{"names":["number"]},"description":"The y coordinate of the tangent vector to create the curve from.","name":"vy"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The speed multiplier for PathFollowers on this Path segment.","name":"speed"},{"type":{"names":["object"]},"optional":true,"description":"The data associated with this point, e.g.: { type: PathPoint.DATA_VALUE, value: XXX }","name":"data"},{"type":{"names":["Phaser.Path"]},"optional":true,"description":"A branched path which is attached to this point.","name":"branchPath"},{"type":{"names":["number"]},"optional":true,"description":"The index where the branch is attached to on the new path.","name":"branchPointIndex"}],"name":"PathPoint","longname":"Phaser.PathPoint","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1486,1496],"filename":"PathPoint.js","lineno":32,"path":"src\\plugins\\path"},"properties":[{"type":{"names":["number"]},"description":"The x coordinate of the PathPoint.","name":"x"}],"name":"x","longname":"Phaser.PathPoint#x","kind":"member","memberof":"Phaser.PathPoint","scope":"instance","___s":true},{"meta":{"range":[1587,1597],"filename":"PathPoint.js","lineno":37,"path":"src\\plugins\\path"},"properties":[{"type":{"names":["number"]},"description":"The y coordinate of the PathPoint.","name":"y"}],"name":"y","longname":"Phaser.PathPoint#y","kind":"member","memberof":"Phaser.PathPoint","scope":"instance","___s":true},{"meta":{"range":[1719,1731],"filename":"PathPoint.js","lineno":42,"path":"src\\plugins\\path"},"properties":[{"type":{"names":["number"]},"description":"The x coordinate of the tangent vector to create the curve from.","name":"vx"}],"name":"vx","longname":"Phaser.PathPoint#vx","kind":"member","memberof":"Phaser.PathPoint","scope":"instance","___s":true},{"meta":{"range":[1853,1865],"filename":"PathPoint.js","lineno":47,"path":"src\\plugins\\path"},"properties":[{"type":{"names":["number"]},"description":"The y coordinate of the tangent vector to create the curve from.","name":"vy"}],"name":"vy","longname":"Phaser.PathPoint#vy","kind":"member","memberof":"Phaser.PathPoint","scope":"instance","___s":true},{"meta":{"range":[1986,2004],"filename":"PathPoint.js","lineno":52,"path":"src\\plugins\\path"},"properties":[{"type":{"names":["number"]},"description":"The speed multiplier for PathFollowers on this path segment.","name":"speed"}],"name":"speed","longname":"Phaser.PathPoint#speed","kind":"member","memberof":"Phaser.PathPoint","scope":"instance","___s":true},{"meta":{"range":[2142,2158],"filename":"PathPoint.js","lineno":57,"path":"src\\plugins\\path"},"properties":[{"type":{"names":["object"]},"description":"Data associated with this point eg: { type: PathPoint.DATA_VALUE, value: XXX }","name":"data"}],"name":"data","longname":"Phaser.PathPoint#data","kind":"member","memberof":"Phaser.PathPoint","scope":"instance","___s":true},{"meta":{"range":[2277,2305],"filename":"PathPoint.js","lineno":62,"path":"src\\plugins\\path"},"properties":[{"type":{"names":["Phaser.Path"]},"description":"A branched path which is attached at this point.","name":"branchPath"}],"name":"branchPath","longname":"Phaser.PathPoint#branchPath","kind":"member","memberof":"Phaser.PathPoint","scope":"instance","___s":true},{"meta":{"range":[2435,2475],"filename":"PathPoint.js","lineno":67,"path":"src\\plugins\\path"},"properties":[{"type":{"names":["number"]},"description":"The index where the branch is attached to on the new path.","name":"branchPointIndex"}],"name":"branchPointIndex","longname":"Phaser.PathPoint#branchPointIndex","kind":"member","memberof":"Phaser.PathPoint","scope":"instance","___s":true},{"meta":{"range":[2620,2639],"filename":"PathPoint.js","lineno":72,"path":"src\\plugins\\path"},"properties":[{"type":{"names":["number"]},"description":"The branch type of the path this point is on. Either 0 (attached) or 1 (joined)","name":"branchType"}],"name":"branchType","longname":"Phaser.PathPoint#branchType","kind":"member","memberof":"Phaser.PathPoint","scope":"instance","___s":true},{"meta":{"range":[2794,2811],"filename":"PathPoint.js","lineno":78,"path":"src\\plugins\\path"},"properties":[{"type":{"names":["number"]},"description":"Once the Hermite curve is calculated, store it to avoid recalculation later.","name":"curve"}],"access":"protected","name":"curve","longname":"Phaser.PathPoint#curve","kind":"member","memberof":"Phaser.PathPoint","scope":"instance","___s":true},{"meta":{"range":[2955,2974],"filename":"PathPoint.js","lineno":84,"path":"src\\plugins\\path"},"properties":[{"type":{"names":["boolean"]},"description":"Is this point a selected (or active) point?","name":"active"}],"tags":[{"originalTitle":"warn","title":"warn","text":"For Path Editor use only","value":"For Path Editor use only"}],"name":"active","longname":"Phaser.PathPoint#active","kind":"member","memberof":"Phaser.PathPoint","scope":"instance","___s":true},{"meta":{"range":[3158,3183],"filename":"PathPoint.js","lineno":90,"path":"src\\plugins\\path"},"properties":[{"type":{"names":["array"]},"description":"A list of Phaser.Point objects representing the control points on the segment.","name":"controlPoints"}],"tags":[{"originalTitle":"warn","title":"warn","text":"For Path Editor use only","value":"For Path Editor use only"}],"name":"controlPoints","longname":"Phaser.PathPoint#controlPoints","kind":"member","memberof":"Phaser.PathPoint","scope":"instance","___s":true},{"meta":{"range":[3296,3326],"filename":"PathPoint.js","lineno":100,"path":"src\\plugins\\path"},"kind":"constant","type":{"names":["number"]},"name":"DATA_NONE","longname":"Phaser.PathPoint.DATA_NONE","memberof":"Phaser.PathPoint","scope":"static","___s":true},{"meta":{"range":[3371,3402],"filename":"PathPoint.js","lineno":106,"path":"src\\plugins\\path"},"kind":"constant","type":{"names":["number"]},"name":"DATA_PAUSE","longname":"Phaser.PathPoint.DATA_PAUSE","memberof":"Phaser.PathPoint","scope":"static","___s":true},{"meta":{"range":[3447,3478],"filename":"PathPoint.js","lineno":112,"path":"src\\plugins\\path"},"kind":"constant","type":{"names":["number"]},"name":"DATA_VALUE","longname":"Phaser.PathPoint.DATA_VALUE","memberof":"Phaser.PathPoint","scope":"static","___s":true},{"meta":{"range":[3523,3556],"filename":"PathPoint.js","lineno":118,"path":"src\\plugins\\path"},"kind":"constant","type":{"names":["number"]},"name":"DATA_COUNTER","longname":"Phaser.PathPoint.DATA_COUNTER","memberof":"Phaser.PathPoint","scope":"static","___s":true},{"meta":{"range":[3599,4093],"filename":"PathPoint.js","lineno":122,"path":"src\\plugins\\path"},"description":"Sets the x, y and optionally vx and vy properties of this PathPoint.","kind":"function","name":"setTo","params":[{"type":{"names":["number"]},"description":"The x coordinate of the PathPoint.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of the PathPoint.","name":"y"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate of the tangent vector to create the curve from.","name":"vx"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate of the tangent vector to create the curve from.","name":"vy"}],"returns":[{"type":{"names":["Phaser.PathPoint"]},"description":"This object."}],"memberof":"Phaser.PathPoint","longname":"Phaser.PathPoint#setTo","scope":"instance","___s":true},{"meta":{"range":[4511,4867],"filename":"PathPoint.js","lineno":154,"path":"src\\plugins\\path"},"description":"Sets the tangent vector properties of this PathPoint.","kind":"function","name":"setTangent","params":[{"type":{"names":["number"]},"description":"The x coordinate of the tangent vector to create the curve from.","name":"vx"},{"type":{"names":["number"]},"description":"The y coordinate of the tangent vector to create the curve from.","name":"vy"}],"returns":[{"type":{"names":["Phaser.PathPoint"]},"description":"This object."}],"memberof":"Phaser.PathPoint","longname":"Phaser.PathPoint#setTangent","scope":"instance","___s":true},{"meta":{"range":[5124,5447],"filename":"PathPoint.js","lineno":174,"path":"src\\plugins\\path"},"description":"Creates a clone of this PathPoint object.","kind":"function","name":"clone","params":[{"type":{"names":["Phaser.PathPoint"]},"optional":true,"description":"An optional PathPoint object into which this object is cloned. If no object is provided a new PathPoint is created.","name":"out"}],"returns":[{"type":{"names":["Phaser.PathPoint"]},"description":"A clone of this PathPoint."}],"memberof":"Phaser.PathPoint","longname":"Phaser.PathPoint#clone","scope":"instance","___s":true},{"meta":{"range":[5596,5941],"filename":"PathPoint.js","lineno":189,"path":"src\\plugins\\path"},"description":"Copies all of the values from the given PathPoint object into this PathPoint.\rThe source PathPoint is untouched by this operation.","kind":"function","name":"copy","params":[{"type":{"names":["Phaser.PathPoint"]},"description":"The PathPoint object to copy the values from.","name":"source"}],"returns":[{"type":{"names":["Phaser.PathPoint"]},"description":"This PathPoint object."}],"memberof":"Phaser.PathPoint","longname":"Phaser.PathPoint#copy","scope":"instance","___s":true},{"meta":{"range":[6372,7038],"filename":"PathPoint.js","lineno":214,"path":"src\\plugins\\path"},"description":"Compare this PathPoint with another PathPoint object and return `true` \rif they have the same `x`, `y` and `speed` properties, after taking the optional\roffset values into consideration.","kind":"function","name":"equals","params":[{"type":{"names":["Phaser.PathPoint"]},"description":"The PathPoint to compare against this PathPoint.","name":"pathPoint"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"A value to apply to the x coordinate before comparison.","name":"offsetX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"A value to apply to the y coordinate before comparison.","name":"offsetY"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the two PathPoint objects match, after the offsets are applied, or false if they don't."}],"memberof":"Phaser.PathPoint","longname":"Phaser.PathPoint#equals","scope":"instance","___s":true},{"meta":{"range":[7378,7571],"filename":"PathPoint.js","lineno":236,"path":"src\\plugins\\path"},"description":"Serializes this PathPoint into a JSON object and returns it.","kind":"function","name":"toJSON","returns":[{"type":{"names":["Object"]},"description":"A JSON object representing this PathPoint."}],"memberof":"Phaser.PathPoint","longname":"Phaser.PathPoint#toJSON","scope":"instance","___s":true},{"meta":{"range":[1151,1497],"filename":"Bullet.js","lineno":20,"path":"src\\plugins\\weapon"},"description":"Create a new `Bullet` object. Bullets are used by the `Phaser.Weapon` class, and are normal Sprites,\rwith a few extra properties in the data object to handle Weapon specific features.","kind":"class","classdesc":"Phaser.Bullet","augments":["Phaser.Sprite"],"params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the Particle at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the Particle at.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","PIXI.Texture"]},"description":"This is the image or texture used by the Particle during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"description":"If this Particle is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"name":"Bullet","longname":"Phaser.Bullet","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1625,1812],"filename":"Bullet.js","lineno":41,"path":"src\\plugins\\weapon"},"description":"Kills the Bullet, freeing it up for re-use by the Weapon bullet pool.\rAlso dispatches the `Weapon.onKill` signal.","kind":"function","name":"kill","memberof":"Phaser.Bullet","longname":"Phaser.Bullet#kill","scope":"instance","overrides":"Phaser.Sprite#kill","___s":true},{"meta":{"range":[2022,2133],"filename":"Bullet.js","lineno":60,"path":"src\\plugins\\weapon"},"description":"Updates the Bullet, killing as required.","kind":"function","name":"kill","memberof":"Phaser.Bullet","longname":"Phaser.Bullet#kill","scope":"instance","overrides":"Phaser.Sprite#kill","___s":true},{"meta":{"range":[1355,13403],"filename":"WeaponPlugin.js","lineno":31,"path":"src\\plugins\\weapon"},"description":"The Weapon Plugin provides the ability to easily create a bullet pool and manager.\r\rWeapons fire Phaser.Bullet objects, which are essentially Sprites with a few extra properties.\rThe Bullets are enabled for Arcade Physics. They do not currently work with P2 Physics.\r\rThe Bullets are created inside of `Weapon.bullets`, which is a Phaser.Group instance. Anything you\rcan usually do with a Group, such as move it around the display list, iterate it, etc can be done\rto the bullets Group too.\r\rBullets can have textures and even animations. You can control the speed at which they are fired,\rthe firing rate, the firing angle, and even set things like gravity for them.\r\rA small example, assumed to be running from within a Phaser.State create method.\r\r`var weapon = this.add.weapon(10, 'bullet');`\r`weapon.fireFrom.set(300, 300);`\r`this.input.onDown.add(weapon.fire, this);`","kind":"class","classdesc":"Phaser.Weapon","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the current Phaser.Game instance.","name":"game"},{"type":{"names":["Phaser.PluginManager"]},"description":"The Phaser Plugin Manager which looks after this plugin.","name":"parent"}],"name":"Weapon","longname":"Phaser.Weapon","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1588,1607],"filename":"WeaponPlugin.js","lineno":39,"path":"src\\plugins\\weapon"},"description":"This is the Phaser.Group that contains all of the bullets managed by this plugin.","type":{"names":["Phaser.Group"]},"name":"bullets","longname":"Phaser.Weapon#bullets","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[1832,1867],"filename":"WeaponPlugin.js","lineno":46,"path":"src\\plugins\\weapon"},"description":"Should the bullet pool run out of bullets (i.e. they are all in flight) then this\rboolean controls if the Group will create a brand new bullet object or not.","type":{"names":["boolean"]},"name":"autoExpandBulletsGroup","longname":"Phaser.Weapon#autoExpandBulletsGroup","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[2040,2061],"filename":"WeaponPlugin.js","lineno":53,"path":"src\\plugins\\weapon"},"description":"Will this weapon auto fire? If set to true then a new bullet will be fired\rbased on the `fireRate` value.","type":{"names":["boolean"]},"name":"autofire","longname":"Phaser.Weapon#autofire","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[2300,2314],"filename":"WeaponPlugin.js","lineno":61,"path":"src\\plugins\\weapon"},"description":"The total number of bullets this Weapon has fired so far.\rYou can limit the number of shots allowed (via `fireLimit`), and reset\rthis total via `Weapon.resetShots`.","type":{"names":["number"]},"name":"shots","longname":"Phaser.Weapon#shots","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[2594,2612],"filename":"WeaponPlugin.js","lineno":69,"path":"src\\plugins\\weapon"},"description":"The maximum number of shots that this Weapon is allowed to fire before it stops.\rWhen the limit is his the `Weapon.onFireLimit` Signal is dispatched.\rYou can reset the shot counter via `Weapon.resetShots`.","type":{"names":["number"]},"name":"fireLimit","longname":"Phaser.Weapon#fireLimit","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[2746,2765],"filename":"WeaponPlugin.js","lineno":75,"path":"src\\plugins\\weapon"},"description":"The rate at which this Weapon can fire. The value is given in milliseconds.","type":{"names":["number"]},"name":"fireRate","longname":"Phaser.Weapon#fireRate","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[3127,3152],"filename":"WeaponPlugin.js","lineno":84,"path":"src\\plugins\\weapon"},"description":"This is a modifier that is added to the `fireRate` each update to add variety\rto the firing rate of the Weapon. The value is given in milliseconds.\rIf you've a `fireRate` of 200 and a `fireRateVariance` of 50 then the actual\rfiring rate of the Weapon will be between 150 and 250.","type":{"names":["number"]},"name":"fireRateVariance","longname":"Phaser.Weapon#fireRateVariance","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[3495,3543],"filename":"WeaponPlugin.js","lineno":92,"path":"src\\plugins\\weapon"},"description":"This is a Rectangle from within which the bullets are fired. By default it's a 1x1\rrectangle, the equivalent of a Point. But you can change the width and height, and if\rlarger than 1x1 it'll pick a random point within the rectangle to launch the bullet from.","type":{"names":["Phaser.Rectangle"]},"name":"fireFrom","longname":"Phaser.Weapon#fireFrom","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[3778,3810],"filename":"WeaponPlugin.js","lineno":99,"path":"src\\plugins\\weapon"},"description":"The angle at which the bullets are fired. This can be a const such as Phaser.ANGLE_UP\ror it can be any number from 0 to 360 inclusive, where 0 degrees is to the right.","type":{"names":["integer"]},"name":"fireAngle","longname":"Phaser.Weapon#fireAngle","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[3962,3999],"filename":"WeaponPlugin.js","lineno":105,"path":"src\\plugins\\weapon"},"description":"When a Bullet is fired it can optionally inherit the velocity of the `trackedSprite` if set.","type":{"names":["boolean"]},"name":"bulletInheritSpriteSpeed","longname":"Phaser.Weapon#bulletInheritSpriteSpeed","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[4190,4215],"filename":"WeaponPlugin.js","lineno":112,"path":"src\\plugins\\weapon"},"description":"The string based name of the animation that the Bullet will be given on launch.\rThis is set via `Weapon.addBulletAnimation`.","type":{"names":["string"]},"name":"bulletAnimation","longname":"Phaser.Weapon#bulletAnimation","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[4432,4462],"filename":"WeaponPlugin.js","lineno":119,"path":"src\\plugins\\weapon"},"description":"If you've added a set of frames via `Weapon.setBulletFrames` then you can optionally\rchose for each Bullet fired to pick a random frame from the set.","type":{"names":["boolean"]},"name":"bulletFrameRandom","longname":"Phaser.Weapon#bulletFrameRandom","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[4904,4933],"filename":"WeaponPlugin.js","lineno":129,"path":"src\\plugins\\weapon"},"description":"If you've added a set of frames via `Weapon.setBulletFrames` then you can optionally\rchose for each Bullet fired to use the next frame in the set. The frame index is then\radvanced one frame until it reaches the end of the set, then it starts from the start\ragain. Cycling frames like this allows you to create varied bullet effects via\rsprite sheets.","type":{"names":["boolean"]},"name":"bulletFrameCycle","longname":"Phaser.Weapon#bulletFrameCycle","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[5155,5183],"filename":"WeaponPlugin.js","lineno":136,"path":"src\\plugins\\weapon"},"description":"Should the Bullets wrap around the world bounds? This automatically calls\r`World.wrap` on the Bullet each frame. See the docs for that method for details.","type":{"names":["boolean"]},"name":"bulletWorldWrap","longname":"Phaser.Weapon#bulletWorldWrap","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[5480,5511],"filename":"WeaponPlugin.js","lineno":144,"path":"src\\plugins\\weapon"},"description":"If `bulletWorldWrap` is true then you can provide an optional padding value with this\rproperty. It's added to the calculations determining when the Bullet should wrap around\rthe world or not. The value is given in pixels.","type":{"names":["integer"]},"name":"bulletWorldWrapPadding","longname":"Phaser.Weapon#bulletWorldWrapPadding","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[5902,5928],"filename":"WeaponPlugin.js","lineno":153,"path":"src\\plugins\\weapon"},"description":"An optional angle offset applied to the Bullets when they are launched.\rThis is useful if for example your bullet sprites have been drawn facing up, instead of\rto the right, and you want to fire them at an angle. In which case you can set the\rangle offset to be 90 and they'll be properly rotated when fired.","type":{"names":["number"]},"name":"bulletAngleOffset","longname":"Phaser.Weapon#bulletAngleOffset","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[6288,6316],"filename":"WeaponPlugin.js","lineno":162,"path":"src\\plugins\\weapon"},"description":"This is a variance added to the angle of Bullets when they are fired.\rIf you fire from an angle of 90 and have a `bulletAngleVariance` of 20 then the actual\rangle of the Bullets will be between 70 and 110 degrees. This is a quick way to add a\rgreat 'spread' effect to a Weapon.","type":{"names":["number"]},"name":"bulletAngleVariance","longname":"Phaser.Weapon#bulletAngleVariance","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[6523,6545],"filename":"WeaponPlugin.js","lineno":169,"path":"src\\plugins\\weapon"},"description":"The speed at which the bullets are fired. This value is given in pixels per second, and\ris used to set the starting velocity of the bullets.","type":{"names":["number"]},"name":"bulletSpeed","longname":"Phaser.Weapon#bulletSpeed","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[6853,6881],"filename":"WeaponPlugin.js","lineno":177,"path":"src\\plugins\\weapon"},"description":"This is a variance added to the speed of Bullets when they are fired.\rIf bullets have a `bulletSpeed` value of 200, and a `bulletSpeedVariance` of 50\rthen the actual speed of the Bullets will be between 150 and 250 pixels per second.","type":{"names":["number"]},"name":"bulletSpeedVariance","longname":"Phaser.Weapon#bulletSpeedVariance","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[7195,7218],"filename":"WeaponPlugin.js","lineno":185,"path":"src\\plugins\\weapon"},"description":"If you've set `bulletKillType` to `Phaser.Weapon.KILL_LIFESPAN` this controls the amount\rof lifespan the Bullets have set on launch. The value is given in milliseconds.\rWhen a Bullet hits its lifespan limit it will be automatically killed.","type":{"names":["number"]},"name":"bulletLifespan","longname":"Phaser.Weapon#bulletLifespan","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[7465,7492],"filename":"WeaponPlugin.js","lineno":192,"path":"src\\plugins\\weapon"},"description":"If you've set `bulletKillType` to `Phaser.Weapon.KILL_DISTANCE` this controls the distance\rthe Bullet can travel before it is automatically killed. The distance is given in pixels.","type":{"names":["number"]},"name":"bulletKillDistance","longname":"Phaser.Weapon#bulletKillDistance","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[7690,7733],"filename":"WeaponPlugin.js","lineno":199,"path":"src\\plugins\\weapon"},"description":"This is the amount of gravity added to the Bullets physics body when fired.\rGravity is expressed in pixels / second / second.","type":{"names":["Phaser.Point"]},"name":"bulletGravity","longname":"Phaser.Weapon#bulletGravity","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[8069,8104],"filename":"WeaponPlugin.js","lineno":207,"path":"src\\plugins\\weapon"},"description":"Bullets can optionally adjust their rotation in-flight to match their velocity.\rThis can create the effect of a bullet 'pointing' to the path it is following, for example\ran arrow being fired from a bow, and works especially well when added to `bulletGravity`.","type":{"names":["boolean"]},"name":"bulletRotateToVelocity","longname":"Phaser.Weapon#bulletRotateToVelocity","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[8304,8323],"filename":"WeaponPlugin.js","lineno":214,"path":"src\\plugins\\weapon"},"description":"The Texture Key that the Bullets use when rendering.\rChanging this has no effect on bullets in-flight, only on newly spawned bullets.","type":{"names":["string"]},"name":"bulletKey","longname":"Phaser.Weapon#bulletKey","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[8533,8554],"filename":"WeaponPlugin.js","lineno":221,"path":"src\\plugins\\weapon"},"description":"The Texture Frame that the Bullets use when rendering.\rChanging this has no effect on bullets in-flight, only on newly spawned bullets.","type":{"names":["string","integer"]},"name":"bulletFrame","longname":"Phaser.Weapon#bulletFrame","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[9889,9925],"filename":"WeaponPlugin.js","lineno":266,"path":"src\\plugins\\weapon"},"description":"This Rectangle defines the bounds that are used when determining if a Bullet should be killed or not.\rIt's used in combination with `Weapon.bulletKillType` when that is set to either `Phaser.Weapon.KILL_WEAPON_BOUNDS`\ror `Phaser.Weapon.KILL_STATIC_BOUNDS`. If you are not using either of these kill types then the bounds are ignored.\rIf you are tracking a Sprite or Point then the bounds are centered on that object every frame.","type":{"names":["Phaser.Rectangle"]},"name":"bounds","longname":"Phaser.Weapon#bounds","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[10260,10282],"filename":"WeaponPlugin.js","lineno":282,"path":"src\\plugins\\weapon"},"description":"This array stores the frames added via `Weapon.setBulletFrames`.","type":{"names":["Array"]},"access":"protected","name":"bulletFrames","longname":"Phaser.Weapon#bulletFrames","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[11048,11081],"filename":"WeaponPlugin.js","lineno":306,"path":"src\\plugins\\weapon"},"description":"The onFire Signal is dispatched each time `Weapon.fire` is called, and a Bullet is\r_successfully_ launched. The callback is set two arguments: a reference to the bullet sprite itself,\rand a reference to the Weapon that fired the bullet.","type":{"names":["Phaser.Signal"]},"name":"onFire","longname":"Phaser.Weapon#onFire","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[11436,11469],"filename":"WeaponPlugin.js","lineno":315,"path":"src\\plugins\\weapon"},"description":"The onKill Signal is dispatched each time a Bullet that is in-flight is killed. This can be the result\rof leaving the Weapon bounds, an expiring lifespan, or exceeding a specified distance.\rThe callback is sent one argument: A reference to the bullet sprite itself.","type":{"names":["Phaser.Signal"]},"name":"onKill","longname":"Phaser.Weapon#onKill","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[11829,11867],"filename":"WeaponPlugin.js","lineno":325,"path":"src\\plugins\\weapon"},"description":"The onFireLimit Signal is dispatched if `Weapon.fireLimit` is > 0, and a bullet launch takes the number\rof shots fired to equal the fire limit.\rThe callback is sent two arguments: A reference to the Weapon that hit the limit, and the value of\r`Weapon.fireLimit`.","type":{"names":["Phaser.Signal"]},"name":"onFireLimit","longname":"Phaser.Weapon#onFireLimit","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[12062,12087],"filename":"WeaponPlugin.js","lineno":333,"path":"src\\plugins\\weapon"},"description":"The Sprite currently being tracked by the Weapon, if any.\rThis is set via the `Weapon.trackSprite` method.","type":{"names":["Phaser.Sprite","Object"]},"name":"trackedSprite","longname":"Phaser.Weapon#trackedSprite","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[12278,12304],"filename":"WeaponPlugin.js","lineno":341,"path":"src\\plugins\\weapon"},"description":"The Pointer currently being tracked by the Weapon, if any.\rThis is set via the `Weapon.trackPointer` method.","type":{"names":["Phaser.Pointer"]},"name":"trackedPointer","longname":"Phaser.Weapon#trackedPointer","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[12576,12602],"filename":"WeaponPlugin.js","lineno":350,"path":"src\\plugins\\weapon"},"description":"If the Weapon is tracking a Sprite, should it also track the Sprites rotation?\rThis is useful for a game such as Asteroids, where you want the weapon to fire based\ron the sprites rotation.","type":{"names":["boolean"]},"name":"trackRotation","longname":"Phaser.Weapon#trackRotation","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[13045,13082],"filename":"WeaponPlugin.js","lineno":360,"path":"src\\plugins\\weapon"},"description":"The Track Offset is a Point object that allows you to specify a pixel offset that bullets use\rwhen launching from a tracked Sprite or Pointer. For example if you've got a bullet that is 2x2 pixels\rin size, but you're tracking a Sprite that is 32x32, then you can set `trackOffset.x = 16` to have\rthe bullet launched from the center of the Sprite.","type":{"names":["Phaser.Point"]},"name":"trackOffset","longname":"Phaser.Weapon#trackOffset","kind":"member","memberof":"Phaser.Weapon","scope":"instance","___s":true},{"meta":{"range":[13667,13695],"filename":"WeaponPlugin.js","lineno":388,"path":"src\\plugins\\weapon"},"description":"A `bulletKillType` constant that stops the bullets from ever being destroyed automatically.","kind":"constant","type":{"names":["integer"]},"name":"KILL_NEVER","longname":"Phaser.Weapon.KILL_NEVER","memberof":"Phaser.Weapon","scope":"static","___s":true},{"meta":{"range":[13846,13877],"filename":"WeaponPlugin.js","lineno":395,"path":"src\\plugins\\weapon"},"description":"A `bulletKillType` constant that automatically kills the bullets when their `bulletLifespan` expires.","kind":"constant","type":{"names":["integer"]},"name":"KILL_LIFESPAN","longname":"Phaser.Weapon.KILL_LIFESPAN","memberof":"Phaser.Weapon","scope":"static","___s":true},{"meta":{"range":[14070,14101],"filename":"WeaponPlugin.js","lineno":403,"path":"src\\plugins\\weapon"},"description":"A `bulletKillType` constant that automatically kills the bullets after they\rexceed the `bulletDistance` from their original firing position.","kind":"constant","type":{"names":["integer"]},"name":"KILL_DISTANCE","longname":"Phaser.Weapon.KILL_DISTANCE","memberof":"Phaser.Weapon","scope":"static","___s":true},{"meta":{"range":[14262,14298],"filename":"WeaponPlugin.js","lineno":410,"path":"src\\plugins\\weapon"},"description":"A `bulletKillType` constant that automatically kills the bullets when they leave the `Weapon.bounds` rectangle.","kind":"constant","type":{"names":["integer"]},"name":"KILL_WEAPON_BOUNDS","longname":"Phaser.Weapon.KILL_WEAPON_BOUNDS","memberof":"Phaser.Weapon","scope":"static","___s":true},{"meta":{"range":[14459,14495],"filename":"WeaponPlugin.js","lineno":417,"path":"src\\plugins\\weapon"},"description":"A `bulletKillType` constant that automatically kills the bullets when they leave the `Camera.bounds` rectangle.","kind":"constant","type":{"names":["integer"]},"name":"KILL_CAMERA_BOUNDS","longname":"Phaser.Weapon.KILL_CAMERA_BOUNDS","memberof":"Phaser.Weapon","scope":"static","___s":true},{"meta":{"range":[14655,14690],"filename":"WeaponPlugin.js","lineno":424,"path":"src\\plugins\\weapon"},"description":"A `bulletKillType` constant that automatically kills the bullets when they leave the `World.bounds` rectangle.","kind":"constant","type":{"names":["integer"]},"name":"KILL_WORLD_BOUNDS","longname":"Phaser.Weapon.KILL_WORLD_BOUNDS","memberof":"Phaser.Weapon","scope":"static","___s":true},{"meta":{"range":[14851,14887],"filename":"WeaponPlugin.js","lineno":431,"path":"src\\plugins\\weapon"},"description":"A `bulletKillType` constant that automatically kills the bullets when they leave the `Weapon.bounds` rectangle.","kind":"constant","type":{"names":["integer"]},"name":"KILL_STATIC_BOUNDS","longname":"Phaser.Weapon.KILL_STATIC_BOUNDS","memberof":"Phaser.Weapon","scope":"static","___s":true},{"meta":{"range":[14892,16639],"filename":"WeaponPlugin.js","lineno":433,"path":"src\\plugins\\weapon"},"description":"This method performs two actions: First it will check to see if the `Weapon.bullets` Group exists or not,\rand if not it creates it, adding it the `group` given as the 4th argument.\r\rThen it will seed the bullet pool with the `quantity` number of Bullets, using the texture key and frame\rprovided (if any).\r\rIf for example you set the quantity to be 10, then this Weapon will only ever be able to have 10 bullets\rin-flight simultaneously. If you try to fire an 11th bullet then nothing will happen until one, or more, of\rthe in-flight bullets have been killed, freeing them up for use by the Weapon again.\r\rIf you do not wish to have a limit set, then pass in -1 as the quantity. In this instance the Weapon will\rkeep increasing the size of the bullet pool as needed. It will never reduce the size of the pool however,\rso be careful it doesn't grow too large.\r\rYou can either set the texture key and frame here, or via the `Weapon.bulletKey` and `Weapon.bulletFrame`\rproperties. You can also animate bullets, or set them to use random frames. All Bullets belonging to a\rsingle Weapon instance must share the same texture key however.","kind":"function","name":"createBullets","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":1,"description":"The quantity of bullets to seed the Weapon with. If -1 it will set the pool to automatically expand.","name":"quantity"},{"type":{"names":["string"]},"optional":true,"description":"The Game.cache key of the image that this Sprite will use.","name":"key"},{"type":{"names":["integer","string"]},"optional":true,"description":"If the Sprite image contains multiple frames you can specify which one to use here.","name":"frame"},{"type":{"names":["Phaser.Group"]},"optional":true,"description":"Optional Group to add the object to. If not specified it will be added to the World group.","name":"group"}],"returns":[{"type":{"names":["Phaser.Weapon"]},"description":"This Weapon instance."}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#createBullets","scope":"instance","___s":true},{"meta":{"range":[17397,17984],"filename":"WeaponPlugin.js","lineno":490,"path":"src\\plugins\\weapon"},"description":"Call a function on each in-flight bullet in this Weapon.\r\rSee {@link Phaser.Group#forEachExists forEachExists} for more details.","kind":"function","name":"forEach","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"returns":[{"type":{"names":["Phaser.Weapon"]},"description":"This Weapon instance."}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#forEach","scope":"instance","___s":true},{"meta":{"range":[18161,18453],"filename":"WeaponPlugin.js","lineno":509,"path":"src\\plugins\\weapon"},"description":"Sets `Body.enable` to `false` on each bullet in this Weapon.\rThis has the effect of stopping them in-flight should they be moving.\rIt also stops them being able to be checked for collision.","kind":"function","name":"pauseAll","returns":[{"type":{"names":["Phaser.Weapon"]},"description":"This Weapon instance."}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#pauseAll","scope":"instance","___s":true},{"meta":{"range":[18583,18866],"filename":"WeaponPlugin.js","lineno":525,"path":"src\\plugins\\weapon"},"description":"Sets `Body.enable` to `true` on each bullet in this Weapon.\rThis has the effect of resuming their motion should they be in-flight.\rIt also enables them for collision checks again.","kind":"function","name":"resumeAll","returns":[{"type":{"names":["Phaser.Weapon"]},"description":"This Weapon instance."}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#resumeAll","scope":"instance","___s":true},{"meta":{"range":[18996,19241],"filename":"WeaponPlugin.js","lineno":541,"path":"src\\plugins\\weapon"},"description":"Calls `Bullet.kill` on every in-flight bullet in this Weapon.\rAlso re-enables their physics bodies, should they have been disabled via `pauseAll`.","kind":"function","name":"killAll","returns":[{"type":{"names":["Phaser.Weapon"]},"description":"This Weapon instance."}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#killAll","scope":"instance","___s":true},{"meta":{"range":[19418,19739],"filename":"WeaponPlugin.js","lineno":558,"path":"src\\plugins\\weapon"},"description":"Resets the `Weapon.shots` counter back to zero. This is used when you've set\r`Weapon.fireLimit`, and have hit (or just wish to reset) your limit.","kind":"function","name":"resetShots","params":[{"type":{"names":["integer"]},"optional":true,"description":"Optionally set a new `Weapon.fireLimit`.","name":"newLimit"}],"returns":[{"type":{"names":["Phaser.Weapon"]},"description":"This Weapon instance."}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#resetShots","scope":"instance","___s":true},{"meta":{"range":[19937,20109],"filename":"WeaponPlugin.js","lineno":579,"path":"src\\plugins\\weapon"},"description":"Destroys this Weapon. It removes itself from the PluginManager, destroys\rthe bullets Group, and nulls internal references.","kind":"function","name":"destroy","memberof":"Phaser.Weapon","longname":"Phaser.Weapon#destroy","scope":"instance","___s":true},{"meta":{"range":[20342,20454],"filename":"WeaponPlugin.js","lineno":598,"path":"src\\plugins\\weapon"},"description":"Internal update method, called by the PluginManager.","kind":"function","name":"update","access":"protected","memberof":"Phaser.Weapon","longname":"Phaser.Weapon#update","scope":"instance","___s":true},{"meta":{"range":[21023,22091],"filename":"WeaponPlugin.js","lineno":626,"path":"src\\plugins\\weapon"},"description":"Sets this Weapon to track the given Sprite, or any Object with a public `world` Point object.\rWhen a Weapon tracks a Sprite it will automatically update its `fireFrom` value to match the Sprites\rposition within the Game World, adjusting the coordinates based on the offset arguments.\r\rThis allows you to lock a Weapon to a Sprite, so that bullets are always launched from its location.\r\rCalling `trackSprite` will reset `Weapon.trackedPointer` to null, should it have been set, as you can\ronly track _either_ a Sprite, or a Pointer, at once, but not both.","kind":"function","name":"trackSprite","params":[{"type":{"names":["Phaser.Sprite","Object"]},"description":"The Sprite to track the position of.","name":"sprite"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The horizontal offset from the Sprites position to be applied to the Weapon.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The vertical offset from the Sprites position to be applied to the Weapon.","name":"offsetY"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the Weapon also track the Sprites rotation?","name":"trackRotation"}],"returns":[{"type":{"names":["Phaser.Weapon"]},"description":"This Weapon instance."}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#trackSprite","scope":"instance","___s":true},{"meta":{"range":[22535,23515],"filename":"WeaponPlugin.js","lineno":659,"path":"src\\plugins\\weapon"},"description":"Sets this Weapon to track the given Pointer.\rWhen a Weapon tracks a Pointer it will automatically update its `fireFrom` value to match the Pointers\rposition within the Game World, adjusting the coordinates based on the offset arguments.\r\rThis allows you to lock a Weapon to a Pointer, so that bullets are always launched from its location.\r\rCalling `trackPointer` will reset `Weapon.trackedSprite` to null, should it have been set, as you can\ronly track _either_ a Pointer, or a Sprite, at once, but not both.","kind":"function","name":"trackPointer","params":[{"type":{"names":["Phaser.Pointer"]},"optional":true,"description":"The Pointer to track the position of. Defaults to `Input.activePointer` if not specified.","name":"pointer"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The horizontal offset from the Pointers position to be applied to the Weapon.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The vertical offset from the Pointers position to be applied to the Weapon.","name":"offsetY"}],"returns":[{"type":{"names":["Phaser.Weapon"]},"description":"This Weapon instance."}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#trackPointer","scope":"instance","___s":true},{"meta":{"range":[23951,25431],"filename":"WeaponPlugin.js","lineno":691,"path":"src\\plugins\\weapon"},"description":"Attempts to fire a single Bullet. If there are no more bullets available in the pool, and the pool cannot be extended,\rthen this method returns `false`. It will also return false if not enough time has expired since the last time\rthe Weapon was fired, as defined in the `Weapon.fireRate` property.\r\rOtherwise the first available bullet is selected and launched.\r\rThe arguments are all optional, but allow you to control both where the bullet is launched from, and aimed at.\r\rIf you don't provide any of the arguments then it uses those set via properties such as `Weapon.trackedSprite`,\r`Weapon.bulletAngle` and so on.\r\rWhen the bullet is launched it has its texture and frame updated, as required. The velocity of the bullet is\rcalculated based on Weapon properties like `bulletSpeed`.","kind":"function","name":"fire","params":[{"type":{"names":["Phaser.Sprite","Phaser.Point","Object"]},"optional":true,"description":"Optionally fires the bullet **from** the `x` and `y` properties of this object. If set this overrides `Weapon.trackedSprite` or `trackedPointer`. Pass `null` to ignore it.","name":"from"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate, in world space, to fire the bullet **towards**. If left as `undefined` the bullet direction is based on its angle.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate, in world space, to fire the bullet **towards**. If left as `undefined` the bullet direction is based on its angle.","name":"y"}],"returns":[{"type":{"names":["Phaser.Bullet"]},"description":"The fired bullet if successful, null otherwise."}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#fire","scope":"instance","___s":true},{"meta":{"range":[32021,32394],"filename":"WeaponPlugin.js","lineno":928,"path":"src\\plugins\\weapon"},"description":"Fires a bullet **at** the given Pointer. The bullet will be launched from the `Weapon.fireFrom` position,\ror from a Tracked Sprite or Pointer, if you have one set.","kind":"function","name":"fireAtPointer","params":[{"type":{"names":["Phaser.Pointer"]},"optional":true,"description":"The Pointer to fire the bullet towards.","name":"pointer"}],"returns":[{"type":{"names":["Phaser.Bullet"]},"description":"The fired bullet if successful, null otherwise."}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#fireAtPointer","scope":"instance","___s":true},{"meta":{"range":[32608,32976],"filename":"WeaponPlugin.js","lineno":944,"path":"src\\plugins\\weapon"},"description":"Fires a bullet **at** the given Sprite. The bullet will be launched from the `Weapon.fireFrom` position,\ror from a Tracked Sprite or Pointer, if you have one set.","kind":"function","name":"fireAtSprite","params":[{"type":{"names":["Phaser.Sprite"]},"optional":true,"description":"The Sprite to fire the bullet towards.","name":"sprite"}],"returns":[{"type":{"names":["Phaser.Bullet"]},"description":"The fired bullet if successful, null otherwise."}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#fireAtSprite","scope":"instance","___s":true},{"meta":{"range":[33109,33576],"filename":"WeaponPlugin.js","lineno":958,"path":"src\\plugins\\weapon"},"description":"Fires a bullet **at** the given coordinates. The bullet will be launched from the `Weapon.fireFrom` position,\ror from a Tracked Sprite or Pointer, if you have one set.","kind":"function","name":"fireAtXY","params":[{"type":{"names":["number"]},"optional":true,"description":"The x coordinate, in world space, to fire the bullet towards.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate, in world space, to fire the bullet towards.","name":"y"}],"returns":[{"type":{"names":["Phaser.Bullet"]},"description":"The fired bullet if successful, null otherwise."}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#fireAtXY","scope":"instance","___s":true},{"meta":{"range":[33677,34785],"filename":"WeaponPlugin.js","lineno":973,"path":"src\\plugins\\weapon"},"description":"You can modify the size of the physics Body the Bullets use to be any dimension you need.\rThis allows you to make it smaller, or larger, than the parent Sprite.\rYou can also control the x and y offset of the Body. This is the position of the\rBody relative to the top-left of the Sprite _texture_.\r\rFor example: If you have a Sprite with a texture that is 80x100 in size,\rand you want the physics body to be 32x32 pixels in the middle of the texture, you would do:\r\r`setSize(32, 32, 24, 34)`\r\rWhere the first two parameters is the new Body size (32x32 pixels).\r24 is the horizontal offset of the Body from the top-left of the Sprites texture, and 34\ris the vertical offset.","kind":"function","name":"setBulletBodyOffset","params":[{"type":{"names":["number"]},"description":"The width of the Body.","name":"width"},{"type":{"names":["number"]},"description":"The height of the Body.","name":"height"},{"type":{"names":["number"]},"optional":true,"description":"The X offset of the Body from the top-left of the Sprites texture.","name":"offsetX"},{"type":{"names":["number"]},"optional":true,"description":"The Y offset of the Body from the top-left of the Sprites texture.","name":"offsetY"}],"returns":[{"type":{"names":["Phaser.Weapon"]},"description":"The Weapon Plugin."}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#setBulletBodyOffset","scope":"instance","___s":true},{"meta":{"range":[35355,36263],"filename":"WeaponPlugin.js","lineno":1014,"path":"src\\plugins\\weapon"},"description":"Sets the texture frames that the bullets can use when being launched.\r\rThis is intended for use when you've got numeric based frames, such as those loaded via a Sprite Sheet.\r\rIt works by calling `Phaser.ArrayUtils.numberArray` internally, using the min and max values\rprovided. Then it sets the frame index to be zero.\r\rYou can optionally set the cycle and random booleans, to allow bullets to cycle through the frames\rwhen they're fired, or pick one at random.","kind":"function","name":"setBulletFrames","params":[{"type":{"names":["integer"]},"description":"The minimum value the frame can be. Usually zero.","name":"min"},{"type":{"names":["integer"]},"description":"The maximum value the frame can be.","name":"max"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should the bullet frames cycle as they are fired?","name":"cycle"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the bullet frames be picked at random as they are fired?","name":"random"}],"returns":[{"type":{"names":["Phaser.Weapon"]},"description":"The Weapon Plugin."}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#setBulletFrames","scope":"instance","___s":true},{"meta":{"range":[36652,38058],"filename":"WeaponPlugin.js","lineno":1048,"path":"src\\plugins\\weapon"},"description":"Adds a new animation under the given key. Optionally set the frames, frame rate and loop.\rThe arguments are all the same as for `Animation.add`, and work in the same way.\r\r`Weapon.bulletAnimation` will be set to this animation after it's created. From that point on, all\rbullets fired will play using this animation. You can swap between animations by calling this method\rseveral times, and then just changing the `Weapon.bulletAnimation` property to the name of the animation\ryou wish to play for the next launched bullet.\r\rIf you wish to stop using animations at all, set `Weapon.bulletAnimation` to '' (an empty string).","kind":"function","name":"addBulletAnimation","params":[{"type":{"names":["string"]},"description":"The unique (within the Weapon instance) name for the animation, i.e. \"fire\", \"blast\".","name":"name"},{"type":{"names":["Array"]},"optional":true,"defaultvalue":null,"description":"An array of numbers/strings that correspond to the frames to add to this animation and in which order. e.g. [1, 2, 3] or ['run0', 'run1', run2]). If null then all frames will be used.","name":"frames"},{"type":{"names":["number"]},"optional":true,"defaultvalue":60,"description":"The speed at which the animation should play. The speed is given in frames per second.","name":"frameRate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Whether or not the animation is looped or just plays once.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Are the given frames using numeric indexes (default) or strings?","name":"useNumericIndex"}],"returns":[{"type":{"names":["Phaser.Weapon"]},"description":"The Weapon Plugin."}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#addBulletAnimation","scope":"instance","___s":true},{"meta":{"range":[38578,39119],"filename":"WeaponPlugin.js","lineno":1086,"path":"src\\plugins\\weapon"},"description":"Uses `Game.Debug` to draw some useful information about this Weapon, including the number of bullets\rboth in-flight, and available. And optionally the physics debug bodies of the bullets.","kind":"function","name":"debug","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":16,"description":"The coordinate, in screen space, at which to draw the Weapon debug data.","name":"x"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":32,"description":"The coordinate, in screen space, at which to draw the Weapon debug data.","name":"y"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Optionally draw the physics body of every bullet in-flight.","name":"debugBodies"}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#debug","scope":"instance","___s":true},{"meta":{"range":[39639,39894],"filename":"WeaponPlugin.js","lineno":1111,"path":"src\\plugins\\weapon"},"description":"The Class of the bullets that are launched by this Weapon. Defaults `Phaser.Bullet`, but can be\roverridden before calling `createBullets` and set to your own class type.","name":"bulletClass","properties":[{"type":{"names":["Object"]},"name":"bulletClass"}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#bulletClass","scope":"instance","kind":"member","___s":true},{"meta":{"range":[40184,41596],"filename":"WeaponPlugin.js","lineno":1136,"path":"src\\plugins\\weapon"},"description":"This controls how the bullets will be killed. The default is `Phaser.Weapon.KILL_WORLD_BOUNDS`.\r\rThere are 7 different \"kill types\" available:\r\r* `Phaser.Weapon.KILL_NEVER`\rThe bullets are never destroyed by the Weapon. It's up to you to destroy them via your own code.\r\r* `Phaser.Weapon.KILL_LIFESPAN`\rThe bullets are automatically killed when their `bulletLifespan` amount expires.\r\r* `Phaser.Weapon.KILL_DISTANCE`\rThe bullets are automatically killed when they exceed `bulletDistance` pixels away from their original launch position.\r\r* `Phaser.Weapon.KILL_WEAPON_BOUNDS`\rThe bullets are automatically killed when they no longer intersect with the `Weapon.bounds` rectangle.\r\r* `Phaser.Weapon.KILL_CAMERA_BOUNDS`\rThe bullets are automatically killed when they no longer intersect with the `Camera.bounds` rectangle.\r\r* `Phaser.Weapon.KILL_WORLD_BOUNDS`\rThe bullets are automatically killed when they no longer intersect with the `World.bounds` rectangle.\r\r* `Phaser.Weapon.KILL_STATIC_BOUNDS`\rThe bullets are automatically killed when they no longer intersect with the `Weapon.bounds` rectangle.\rThe difference between static bounds and weapon bounds, is that a static bounds will never be adjusted to\rmatch the position of a tracked sprite or pointer.","name":"bulletKillType","properties":[{"type":{"names":["integer"]},"name":"bulletKillType"}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#bulletKillType","scope":"instance","kind":"member","___s":true},{"meta":{"range":[42331,42493],"filename":"WeaponPlugin.js","lineno":1199,"path":"src\\plugins\\weapon"},"description":"Should bullets collide with the World bounds or not?","name":"bulletCollideWorldBounds","properties":[{"type":{"names":["boolean"]},"name":"bulletCollideWorldBounds"}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#bulletCollideWorldBounds","scope":"instance","kind":"member","___s":true},{"meta":{"range":[42880,43087],"filename":"WeaponPlugin.js","lineno":1224,"path":"src\\plugins\\weapon"},"description":"The x coordinate from which bullets are fired. This is the same as `Weapon.fireFrom.x`, and\rcan be overridden by the `Weapon.fire` arguments.","name":"x","properties":[{"type":{"names":["number"]},"name":"x"}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#x","scope":"instance","kind":"member","___s":true},{"meta":{"range":[43298,43505],"filename":"WeaponPlugin.js","lineno":1246,"path":"src\\plugins\\weapon"},"description":"The y coordinate from which bullets are fired. This is the same as `Weapon.fireFrom.y`, and\rcan be overridden by the `Weapon.fire` arguments.","name":"y","properties":[{"type":{"names":["number"]},"name":"y"}],"memberof":"Phaser.Weapon","longname":"Phaser.Weapon#y","scope":"instance","kind":"member","___s":true},{"meta":{"range":[618,2011],"filename":"AudioSprite.js","lineno":17,"path":"src\\sound"},"description":"Audio Sprites are a combination of audio files and a JSON configuration.\rThe JSON follows the format of that created by https://github.com/tonistiigi/audiosprite","kind":"class","classdesc":"Phaser.AudioSprite","params":[{"type":{"names":["Phaser.Game"]},"description":"Reference to the current game instance.","name":"game"},{"type":{"names":["string"]},"description":"Asset key for the sound.","name":"key"}],"name":"AudioSprite","longname":"Phaser.AudioSprite","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[772,788],"filename":"AudioSprite.js","lineno":23,"path":"src\\sound"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"name":"game","longname":"Phaser.AudioSprite#game","kind":"member","memberof":"Phaser.AudioSprite","scope":"instance","___s":true},{"meta":{"range":[886,900],"filename":"AudioSprite.js","lineno":29,"path":"src\\sound"},"description":"Asset key for the Audio Sprite.","properties":[{"type":{"names":["string"]},"name":"key"}],"name":"key","longname":"Phaser.AudioSprite#key","kind":"member","memberof":"Phaser.AudioSprite","scope":"instance","___s":true},{"meta":{"range":[994,1052],"filename":"AudioSprite.js","lineno":35,"path":"src\\sound"},"description":"JSON audio atlas object.","properties":[{"type":{"names":["object"]},"name":"config"}],"name":"config","longname":"Phaser.AudioSprite#config","kind":"member","memberof":"Phaser.AudioSprite","scope":"instance","___s":true},{"meta":{"range":[1191,1214],"filename":"AudioSprite.js","lineno":41,"path":"src\\sound"},"description":"If a sound is set to auto play, this holds the marker key of it.","properties":[{"type":{"names":["string"]},"name":"autoplayKey"}],"name":"autoplayKey","longname":"Phaser.AudioSprite#autoplayKey","kind":"member","memberof":"Phaser.AudioSprite","scope":"instance","___s":true},{"meta":{"range":[1338,1359],"filename":"AudioSprite.js","lineno":48,"path":"src\\sound"},"description":"Is a sound set to autoplay or not?","properties":[{"type":{"names":["boolean"]},"name":"autoplay"}],"defaultvalue":false,"name":"autoplay","longname":"Phaser.AudioSprite#autoplay","kind":"member","memberof":"Phaser.AudioSprite","scope":"instance","___s":true},{"meta":{"range":[1496,1512],"filename":"AudioSprite.js","lineno":54,"path":"src\\sound"},"description":"An object containing the Phaser.Sound objects for the Audio Sprite.","properties":[{"type":{"names":["object"]},"name":"sounds"}],"name":"sounds","longname":"Phaser.AudioSprite#sounds","kind":"member","memberof":"Phaser.AudioSprite","scope":"instance","___s":true},{"meta":{"range":[2056,2471],"filename":"AudioSprite.js","lineno":77,"path":"src\\sound"},"description":"Play a sound with the given name.","kind":"function","name":"play","params":[{"type":{"names":["string"]},"optional":true,"description":"The name of sound to play","name":"marker"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"Volume of the sound you want to play. If none is given it will use the volume given to the Sound when it was created (which defaults to 1 if none was specified).","name":"volume"}],"returns":[{"type":{"names":["Phaser.Sound"]},"description":"This sound instance."}],"memberof":"Phaser.AudioSprite","longname":"Phaser.AudioSprite#play","scope":"instance","___s":true},{"meta":{"range":[2647,2877],"filename":"AudioSprite.js","lineno":93,"path":"src\\sound"},"description":"Stop a sound with the given name.","kind":"function","name":"stop","params":[{"type":{"names":["string"]},"optional":true,"defaultvalue":"''","description":"The name of sound to stop. If none is given it will stop all sounds in the audio sprite.","name":"marker"}],"memberof":"Phaser.AudioSprite","longname":"Phaser.AudioSprite#stop","scope":"instance","___s":true},{"meta":{"range":[3163,3374],"filename":"AudioSprite.js","lineno":115,"path":"src\\sound"},"description":"Get a sound with the given name.","kind":"function","name":"get","params":[{"type":{"names":["string"]},"description":"The name of sound to get.","name":"marker"}],"returns":[{"type":{"names":["Phaser.Sound"]},"description":"The sound instance."}],"memberof":"Phaser.AudioSprite","longname":"Phaser.AudioSprite#get","scope":"instance","___s":true},{"meta":{"range":[558,9222],"filename":"Sound.js","lineno":17,"path":"src\\sound"},"description":"The Sound class constructor.","kind":"class","classdesc":"Phaser.Sound","params":[{"type":{"names":["Phaser.Game"]},"description":"Reference to the current game instance.","name":"game"},{"type":{"names":["string"]},"description":"Asset key for the sound.","name":"key"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"Default value for the volume, between 0 and 1.","name":"volume"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Whether or not the sound will loop.","name":"loop"}],"name":"Sound","longname":"Phaser.Sound","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[899,915],"filename":"Sound.js","lineno":27,"path":"src\\sound"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"name":"game","longname":"Phaser.Sound#game","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[993,1008],"filename":"Sound.js","lineno":32,"path":"src\\sound"},"properties":[{"type":{"names":["string"]},"description":"Name of the sound.","name":"name"}],"name":"name","longname":"Phaser.Sound#name","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[1091,1105],"filename":"Sound.js","lineno":37,"path":"src\\sound"},"properties":[{"type":{"names":["string"]},"description":"Asset key for the sound.","name":"key"}],"name":"key","longname":"Phaser.Sound#key","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[1225,1241],"filename":"Sound.js","lineno":42,"path":"src\\sound"},"properties":[{"type":{"names":["boolean"]},"description":"Whether or not the sound or current sound marker will loop.","name":"loop"}],"name":"loop","longname":"Phaser.Sound#loop","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[1322,1339],"filename":"Sound.js","lineno":47,"path":"src\\sound"},"properties":[{"type":{"names":["object"]},"description":"The sound markers.","name":"markers"}],"name":"markers","longname":"Phaser.Sound#markers","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[1447,1466],"filename":"Sound.js","lineno":52,"path":"src\\sound"},"properties":[{"type":{"names":["AudioContext"]},"description":"Reference to the AudioContext instance.","name":"context"}],"name":"context","longname":"Phaser.Sound#context","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[1595,1616],"filename":"Sound.js","lineno":57,"path":"src\\sound"},"properties":[{"type":{"names":["boolean"]},"description":"Boolean indicating whether the sound should start automatically.","name":"autoplay"}],"name":"autoplay","longname":"Phaser.Sound#autoplay","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[1728,1750],"filename":"Sound.js","lineno":62,"path":"src\\sound"},"properties":[{"type":{"names":["number"]},"description":"The total duration of the sound in seconds.","name":"totalDuration"}],"name":"totalDuration","longname":"Phaser.Sound#totalDuration","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[1903,1921],"filename":"Sound.js","lineno":68,"path":"src\\sound"},"properties":[{"type":{"names":["number"]},"description":"The time the Sound starts at (typically 0 unless starting from a marker)","name":"startTime"}],"defaultvalue":0,"name":"startTime","longname":"Phaser.Sound#startTime","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[2021,2041],"filename":"Sound.js","lineno":73,"path":"src\\sound"},"properties":[{"type":{"names":["number"]},"description":"The current time the sound is at.","name":"currentTime"}],"name":"currentTime","longname":"Phaser.Sound#currentTime","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[2157,2174],"filename":"Sound.js","lineno":78,"path":"src\\sound"},"properties":[{"type":{"names":["number"]},"description":"The duration of the current sound marker in seconds.","name":"duration"}],"name":"duration","longname":"Phaser.Sound#duration","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[2287,2306],"filename":"Sound.js","lineno":83,"path":"src\\sound"},"properties":[{"type":{"names":["number"]},"description":"The duration of the current sound marker in ms.","name":"durationMS"}],"name":"durationMS","longname":"Phaser.Sound#durationMS","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[2411,2428],"filename":"Sound.js","lineno":88,"path":"src\\sound"},"properties":[{"type":{"names":["number"]},"description":"The position of the current sound marker.","name":"position"}],"name":"position","longname":"Phaser.Sound#position","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[2519,2536],"filename":"Sound.js","lineno":93,"path":"src\\sound"},"properties":[{"type":{"names":["number"]},"description":"The time the sound stopped.","name":"stopTime"}],"name":"stopTime","longname":"Phaser.Sound#stopTime","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[2660,2679],"filename":"Sound.js","lineno":99,"path":"src\\sound"},"properties":[{"type":{"names":["boolean"]},"description":"true if the sound is paused, otherwise false.","name":"paused"}],"defaultvalue":false,"name":"paused","longname":"Phaser.Sound#paused","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[2803,2826],"filename":"Sound.js","lineno":104,"path":"src\\sound"},"properties":[{"type":{"names":["number"]},"description":"The position the sound had reached when it was paused.","name":"pausedPosition"}],"name":"pausedPosition","longname":"Phaser.Sound#pausedPosition","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[2936,2955],"filename":"Sound.js","lineno":109,"path":"src\\sound"},"properties":[{"type":{"names":["number"]},"description":"The game time at which the sound was paused.","name":"pausedTime"}],"name":"pausedTime","longname":"Phaser.Sound#pausedTime","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[3093,3115],"filename":"Sound.js","lineno":115,"path":"src\\sound"},"properties":[{"type":{"names":["boolean"]},"description":"true if the sound is currently playing, otherwise false.","name":"isPlaying"}],"defaultvalue":false,"name":"isPlaying","longname":"Phaser.Sound#isPlaying","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[3254,3277],"filename":"Sound.js","lineno":121,"path":"src\\sound"},"properties":[{"type":{"names":["string"]},"description":"The string ID of the currently playing marker, if any.","name":"currentMarker"}],"defaultvalue":"","name":"currentMarker","longname":"Phaser.Sound#currentMarker","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[3419,3440],"filename":"Sound.js","lineno":126,"path":"src\\sound"},"properties":[{"type":{"names":["Phaser.Tween"]},"description":"The tween that fades the audio, set via Sound.fadeIn and Sound.fadeOut.","name":"fadeTween"}],"name":"fadeTween","longname":"Phaser.Sound#fadeTween","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[3571,3599],"filename":"Sound.js","lineno":132,"path":"src\\sound"},"properties":[{"type":{"names":["boolean"]},"description":"true if the sound file is pending playback","name":"pendingPlayback"}],"readonly":true,"name":"pendingPlayback","longname":"Phaser.Sound#pendingPlayback","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[3753,3774],"filename":"Sound.js","lineno":138,"path":"src\\sound"},"properties":[{"type":{"names":["boolean"]},"description":"if true when you play this sound it will always start from the beginning.","name":"override"}],"defaultvalue":false,"name":"override","longname":"Phaser.Sound#override","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[4074,4100],"filename":"Sound.js","lineno":144,"path":"src\\sound"},"properties":[{"type":{"names":["boolean"]},"description":"This will allow you to have multiple instances of this Sound playing at once. This is only useful when running under Web Audio, and we recommend you implement a local pooling system to not flood the sound channels.","name":"allowMultiple"}],"defaultvalue":false,"name":"allowMultiple","longname":"Phaser.Sound#allowMultiple","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[4237,4287],"filename":"Sound.js","lineno":150,"path":"src\\sound"},"properties":[{"type":{"names":["boolean"]},"description":"true if this sound is being played with Web Audio.","name":"usingWebAudio"}],"readonly":true,"name":"usingWebAudio","longname":"Phaser.Sound#usingWebAudio","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[4409,4459],"filename":"Sound.js","lineno":155,"path":"src\\sound"},"properties":[{"type":{"names":["boolean"]},"description":"true if the sound is being played via the Audio tag.","name":"usingAudioTag"}],"name":"usingAudioTag","longname":"Phaser.Sound#usingAudioTag","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[4642,4666],"filename":"Sound.js","lineno":160,"path":"src\\sound"},"properties":[{"type":{"names":["object"]},"description":"If defined this Sound won't connect to the SoundManager master gain node, but will instead connect to externalNode.","name":"externalNode"}],"name":"externalNode","longname":"Phaser.Sound#externalNode","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[4779,4805],"filename":"Sound.js","lineno":165,"path":"src\\sound"},"properties":[{"type":{"names":["object"]},"description":"The master gain node in a Web Audio system.","name":"masterGainNode"}],"name":"masterGainNode","longname":"Phaser.Sound#masterGainNode","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[4905,4925],"filename":"Sound.js","lineno":170,"path":"src\\sound"},"properties":[{"type":{"names":["object"]},"description":"The gain node in a Web Audio system.","name":"gainNode"}],"name":"gainNode","longname":"Phaser.Sound#gainNode","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[6251,6287],"filename":"Sound.js","lineno":220,"path":"src\\sound"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"The onDecoded event is dispatched when the sound has finished decoding (typically for mp3 files)","name":"onDecoded"}],"name":"onDecoded","longname":"Phaser.Sound#onDecoded","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[6418,6451],"filename":"Sound.js","lineno":225,"path":"src\\sound"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"The onPlay event is dispatched each time this sound is played.","name":"onPlay"}],"name":"onPlay","longname":"Phaser.Sound#onPlay","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[6579,6613],"filename":"Sound.js","lineno":230,"path":"src\\sound"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"The onPause event is dispatched when this sound is paused.","name":"onPause"}],"name":"onPause","longname":"Phaser.Sound#onPause","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[6764,6799],"filename":"Sound.js","lineno":235,"path":"src\\sound"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"The onResume event is dispatched when this sound is resumed from a paused state.","name":"onResume"}],"name":"onResume","longname":"Phaser.Sound#onResume","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[6937,6970],"filename":"Sound.js","lineno":240,"path":"src\\sound"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"The onLoop event is dispatched when this sound loops during playback.","name":"onLoop"}],"name":"onLoop","longname":"Phaser.Sound#onLoop","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[7101,7134],"filename":"Sound.js","lineno":245,"path":"src\\sound"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"The onStop event is dispatched when this sound stops playback.","name":"onStop"}],"name":"onStop","longname":"Phaser.Sound#onStop","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[7259,7292],"filename":"Sound.js","lineno":250,"path":"src\\sound"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"The onMute event is dispatched when this sound is muted.","name":"onMute"}],"name":"onMute","longname":"Phaser.Sound#onMute","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[7463,7506],"filename":"Sound.js","lineno":255,"path":"src\\sound"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"The onMarkerComplete event is dispatched when a marker within this sound completes playback.","name":"onMarkerComplete"}],"name":"onMarkerComplete","longname":"Phaser.Sound#onMarkerComplete","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[7671,7712],"filename":"Sound.js","lineno":260,"path":"src\\sound"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"The onFadeComplete event is dispatched when this sound finishes fading either in or out.","name":"onFadeComplete"}],"name":"onFadeComplete","longname":"Phaser.Sound#onFadeComplete","kind":"member","memberof":"Phaser.Sound","scope":"instance","___s":true},{"meta":{"range":[9261,9483],"filename":"Sound.js","lineno":332,"path":"src\\sound"},"description":"Called automatically when this sound is unlocked.","kind":"function","name":"soundHasUnlocked","params":[{"type":{"names":["string"]},"description":"The Phaser.Cache key of the sound file to check for decoding.","name":"key"}],"access":"protected","memberof":"Phaser.Sound","longname":"Phaser.Sound#soundHasUnlocked","scope":"instance","___s":true},{"meta":{"range":[9719,10551],"filename":"Sound.js","lineno":348,"path":"src\\sound"},"description":"Adds a marker into the current Sound. A marker is represented by a unique key and a start time and duration.\rThis allows you to bundle multiple sounds together into a single audio file and use markers to jump between them for playback.","kind":"function","name":"addMarker","params":[{"type":{"names":["string"]},"description":"A unique name for this marker, i.e. 'explosion', 'gunshot', etc.","name":"name"},{"type":{"names":["number"]},"description":"The start point of this marker in the audio file, given in seconds. 2.5 = 2500ms, 0.5 = 500ms, etc.","name":"start"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The duration of the marker in seconds. 2.5 = 2500ms, 0.5 = 500ms, etc.","name":"duration"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The volume the sound will play back at, between 0 (silent) and 1 (full volume).","name":"volume"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Sets if the sound will loop or not.","name":"loop"}],"memberof":"Phaser.Sound","longname":"Phaser.Sound#addMarker","scope":"instance","___s":true},{"meta":{"range":[11096,11251],"filename":"Sound.js","lineno":377,"path":"src\\sound"},"description":"Removes a marker from the sound.","kind":"function","name":"removeMarker","params":[{"type":{"names":["string"]},"description":"The key of the marker to remove.","name":"name"}],"memberof":"Phaser.Sound","longname":"Phaser.Sound#removeMarker","scope":"instance","___s":true},{"meta":{"range":[11344,11592],"filename":"Sound.js","lineno":388,"path":"src\\sound"},"description":"Called automatically by the AudioContext when the sound stops playing.\rDoesn't get called if the sound is set to loop or is a section of an Audio Sprite.","kind":"function","name":"onEndedHandler","access":"protected","memberof":"Phaser.Sound","longname":"Phaser.Sound#onEndedHandler","scope":"instance","___s":true},{"meta":{"range":[11784,11900],"filename":"Sound.js","lineno":404,"path":"src\\sound"},"description":"Called automatically by Phaser.SoundManager.","kind":"function","name":"update","access":"protected","memberof":"Phaser.Sound","longname":"Phaser.Sound#update","scope":"instance","___s":true},{"meta":{"range":[14750,15184],"filename":"Sound.js","lineno":492,"path":"src\\sound"},"description":"Loops this entire sound. If you need to loop a section of it then use Sound.play and the marker and loop parameters.","kind":"function","name":"loopFull","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"Volume of the sound you want to play. If none is given it will use the volume given to the Sound when it was created (which defaults to 1 if none was specified).","name":"volume"}],"returns":[{"type":{"names":["Phaser.Sound"]},"description":"This sound instance."}],"memberof":"Phaser.Sound","longname":"Phaser.Sound#loopFull","scope":"instance","___s":true},{"meta":{"range":[15289,16228],"filename":"Sound.js","lineno":505,"path":"src\\sound"},"description":"Play this sound, or a marked section of it.","kind":"function","name":"play","params":[{"type":{"names":["string"]},"optional":true,"defaultvalue":"''","description":"If you want to play a marker then give the key here, otherwise leave blank to play the full sound.","name":"marker"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The starting position to play the sound from - this is ignored if you provide a marker.","name":"position"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"Volume of the sound you want to play. If none is given it will use the volume given to the Sound when it was created (which defaults to 1 if none was specified).","name":"volume"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Loop when finished playing? If not using a marker / audio sprite the looping will be done via the WebAudio loop property, otherwise it's time based.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If the sound is already playing you can set forceRestart to restart it from the beginning.","name":"forceRestart"}],"returns":[{"type":{"names":["Phaser.Sound"]},"description":"This sound instance."}],"memberof":"Phaser.Sound","longname":"Phaser.Sound#play","scope":"instance","___s":true},{"meta":{"range":[23716,24229],"filename":"Sound.js","lineno":743,"path":"src\\sound"},"description":"Restart the sound, or a marked section of it.","kind":"function","name":"restart","params":[{"type":{"names":["string"]},"optional":true,"defaultvalue":"''","description":"If you want to play a marker then give the key here, otherwise leave blank to play the full sound.","name":"marker"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The starting position to play the sound from - this is ignored if you provide a marker.","name":"position"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"Volume of the sound you want to play.","name":"volume"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Loop when it finished playing?","name":"loop"}],"memberof":"Phaser.Sound","longname":"Phaser.Sound#restart","scope":"instance","___s":true},{"meta":{"range":[24516,24593],"filename":"Sound.js","lineno":763,"path":"src\\sound"},"description":"Pauses the sound.","kind":"function","name":"pause","memberof":"Phaser.Sound","longname":"Phaser.Sound#pause","scope":"instance","___s":true},{"meta":{"range":[24967,25046],"filename":"Sound.js","lineno":782,"path":"src\\sound"},"description":"Resumes the sound.","kind":"function","name":"resume","memberof":"Phaser.Sound","longname":"Phaser.Sound#resume","scope":"instance","___s":true},{"meta":{"range":[27371,27454],"filename":"Sound.js","lineno":858,"path":"src\\sound"},"description":"Stop playing this sound.","kind":"function","name":"stop","memberof":"Phaser.Sound","longname":"Phaser.Sound#stop","scope":"instance","___s":true},{"meta":{"range":[29023,29840],"filename":"Sound.js","lineno":924,"path":"src\\sound"},"description":"Starts this sound playing (or restarts it if already doing so) and sets the volume to zero.\rThen increases the volume from 0 to 1 over the duration specified.\r\rAt the end of the fade Sound.onFadeComplete is dispatched with this Sound object as the first parameter,\rand the final volume (1) as the second parameter.","kind":"function","name":"fadeIn","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":1000,"description":"The time in milliseconds over which the Sound should fade in.","name":"duration"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the Sound be set to loop? Note that this doesn't cause the fade to repeat.","name":"loop"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"(current marker)","description":"The marker to start at; defaults to the current (last played) marker. To start playing from the beginning specify specify a marker of `''`.","name":"marker"}],"memberof":"Phaser.Sound","longname":"Phaser.Sound#fadeIn","scope":"instance","___s":true},{"meta":{"range":[30182,30608],"filename":"Sound.js","lineno":952,"path":"src\\sound"},"description":"Decreases the volume of this Sound from its current value to 0 over the duration specified.\rAt the end of the fade Sound.onFadeComplete is dispatched with this Sound object as the first parameter,\rand the final volume (0) as the second parameter.","kind":"function","name":"fadeOut","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":1000,"description":"The time in milliseconds over which the Sound should fade out.","name":"duration"}],"memberof":"Phaser.Sound","longname":"Phaser.Sound#fadeOut","scope":"instance","___s":true},{"meta":{"range":[30699,31253],"filename":"Sound.js","lineno":966,"path":"src\\sound"},"description":"Fades the volume of this Sound from its current value to the given volume over the duration specified.\rAt the end of the fade Sound.onFadeComplete is dispatched with this Sound object as the first parameter, \rand the final volume (volume) as the second parameter.","kind":"function","name":"fadeTo","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":1000,"description":"The time in milliseconds during which the Sound should fade out.","name":"duration"},{"type":{"names":["number"]},"optional":true,"description":"The volume which the Sound should fade to. This is a value between 0 and 1.","name":"volume"}],"memberof":"Phaser.Sound","longname":"Phaser.Sound#fadeTo","scope":"instance","___s":true},{"meta":{"range":[32173,32522],"filename":"Sound.js","lineno":1013,"path":"src\\sound"},"description":"Called automatically by SoundManager.volume.\r\rSets the volume of AudioTag Sounds as a percentage of the Global Volume.\r\rYou should not normally call this directly.","kind":"function","name":"updateGlobalVolume","access":"protected","params":[{"type":{"names":["float"]},"description":"The global SoundManager volume.","name":"globalVolume"}],"memberof":"Phaser.Sound","longname":"Phaser.Sound#updateGlobalVolume","scope":"instance","___s":true},{"meta":{"range":[32815,33067],"filename":"Sound.js","lineno":1035,"path":"src\\sound"},"description":"Destroys this sound and all associated events and removes it from the SoundManager.","kind":"function","name":"destroy","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true this Sound is automatically removed from the SoundManager.","name":"remove"}],"memberof":"Phaser.Sound","longname":"Phaser.Sound#destroy","scope":"instance","___s":true},{"meta":{"range":[33823,33962],"filename":"Sound.js","lineno":1074,"path":"src\\sound"},"name":"isDecoding","properties":[{"type":{"names":["boolean"]},"description":"Returns true if the sound file is still decoding.","name":"isDecoding"}],"readonly":true,"memberof":"Phaser.Sound","longname":"Phaser.Sound#isDecoding","scope":"instance","kind":"member","___s":true},{"meta":{"range":[34132,34263],"filename":"Sound.js","lineno":1087,"path":"src\\sound"},"name":"isDecoded","properties":[{"type":{"names":["boolean"]},"description":"Returns true if the sound file has decoded.","name":"isDecoded"}],"readonly":true,"memberof":"Phaser.Sound","longname":"Phaser.Sound#isDecoded","scope":"instance","kind":"member","___s":true},{"meta":{"range":[34427,34535],"filename":"Sound.js","lineno":1100,"path":"src\\sound"},"name":"mute","properties":[{"type":{"names":["boolean"]},"description":"Gets or sets the muted state of this sound.","name":"mute"}],"memberof":"Phaser.Sound","longname":"Phaser.Sound#mute","scope":"instance","kind":"member","___s":true},{"meta":{"range":[35606,35785],"filename":"Sound.js","lineno":1155,"path":"src\\sound"},"name":"volume","properties":[{"type":{"names":["number"]},"description":"Gets or sets the volume of this sound, a value between 0 and 1. The value given is clamped to the range 0 to 1.","name":"volume"}],"memberof":"Phaser.Sound","longname":"Phaser.Sound#volume","scope":"instance","kind":"member","___s":true},{"meta":{"range":[1692,5942],"filename":"SoundManager.js","lineno":26,"path":"src\\sound"},"description":"The Sound Manager is responsible for playing back audio via either the Legacy HTML Audio tag or via Web Audio if the browser supports it.\rNote: On Firefox 25+ on Linux if you have media.gstreamer disabled in about:config then it cannot play back mp3 or m4a files.\rThe audio file type and the encoding of those files are extremely important. Not all browsers can play all audio formats.\rThere is a good guide to what's supported here: http://hpr.dogphilosophy.net/test/\r\rIf you are reloading a Phaser Game on a page that never properly refreshes (such as in an AngularJS project) then you will quickly run out\rof AudioContext nodes. If this is the case create a global var called PhaserGlobal on the window object before creating the game. The active\rAudioContext will then be saved to window.PhaserGlobal.audioContext when the Phaser game is destroyed, and re-used when it starts again.\r\rMobile warning: There are some mobile devices (certain iPad 2 and iPad Mini revisions) that cannot play 48000 Hz audio.\rWhen they try to play the audio becomes extremely distorted and buzzes, eventually crashing the sound system.\rThe solution is to use a lower encoding rate such as 44100 Hz. Sometimes the audio context will\rbe created with a sampleRate of 48000. If this happens and audio distorts you should re-create the context.","kind":"class","classdesc":"Phaser.SoundManager","params":[{"type":{"names":["Phaser.Game"]},"description":"Reference to the current game instance.","name":"game"}],"name":"SoundManager","longname":"Phaser.SoundManager","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1819,1835],"filename":"SoundManager.js","lineno":31,"path":"src\\sound"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.SoundManager#game","kind":"member","memberof":"Phaser.SoundManager","scope":"instance","___s":true},{"meta":{"range":[1983,2023],"filename":"SoundManager.js","lineno":36,"path":"src\\sound"},"properties":[{"type":{"names":["Phaser.Signal"]},"description":"The event dispatched when a sound decodes (typically only for mp3 files)","name":"onSoundDecode"}],"name":"onSoundDecode","longname":"Phaser.SoundManager#onSoundDecode","kind":"member","memberof":"Phaser.SoundManager","scope":"instance","___s":true},{"meta":{"range":[2231,2272],"filename":"SoundManager.js","lineno":42,"path":"src\\sound"},"description":"This signal is dispatched whenever the global volume changes. The new volume is passed as the only parameter to your callback.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onVolumeChange"}],"name":"onVolumeChange","longname":"Phaser.SoundManager#onVolumeChange","kind":"member","memberof":"Phaser.SoundManager","scope":"instance","___s":true},{"meta":{"range":[2478,2511],"filename":"SoundManager.js","lineno":48,"path":"src\\sound"},"description":"This signal is dispatched when the SoundManager is globally muted, either directly via game code or as a result of the game pausing.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onMute"}],"name":"onMute","longname":"Phaser.SoundManager#onMute","kind":"member","memberof":"Phaser.SoundManager","scope":"instance","___s":true},{"meta":{"range":[2736,2771],"filename":"SoundManager.js","lineno":54,"path":"src\\sound"},"description":"This signal is dispatched when the SoundManager is globally un-muted, either directly via game code or as a result of the game resuming from a pause.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onUnMute"}],"name":"onUnMute","longname":"Phaser.SoundManager#onUnMute","kind":"member","memberof":"Phaser.SoundManager","scope":"instance","___s":true},{"meta":{"range":[2897,2916],"filename":"SoundManager.js","lineno":60,"path":"src\\sound"},"properties":[{"type":{"names":["AudioContext"]},"description":"The AudioContext being used for playback.","name":"context"}],"defaultvalue":null,"name":"context","longname":"Phaser.SoundManager#context","kind":"member","memberof":"Phaser.SoundManager","scope":"instance","___s":true},{"meta":{"range":[3061,3087],"filename":"SoundManager.js","lineno":66,"path":"src\\sound"},"properties":[{"type":{"names":["boolean"]},"description":"True the SoundManager and device are both using Web Audio.","name":"usingWebAudio"}],"readonly":true,"name":"usingWebAudio","longname":"Phaser.SoundManager#usingWebAudio","kind":"member","memberof":"Phaser.SoundManager","scope":"instance","___s":true},{"meta":{"range":[3257,3283],"filename":"SoundManager.js","lineno":72,"path":"src\\sound"},"properties":[{"type":{"names":["boolean"]},"description":"True the SoundManager and device are both using the Audio tag instead of Web Audio.","name":"usingAudioTag"}],"readonly":true,"name":"usingAudioTag","longname":"Phaser.SoundManager#usingAudioTag","kind":"member","memberof":"Phaser.SoundManager","scope":"instance","___s":true},{"meta":{"range":[3506,3526],"filename":"SoundManager.js","lineno":78,"path":"src\\sound"},"properties":[{"type":{"names":["boolean"]},"description":"True if audio been disabled via the PhaserGlobal (useful if you need to use a 3rd party audio library) or the device doesn't support any audio.","name":"noAudio"}],"defaultvalue":false,"name":"noAudio","longname":"Phaser.SoundManager#noAudio","kind":"member","memberof":"Phaser.SoundManager","scope":"instance","___s":true},{"meta":{"range":[3748,3775],"filename":"SoundManager.js","lineno":84,"path":"src\\sound"},"properties":[{"type":{"names":["boolean"]},"description":"Used in conjunction with Sound.externalNode this allows you to stop a Sound node being connected to the SoundManager master gain node.","name":"connectToMaster"}],"defaultvalue":true,"name":"connectToMaster","longname":"Phaser.SoundManager#connectToMaster","kind":"member","memberof":"Phaser.SoundManager","scope":"instance","___s":true},{"meta":{"range":[3927,3951],"filename":"SoundManager.js","lineno":90,"path":"src\\sound"},"properties":[{"type":{"names":["boolean"]},"description":"true if the audio system is currently locked awaiting a touch event.","name":"touchLocked"}],"defaultvalue":false,"name":"touchLocked","longname":"Phaser.SoundManager#touchLocked","kind":"member","memberof":"Phaser.SoundManager","scope":"instance","___s":true},{"meta":{"range":[4079,4097],"filename":"SoundManager.js","lineno":96,"path":"src\\sound"},"properties":[{"type":{"names":["number"]},"description":"The number of audio channels to use in playback.","name":"channels"}],"defaultvalue":32,"name":"channels","longname":"Phaser.SoundManager#channels","kind":"member","memberof":"Phaser.SoundManager","scope":"instance","___s":true},{"meta":{"range":[4468,4491],"filename":"SoundManager.js","lineno":105,"path":"src\\sound"},"description":"Set to true to have all sound muted when the Phaser game pauses (such as on loss of focus),\ror set to false to keep audio playing, regardless of the game pause state. You may need to\rdo this should you wish to control audio muting via external DOM buttons or similar.","properties":[{"type":{"names":["boolean"]},"name":"muteOnPause"}],"defaultvalue":true,"name":"muteOnPause","longname":"Phaser.SoundManager#muteOnPause","kind":"member","memberof":"Phaser.SoundManager","scope":"instance","___s":true},{"meta":{"range":[5988,6095],"filename":"SoundManager.js","lineno":169,"path":"src\\sound"},"description":"Initialises the sound manager.","kind":"function","name":"boot","access":"protected","memberof":"Phaser.SoundManager","longname":"Phaser.SoundManager#boot","scope":"instance","___s":true},{"meta":{"range":[9080,9295],"filename":"SoundManager.js","lineno":270,"path":"src\\sound"},"description":"Sets the Input Manager touch callback to be SoundManager.unlock.\rRequired for iOS audio device unlocking. Mostly just used internally.","kind":"function","name":"setTouchLock","memberof":"Phaser.SoundManager","longname":"Phaser.SoundManager#setTouchLock","scope":"instance","___s":true},{"meta":{"range":[9794,9993],"filename":"SoundManager.js","lineno":296,"path":"src\\sound"},"description":"Enables the audio, usually after the first touch.","kind":"function","name":"unlock","returns":[{"type":{"names":["boolean"]},"description":"True if the callback should be removed, otherwise false."}],"memberof":"Phaser.SoundManager","longname":"Phaser.SoundManager#unlock","scope":"instance","___s":true},{"meta":{"range":[11191,11293],"filename":"SoundManager.js","lineno":340,"path":"src\\sound"},"description":"Stops all the sounds in the game.","kind":"function","name":"stopAll","memberof":"Phaser.SoundManager","longname":"Phaser.SoundManager#stopAll","scope":"instance","___s":true},{"meta":{"range":[11595,11699],"filename":"SoundManager.js","lineno":362,"path":"src\\sound"},"description":"Pauses all the sounds in the game.","kind":"function","name":"pauseAll","memberof":"Phaser.SoundManager","longname":"Phaser.SoundManager#pauseAll","scope":"instance","___s":true},{"meta":{"range":[12003,12106],"filename":"SoundManager.js","lineno":384,"path":"src\\sound"},"description":"Resumes every sound in the game.","kind":"function","name":"resumeAll","memberof":"Phaser.SoundManager","longname":"Phaser.SoundManager#resumeAll","scope":"instance","___s":true},{"meta":{"range":[12412,12659],"filename":"SoundManager.js","lineno":406,"path":"src\\sound"},"description":"Decode a sound by its asset key.","kind":"function","name":"decode","params":[{"type":{"names":["string"]},"description":"Assets key of the sound to be decoded.","name":"key"},{"type":{"names":["Phaser.Sound"]},"optional":true,"description":"Its buffer will be set to decoded data.","name":"sound"}],"memberof":"Phaser.SoundManager","longname":"Phaser.SoundManager#decode","scope":"instance","___s":true},{"meta":{"range":[13477,14256],"filename":"SoundManager.js","lineno":443,"path":"src\\sound"},"description":"This method allows you to give the SoundManager a list of Sound files, or keys, and a callback.\rOnce all of the Sound files have finished decoding the callback will be invoked.\rThe amount of time spent decoding depends on the codec used and file size.\rIf all of the files given have already decoded the callback is triggered immediately.","kind":"function","name":"setDecodedCallback","params":[{"type":{"names":["string","array"]},"description":"An array containing either Phaser.Sound objects or their key strings as found in the Phaser.Cache.","name":"files"},{"type":{"names":["function"]},"description":"The callback which will be invoked once all files have finished decoding.","name":"callback"},{"type":{"names":["Object"]},"description":"The context in which the callback will run.","name":"callbackContext"}],"memberof":"Phaser.SoundManager","longname":"Phaser.SoundManager#setDecodedCallback","scope":"instance","___s":true},{"meta":{"range":[15285,15475],"filename":"SoundManager.js","lineno":493,"path":"src\\sound"},"description":"Updates every sound in the game, checks for audio unlock on mobile and monitors the decoding watch list.","kind":"function","name":"update","access":"protected","memberof":"Phaser.SoundManager","longname":"Phaser.SoundManager#update","scope":"instance","___s":true},{"meta":{"range":[16555,17071],"filename":"SoundManager.js","lineno":540,"path":"src\\sound"},"description":"Adds a new Sound into the SoundManager.","kind":"function","name":"add","params":[{"type":{"names":["string"]},"description":"Asset key for the sound.","name":"key"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"Default value for the volume.","name":"volume"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Whether or not the sound will loop.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Controls if the created Sound object will connect to the master gainNode of the SoundManager when running under WebAudio.","name":"connect"}],"returns":[{"type":{"names":["Phaser.Sound"]},"description":"The new sound instance."}],"memberof":"Phaser.SoundManager","longname":"Phaser.SoundManager#add","scope":"instance","___s":true},{"meta":{"range":[17457,17699],"filename":"SoundManager.js","lineno":564,"path":"src\\sound"},"description":"Adds a new AudioSprite into the SoundManager.","kind":"function","name":"addSprite","params":[{"type":{"names":["string"]},"description":"Asset key for the sound.","name":"key"}],"returns":[{"type":{"names":["Phaser.AudioSprite"]},"description":"The new AudioSprite instance."}],"memberof":"Phaser.SoundManager","longname":"Phaser.SoundManager#addSprite","scope":"instance","___s":true},{"meta":{"range":[17849,18153],"filename":"SoundManager.js","lineno":579,"path":"src\\sound"},"description":"Removes a Sound from the SoundManager. The removed Sound is destroyed before removal.","kind":"function","name":"remove","params":[{"type":{"names":["Phaser.Sound"]},"description":"The sound object to remove.","name":"sound"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the sound was removed successfully, otherwise false."}],"memberof":"Phaser.SoundManager","longname":"Phaser.SoundManager#remove","scope":"instance","___s":true},{"meta":{"range":[18510,18883],"filename":"SoundManager.js","lineno":604,"path":"src\\sound"},"description":"Removes all Sounds from the SoundManager that have an asset key matching the given value.\rThe removed Sounds are destroyed before removal.","kind":"function","name":"removeByKey","params":[{"type":{"names":["string"]},"description":"The key to match when removing sound objects.","name":"key"}],"returns":[{"type":{"names":["number"]},"description":"The number of matching sound objects that were removed."}],"memberof":"Phaser.SoundManager","longname":"Phaser.SoundManager#removeByKey","scope":"instance","___s":true},{"meta":{"range":[19271,19647],"filename":"SoundManager.js","lineno":631,"path":"src\\sound"},"description":"Adds a new Sound into the SoundManager and starts it playing.","kind":"function","name":"play","params":[{"type":{"names":["string"]},"description":"Asset key for the sound.","name":"key"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"Default value for the volume.","name":"volume"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Whether or not the sound will loop.","name":"loop"}],"returns":[{"type":{"names":["Phaser.Sound"]},"description":"The new sound instance."}],"memberof":"Phaser.SoundManager","longname":"Phaser.SoundManager#play","scope":"instance","___s":true},{"meta":{"range":[21346,21504],"filename":"SoundManager.js","lineno":722,"path":"src\\sound"},"description":"Stops all the sounds in the game, then destroys them and finally clears up any callbacks.","kind":"function","name":"destroy","memberof":"Phaser.SoundManager","longname":"Phaser.SoundManager#destroy","scope":"instance","___s":true},{"meta":{"range":[22414,22572],"filename":"SoundManager.js","lineno":765,"path":"src\\sound"},"name":"mute","properties":[{"type":{"names":["boolean"]},"description":"Gets or sets the muted state of the SoundManager. This effects all sounds in the game.","name":"mute"}],"memberof":"Phaser.SoundManager","longname":"Phaser.SoundManager#mute","scope":"instance","kind":"member","___s":true},{"meta":{"range":[23177,23376],"filename":"SoundManager.js","lineno":805,"path":"src\\sound"},"name":"volume","properties":[{"type":{"names":["number"]},"description":"Gets or sets the global volume of the SoundManager, a value between 0 and 1. The value given is clamped to the range 0 to 1.","name":"volume"}],"memberof":"Phaser.SoundManager","longname":"Phaser.SoundManager#volume","scope":"instance","kind":"member","___s":true},{"meta":{"range":[204,333],"filename":"Color.js","lineno":7,"path":"src\\stubs"},"description":"The Phaser.Color stub. This stub only includes the bare minimum functions that Phaser needs.","kind":"class","name":"Color","memberof":"Phaser","longname":"Phaser.Color","scope":"static","___s":true},{"meta":{"range":[359,1112],"filename":"Color.js","lineno":14,"path":"src\\stubs"},"description":"Converts a value - a \"hex\" string, a \"CSS 'web' string\", or a number - into red, green, blue, and alpha components.\r\rThe value can be a string (see `hexToColor` and `webToColor` for the supported formats) or a packed integer (see `getRGB`).\r\rAn alpha channel is _not_ supported when specifying a hex string.","kind":"function","name":"valueToColor","scope":"static","params":[{"type":{"names":["string","number"]},"description":"The color expressed as a recognized string format or a packed integer.","name":"value"},{"type":{"names":["object"]},"optional":true,"description":"The object to use for the output. If not provided a new object will be created.","name":"out"}],"returns":[{"type":{"names":["object"]},"description":"The (`out`) object with the red, green, blue, and alpha values set as the r/g/b/a properties."}],"memberof":"Phaser.Color","longname":"Phaser.Color.valueToColor","___s":true},{"meta":{"range":[2072,2572],"filename":"Color.js","lineno":60,"path":"src\\stubs"},"description":"Return the component parts of a color as an Object with the properties alpha, red, green, blue.\r\rAlpha will only be set if it exist in the given color (0xAARRGGBB)","kind":"function","name":"getRGB","scope":"static","params":[{"type":{"names":["number"]},"description":"Color in RGB (0xRRGGBB) or ARGB format (0xAARRGGBB).","name":"color"}],"returns":[{"type":{"names":["object"]},"description":"An Object with properties: alpha, red, green, blue (also r, g, b and a). Alpha will only be present if a color value > 16777215 was given."}],"memberof":"Phaser.Color","longname":"Phaser.Color.getRGB","___s":true},{"meta":{"range":[3439,4052],"filename":"Color.js","lineno":102,"path":"src\\stubs"},"description":"Converts a CSS 'web' string into a Phaser Color object.\r\rThe web string can be in the format `'rgb(r,g,b)'` or `'rgba(r,g,b,a)'` where r/g/b are in the range [0..255] and a is in the range [0..1].","kind":"function","name":"webToColor","scope":"static","params":[{"type":{"names":["string"]},"description":"The color string in CSS 'web' format.","name":"web"},{"type":{"names":["object"]},"optional":true,"description":"An object into which 4 properties will be created: r, g, b and a. If not provided a new object will be created.","name":"out"}],"returns":[{"type":{"names":["object"]},"description":"An object with the red, green, blue and alpha values set in the r, g, b and a properties."}],"memberof":"Phaser.Color","longname":"Phaser.Color.webToColor","___s":true},{"meta":{"range":[4544,5198],"filename":"Color.js","lineno":130,"path":"src\\stubs"},"description":"Converts a hex string into a Phaser Color object.\r\rThe hex string can supplied as `'#0033ff'` or the short-hand format of `'#03f'`; it can begin with an optional \"#\" or \"0x\", or be unprefixed.    \r\rAn alpha channel is _not_ supported.","kind":"function","name":"hexToColor","scope":"static","params":[{"type":{"names":["string"]},"description":"The color string in a hex format.","name":"hex"},{"type":{"names":["object"]},"optional":true,"description":"An object into which 3 properties will be created or set: r, g and b. If not provided a new object will be created.","name":"out"}],"returns":[{"type":{"names":["object"]},"description":"An object with the red, green and blue values set in the r, g and b properties."}],"memberof":"Phaser.Color","longname":"Phaser.Color.hexToColor","___s":true},{"meta":{"range":[5848,6113],"filename":"Color.js","lineno":167,"path":"src\\stubs"},"description":"Takes a color object and updates the rgba property.","kind":"function","name":"updateColor","scope":"static","params":[{"type":{"names":["object"]},"description":"The color object to update.","name":"out"}],"returns":[{"type":{"names":["number"]},"description":"A native color value integer (format: 0xAARRGGBB)."}],"memberof":"Phaser.Color","longname":"Phaser.Color.updateColor","___s":true},{"meta":{"range":[6461,7001],"filename":"Color.js","lineno":185,"path":"src\\stubs"},"description":"Given an alpha and 3 color values this will return an integer representation of it.","kind":"function","name":"getColor32","scope":"static","params":[{"type":{"names":["number"]},"description":"The alpha color component, in the range 0 - 255.","name":"a"},{"type":{"names":["number"]},"description":"The red color component, in the range 0 - 255.","name":"r"},{"type":{"names":["number"]},"description":"The green color component, in the range 0 - 255.","name":"g"},{"type":{"names":["number"]},"description":"The blue color component, in the range 0 - 255.","name":"b"}],"returns":[{"type":{"names":["number"]},"description":"A native color value integer (format: 0xAARRGGBB)."}],"memberof":"Phaser.Color","longname":"Phaser.Color.getColor32","___s":true},{"meta":{"range":[7110,7557],"filename":"Color.js","lineno":202,"path":"src\\stubs"},"description":"Given 3 color values this will return an integer representation of it.","kind":"function","name":"getColor","scope":"static","params":[{"type":{"names":["number"]},"description":"The red color component, in the range 0 - 255.","name":"r"},{"type":{"names":["number"]},"description":"The green color component, in the range 0 - 255.","name":"g"},{"type":{"names":["number"]},"description":"The blue color component, in the range 0 - 255.","name":"b"}],"returns":[{"type":{"names":["number"]},"description":"A native color value integer (format: 0xRRGGBB)."}],"memberof":"Phaser.Color","longname":"Phaser.Color.getColor","___s":true},{"meta":{"range":[204,234],"filename":"Create.js","lineno":7,"path":"src\\stubs"},"author":["Richard Davey <rich@photonstorm.com>"],"copyright":"2016 Photon Storm Ltd.","license":"{@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}","name":"Create","longname":"Phaser.Create","kind":"function","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[360,386],"filename":"Debug.js","lineno":12,"path":"src\\stubs"},"description":"This is a stub for the Phaser Debug Class.\rIt allows you to exclude the default Debug from your build, without making Game crash.","name":"debugNoop","longname":"debugNoop","kind":"function","scope":"global","___s":true},{"meta":{"range":[204,552],"filename":"DOM.js","lineno":7,"path":"src\\stubs"},"description":"DOM utility class.\r\rProvides a useful Window and Element functions as well as cross-browser compatibility buffer.\r\rSome code originally derived from {@link https://github.com/ryanve/verge verge}.\rSome parts were inspired by the research of Ryan Van Etten, released under MIT License 2013.","kind":"class","name":"DOM","scope":"static","memberof":"Phaser","longname":"Phaser.DOM","___s":true},{"meta":{"range":[576,1074],"filename":"DOM.js","lineno":20,"path":"src\\stubs"},"description":"Get the [absolute] position of the element relative to the Document.\r\rThe value may vary slightly as the page is scrolled due to rounding errors.","kind":"function","name":"getOffset","params":[{"type":{"names":["DOMElement"]},"description":"The targeted element that we want to retrieve the offset.","name":"element"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"The point we want to take the x/y values of the offset.","name":"point"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"- A point objet with the offsetX and Y as its properties."}],"memberof":"Phaser.DOM","longname":"Phaser.DOM.getOffset","scope":"static","___s":true},{"meta":{"range":[2065,2223],"filename":"DOM.js","lineno":61,"path":"src\\stubs"},"description":"A cross-browser window.scrollX.","name":"scrollX","properties":[{"type":{"names":["number"]},"name":"scrollX"}],"readonly":true,"access":"protected","memberof":"Phaser.DOM","longname":"Phaser.DOM.scrollX","scope":"static","kind":"member","___s":true},{"meta":{"range":[2314,2472],"filename":"DOM.js","lineno":73,"path":"src\\stubs"},"description":"A cross-browser window.scrollY.","name":"scrollY","properties":[{"type":{"names":["number"]},"name":"scrollY"}],"readonly":true,"access":"protected","memberof":"Phaser.DOM","longname":"Phaser.DOM.scrollY","scope":"static","kind":"member","___s":true},{"meta":{"range":[356,380],"filename":"Net.js","lineno":12,"path":"src\\stubs"},"description":"This is a stub for the Phaser Net Class.\rIt allows you to exclude the default Net from your build, without making Game crash.","name":"netNoop","longname":"netNoop","kind":"function","scope":"global","___s":true},{"meta":{"range":[360,666],"filename":"ScaleManager.js","lineno":12,"path":"src\\stubs"},"description":"This is a stub for the Phaser ScaleManager.\rIt allows you to exclude the default Scale Manager from your build, without making Game crash.","name":"ScaleManager","longname":"Phaser.ScaleManager","kind":"function","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[620,656],"filename":"ScaleManager.js","lineno":19,"path":"src\\stubs"},"description":"The bounds of the scaled game. The x/y will match the offset of the canvas element and the width/height the scaled width and height.","properties":[{"type":{"names":["Phaser.Rectangle"]},"name":"bounds"}],"readonly":true,"name":"bounds","longname":"Phaser.ScaleManager#bounds","kind":"member","memberof":"Phaser.ScaleManager","scope":"instance","___s":true},{"meta":{"range":[360,429],"filename":"SoundManager.js","lineno":12,"path":"src\\stubs"},"description":"This is a stub for the Phaser SoundManager.\rIt allows you to exclude the default Sound Manager from your build, without making Game crash.","name":"SoundManager","longname":"Phaser.SoundManager","kind":"function","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[360,396],"filename":"TweenManager.js","lineno":12,"path":"src\\stubs"},"description":"This is a stub for the Phaser TweenManager.\rIt allows you to exclude the default Tween Manager from your build, without making Game crash.","name":"TweenManager","longname":"Phaser.TweenManager","kind":"function","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1018,2991],"filename":"ImageCollection.js","lineno":22,"path":"src\\tilemap"},"description":"An Image Collection is a special tileset containing mulitple images, with no slicing into each image.\r\rImage Collections are normally created automatically when Tiled data is loaded.","kind":"class","classdesc":"Phaser.ImageCollection","params":[{"type":{"names":["string"]},"description":"The name of the image collection in the map data.","name":"name"},{"type":{"names":["integer"]},"description":"The first image index this image collection contains.","name":"firstgid"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":32,"description":"Width of widest image (in pixels).","name":"width"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":32,"description":"Height of tallest image (in pixels).","name":"height"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The margin around all images in the collection (in pixels).","name":"margin"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The spacing between each image in the collection (in pixels).","name":"spacing"},{"type":{"names":["object"]},"optional":true,"defaultvalue":"{}","description":"Custom Image Collection properties.","name":"properties"}],"name":"ImageCollection","longname":"Phaser.ImageCollection","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1432,1448],"filename":"ImageCollection.js","lineno":33,"path":"src\\tilemap"},"description":"The name of the Image Collection.","properties":[{"type":{"names":["string"]},"name":"name"}],"name":"name","longname":"Phaser.ImageCollection#name","kind":"member","memberof":"Phaser.ImageCollection","scope":"instance","___s":true},{"meta":{"range":[1634,1662],"filename":"ImageCollection.js","lineno":40,"path":"src\\tilemap"},"description":"The Tiled firstgid value.\rThis is the starting index of the first image index this Image Collection contains.","properties":[{"type":{"names":["integer"]},"name":"firstgid"}],"name":"firstgid","longname":"Phaser.ImageCollection#firstgid","kind":"member","memberof":"Phaser.ImageCollection","scope":"instance","___s":true},{"meta":{"range":[1793,1820],"filename":"ImageCollection.js","lineno":47,"path":"src\\tilemap"},"description":"The width of the widest image (in pixels).","properties":[{"type":{"names":["integer"]},"name":"imageWidth"}],"readonly":true,"name":"imageWidth","longname":"Phaser.ImageCollection#imageWidth","kind":"member","memberof":"Phaser.ImageCollection","scope":"instance","___s":true},{"meta":{"range":[1954,1983],"filename":"ImageCollection.js","lineno":54,"path":"src\\tilemap"},"description":"The height of the tallest image (in pixels).","properties":[{"type":{"names":["integer"]},"name":"imageHeight"}],"readonly":true,"name":"imageHeight","longname":"Phaser.ImageCollection#imageHeight","kind":"member","memberof":"Phaser.ImageCollection","scope":"instance","___s":true},{"meta":{"range":[2194,2223],"filename":"ImageCollection.js","lineno":63,"path":"src\\tilemap"},"description":"The margin around the images in the collection (in pixels).\rUse `setSpacing` to change.","properties":[{"type":{"names":["integer"]},"name":"imageMarge"}],"readonly":true,"name":"imageMargin","longname":"Phaser.ImageCollection#imageMargin","kind":"member","memberof":"Phaser.ImageCollection","scope":"instance","___s":true},{"meta":{"range":[2410,2441],"filename":"ImageCollection.js","lineno":71,"path":"src\\tilemap"},"description":"The spacing between each image in the collection (in pixels).\rUse `setSpacing` to change.","properties":[{"type":{"names":["integer"]},"name":"imageSpacing"}],"readonly":true,"name":"imageSpacing","longname":"Phaser.ImageCollection#imageSpacing","kind":"member","memberof":"Phaser.ImageCollection","scope":"instance","___s":true},{"meta":{"range":[2596,2630],"filename":"ImageCollection.js","lineno":77,"path":"src\\tilemap"},"description":"Image Collection-specific properties that are typically defined in the Tiled editor.","properties":[{"type":{"names":["object"]},"name":"properties"}],"name":"properties","longname":"Phaser.ImageCollection#properties","kind":"member","memberof":"Phaser.ImageCollection","scope":"instance","___s":true},{"meta":{"range":[2794,2810],"filename":"ImageCollection.js","lineno":85,"path":"src\\tilemap"},"description":"The cached images that are a part of this collection.","properties":[{"type":{"names":["array"]},"name":"images"}],"readonly":true,"name":"images","longname":"Phaser.ImageCollection#images","kind":"member","memberof":"Phaser.ImageCollection","scope":"instance","___s":true},{"meta":{"range":[2973,2987],"filename":"ImageCollection.js","lineno":93,"path":"src\\tilemap"},"description":"The total number of images in the image collection.","properties":[{"type":{"names":["integer"]},"name":"total"}],"readonly":true,"name":"total","longname":"Phaser.ImageCollection#total","kind":"member","memberof":"Phaser.ImageCollection","scope":"instance","___s":true},{"meta":{"range":[3040,3353],"filename":"ImageCollection.js","lineno":98,"path":"src\\tilemap"},"description":"Returns true if and only if this image collection contains the given image index.","kind":"function","name":"containsImageIndex","params":[{"type":{"names":["integer"]},"description":"The image index to search for.","name":"imageIndex"}],"returns":[{"type":{"names":["boolean"]},"description":"True if this Image Collection contains the given index."}],"memberof":"Phaser.ImageCollection","longname":"Phaser.ImageCollection#containsImageIndex","scope":"instance","___s":true},{"meta":{"range":[3551,3836],"filename":"ImageCollection.js","lineno":114,"path":"src\\tilemap"},"description":"Add an image to this Image Collection.","kind":"function","name":"addImage","params":[{"type":{"names":["integer"]},"description":"The gid of the image in the Image Collection.","name":"gid"},{"type":{"names":["string"]},"description":"The the key of the image in the Image Collection and in the cache.","name":"image"}],"memberof":"Phaser.ImageCollection","longname":"Phaser.ImageCollection#addImage","scope":"instance","___s":true},{"meta":{"range":[684,4105],"filename":"Tile.js","lineno":19,"path":"src\\tilemap"},"description":"A Tile is a representation of a single tile within the Tilemap.","kind":"class","classdesc":"Phaser.Tile","params":[{"type":{"names":["object"]},"description":"The layer in the Tilemap data that this tile belongs to.","name":"layer"},{"type":{"names":["number"]},"description":"The index of this tile type in the core map data.","name":"index"},{"type":{"names":["number"]},"description":"The x coordinate of this tile.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate of this tile.","name":"y"},{"type":{"names":["number"]},"description":"Width of the tile.","name":"width"},{"type":{"names":["number"]},"description":"Height of the tile.","name":"height"}],"name":"Tile","longname":"Phaser.Tile","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[860,878],"filename":"Tile.js","lineno":24,"path":"src\\tilemap"},"properties":[{"type":{"names":["object"]},"description":"The layer in the Tilemap data that this tile belongs to.","name":"layer"}],"name":"layer","longname":"Phaser.Tile#layer","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[1055,1073],"filename":"Tile.js","lineno":29,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The index of this tile within the map data corresponding to the tileset, or -1 if this represents a blank/null tile.","name":"index"}],"name":"index","longname":"Phaser.Tile#index","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[1164,1174],"filename":"Tile.js","lineno":34,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The x map coordinate of this tile.","name":"x"}],"name":"x","longname":"Phaser.Tile#x","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[1265,1275],"filename":"Tile.js","lineno":39,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The y map coordinate of this tile.","name":"y"}],"name":"y","longname":"Phaser.Tile#y","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[1375,1392],"filename":"Tile.js","lineno":44,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The rotation angle of this tile.","name":"rotation"}],"name":"rotation","longname":"Phaser.Tile#rotation","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[1503,1523],"filename":"Tile.js","lineno":49,"path":"src\\tilemap"},"properties":[{"type":{"names":["boolean"]},"description":"Whether this tile is flipped (mirrored) or not.","name":"flipped"}],"name":"flipped","longname":"Phaser.Tile#flipped","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[1618,1641],"filename":"Tile.js","lineno":54,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The x map coordinate of this tile.","name":"x"}],"name":"worldX","longname":"Phaser.Tile#worldX","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[1732,1756],"filename":"Tile.js","lineno":59,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The y map coordinate of this tile.","name":"y"}],"name":"worldY","longname":"Phaser.Tile#worldY","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[1849,1867],"filename":"Tile.js","lineno":64,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The width of the tile in pixels.","name":"width"}],"name":"width","longname":"Phaser.Tile#width","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[1962,1982],"filename":"Tile.js","lineno":69,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The height of the tile in pixels.","name":"height"}],"name":"height","longname":"Phaser.Tile#height","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[2075,2109],"filename":"Tile.js","lineno":74,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The width of the tile in pixels.","name":"width"}],"name":"centerX","longname":"Phaser.Tile#centerX","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[2204,2239],"filename":"Tile.js","lineno":79,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The height of the tile in pixels.","name":"height"}],"name":"centerY","longname":"Phaser.Tile#centerY","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[2358,2372],"filename":"Tile.js","lineno":84,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The alpha value at which this tile is drawn to the canvas.","name":"alpha"}],"name":"alpha","longname":"Phaser.Tile#alpha","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[2463,2483],"filename":"Tile.js","lineno":89,"path":"src\\tilemap"},"properties":[{"type":{"names":["object"]},"description":"Tile specific properties.","name":"properties"}],"name":"properties","longname":"Phaser.Tile#properties","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[2594,2614],"filename":"Tile.js","lineno":94,"path":"src\\tilemap"},"properties":[{"type":{"names":["boolean"]},"description":"Has this tile been walked / turned into a poly?","name":"scanned"}],"name":"scanned","longname":"Phaser.Tile#scanned","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[2722,2742],"filename":"Tile.js","lineno":99,"path":"src\\tilemap"},"properties":[{"type":{"names":["boolean"]},"description":"Is the top of this tile an interesting edge?","name":"faceTop"}],"name":"faceTop","longname":"Phaser.Tile#faceTop","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[2856,2879],"filename":"Tile.js","lineno":104,"path":"src\\tilemap"},"properties":[{"type":{"names":["boolean"]},"description":"Is the bottom of this tile an interesting edge?","name":"faceBottom"}],"name":"faceBottom","longname":"Phaser.Tile#faceBottom","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[2989,3010],"filename":"Tile.js","lineno":109,"path":"src\\tilemap"},"properties":[{"type":{"names":["boolean"]},"description":"Is the left of this tile an interesting edge?","name":"faceLeft"}],"name":"faceLeft","longname":"Phaser.Tile#faceLeft","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[3122,3144],"filename":"Tile.js","lineno":114,"path":"src\\tilemap"},"properties":[{"type":{"names":["boolean"]},"description":"Is the right of this tile an interesting edge?","name":"faceRight"}],"name":"faceRight","longname":"Phaser.Tile#faceRight","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[3275,3299],"filename":"Tile.js","lineno":120,"path":"src\\tilemap"},"properties":[{"type":{"names":["boolean"]},"description":"Indicating collide with any object on the left.","name":"collideLeft"}],"defaultvalue":false,"name":"collideLeft","longname":"Phaser.Tile#collideLeft","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[3432,3457],"filename":"Tile.js","lineno":126,"path":"src\\tilemap"},"properties":[{"type":{"names":["boolean"]},"description":"Indicating collide with any object on the right.","name":"collideRight"}],"defaultvalue":false,"name":"collideRight","longname":"Phaser.Tile#collideRight","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[3585,3607],"filename":"Tile.js","lineno":132,"path":"src\\tilemap"},"properties":[{"type":{"names":["boolean"]},"description":"Indicating collide with any object on the top.","name":"collideUp"}],"defaultvalue":false,"name":"collideUp","longname":"Phaser.Tile#collideUp","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[3740,3764],"filename":"Tile.js","lineno":138,"path":"src\\tilemap"},"properties":[{"type":{"names":["boolean"]},"description":"Indicating collide with any object on the bottom.","name":"collideDown"}],"defaultvalue":false,"name":"collideDown","longname":"Phaser.Tile#collideDown","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[3879,3908],"filename":"Tile.js","lineno":144,"path":"src\\tilemap"},"properties":[{"type":{"names":["function"]},"description":"Tile collision callback.","name":"collisionCallback"}],"defaultvalue":null,"name":"collisionCallback","longname":"Phaser.Tile#collisionCallback","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[4063,4099],"filename":"Tile.js","lineno":150,"path":"src\\tilemap"},"properties":[{"type":{"names":["object"]},"description":"The context in which the collision callback will be called.","name":"collisionCallbackContext"}],"name":"collisionCallbackContext","longname":"Phaser.Tile#collisionCallbackContext","kind":"member","memberof":"Phaser.Tile","scope":"instance","___s":true},{"meta":{"range":[4143,4470],"filename":"Tile.js","lineno":156,"path":"src\\tilemap"},"description":"Check if the given x and y world coordinates are within this Tile.","kind":"function","name":"containsPoint","params":[{"type":{"names":["number"]},"description":"The x coordinate to test.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to test.","name":"y"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the coordinates are within this Tile, otherwise false."}],"memberof":"Phaser.Tile","longname":"Phaser.Tile#containsPoint","scope":"instance","___s":true},{"meta":{"range":[4620,4918],"filename":"Tile.js","lineno":170,"path":"src\\tilemap"},"description":"Check for intersection with this tile.","kind":"function","name":"intersects","params":[{"type":{"names":["number"]},"description":"The x axis in pixels.","name":"x"},{"type":{"names":["number"]},"description":"The y axis in pixels.","name":"y"},{"type":{"names":["number"]},"description":"The right point.","name":"right"},{"type":{"names":["number"]},"description":"The bottom point.","name":"bottom"}],"memberof":"Phaser.Tile","longname":"Phaser.Tile#intersects","scope":"instance","___s":true},{"meta":{"range":[5374,5719],"filename":"Tile.js","lineno":205,"path":"src\\tilemap"},"description":"Set a callback to be called when this tile is hit by an object.\rThe callback must true true for collision processing to take place.","kind":"function","name":"setCollisionCallback","params":[{"type":{"names":["function"]},"description":"Callback function.","name":"callback"},{"type":{"names":["object"]},"description":"Callback will be called within this context.","name":"context"}],"memberof":"Phaser.Tile","longname":"Phaser.Tile#setCollisionCallback","scope":"instance","___s":true},{"meta":{"range":[5891,5968],"filename":"Tile.js","lineno":220,"path":"src\\tilemap"},"description":"Clean up memory.","kind":"function","name":"destroy","memberof":"Phaser.Tile","longname":"Phaser.Tile#destroy","scope":"instance","___s":true},{"meta":{"range":[6136,6610],"filename":"Tile.js","lineno":233,"path":"src\\tilemap"},"description":"Sets the collision flags for each side of this tile and updates the interesting faces list.","kind":"function","name":"setCollision","params":[{"type":{"names":["boolean"]},"description":"Indicating collide with any object on the left.","name":"left"},{"type":{"names":["boolean"]},"description":"Indicating collide with any object on the right.","name":"right"},{"type":{"names":["boolean"]},"description":"Indicating collide with any object on the top.","name":"up"},{"type":{"names":["boolean"]},"description":"Indicating collide with any object on the bottom.","name":"down"}],"memberof":"Phaser.Tile","longname":"Phaser.Tile#setCollision","scope":"instance","___s":true},{"meta":{"range":[6945,7042],"filename":"Tile.js","lineno":256,"path":"src\\tilemap"},"description":"Reset collision status flags.","kind":"function","name":"resetCollision","memberof":"Phaser.Tile","longname":"Phaser.Tile#resetCollision","scope":"instance","___s":true},{"meta":{"range":[7368,7676],"filename":"Tile.js","lineno":275,"path":"src\\tilemap"},"description":"Is this tile interesting?","kind":"function","name":"isInteresting","params":[{"type":{"names":["boolean"]},"description":"If true will check any collides value.","name":"collides"},{"type":{"names":["boolean"]},"description":"If true will check any face value.","name":"faces"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the Tile is interesting, otherwise false."}],"memberof":"Phaser.Tile","longname":"Phaser.Tile#isInteresting","scope":"instance","___s":true},{"meta":{"range":[8480,8665],"filename":"Tile.js","lineno":305,"path":"src\\tilemap"},"description":"Copies the tile data and properties from the given tile to this tile.","kind":"function","name":"copy","params":[{"type":{"names":["Phaser.Tile"]},"description":"The tile to copy from.","name":"tile"}],"memberof":"Phaser.Tile","longname":"Phaser.Tile#copy","scope":"instance","___s":true},{"meta":{"range":[9195,9330],"filename":"Tile.js","lineno":331,"path":"src\\tilemap"},"name":"collides","properties":[{"type":{"names":["boolean"]},"description":"True if this tile can collide on any of its faces.","name":"collides"}],"readonly":true,"memberof":"Phaser.Tile","longname":"Phaser.Tile#collides","scope":"instance","kind":"member","___s":true},{"meta":{"range":[9529,9700],"filename":"Tile.js","lineno":344,"path":"src\\tilemap"},"name":"canCollide","properties":[{"type":{"names":["boolean"]},"description":"True if this tile can collide on any of its faces or has a collision callback set.","name":"canCollide"}],"readonly":true,"memberof":"Phaser.Tile","longname":"Phaser.Tile#canCollide","scope":"instance","kind":"member","___s":true},{"meta":{"range":[9927,10025],"filename":"Tile.js","lineno":357,"path":"src\\tilemap"},"name":"left","properties":[{"type":{"names":["number"]},"description":"The x value in pixels.","name":"left"}],"readonly":true,"memberof":"Phaser.Tile","longname":"Phaser.Tile#left","scope":"instance","kind":"member","___s":true},{"meta":{"range":[10154,10270],"filename":"Tile.js","lineno":370,"path":"src\\tilemap"},"name":"right","properties":[{"type":{"names":["number"]},"description":"The sum of the x and width properties.","name":"right"}],"readonly":true,"memberof":"Phaser.Tile","longname":"Phaser.Tile#right","scope":"instance","kind":"member","___s":true},{"meta":{"range":[10413,10499],"filename":"Tile.js","lineno":383,"path":"src\\tilemap"},"name":"top","properties":[{"type":{"names":["number"]},"description":"The y value.","name":"top"}],"readonly":true,"memberof":"Phaser.Tile","longname":"Phaser.Tile#top","scope":"instance","kind":"member","___s":true},{"meta":{"range":[10627,10746],"filename":"Tile.js","lineno":396,"path":"src\\tilemap"},"name":"bottom","properties":[{"type":{"names":["number"]},"description":"The sum of the y and height properties.","name":"bottom"}],"readonly":true,"memberof":"Phaser.Tile","longname":"Phaser.Tile#bottom","scope":"instance","kind":"member","___s":true},{"meta":{"range":[2123,5834],"filename":"Tilemap.js","lineno":28,"path":"src\\tilemap"},"description":"Creates a new Phaser.Tilemap object. The map can either be populated with data from a Tiled JSON file or from a CSV file.\r\rTiled is a free software package specifically for creating tile maps, and is available from http://www.mapeditor.org\r\rTo do this pass the Cache key as the first parameter. When using Tiled data you need only provide the key.\rWhen using CSV data you must provide the key and the tileWidth and tileHeight parameters.\rIf creating a blank tilemap to be populated later, you can either specify no parameters at all and then use `Tilemap.create` or pass the map and tile dimensions here.\rNote that all Tilemaps use a base tile size to calculate dimensions from, but that a TilemapLayer may have its own unique tile size that overrides it.\rA Tile map is rendered to the display using a TilemapLayer. It is not added to the display list directly itself.\rA map may have multiple layers. You can perform operations on the map data such as copying, pasting, filling and shuffling the tiles around.","kind":"class","classdesc":"Phaser.Tilemap","params":[{"type":{"names":["Phaser.Game"]},"description":"Game reference to the currently running game.","name":"game"},{"type":{"names":["string"]},"optional":true,"description":"The key of the tilemap data as stored in the Cache. If you're creating a blank map either leave this parameter out or pass `null`.","name":"key"},{"type":{"names":["number"]},"optional":true,"defaultvalue":32,"description":"The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.","name":"tileWidth"},{"type":{"names":["number"]},"optional":true,"defaultvalue":32,"description":"The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.","name":"tileHeight"},{"type":{"names":["number"]},"optional":true,"defaultvalue":10,"description":"The width of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.","name":"width"},{"type":{"names":["number"]},"optional":true,"defaultvalue":10,"description":"The height of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.","name":"height"}],"name":"Tilemap","longname":"Phaser.Tilemap","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[2306,2322],"filename":"Tilemap.js","lineno":33,"path":"src\\tilemap"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running Game.","name":"game"}],"name":"game","longname":"Phaser.Tilemap#game","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[2426,2440],"filename":"Tilemap.js","lineno":38,"path":"src\\tilemap"},"properties":[{"type":{"names":["string"]},"description":"The key of this map data in the Phaser.Cache.","name":"key"}],"name":"key","longname":"Phaser.Tilemap#key","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[2690,2713],"filename":"Tilemap.js","lineno":50,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The width of the map (in tiles).","name":"width"}],"name":"width","longname":"Phaser.Tilemap#width","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[2808,2833],"filename":"Tilemap.js","lineno":55,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The height of the map (in tiles).","name":"height"}],"name":"height","longname":"Phaser.Tilemap#height","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[2949,2980],"filename":"Tilemap.js","lineno":60,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The base width of the tiles in the map (in pixels).","name":"tileWidth"}],"name":"tileWidth","longname":"Phaser.Tilemap#tileWidth","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[3098,3131],"filename":"Tilemap.js","lineno":65,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The base height of the tiles in the map (in pixels).","name":"tileHeight"}],"name":"tileHeight","longname":"Phaser.Tilemap#tileHeight","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[3276,3311],"filename":"Tilemap.js","lineno":70,"path":"src\\tilemap"},"properties":[{"type":{"names":["string"]},"description":"The orientation of the map data (as specified in Tiled), usually 'orthogonal'.","name":"orientation"}],"name":"orientation","longname":"Phaser.Tilemap#orientation","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[3456,3481],"filename":"Tilemap.js","lineno":75,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The format of the map data, either Phaser.Tilemap.CSV or Phaser.Tilemap.TILED_JSON.","name":"format"}],"name":"format","longname":"Phaser.Tilemap#format","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[3607,3634],"filename":"Tilemap.js","lineno":80,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The version of the map data (as specified in Tiled, usually 1).","name":"version"}],"name":"version","longname":"Phaser.Tilemap#version","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[3746,3779],"filename":"Tilemap.js","lineno":85,"path":"src\\tilemap"},"properties":[{"type":{"names":["object"]},"description":"Map specific properties as specified in Tiled.","name":"properties"}],"name":"properties","longname":"Phaser.Tilemap#properties","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[3906,3945],"filename":"Tilemap.js","lineno":90,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The width of the map in pixels based on width * tileWidth.","name":"widthInPixels"}],"name":"widthInPixels","longname":"Phaser.Tilemap#widthInPixels","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[4076,4117],"filename":"Tilemap.js","lineno":95,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The height of the map in pixels based on height * tileHeight.","name":"heightInPixels"}],"name":"heightInPixels","longname":"Phaser.Tilemap#heightInPixels","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[4209,4234],"filename":"Tilemap.js","lineno":100,"path":"src\\tilemap"},"properties":[{"type":{"names":["array"]},"description":"An array of Tilemap layer data.","name":"layers"}],"name":"layers","longname":"Phaser.Tilemap#layers","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[4318,4347],"filename":"Tilemap.js","lineno":105,"path":"src\\tilemap"},"properties":[{"type":{"names":["array"]},"description":"An array of Tilesets.","name":"tilesets"}],"name":"tilesets","longname":"Phaser.Tilemap#tilesets","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[4452,4497],"filename":"Tilemap.js","lineno":110,"path":"src\\tilemap"},"properties":[{"type":{"names":["array"]},"description":"An array of Image Collections.","name":"imagecollections"}],"name":"imagecollections","longname":"Phaser.Tilemap#imagecollections","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[4582,4605],"filename":"Tilemap.js","lineno":115,"path":"src\\tilemap"},"properties":[{"type":{"names":["array"]},"description":"The super array of Tiles.","name":"tiles"}],"name":"tiles","longname":"Phaser.Tilemap#tiles","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[4699,4726],"filename":"Tilemap.js","lineno":120,"path":"src\\tilemap"},"properties":[{"type":{"names":["array"]},"description":"An array of Tiled Object Layers.","name":"objects"}],"name":"objects","longname":"Phaser.Tilemap#objects","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[4833,4857],"filename":"Tilemap.js","lineno":125,"path":"src\\tilemap"},"properties":[{"type":{"names":["array"]},"description":"An array of tile indexes that collide.","name":"collideIndexes"}],"name":"collideIndexes","longname":"Phaser.Tilemap#collideIndexes","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[4965,4996],"filename":"Tilemap.js","lineno":130,"path":"src\\tilemap"},"properties":[{"type":{"names":["array"]},"description":"An array of collision data (polylines, etc).","name":"collision"}],"name":"collision","longname":"Phaser.Tilemap#collision","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[5088,5113],"filename":"Tilemap.js","lineno":135,"path":"src\\tilemap"},"properties":[{"type":{"names":["array"]},"description":"An array of Tiled Image Layers.","name":"images"}],"name":"images","longname":"Phaser.Tilemap#images","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[5258,5282],"filename":"Tilemap.js","lineno":140,"path":"src\\tilemap"},"properties":[{"type":{"names":["boolean"]},"description":"If set then console.log is used to dump out useful layer creation debug data.","name":"enableDebug"}],"name":"enableDebug","longname":"Phaser.Tilemap#enableDebug","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[5368,5389],"filename":"Tilemap.js","lineno":145,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The current layer.","name":"currentLayer"}],"name":"currentLayer","longname":"Phaser.Tilemap#currentLayer","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[5488,5506],"filename":"Tilemap.js","lineno":150,"path":"src\\tilemap"},"properties":[{"type":{"names":["array"]},"description":"Map data used for debug values only.","name":"debugMap"}],"name":"debugMap","longname":"Phaser.Tilemap#debugMap","kind":"member","memberof":"Phaser.Tilemap","scope":"instance","___s":true},{"meta":{"range":[5879,5901],"filename":"Tilemap.js","lineno":176,"path":"src\\tilemap"},"kind":"constant","type":{"names":["number"]},"name":"CSV","longname":"Phaser.Tilemap.CSV","memberof":"Phaser.Tilemap","scope":"static","___s":true},{"meta":{"range":[5946,5975],"filename":"Tilemap.js","lineno":182,"path":"src\\tilemap"},"kind":"constant","type":{"names":["number"]},"name":"TILED_JSON","longname":"Phaser.Tilemap.TILED_JSON","memberof":"Phaser.Tilemap","scope":"static","___s":true},{"meta":{"range":[6020,6044],"filename":"Tilemap.js","lineno":188,"path":"src\\tilemap"},"kind":"constant","type":{"names":["number"]},"name":"NORTH","longname":"Phaser.Tilemap.NORTH","memberof":"Phaser.Tilemap","scope":"static","___s":true},{"meta":{"range":[6089,6112],"filename":"Tilemap.js","lineno":194,"path":"src\\tilemap"},"kind":"constant","type":{"names":["number"]},"name":"EAST","longname":"Phaser.Tilemap.EAST","memberof":"Phaser.Tilemap","scope":"static","___s":true},{"meta":{"range":[6157,6181],"filename":"Tilemap.js","lineno":200,"path":"src\\tilemap"},"kind":"constant","type":{"names":["number"]},"name":"SOUTH","longname":"Phaser.Tilemap.SOUTH","memberof":"Phaser.Tilemap","scope":"static","___s":true},{"meta":{"range":[6226,6249],"filename":"Tilemap.js","lineno":206,"path":"src\\tilemap"},"kind":"constant","type":{"names":["number"]},"name":"WEST","longname":"Phaser.Tilemap.WEST","memberof":"Phaser.Tilemap","scope":"static","___s":true},{"meta":{"range":[6290,7119],"filename":"Tilemap.js","lineno":210,"path":"src\\tilemap"},"description":"Creates an empty map of the given dimensions and one blank layer. If layers already exist they are erased.","kind":"function","name":"create","params":[{"type":{"names":["string"]},"description":"The name of the default layer of the map.","name":"name"},{"type":{"names":["number"]},"description":"The width of the map in tiles.","name":"width"},{"type":{"names":["number"]},"description":"The height of the map in tiles.","name":"height"},{"type":{"names":["number"]},"description":"The width of the tiles the map uses for calculations.","name":"tileWidth"},{"type":{"names":["number"]},"description":"The height of the tiles the map uses for calculations.","name":"tileHeight"},{"type":{"names":["Phaser.Group"]},"optional":true,"description":"Optional Group to add the layer to. If not specified it will be added to the World group.","name":"group"}],"returns":[{"type":{"names":["Phaser.TilemapLayer"]},"description":"The TilemapLayer object. This is an extension of Phaser.Image and can be moved around the display list accordingly."}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#create","scope":"instance","___s":true},{"meta":{"range":[7519,7803],"filename":"Tilemap.js","lineno":237,"path":"src\\tilemap"},"description":"Sets the base tile size for the map.","kind":"function","name":"setTileSize","params":[{"type":{"names":["number"]},"description":"The width of the tiles the map uses for calculations.","name":"tileWidth"},{"type":{"names":["number"]},"description":"The height of the tiles the map uses for calculations.","name":"tileHeight"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#setTileSize","scope":"instance","___s":true},{"meta":{"range":[8063,9471],"filename":"Tilemap.js","lineno":253,"path":"src\\tilemap"},"description":"Adds an image to the map to be used as a tileset. A single map may use multiple tilesets.\rNote that the tileset name can be found in the JSON file exported from Tiled, or in the Tiled editor.","kind":"function","name":"addTilesetImage","params":[{"type":{"names":["string"]},"description":"The name of the tileset as specified in the map data.","name":"tileset"},{"type":{"names":["string","Phaser.BitmapData"]},"optional":true,"description":"The key of the Phaser.Cache image used for this tileset.\r    If `undefined` or `null` it will look for an image with a key matching the tileset parameter.\r    You can also pass in a BitmapData which can be used instead of an Image.","name":"key"},{"type":{"names":["number"]},"optional":true,"defaultvalue":32,"description":"The width of the tiles in the Tileset Image. If not given it will default to the map.tileWidth value, if that isn't set then 32.","name":"tileWidth"},{"type":{"names":["number"]},"optional":true,"defaultvalue":32,"description":"The height of the tiles in the Tileset Image. If not given it will default to the map.tileHeight value, if that isn't set then 32.","name":"tileHeight"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The width of the tiles in the Tileset Image.","name":"tileMargin"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The height of the tiles in the Tileset Image.","name":"tileSpacing"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If adding multiple tilesets to a blank/dynamic map, specify the starting GID the set will use here.","name":"gid"}],"returns":[{"type":{"names":["Phaser.Tileset"]},"description":"Returns the Tileset object that was created or updated, or null if it failed."}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#addTilesetImage","scope":"instance","___s":true},{"meta":{"range":[12374,14274],"filename":"Tilemap.js","lineno":378,"path":"src\\tilemap"},"description":"Creates a Sprite for every object matching the given gid in the map data. You can optionally specify the group that the Sprite will be created in. If none is\rgiven it will be created in the World. All properties from the map data objectgroup are copied across to the Sprite, so you can use this as an easy way to\rconfigure Sprite properties from within the map editor. For example giving an object a property of alpha: 0.5 in the map editor will duplicate that when the\rSprite is created. You could also give it a value like: body.velocity.x: 100 to set it moving automatically.","kind":"function","name":"createFromObjects","params":[{"type":{"names":["string"]},"description":"The name of the Object Group to create Sprites from.","name":"name"},{"type":{"names":["number"]},"description":"The layer array index value, or if a string is given the layer name within the map data.","name":"gid"},{"type":{"names":["string"]},"description":"The Game.cache key of the image that this Sprite will use.","name":"key"},{"type":{"names":["number","string"]},"optional":true,"description":"If the Sprite image contains multiple frames you can specify which one to use here.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"The default exists state of the Sprite.","name":"exists"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"The default autoCull state of the Sprite. Sprites that are autoCulled are culled from the camera if out of its range.","name":"autoCull"},{"type":{"names":["Phaser.Group"]},"optional":true,"defaultvalue":"Phaser.World","description":"Group to add the Sprite to. If not specified it will be added to the World group.","name":"group"},{"type":{"names":["object"]},"optional":true,"defaultvalue":"Phaser.Sprite","description":"If you wish to create your own class, rather than Phaser.Sprite, pass the class here. Your class must extend Phaser.Sprite and have the same constructor parameters.","name":"CustomClass"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"By default the Tiled map editor uses a bottom-left coordinate system. Phaser uses top-left. So most objects will appear too low down. This parameter moves them up by their height.","name":"adjustY"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#createFromObjects","scope":"instance","___s":true},{"meta":{"range":[16560,17925],"filename":"Tilemap.js","lineno":467,"path":"src\\tilemap"},"description":"Creates a Sprite for every object matching the given tile indexes in the map data.\rYou can specify the group that the Sprite will be created in. If none is given it will be created in the World.\rYou can optional specify if the tile will be replaced with another after the Sprite is created. This is useful if you want to lay down special \rtiles in a level that are converted to Sprites, but want to replace the tile itself with a floor tile or similar once converted.","kind":"function","name":"createFromTiles","params":[{"type":{"names":["integer","Array"]},"description":"The tile index, or array of indexes, to create Sprites from.","name":"tiles"},{"type":{"names":["integer","Array"]},"description":"The tile index, or array of indexes, to change a converted tile to. Set to `null` to not change.","name":"replacements"},{"type":{"names":["string"]},"description":"The Game.cache key of the image that this Sprite will use.","name":"key"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to operate on.","name":"layer"},{"type":{"names":["Phaser.Group"]},"optional":true,"defaultvalue":"Phaser.World","description":"Group to add the Sprite to. If not specified it will be added to the World group.","name":"group"},{"type":{"names":["object"]},"optional":true,"description":"An object that contains the default properties for your newly created Sprite. This object will be iterated and any matching Sprite property will be set.","name":"properties"}],"returns":[{"type":{"names":["integer"]},"description":"The number of Sprites that were created."}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#createFromTiles","scope":"instance","___s":true},{"meta":{"range":[20100,21364],"filename":"Tilemap.js","lineno":561,"path":"src\\tilemap"},"description":"Creates a new TilemapLayer object. By default TilemapLayers are fixed to the camera.\rThe `layer` parameter is important. If you've created your map in Tiled then you can get this by looking in Tiled and looking at the Layer name.\rOr you can open the JSON file it exports and look at the layers[].name value. Either way it must match.\rIf you wish to create a blank layer to put your own tiles on then see Tilemap.createBlankLayer.","kind":"function","name":"createLayer","params":[{"type":{"names":["number","string"]},"description":"The layer array index value, or if a string is given the layer name, within the map data that this TilemapLayer represents.","name":"layer"},{"type":{"names":["number"]},"optional":true,"description":"The rendered width of the layer, should never be wider than Game.width. If not given it will be set to Game.width.","name":"width"},{"type":{"names":["number"]},"optional":true,"description":"The rendered height of the layer, should never be wider than Game.height. If not given it will be set to Game.height.","name":"height"},{"type":{"names":["Phaser.Group"]},"optional":true,"description":"Optional Group to add the object to. If not specified it will be added to the World group.","name":"group"}],"returns":[{"type":{"names":["Phaser.TilemapLayer"]},"description":"The TilemapLayer object. This is an extension of Phaser.Sprite and can be moved around the display list accordingly."}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#createLayer","scope":"instance","___s":true},{"meta":{"range":[23163,24013],"filename":"Tilemap.js","lineno":635,"path":"src\\tilemap"},"description":"Creates a new and empty layer on this Tilemap. By default TilemapLayers are fixed to the camera.","kind":"function","name":"createBlankLayer","params":[{"type":{"names":["string"]},"description":"The name of this layer. Must be unique within the map.","name":"name"},{"type":{"names":["number"]},"description":"The width of the layer in tiles.","name":"width"},{"type":{"names":["number"]},"description":"The height of the layer in tiles.","name":"height"},{"type":{"names":["number"]},"description":"The width of the tiles the layer uses for calculations.","name":"tileWidth"},{"type":{"names":["number"]},"description":"The height of the tiles the layer uses for calculations.","name":"tileHeight"},{"type":{"names":["Phaser.Group"]},"optional":true,"description":"Optional Group to add the layer to. If not specified it will be added to the World group.","name":"group"}],"returns":[{"type":{"names":["Phaser.TilemapLayer"]},"description":"The TilemapLayer object. This is an extension of Phaser.Image and can be moved around the display list accordingly."}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#createBlankLayer","scope":"instance","___s":true},{"meta":{"range":[25699,26041],"filename":"Tilemap.js","lineno":717,"path":"src\\tilemap"},"description":"Gets the layer index based on the layers name.","kind":"function","name":"getIndex","access":"protected","params":[{"type":{"names":["array"]},"description":"The local array to search.","name":"location"},{"type":{"names":["string"]},"description":"The name of the array element to get.","name":"name"}],"returns":[{"type":{"names":["number"]},"description":"The index of the element in the array, or null if not found."}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#getIndex","scope":"instance","___s":true},{"meta":{"range":[26302,26557],"filename":"Tilemap.js","lineno":740,"path":"src\\tilemap"},"description":"Gets the layer index based on its name.","kind":"function","name":"getLayerIndex","params":[{"type":{"names":["string"]},"description":"The name of the layer to get.","name":"name"}],"returns":[{"type":{"names":["number"]},"description":"The index of the layer in this tilemap, or null if not found."}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#getLayerIndex","scope":"instance","___s":true},{"meta":{"range":[26665,26928],"filename":"Tilemap.js","lineno":753,"path":"src\\tilemap"},"description":"Gets the tileset index based on its name.","kind":"function","name":"getTilesetIndex","params":[{"type":{"names":["string"]},"description":"The name of the tileset to get.","name":"name"}],"returns":[{"type":{"names":["number"]},"description":"The index of the tileset in this tilemap, or null if not found."}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#getTilesetIndex","scope":"instance","___s":true},{"meta":{"range":[27040,27295],"filename":"Tilemap.js","lineno":766,"path":"src\\tilemap"},"description":"Gets the image index based on its name.","kind":"function","name":"getImageIndex","params":[{"type":{"names":["string"]},"description":"The name of the image to get.","name":"name"}],"returns":[{"type":{"names":["number"]},"description":"The index of the image in this tilemap, or null if not found."}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#getImageIndex","scope":"instance","___s":true},{"meta":{"range":[27403,28310],"filename":"Tilemap.js","lineno":779,"path":"src\\tilemap"},"description":"Sets a global collision callback for the given tile index within the layer. This will affect all tiles on this layer that have the same index.\rIf a callback is already set for the tile index it will be replaced. Set the callback to null to remove it.\rIf you want to set a callback for a tile at a specific location on the map then see setTileLocationCallback.","kind":"function","name":"setTileIndexCallback","params":[{"type":{"names":["number","array"]},"description":"Either a single tile index, or an array of tile indexes to have a collision callback set for.","name":"indexes"},{"type":{"names":["function"]},"description":"The callback that will be invoked when the tile is collided with.","name":"callback"},{"type":{"names":["object"]},"description":"The context under which the callback is called.","name":"callbackContext"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to operate on. If not given will default to this.currentLayer.","name":"layer"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#setTileIndexCallback","scope":"instance","___s":true},{"meta":{"range":[29157,30323],"filename":"Tilemap.js","lineno":810,"path":"src\\tilemap"},"description":"Sets a global collision callback for the given map location within the layer. This will affect all tiles on this layer found in the given area.\rIf a callback is already set for the tile index it will be replaced. Set the callback to null to remove it.\rIf you want to set a callback for a tile at a specific location on the map then see setTileLocationCallback.","kind":"function","name":"setTileLocationCallback","params":[{"type":{"names":["number"]},"description":"X position of the top left of the area to copy (given in tiles, not pixels)","name":"x"},{"type":{"names":["number"]},"description":"Y position of the top left of the area to copy (given in tiles, not pixels)","name":"y"},{"type":{"names":["number"]},"description":"The width of the area to copy (given in tiles, not pixels)","name":"width"},{"type":{"names":["number"]},"description":"The height of the area to copy (given in tiles, not pixels)","name":"height"},{"type":{"names":["function"]},"description":"The callback that will be invoked when the tile is collided with.","name":"callback"},{"type":{"names":["object"]},"description":"The context under which the callback is called.","name":"callbackContext"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to operate on. If not given will default to this.currentLayer.","name":"layer"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#setTileLocationCallback","scope":"instance","___s":true},{"meta":{"range":[30772,31519],"filename":"Tilemap.js","lineno":842,"path":"src\\tilemap"},"description":"Sets collision the given tile or tiles. You can pass in either a single numeric index or an array of indexes: [ 2, 3, 15, 20].\rThe `collides` parameter controls if collision will be enabled (true) or disabled (false).","kind":"function","name":"setCollision","params":[{"type":{"names":["number","array"]},"description":"Either a single tile index, or an array of tile IDs to be checked for collision.","name":"indexes"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true it will enable collision. If false it will clear collision.","name":"collides"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to operate on. If not given will default to this.currentLayer.","name":"layer"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Recalculates the tile faces after the update.","name":"recalculate"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#setCollision","scope":"instance","___s":true},{"meta":{"range":[32381,33253],"filename":"Tilemap.js","lineno":880,"path":"src\\tilemap"},"description":"Sets collision on a range of tiles where the tile IDs increment sequentially.\rCalling this with a start value of 10 and a stop value of 14 would set collision for tiles 10, 11, 12, 13 and 14.\rThe `collides` parameter controls if collision will be enabled (true) or disabled (false).","kind":"function","name":"setCollisionBetween","params":[{"type":{"names":["number"]},"description":"The first index of the tile to be set for collision.","name":"start"},{"type":{"names":["number"]},"description":"The last index of the tile to be set for collision.","name":"stop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true it will enable collision. If false it will clear collision.","name":"collides"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to operate on. If not given will default to this.currentLayer.","name":"layer"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Recalculates the tile faces after the update.","name":"recalculate"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#setCollisionBetween","scope":"instance","___s":true},{"meta":{"range":[33891,34588],"filename":"Tilemap.js","lineno":917,"path":"src\\tilemap"},"description":"Sets collision on all tiles in the given layer, except for the IDs of those in the given array.\rThe `collides` parameter controls if collision will be enabled (true) or disabled (false).","kind":"function","name":"setCollisionByExclusion","params":[{"type":{"names":["array"]},"description":"An array of the tile IDs to not be counted for collision.","name":"indexes"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true it will enable collision. If false it will clear collision.","name":"collides"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to operate on. If not given will default to this.currentLayer.","name":"layer"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Recalculates the tile faces after the update.","name":"recalculate"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#setCollisionByExclusion","scope":"instance","___s":true},{"meta":{"range":[35310,35984],"filename":"Tilemap.js","lineno":951,"path":"src\\tilemap"},"description":"Sets collision values on a tile in the set.\rYou shouldn't usually call this method directly, instead use setCollision, setCollisionBetween or setCollisionByExclusion.","kind":"function","name":"setCollisionByIndex","access":"protected","params":[{"type":{"names":["number"]},"description":"The index of the tile on the layer.","name":"index"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true it will enable collision on the tile. If false it will clear collision values from the tile.","name":"collides"},{"type":{"names":["number"]},"optional":true,"description":"The layer to operate on. If not given will default to this.currentLayer.","name":"layer"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Recalculates the tile faces after the update.","name":"recalculate"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#setCollisionByIndex","scope":"instance","___s":true},{"meta":{"range":[37518,37842],"filename":"Tilemap.js","lineno":1017,"path":"src\\tilemap"},"description":"Gets the TilemapLayer index as used in the setCollision calls.","kind":"function","name":"getLayer","access":"protected","params":[{"type":{"names":["number","string","Phaser.TilemapLayer"]},"description":"The layer to operate on. If not given will default to this.currentLayer.","name":"layer"}],"returns":[{"type":{"names":["number"]},"description":"The TilemapLayer index."}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#getLayer","scope":"instance","___s":true},{"meta":{"range":[38244,38609],"filename":"Tilemap.js","lineno":1044,"path":"src\\tilemap"},"description":"Turn off/on the recalculation of faces for tile or collision updates. \r`setPreventRecalculate(true)` puts recalculation on hold while `setPreventRecalculate(false)` recalculates all the changed layers.","kind":"function","name":"setPreventRecalculate","params":[{"type":{"names":["boolean"]},"description":"If true it will put the recalculation on hold.","name":"value"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#setPreventRecalculate","scope":"instance","___s":true},{"meta":{"range":[39169,39352],"filename":"Tilemap.js","lineno":1073,"path":"src\\tilemap"},"description":"Internal function.","kind":"function","name":"calculateFaces","access":"protected","params":[{"type":{"names":["number"]},"description":"The index of the TilemapLayer to operate on.","name":"layer"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#calculateFaces","scope":"instance","___s":true},{"meta":{"range":[41608,42078],"filename":"Tilemap.js","lineno":1143,"path":"src\\tilemap"},"description":"Gets the tile above the tile coordinates given.\rMostly used as an internal function by calculateFaces.","kind":"function","name":"getTileAbove","params":[{"type":{"names":["number"]},"description":"The local layer index to get the tile from. Can be determined by Tilemap.getLayer().","name":"layer"},{"type":{"names":["number"]},"description":"The x coordinate to get the tile from. In tiles, not pixels.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to get the tile from. In tiles, not pixels.","name":"y"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#getTileAbove","scope":"instance","___s":true},{"meta":{"range":[42263,42733],"filename":"Tilemap.js","lineno":1163,"path":"src\\tilemap"},"description":"Gets the tile below the tile coordinates given.\rMostly used as an internal function by calculateFaces.","kind":"function","name":"getTileBelow","params":[{"type":{"names":["number"]},"description":"The local layer index to get the tile from. Can be determined by Tilemap.getLayer().","name":"layer"},{"type":{"names":["number"]},"description":"The x coordinate to get the tile from. In tiles, not pixels.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to get the tile from. In tiles, not pixels.","name":"y"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#getTileBelow","scope":"instance","___s":true},{"meta":{"range":[42946,43424],"filename":"Tilemap.js","lineno":1183,"path":"src\\tilemap"},"description":"Gets the tile to the left of the tile coordinates given.\rMostly used as an internal function by calculateFaces.","kind":"function","name":"getTileLeft","params":[{"type":{"names":["number"]},"description":"The local layer index to get the tile from. Can be determined by Tilemap.getLayer().","name":"layer"},{"type":{"names":["number"]},"description":"The x coordinate to get the tile from. In tiles, not pixels.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to get the tile from. In tiles, not pixels.","name":"y"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#getTileLeft","scope":"instance","___s":true},{"meta":{"range":[43608,44088],"filename":"Tilemap.js","lineno":1203,"path":"src\\tilemap"},"description":"Gets the tile to the right of the tile coordinates given.\rMostly used as an internal function by calculateFaces.","kind":"function","name":"getTileRight","params":[{"type":{"names":["number"]},"description":"The local layer index to get the tile from. Can be determined by Tilemap.getLayer().","name":"layer"},{"type":{"names":["number"]},"description":"The x coordinate to get the tile from. In tiles, not pixels.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to get the tile from. In tiles, not pixels.","name":"y"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#getTileRight","scope":"instance","___s":true},{"meta":{"range":[44300,44494],"filename":"Tilemap.js","lineno":1223,"path":"src\\tilemap"},"description":"Sets the current layer to the given index.","kind":"function","name":"setLayer","params":[{"type":{"names":["number","string","Phaser.TilemapLayer"]},"description":"The layer to set as current.","name":"layer"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#setLayer","scope":"instance","___s":true},{"meta":{"range":[44684,45174],"filename":"Tilemap.js","lineno":1240,"path":"src\\tilemap"},"description":"Checks if there is a tile at the given location.","kind":"function","name":"hasTile","params":[{"type":{"names":["number"]},"description":"X position to check if a tile exists at (given in tile units, not pixels)","name":"x"},{"type":{"names":["number"]},"description":"Y position to check if a tile exists at (given in tile units, not pixels)","name":"y"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"description":"The layer to set as current.","name":"layer"}],"returns":[{"type":{"names":["boolean"]},"description":"True if there is a tile at the given location, otherwise false."}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#hasTile","scope":"instance","___s":true},{"meta":{"range":[45487,45973],"filename":"Tilemap.js","lineno":1262,"path":"src\\tilemap"},"description":"Removes the tile located at the given coordinates and updates the collision data.","kind":"function","name":"removeTile","params":[{"type":{"names":["number"]},"description":"X position to place the tile (given in tile units, not pixels)","name":"x"},{"type":{"names":["number"]},"description":"Y position to place the tile (given in tile units, not pixels)","name":"y"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to modify.","name":"layer"}],"returns":[{"type":{"names":["Phaser.Tile"]},"description":"The Tile object that was removed from this map."}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#removeTile","scope":"instance","___s":true},{"meta":{"range":[46589,47233],"filename":"Tilemap.js","lineno":1293,"path":"src\\tilemap"},"description":"Removes the tile located at the given coordinates and updates the collision data. The coordinates are given in pixel values.","kind":"function","name":"removeTileWorldXY","params":[{"type":{"names":["number"]},"description":"X position to insert the tile (given in pixels)","name":"x"},{"type":{"names":["number"]},"description":"Y position to insert the tile (given in pixels)","name":"y"},{"type":{"names":["number"]},"description":"The width of the tile in pixels.","name":"tileWidth"},{"type":{"names":["number"]},"description":"The height of the tile in pixels.","name":"tileHeight"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to modify.","name":"layer"}],"returns":[{"type":{"names":["Phaser.Tile"]},"description":"The Tile object that was removed from this map."}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#removeTileWorldXY","scope":"instance","___s":true},{"meta":{"range":[47550,48265],"filename":"Tilemap.js","lineno":1315,"path":"src\\tilemap"},"description":"Puts a tile of the given index value at the coordinate specified.\rIf you pass `null` as the tile it will pass your call over to Tilemap.removeTile instead.","kind":"function","name":"putTile","params":[{"type":{"names":["Phaser.Tile","number","null"]},"description":"The index of this tile to set or a Phaser.Tile object. If null the tile is removed from the map.","name":"tile"},{"type":{"names":["number"]},"description":"X position to place the tile (given in tile units, not pixels)","name":"x"},{"type":{"names":["number"]},"description":"Y position to place the tile (given in tile units, not pixels)","name":"y"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to modify.","name":"layer"}],"returns":[{"type":{"names":["Phaser.Tile"]},"description":"The Tile object that was created or added to this map."}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#putTile","scope":"instance","___s":true},{"meta":{"range":[49941,50640],"filename":"Tilemap.js","lineno":1386,"path":"src\\tilemap"},"description":"Puts a tile into the Tilemap layer. The coordinates are given in pixel values.","kind":"function","name":"putTileWorldXY","params":[{"type":{"names":["Phaser.Tile","number"]},"description":"The index of this tile to set or a Phaser.Tile object.","name":"tile"},{"type":{"names":["number"]},"description":"X position to insert the tile (given in pixels)","name":"x"},{"type":{"names":["number"]},"description":"Y position to insert the tile (given in pixels)","name":"y"},{"type":{"names":["number"]},"description":"The width of the tile in pixels.","name":"tileWidth"},{"type":{"names":["number"]},"description":"The height of the tile in pixels.","name":"tileHeight"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to modify.","name":"layer"}],"returns":[{"type":{"names":["Phaser.Tile"]},"description":"The Tile object that was created or added to this map."}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#putTileWorldXY","scope":"instance","___s":true},{"meta":{"range":[50963,51947],"filename":"Tilemap.js","lineno":1409,"path":"src\\tilemap"},"description":"Searches the entire map layer for the first tile matching the given index, then returns that Phaser.Tile object.\rIf no match is found it returns null.\rThe search starts from the top-left tile and continues horizontally until it hits the end of the row, then it drops down to the next column.\rIf the reverse boolean is true, it scans starting from the bottom-right corner traveling up to the top-left.","kind":"function","name":"searchTileIndex","params":[{"type":{"names":["number"]},"description":"The tile index value to search for.","name":"index"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The number of times to skip a matching tile before returning.","name":"skip"},{"type":{"names":["number"]},"optional":true,"defaultvalue":false,"description":"If true it will scan the layer in reverse, starting at the bottom-right. Otherwise it scans from the top-left.","name":"reverse"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to get the tile from.","name":"layer"}],"returns":[{"type":{"names":["Phaser.Tile"]},"description":"The first (or n skipped) tile with the matching index."}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#searchTileIndex","scope":"instance","___s":true},{"meta":{"range":[53511,54187],"filename":"Tilemap.js","lineno":1476,"path":"src\\tilemap"},"description":"Gets a tile from the Tilemap Layer. The coordinates are given in tile values.","kind":"function","name":"getTile","params":[{"type":{"names":["number"]},"description":"X position to get the tile from (given in tile units, not pixels)","name":"x"},{"type":{"names":["number"]},"description":"Y position to get the tile from (given in tile units, not pixels)","name":"y"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to get the tile from.","name":"layer"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true getTile won't return null for empty tiles, but a Tile object with an index of -1.","name":"nonNull"}],"returns":[{"type":{"names":["Phaser.Tile"]},"description":"The tile at the given coordinates or null if no tile was found or the coordinates were invalid."}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#getTile","scope":"instance","___s":true},{"meta":{"range":[54950,55741],"filename":"Tilemap.js","lineno":1517,"path":"src\\tilemap"},"description":"Gets a tile from the Tilemap layer. The coordinates are given in pixel values.","kind":"function","name":"getTileWorldXY","params":[{"type":{"names":["number"]},"description":"X position to get the tile from (given in pixels)","name":"x"},{"type":{"names":["number"]},"description":"Y position to get the tile from (given in pixels)","name":"y"},{"type":{"names":["number"]},"optional":true,"description":"The width of the tiles. If not given the map default is used.","name":"tileWidth"},{"type":{"names":["number"]},"optional":true,"description":"The height of the tiles. If not given the map default is used.","name":"tileHeight"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to get the tile from.","name":"layer"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true getTile won't return null for empty tiles, but a Tile object with an index of -1.","name":"nonNull"}],"returns":[{"type":{"names":["Phaser.Tile"]},"description":"The tile at the given coordinates."}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#getTileWorldXY","scope":"instance","___s":true},{"meta":{"range":[56215,56910],"filename":"Tilemap.js","lineno":1543,"path":"src\\tilemap"},"description":"Copies all of the tiles in the given rectangular block into the tilemap data buffer.","kind":"function","name":"copy","params":[{"type":{"names":["integer"]},"description":"X position of the top left of the area to copy (given in tiles, not pixels)","name":"x"},{"type":{"names":["integer"]},"description":"Y position of the top left of the area to copy (given in tiles, not pixels)","name":"y"},{"type":{"names":["integer"]},"description":"The width of the area to copy (given in tiles, not pixels)","name":"width"},{"type":{"names":["integer"]},"description":"The height of the area to copy (given in tiles, not pixels)","name":"height"},{"type":{"names":["integer","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to copy the tiles from.","name":"layer"}],"returns":[{"type":{"names":["array"]},"description":"An array of the tiles that were copied."}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#copy","scope":"instance","___s":true},{"meta":{"range":[58131,58692],"filename":"Tilemap.js","lineno":1605,"path":"src\\tilemap"},"description":"Pastes a previously copied block of tile data into the given x/y coordinates. Data should have been prepared with Tilemap.copy.","kind":"function","name":"paste","params":[{"type":{"names":["number"]},"description":"X position of the top left of the area to paste to (given in tiles, not pixels)","name":"x"},{"type":{"names":["number"]},"description":"Y position of the top left of the area to paste to (given in tiles, not pixels)","name":"y"},{"type":{"names":["array"]},"description":"The block of tiles to paste.","name":"tileblock"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to paste the tiles into.","name":"layer"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#paste","scope":"instance","___s":true},{"meta":{"range":[59459,60166],"filename":"Tilemap.js","lineno":1640,"path":"src\\tilemap"},"description":"Scans the given area for tiles with an index matching tileA and swaps them with tileB.","kind":"function","name":"swap","params":[{"type":{"names":["number"]},"description":"First tile index.","name":"tileA"},{"type":{"names":["number"]},"description":"Second tile index.","name":"tileB"},{"type":{"names":["number"]},"description":"X position of the top left of the area to operate one, given in tiles, not pixels.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the top left of the area to operate one, given in tiles, not pixels.","name":"y"},{"type":{"names":["number"]},"description":"The width in tiles of the area to operate on.","name":"width"},{"type":{"names":["number"]},"description":"The height in tiles of the area to operate on.","name":"height"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to operate on.","name":"layer"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#swap","scope":"instance","___s":true},{"meta":{"range":[61093,61931],"filename":"Tilemap.js","lineno":1694,"path":"src\\tilemap"},"description":"For each tile in the given area defined by x/y and width/height run the given callback.","kind":"function","name":"forEach","params":[{"type":{"names":["number"]},"description":"The callback. Each tile in the given area will be passed to this callback as the first and only parameter.","name":"callback"},{"type":{"names":["number"]},"description":"The context under which the callback should be run.","name":"context"},{"type":{"names":["number"]},"description":"X position of the top left of the area to operate one, given in tiles, not pixels.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the top left of the area to operate one, given in tiles, not pixels.","name":"y"},{"type":{"names":["number"]},"description":"The width in tiles of the area to operate on.","name":"width"},{"type":{"names":["number"]},"description":"The height in tiles of the area to operate on.","name":"height"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to operate on.","name":"layer"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#forEach","scope":"instance","___s":true},{"meta":{"range":[62301,63075],"filename":"Tilemap.js","lineno":1723,"path":"src\\tilemap"},"description":"Scans the given area for tiles with an index matching `source` and updates their index to match `dest`.","kind":"function","name":"replace","params":[{"type":{"names":["number"]},"description":"The tile index value to scan for.","name":"source"},{"type":{"names":["number"]},"description":"The tile index value to replace found tiles with.","name":"dest"},{"type":{"names":["number"]},"description":"X position of the top left of the area to operate one, given in tiles, not pixels.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the top left of the area to operate one, given in tiles, not pixels.","name":"y"},{"type":{"names":["number"]},"description":"The width in tiles of the area to operate on.","name":"width"},{"type":{"names":["number"]},"description":"The height in tiles of the area to operate on.","name":"height"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to operate on.","name":"layer"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#replace","scope":"instance","___s":true},{"meta":{"range":[63597,64163],"filename":"Tilemap.js","lineno":1758,"path":"src\\tilemap"},"description":"Randomises a set of tiles in a given area.","kind":"function","name":"random","params":[{"type":{"names":["number"]},"description":"X position of the top left of the area to operate one, given in tiles, not pixels.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the top left of the area to operate one, given in tiles, not pixels.","name":"y"},{"type":{"names":["number"]},"description":"The width in tiles of the area to operate on.","name":"width"},{"type":{"names":["number"]},"description":"The height in tiles of the area to operate on.","name":"height"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to operate on.","name":"layer"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#random","scope":"instance","___s":true},{"meta":{"range":[64968,65644],"filename":"Tilemap.js","lineno":1803,"path":"src\\tilemap"},"description":"Shuffles a set of tiles in a given area. It will only randomise the tiles in that area, so if they're all the same nothing will appear to have changed!","kind":"function","name":"shuffle","params":[{"type":{"names":["number"]},"description":"X position of the top left of the area to operate one, given in tiles, not pixels.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the top left of the area to operate one, given in tiles, not pixels.","name":"y"},{"type":{"names":["number"]},"description":"The width in tiles of the area to operate on.","name":"width"},{"type":{"names":["number"]},"description":"The height in tiles of the area to operate on.","name":"height"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to operate on.","name":"layer"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#shuffle","scope":"instance","___s":true},{"meta":{"range":[66358,67013],"filename":"Tilemap.js","lineno":1845,"path":"src\\tilemap"},"description":"Fills the given area with the specified tile.","kind":"function","name":"fill","params":[{"type":{"names":["number"]},"description":"The index of the tile that the area will be filled with.","name":"index"},{"type":{"names":["number"]},"description":"X position of the top left of the area to operate one, given in tiles, not pixels.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the top left of the area to operate one, given in tiles, not pixels.","name":"y"},{"type":{"names":["number"]},"description":"The width in tiles of the area to operate on.","name":"width"},{"type":{"names":["number"]},"description":"The height in tiles of the area to operate on.","name":"height"},{"type":{"names":["number","string","Phaser.TilemapLayer"]},"optional":true,"description":"The layer to operate on.","name":"layer"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#fill","scope":"instance","___s":true},{"meta":{"range":[67440,67550],"filename":"Tilemap.js","lineno":1876,"path":"src\\tilemap"},"description":"Removes all layers from this tile map.","kind":"function","name":"removeAllLayers","memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#removeAllLayers","scope":"instance","___s":true},{"meta":{"range":[67671,67774],"filename":"Tilemap.js","lineno":1888,"path":"src\\tilemap"},"description":"Dumps the tilemap data out to the console.","kind":"function","name":"dump","memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#dump","scope":"instance","___s":true},{"meta":{"range":[68799,69076],"filename":"Tilemap.js","lineno":1929,"path":"src\\tilemap"},"description":"Removes all layer data from this tile map and nulls the game reference.\rNote: You are responsible for destroying any TilemapLayer objects you generated yourself, as Tilemap doesn't keep a reference to them.","kind":"function","name":"destroy","memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#destroy","scope":"instance","___s":true},{"meta":{"range":[69268,69388],"filename":"Tilemap.js","lineno":1947,"path":"src\\tilemap"},"name":"layer","properties":[{"type":{"names":["number","string","Phaser.TilemapLayer"]},"description":"The current layer object.","name":"layer"}],"memberof":"Phaser.Tilemap","longname":"Phaser.Tilemap#layer","scope":"instance","kind":"member","___s":true},{"meta":{"range":[1037,7960],"filename":"TilemapLayer.js","lineno":23,"path":"src\\tilemap"},"description":"A TilemapLayer is a Phaser.Image/Sprite that renders a specific TileLayer of a Tilemap.\r\rSince a TilemapLayer is a Sprite it can be moved around the display, added to other groups or display objects, etc.\r\rBy default TilemapLayers have fixedToCamera set to `true`. Changing this will break Camera follow and scrolling behavior.","kind":"class","classdesc":"Phaser.TilemapLayer","augments":["Phaser.Sprite"],"params":[{"type":{"names":["Phaser.Game"]},"description":"Game reference to the currently running game.","name":"game"},{"type":{"names":["Phaser.Tilemap"]},"description":"The tilemap to which this layer belongs.","name":"tilemap"},{"type":{"names":["integer"]},"description":"The index of the TileLayer to render within the Tilemap.","name":"index"},{"type":{"names":["integer"]},"description":"Width of the renderable area of the layer (in pixels).","name":"width"},{"type":{"names":["integer"]},"description":"Height of the renderable area of the layer (in pixels).","name":"height"}],"name":"TilemapLayer","longname":"Phaser.TilemapLayer","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1336,1354],"filename":"TilemapLayer.js","lineno":36,"path":"src\\tilemap"},"description":"The Tilemap to which this layer is bound.","properties":[{"type":{"names":["Phaser.Tilemap"]},"name":"map"}],"access":"protected","readonly":true,"name":"map","longname":"Phaser.TilemapLayer#map","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","___s":true},{"meta":{"range":[1498,1516],"filename":"TilemapLayer.js","lineno":44,"path":"src\\tilemap"},"description":"The index of this layer within the Tilemap.","properties":[{"type":{"names":["number"]},"name":"index"}],"access":"protected","readonly":true,"name":"index","longname":"Phaser.TilemapLayer#index","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","___s":true},{"meta":{"range":[1680,1714],"filename":"TilemapLayer.js","lineno":52,"path":"src\\tilemap"},"description":"The layer object within the Tilemap that this layer represents.","properties":[{"type":{"names":["object"]},"name":"layer"}],"access":"protected","readonly":true,"name":"layer","longname":"Phaser.TilemapLayer#layer","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","___s":true},{"meta":{"range":[1854,1911],"filename":"TilemapLayer.js","lineno":59,"path":"src\\tilemap"},"description":"The canvas to which this TilemapLayer draws.","properties":[{"type":{"names":["HTMLCanvasElement"]},"name":"canvas"}],"access":"protected","name":"canvas","longname":"Phaser.TilemapLayer#canvas","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","___s":true},{"meta":{"range":[2328,2359],"filename":"TilemapLayer.js","lineno":77,"path":"src\\tilemap"},"description":"The const type of this object.","properties":[{"type":{"names":["number"]},"name":"type"}],"readonly":true,"access":"protected","defaultvalue":"Phaser.TILEMAPLAYER","name":"type","longname":"Phaser.TilemapLayer#type","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","overrides":"Phaser.Sprite#type","___s":true},{"meta":{"range":[2486,2524],"filename":"TilemapLayer.js","lineno":83,"path":"src\\tilemap"},"properties":[{"type":{"names":["number"]},"description":"The const physics body type of this object.","name":"physicsType"}],"readonly":true,"name":"physicsType","longname":"Phaser.TilemapLayer#physicsType","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","overrides":"Phaser.Sprite#physicsType","___s":true},{"meta":{"range":[3227,3348],"filename":"TilemapLayer.js","lineno":98,"path":"src\\tilemap"},"description":"Settings that control standard (non-diagnostic) rendering.","properties":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Delta scroll rendering only draws tiles/edges as they come into view.\r    This can greatly improve scrolling rendering performance, especially when there are many small tiles.\r    It should only be disabled in rare cases.","name":"enableScrollDelta"},{"type":{"names":["DOMCanvasElement"]},"optional":true,"nullable":true,"defaultvalue":"(auto)","description":"[Internal] If set, force using a separate (shared) copy canvas.\r    Using a canvas bitblt/copy when the source and destinations region overlap produces unexpected behavior\r    in some browsers, notably Safari.","name":"copyCanvas"}],"defaultvalue":"{\"enableScrollDelta\":false,\"overdrawRatio\":0.2,\"copyCanvas\":null}","defaultvaluetype":"object","name":"renderSettings","longname":"Phaser.TilemapLayer#renderSettings","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","___s":true},{"meta":{"range":[3515,3533],"filename":"TilemapLayer.js","lineno":110,"path":"src\\tilemap"},"description":"Enable an additional \"debug rendering\" pass to display collision information.","properties":[{"type":{"names":["boolean"]},"name":"debug"}],"defaultvalue":false,"name":"debug","longname":"Phaser.TilemapLayer#debug","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","overrides":"Phaser.Sprite#debug","___s":true},{"meta":{"range":[3670,3688],"filename":"TilemapLayer.js","lineno":115,"path":"src\\tilemap"},"properties":[{"type":{"names":["boolean"]},"description":"Controls if the core game loop and physics update this game object or not.","name":"exists"}],"name":"exists","longname":"Phaser.TilemapLayer#exists","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","overrides":"Phaser.Sprite#exists","___s":true},{"meta":{"range":[5128,5420],"filename":"TilemapLayer.js","lineno":133,"path":"src\\tilemap"},"description":"Settings used for debugging and diagnostics.","properties":[{"type":{"names":["string"]},"nullable":true,"description":"A tile is rendered as a rectangle using the following fill if a valid tileset/image cannot be found. A value of `null` prevents additional rendering for tiles without a valid tileset image. _This takes effect even when debug rendering for the layer is not enabled._","name":"missingImageFill"},{"type":{"names":["string"]},"nullable":true,"description":"If a Tile has `Tile#debug` true then, after normal tile image rendering, a rectangle with the following fill is drawn above/over it. _This takes effect even when debug rendering for the layer is not enabled._","name":"debuggedTileOverfill"},{"type":{"names":["boolean"]},"description":"When debug rendering (`debug` is true), and this option is enabled, the a full redraw is forced and rendering optimization is suppressed.","name":"forceFullRedraw"},{"type":{"names":["number"]},"description":"When debug rendering (`debug` is true), the tileset is initially rendered with this alpha level. This can make the tile edges clearer.","name":"debugAlpha"},{"type":{"names":["string"]},"nullable":true,"description":"When debug rendering (`debug` is true), this color/stroke is used to draw \"face\" edges. A value of `null` disables coloring facing edges.","name":"facingEdgeStroke"},{"type":{"names":["string"]},"nullable":true,"description":"When debug rendering (`debug` is true), this fill is used for tiles that are collidable. A value of `null` disables applying the additional overfill.","name":"collidingTileOverfill"}],"name":"debugSettings","longname":"Phaser.TilemapLayer#debugSettings","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","___s":true},{"meta":{"range":[5688,5710],"filename":"TilemapLayer.js","lineno":152,"path":"src\\tilemap"},"description":"Speed at which this layer scrolls horizontally, relative to the camera (e.g. scrollFactorX of 0.5 scrolls half as quickly as the 'normal' camera-locked layers do).","properties":[{"type":{"names":["number"]},"name":"scrollFactorX"}],"access":"public","defaultvalue":1,"name":"scrollFactorX","longname":"Phaser.TilemapLayer#scrollFactorX","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","___s":true},{"meta":{"range":[5975,5997],"filename":"TilemapLayer.js","lineno":160,"path":"src\\tilemap"},"description":"Speed at which this layer scrolls vertically, relative to the camera (e.g. scrollFactorY of 0.5 scrolls half as quickly as the 'normal' camera-locked layers do)","properties":[{"type":{"names":["number"]},"name":"scrollFactorY"}],"access":"public","defaultvalue":1,"name":"scrollFactorY","longname":"Phaser.TilemapLayer#scrollFactorY","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","___s":true},{"meta":{"range":[6164,6181],"filename":"TilemapLayer.js","lineno":167,"path":"src\\tilemap"},"description":"If true tiles will be force rendered, even if such is not believed to be required.","properties":[{"type":{"names":["boolean"]},"name":"dirty"}],"access":"protected","name":"dirty","longname":"Phaser.TilemapLayer#dirty","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","___s":true},{"meta":{"range":[6410,6430],"filename":"TilemapLayer.js","lineno":174,"path":"src\\tilemap"},"description":"When ray-casting against tiles this is the number of steps it will jump. For larger tile sizes you can increase this to improve performance.","properties":[{"type":{"names":["integer"]},"name":"rayStepRate"}],"defaultvalue":4,"name":"rayStepRate","longname":"Phaser.TilemapLayer#rayStepRate","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","___s":true},{"meta":{"range":[8324,8619],"filename":"TilemapLayer.js","lineno":253,"path":"src\\tilemap"},"description":"Create if needed (and return) a shared copy canvas that is shared across all TilemapLayers.\r\rCode that uses the canvas is responsible to ensure the dimensions and save/restore state as appropriate.","kind":"function","name":"ensureSharedCopyCanvas","access":"protected","scope":"instance","memberof":"Phaser.TilemapLayer","longname":"Phaser.TilemapLayer#ensureSharedCopyCanvas","___s":true},{"meta":{"range":[8844,8939],"filename":"TilemapLayer.js","lineno":273,"path":"src\\tilemap"},"description":"Automatically called by World.preUpdate.","kind":"function","name":"preUpdate","memberof":"Phaser.TilemapLayer","longname":"Phaser.TilemapLayer#preUpdate","scope":"instance","overrides":"Phaser.Sprite#preUpdate","___s":true},{"meta":{"range":[9041,9175],"filename":"TilemapLayer.js","lineno":284,"path":"src\\tilemap"},"description":"Automatically called by World.postUpdate. Handles cache updates.","kind":"function","name":"postUpdate","access":"protected","memberof":"Phaser.TilemapLayer","longname":"Phaser.TilemapLayer#postUpdate","scope":"instance","overrides":"Phaser.Sprite#postUpdate","___s":true},{"meta":{"range":[11172,11252],"filename":"TilemapLayer.js","lineno":351,"path":"src\\tilemap"},"description":"Destroys this TilemapLayer.","kind":"function","name":"destroy","memberof":"Phaser.TilemapLayer","longname":"Phaser.TilemapLayer#destroy","scope":"instance","overrides":"Phaser.Sprite#destroy","___s":true},{"meta":{"range":[11415,12000],"filename":"TilemapLayer.js","lineno":364,"path":"src\\tilemap"},"description":"Resizes the internal canvas and texture frame used by this TilemapLayer.\r\rThis is an expensive call, so don't bind it to a window resize event! But instead call it at carefully\rselected times.\r\rBe aware that no validation of the new sizes takes place and the current map scroll coordinates are not\rmodified either. You will have to handle both of these things from your game code if required.","kind":"function","name":"resize","params":[{"type":{"names":["number"]},"description":"The new width of the TilemapLayer","name":"width"},{"type":{"names":["number"]},"description":"The new height of the TilemapLayer","name":"height"}],"memberof":"Phaser.TilemapLayer","longname":"Phaser.TilemapLayer#resize","scope":"instance","___s":true},{"meta":{"range":[12580,12700],"filename":"TilemapLayer.js","lineno":402,"path":"src\\tilemap"},"description":"Sets the world size to match the size of this layer.","kind":"function","name":"resizeWorld","access":"public","memberof":"Phaser.TilemapLayer","longname":"Phaser.TilemapLayer#resizeWorld","scope":"instance","___s":true},{"meta":{"range":[15416,15652],"filename":"TilemapLayer.js","lineno":502,"path":"src\\tilemap"},"description":"Convert a pixel value to a tile coordinate.","kind":"function","name":"getTileX","access":"public","params":[{"type":{"names":["number"]},"description":"X position of the point in target tile (in pixels).","name":"x"}],"returns":[{"type":{"names":["integer"]},"description":"The X map location of the tile."}],"memberof":"Phaser.TilemapLayer","longname":"Phaser.TilemapLayer#getTileX","scope":"instance","___s":true},{"meta":{"range":[15836,16072],"filename":"TilemapLayer.js","lineno":517,"path":"src\\tilemap"},"description":"Convert a pixel value to a tile coordinate.","kind":"function","name":"getTileY","access":"public","params":[{"type":{"names":["number"]},"description":"Y position of the point in target tile (in pixels).","name":"y"}],"returns":[{"type":{"names":["integer"]},"description":"The Y map location of the tile."}],"memberof":"Phaser.TilemapLayer","longname":"Phaser.TilemapLayer#getTileY","scope":"instance","___s":true},{"meta":{"range":[16259,16680],"filename":"TilemapLayer.js","lineno":532,"path":"src\\tilemap"},"description":"Convert a pixel coordinate to a tile coordinate.","kind":"function","name":"getTileXY","access":"public","params":[{"type":{"names":["number"]},"description":"X position of the point in target tile (in pixels).","name":"x"},{"type":{"names":["number"]},"description":"Y position of the point in target tile (in pixels).","name":"y"},{"type":{"names":["Phaser.Point","object"]},"description":"The Point/object to update.","name":"point"}],"returns":[{"type":{"names":["Phaser.Point","object"]},"description":"A Point/object with its `x` and `y` properties set."}],"memberof":"Phaser.TilemapLayer","longname":"Phaser.TilemapLayer#getTileXY","scope":"instance","___s":true},{"meta":{"range":[16847,17430],"filename":"TilemapLayer.js","lineno":551,"path":"src\\tilemap"},"description":"Gets all tiles that intersect with the given line.","kind":"function","name":"getRayCastTiles","access":"public","params":[{"type":{"names":["Phaser.Line"]},"description":"The line used to determine which tiles to return.","name":"line"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"(rayStepRate)","description":"How many steps through the ray will we check? Defaults to `rayStepRate`.","name":"stepRate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true, _only_ return tiles that collide on one or more faces.","name":"collides"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true, _only_ return tiles that have interesting faces.","name":"interestingFace"}],"returns":[{"type":{"names":["Array.<Phaser.Tile>"]},"description":"An array of Phaser.Tiles."}],"memberof":"Phaser.TilemapLayer","longname":"Phaser.TilemapLayer#getRayCastTiles","scope":"instance","___s":true},{"meta":{"range":[18482,19213],"filename":"TilemapLayer.js","lineno":598,"path":"src\\tilemap"},"description":"Get all tiles that exist within the given area, defined by the top-left corner, width and height. Values given are in pixels, not tiles.","kind":"function","name":"getTiles","access":"public","params":[{"type":{"names":["number"]},"description":"X position of the top left corner (in pixels).","name":"x"},{"type":{"names":["number"]},"description":"Y position of the top left corner (in pixels).","name":"y"},{"type":{"names":["number"]},"description":"Width of the area to get (in pixels).","name":"width"},{"type":{"names":["number"]},"description":"Height of the area to get (in pixels).","name":"height"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true, _only_ return tiles that collide on one or more faces.","name":"collides"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true, _only_ return tiles that have interesting faces.","name":"interestingFace"}],"returns":[{"type":{"names":["array.<Phaser.Tile>"]},"description":"An array of Tiles."}],"memberof":"Phaser.TilemapLayer","longname":"Phaser.TilemapLayer#getTiles","scope":"instance","___s":true},{"meta":{"range":[21711,21942],"filename":"TilemapLayer.js","lineno":693,"path":"src\\tilemap"},"description":"The TilemapLayer caches tileset look-ups.\r\rCall this method of clear the cache if tilesets have been added or updated after the layer has been rendered.","kind":"function","name":"resetTilesetCache","access":"public","memberof":"Phaser.TilemapLayer","longname":"Phaser.TilemapLayer#resetTilesetCache","scope":"instance","___s":true},{"meta":{"range":[22128,22426],"filename":"TilemapLayer.js","lineno":712,"path":"src\\tilemap"},"description":"This method will set the scale of the tilemap as well as update the underlying block data of this layer.","kind":"function","name":"setScale","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The scale factor along the X-plane","name":"xScale"},{"type":{"names":["number"]},"optional":true,"description":"The scale factor along the Y-plane","name":"yScale"}],"memberof":"Phaser.TilemapLayer","longname":"Phaser.TilemapLayer#setScale","scope":"instance","___s":true},{"meta":{"range":[32140,32270],"filename":"TilemapLayer.js","lineno":1045,"path":"src\\tilemap"},"description":"Renders the tiles to the layer canvas and pushes to the display.","kind":"function","name":"render","access":"protected","memberof":"Phaser.TilemapLayer","longname":"Phaser.TilemapLayer#render","scope":"instance","___s":true},{"meta":{"range":[204,390],"filename":"TilemapParser.js","lineno":7,"path":"src\\tilemap"},"description":"Phaser.TilemapParser parses data objects from Phaser.Loader that need more preparation before they can be inserted into a Tilemap.","kind":"class","name":"TilemapParser","scope":"static","memberof":"Phaser","longname":"Phaser.TilemapParser","___s":true},{"meta":{"range":[1065,1083],"filename":"TilemapParser.js","lineno":26,"path":"src\\tilemap"},"description":"When scanning the Tiled map data the TilemapParser can either insert a null value (true) or\ra Phaser.Tile instance with an index of -1 (false, the default). Depending on your game type\rdepends how this should be configured. If you've a large sparsely populated map and the tile\rdata doesn't need to change then setting this value to `true` will help with memory consumption.\rHowever if your map is small, or you need to update the tiles (perhaps the map dynamically changes\rduring the game) then leave the default value set.","kind":"constant","type":{"names":["boolean"]},"name":"INSERT_NULL","longname":"Phaser.TilemapParser.INSERT_NULL","memberof":"Phaser.TilemapParser","scope":"static","___s":true},{"meta":{"range":[1092,2034],"filename":"TilemapParser.js","lineno":28,"path":"src\\tilemap"},"description":"Parse tilemap data from the cache and creates data for a Tilemap object.","kind":"function","name":"parse","params":[{"type":{"names":["Phaser.Game"]},"description":"Game reference to the currently running game.","name":"game"},{"type":{"names":["string"]},"description":"The key of the tilemap in the Cache.","name":"key"},{"type":{"names":["number"]},"optional":true,"defaultvalue":32,"description":"The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.","name":"tileWidth"},{"type":{"names":["number"]},"optional":true,"defaultvalue":32,"description":"The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.","name":"tileHeight"},{"type":{"names":["number"]},"optional":true,"defaultvalue":10,"description":"The width of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.","name":"width"},{"type":{"names":["number"]},"optional":true,"defaultvalue":10,"description":"The height of the map in tiles. If this map is created from Tiled or CSV data you don't need to specify this.","name":"height"}],"returns":[{"type":{"names":["object"]},"description":"The parsed map object."}],"memberof":"Phaser.TilemapParser","longname":"Phaser.TilemapParser.parse","scope":"static","___s":true},{"meta":{"range":[3118,3705],"filename":"TilemapParser.js","lineno":77,"path":"src\\tilemap"},"description":"Parses a CSV file into valid map data.","kind":"function","name":"parseCSV","params":[{"type":{"names":["string"]},"description":"The name you want to give the map data.","name":"key"},{"type":{"names":["string"]},"description":"The CSV file data.","name":"data"},{"type":{"names":["number"]},"optional":true,"defaultvalue":32,"description":"The pixel width of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.","name":"tileWidth"},{"type":{"names":["number"]},"optional":true,"defaultvalue":32,"description":"The pixel height of a single map tile. If using CSV data you must specify this. Not required if using Tiled map data.","name":"tileHeight"}],"returns":[{"type":{"names":["object"]},"description":"Generated map data."}],"memberof":"Phaser.TilemapParser","longname":"Phaser.TilemapParser.parseCSV","scope":"static","___s":true},{"meta":{"range":[5047,5199],"filename":"TilemapParser.js","lineno":135,"path":"src\\tilemap"},"description":"Returns an empty map data object.","kind":"function","name":"getEmptyData","returns":[{"type":{"names":["object"]},"description":"Generated map data."}],"memberof":"Phaser.TilemapParser","longname":"Phaser.TilemapParser.getEmptyData","scope":"static","___s":true},{"meta":{"range":[6484,6698],"filename":"TilemapParser.js","lineno":180,"path":"src\\tilemap"},"description":"Parses a Tiled JSON file into valid map data.","kind":"function","name":"parseJSON","params":[{"type":{"names":["object"]},"description":"The JSON map data.","name":"json"}],"returns":[{"type":{"names":["object"]},"description":"Generated and parsed map data."}],"memberof":"Phaser.TilemapParser","longname":"Phaser.TilemapParser.parseJSON","scope":"static","___s":true},{"meta":{"range":[942,3529],"filename":"Tileset.js","lineno":22,"path":"src\\tilemap"},"description":"A Tile set is a combination of an image containing the tiles and collision data per tile.\r\rTilesets are normally created automatically when Tiled data is loaded.","kind":"class","classdesc":"Phaser.Tileset","params":[{"type":{"names":["string"]},"description":"The name of the tileset in the map data.","name":"name"},{"type":{"names":["integer"]},"description":"The first tile index this tileset contains.","name":"firstgid"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":32,"description":"Width of each tile (in pixels).","name":"width"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":32,"description":"Height of each tile (in pixels).","name":"height"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The margin around all tiles in the sheet (in pixels).","name":"margin"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The spacing between each tile in the sheet (in pixels).","name":"spacing"},{"type":{"names":["object"]},"optional":true,"defaultvalue":"{}","description":"Custom Tileset properties.","name":"properties"}],"name":"Tileset","longname":"Phaser.Tileset","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1339,1355],"filename":"Tileset.js","lineno":33,"path":"src\\tilemap"},"description":"The name of the Tileset.","properties":[{"type":{"names":["string"]},"name":"name"}],"name":"name","longname":"Phaser.Tileset#name","kind":"member","memberof":"Phaser.Tileset","scope":"instance","___s":true},{"meta":{"range":[1531,1559],"filename":"Tileset.js","lineno":40,"path":"src\\tilemap"},"description":"The Tiled firstgid value.\rThis is the starting index of the first tile index this Tileset contains.","properties":[{"type":{"names":["integer"]},"name":"firstgid"}],"name":"firstgid","longname":"Phaser.Tileset#firstgid","kind":"member","memberof":"Phaser.Tileset","scope":"instance","___s":true},{"meta":{"range":[1682,1708],"filename":"Tileset.js","lineno":47,"path":"src\\tilemap"},"description":"The width of each tile (in pixels).","properties":[{"type":{"names":["integer"]},"name":"tileWidth"}],"readonly":true,"name":"tileWidth","longname":"Phaser.Tileset#tileWidth","kind":"member","memberof":"Phaser.Tileset","scope":"instance","___s":true},{"meta":{"range":[1833,1861],"filename":"Tileset.js","lineno":54,"path":"src\\tilemap"},"description":"The height of each tile (in pixels).","properties":[{"type":{"names":["integer"]},"name":"tileHeight"}],"readonly":true,"name":"tileHeight","longname":"Phaser.Tileset#tileHeight","kind":"member","memberof":"Phaser.Tileset","scope":"instance","___s":true},{"meta":{"range":[2065,2093],"filename":"Tileset.js","lineno":63,"path":"src\\tilemap"},"description":"The margin around the tiles in the sheet (in pixels).\rUse `setSpacing` to change.","properties":[{"type":{"names":["integer"]},"name":"tileMarge"}],"readonly":true,"name":"tileMargin","longname":"Phaser.Tileset#tileMargin","kind":"member","memberof":"Phaser.Tileset","scope":"instance","___s":true},{"meta":{"range":[2273,2303],"filename":"Tileset.js","lineno":71,"path":"src\\tilemap"},"description":"The spacing between each tile in the sheet (in pixels).\rUse `setSpacing` to change.","properties":[{"type":{"names":["integer"]},"name":"tileSpacing"}],"readonly":true,"name":"tileSpacing","longname":"Phaser.Tileset#tileSpacing","kind":"member","memberof":"Phaser.Tileset","scope":"instance","___s":true},{"meta":{"range":[2449,2483],"filename":"Tileset.js","lineno":77,"path":"src\\tilemap"},"description":"Tileset-specific properties that are typically defined in the Tiled editor.","properties":[{"type":{"names":["object"]},"name":"properties"}],"name":"properties","longname":"Phaser.Tileset#properties","kind":"member","memberof":"Phaser.Tileset","scope":"instance","___s":true},{"meta":{"range":[2700,2717],"filename":"Tileset.js","lineno":85,"path":"src\\tilemap"},"description":"The cached image that contains the individual tiles. Use {@link Phaser.Tileset.setImage setImage} to set.","properties":[{"type":{"names":["object"]},"nullable":true,"name":"image"}],"readonly":true,"name":"image","longname":"Phaser.Tileset#image","kind":"member","memberof":"Phaser.Tileset","scope":"instance","___s":true},{"meta":{"range":[2866,2879],"filename":"Tileset.js","lineno":93,"path":"src\\tilemap"},"description":"The number of tile rows in the the tileset.","properties":[{"type":{"names":["integer"]}}],"readonly":true,"name":"rows","longname":"Phaser.Tileset#rows","kind":"member","memberof":"Phaser.Tileset","scope":"instance","___s":true},{"meta":{"range":[3035,3051],"filename":"Tileset.js","lineno":101,"path":"src\\tilemap"},"description":"The number of tile columns in the tileset.","properties":[{"type":{"names":["integer"]},"name":"columns"}],"readonly":true,"name":"columns","longname":"Phaser.Tileset#columns","kind":"member","memberof":"Phaser.Tileset","scope":"instance","___s":true},{"meta":{"range":[3204,3218],"filename":"Tileset.js","lineno":109,"path":"src\\tilemap"},"description":"The total number of tiles in the tileset.","properties":[{"type":{"names":["integer"]},"name":"total"}],"readonly":true,"name":"total","longname":"Phaser.Tileset#total","kind":"member","memberof":"Phaser.Tileset","scope":"instance","___s":true},{"meta":{"range":[3570,3993],"filename":"Tileset.js","lineno":123,"path":"src\\tilemap"},"description":"Draws a tile from this Tileset at the given coordinates on the context.","kind":"function","name":"draw","access":"public","params":[{"type":{"names":["CanvasRenderingContext2D"]},"description":"The context to draw the tile onto.","name":"context"},{"type":{"names":["number"]},"description":"The x coordinate to draw to.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to draw to.","name":"y"},{"type":{"names":["integer"]},"description":"The index of the tile within the set to draw.","name":"index"}],"memberof":"Phaser.Tileset","longname":"Phaser.Tileset#draw","scope":"instance","___s":true},{"meta":{"range":[4632,4864],"filename":"Tileset.js","lineno":155,"path":"src\\tilemap"},"description":"Returns true if and only if this tileset contains the given tile index.","kind":"function","name":"containsTileIndex","access":"public","returns":[{"type":{"names":["boolean"]},"description":"True if this tileset contains the given index."}],"memberof":"Phaser.Tileset","longname":"Phaser.Tileset#containsTileIndex","scope":"instance","___s":true},{"meta":{"range":[5058,5271],"filename":"Tileset.js","lineno":171,"path":"src\\tilemap"},"description":"Set the image associated with this Tileset and update the tile data.","kind":"function","name":"setImage","access":"public","params":[{"type":{"names":["Image"]},"description":"The image that contains the tiles.","name":"image"}],"memberof":"Phaser.Tileset","longname":"Phaser.Tileset#setImage","scope":"instance","___s":true},{"meta":{"range":[5418,5715],"filename":"Tileset.js","lineno":185,"path":"src\\tilemap"},"description":"Sets tile spacing and margins.","kind":"function","name":"setSpacing","access":"public","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The margin around the tiles in the sheet (in pixels).","name":"margin"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The spacing between the tiles in the sheet (in pixels).","name":"spacing"}],"memberof":"Phaser.Tileset","longname":"Phaser.Tileset#setSpacing","scope":"instance","___s":true},{"meta":{"range":[1486,9264],"filename":"Time.js","lineno":38,"path":"src\\time"},"description":"This is the core internal game clock.\r\rIt manages the elapsed time and calculation of elapsed values, used for game object motion and tweens,\rand also handles the standard Timer pool.\r\rTo create a general timed event, use the master {@link Phaser.Timer} accessible through {@link Phaser.Time.events events}.\r\rThere are different *types* of time in Phaser:\r\r- ***Game time*** always runs at the speed of time in real life.\r\r  Unlike wall-clock time, *game time stops when Phaser is paused*.\r\r  Game time is used for {@link Phaser.Timer timer events}.\r\r- ***Physics time*** represents the amount of time given to physics calculations.\r\r  *When {@link #slowMotion} is in effect physics time runs slower than game time.*\r  Like game time, physics time stops when Phaser is paused.\r\r  Physics time is used for physics calculations and {@link Phaser.Tween tweens}.\r\r- {@link https://en.wikipedia.org/wiki/Wall-clock_time ***Wall-clock time***} represents the duration between two events in real life time.\r\r  This time is independent of Phaser and always progresses, regardless of if Phaser is paused.","kind":"class","classdesc":"Phaser.Time","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"Time","longname":"Phaser.Time","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1623,1639],"filename":"Time.js","lineno":44,"path":"src\\time"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"access":"protected","name":"game","longname":"Phaser.Time#game","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[1777,1790],"filename":"Time.js","lineno":51,"path":"src\\time"},"description":"The `Date.now()` value when the time was last updated.","properties":[{"type":{"names":["integer"]},"name":"time"}],"access":"protected","name":"time","longname":"Phaser.Time#time","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[1921,1938],"filename":"Time.js","lineno":58,"path":"src\\time"},"description":"The `now` when the previous update occurred.","properties":[{"type":{"names":["number"]},"name":"prevTime"}],"access":"protected","name":"prevTime","longname":"Phaser.Time#prevTime","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[2498,2510],"filename":"Time.js","lineno":72,"path":"src\\time"},"description":"An increasing value representing cumulative milliseconds since an undisclosed epoch.\r\rWhile this value is in milliseconds and can be used to compute time deltas,\rit must must _not_ be used with `Date.now()` as it may not use the same epoch / starting reference.\r\rThe source may either be from a high-res source (eg. if RAF is available) or the standard Date.now;\rthe value can only be relied upon within a particular game instance.","properties":[{"type":{"names":["number"]},"name":"now"}],"access":"protected","name":"now","longname":"Phaser.Time#now","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[2996,3012],"filename":"Time.js","lineno":86,"path":"src\\time"},"description":"Elapsed time since the last time update, in milliseconds, based on `now`.\r\rThis value _may_ include time that the game is paused/inactive.\r\r_Note:_ This is updated only once per game loop - even if multiple logic update steps are done.\rUse {@link Phaser.Timer#physicsTime physicsTime} as a basis of game/logic calculations instead.","properties":[{"type":{"names":["number"]},"name":"elapsed"}],"see":["Phaser.Time.time"],"access":"protected","name":"elapsed","longname":"Phaser.Time#elapsed","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[3496,3514],"filename":"Time.js","lineno":99,"path":"src\\time"},"description":"The time in ms since the last time update, in milliseconds, based on `time`.\r\rThis value is corrected for game pauses and will be \"about zero\" after a game is resumed.\r\r_Note:_ This is updated once per game loop - even if multiple logic update steps are done.\rUse {@link Phaser.Timer#physicsTime physicsTime} as a basis of game/logic calculations instead.","properties":[{"type":{"names":["integer"]},"name":"elapsedMS"}],"access":"protected","name":"elapsedMS","longname":"Phaser.Time#elapsedMS","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[4020,4048],"filename":"Time.js","lineno":112,"path":"src\\time"},"description":"The physics update delta, in fractional seconds.\r\rThis should be used as an applicable multiplier by all logic update steps (eg. `preUpdate/postUpdate/update`)\rto ensure consistent game timing. Game/logic timing can drift from real-world time if the system\ris unable to consistently maintain the desired FPS.\r\rWith fixed-step updates this is normally equivalent to `1.0 / desiredFps`.","properties":[{"type":{"names":["number"]},"name":"physicsElapsed"}],"name":"physicsElapsed","longname":"Phaser.Time#physicsElapsed","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[4214,4253],"filename":"Time.js","lineno":119,"path":"src\\time"},"description":"The physics update delta, in milliseconds - equivalent to `physicsElapsed * 1000`.","properties":[{"type":{"names":["number"]},"name":"physicsElapsedMS"}],"name":"physicsElapsedMS","longname":"Phaser.Time#physicsElapsedMS","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[4396,4426],"filename":"Time.js","lineno":126,"path":"src\\time"},"description":"The desiredFps multiplier as used by Game.update.","properties":[{"type":{"names":["integer"]},"name":"desiredFpsMult"}],"access":"protected","name":"desiredFpsMult","longname":"Phaser.Time#desiredFpsMult","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[5098,5133],"filename":"Time.js","lineno":149,"path":"src\\time"},"description":"The suggested frame rate for your game, based on an averaged real frame rate.\rThis value is only populated if `Time.advancedTiming` is enabled.\r\r_Note:_ This is not available until after a few frames have passed; until then\rit's set to the same value as desiredFps.","properties":[{"type":{"names":["number"]},"name":"suggestedFps"}],"name":"suggestedFps","longname":"Phaser.Time#suggestedFps","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[5334,5355],"filename":"Time.js","lineno":158,"path":"src\\time"},"description":"Scaling factor to make the game move smoothly in slow motion\r- 1.0 = normal speed\r- 2.0 = half speed","properties":[{"type":{"names":["number"]},"name":"slowMotion"}],"defaultvalue":1,"name":"slowMotion","longname":"Phaser.Time#slowMotion","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[5558,5585],"filename":"Time.js","lineno":165,"path":"src\\time"},"description":"If true then advanced profiling, including the fps rate, fps min/max, suggestedFps and msMin/msMax are updated.","properties":[{"type":{"names":["boolean"]},"name":"advancedTiming"}],"defaultvalue":false,"name":"advancedTiming","longname":"Phaser.Time#advancedTiming","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[5843,5858],"filename":"Time.js","lineno":174,"path":"src\\time"},"description":"Advanced timing result: The number of render frames record in the last second.\r\rOnly calculated if {@link Phaser.Time#advancedTiming advancedTiming} is enabled.","properties":[{"type":{"names":["integer"]},"name":"frames"}],"readonly":true,"name":"frames","longname":"Phaser.Time#frames","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[6076,6088],"filename":"Time.js","lineno":183,"path":"src\\time"},"description":"Advanced timing result: Frames per second.\r\rOnly calculated if {@link Phaser.Time#advancedTiming advancedTiming} is enabled.","properties":[{"type":{"names":["number"]},"name":"fps"}],"readonly":true,"name":"fps","longname":"Phaser.Time#fps","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[6354,6372],"filename":"Time.js","lineno":192,"path":"src\\time"},"description":"Advanced timing result: The lowest rate the fps has dropped to.\r\rOnly calculated if {@link Phaser.Time#advancedTiming advancedTiming} is enabled.\rThis value can be manually reset.","properties":[{"type":{"names":["number"]},"name":"fpsMin"}],"name":"fpsMin","longname":"Phaser.Time#fpsMin","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[6667,6682],"filename":"Time.js","lineno":201,"path":"src\\time"},"description":"Advanced timing result: The highest rate the fps has reached (usually no higher than 60fps).\r\rOnly calculated if {@link Phaser.Time#advancedTiming advancedTiming} is enabled.\rThis value can be manually reset.","properties":[{"type":{"names":["number"]},"name":"fpsMax"}],"name":"fpsMax","longname":"Phaser.Time#fpsMax","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[6997,7014],"filename":"Time.js","lineno":211,"path":"src\\time"},"description":"Advanced timing result: The minimum amount of time the game has taken between consecutive frames.\r\rOnly calculated if {@link Phaser.Time#advancedTiming advancedTiming} is enabled.\rThis value can be manually reset.","properties":[{"type":{"names":["number"]},"name":"msMin"}],"defaultvalue":1000,"name":"msMin","longname":"Phaser.Time#msMin","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[7313,7327],"filename":"Time.js","lineno":220,"path":"src\\time"},"description":"Advanced timing result: The maximum amount of time the game has taken between consecutive frames.\r\rOnly calculated if {@link Phaser.Time#advancedTiming advancedTiming} is enabled.\rThis value can be manually reset.","properties":[{"type":{"names":["number"]},"name":"msMax"}],"name":"msMax","longname":"Phaser.Time#msMax","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[7516,7538],"filename":"Time.js","lineno":227,"path":"src\\time"},"description":"Records how long the game was last paused, in milliseconds.\r(This is not updated until the game is resumed.)","properties":[{"type":{"names":["number"]},"name":"pauseDuration"}],"name":"pauseDuration","longname":"Phaser.Time#pauseDuration","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[7685,7704],"filename":"Time.js","lineno":233,"path":"src\\time"},"properties":[{"type":{"names":["number"]},"description":"The value that setTimeout needs to work out when to next update","name":"timeToCall"}],"access":"protected","name":"timeToCall","longname":"Phaser.Time#timeToCall","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[7876,7897],"filename":"Time.js","lineno":239,"path":"src\\time"},"properties":[{"type":{"names":["number"]},"description":"The time when the next call is expected when using setTimer to control the update loop","name":"timeExpected"}],"access":"protected","name":"timeExpected","longname":"Phaser.Time#timeExpected","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[8074,8122],"filename":"Time.js","lineno":245,"path":"src\\time"},"description":"A {@link Phaser.Timer} object bound to the master clock (this Time object) which events can be added to.","properties":[{"type":{"names":["Phaser.Timer"]},"name":"events"}],"name":"events","longname":"Phaser.Time#events","kind":"member","memberof":"Phaser.Time","scope":"instance","___s":true},{"meta":{"range":[9302,9456],"filename":"Time.js","lineno":293,"path":"src\\time"},"description":"Called automatically by Phaser.Game after boot. Should not be called directly.","kind":"function","name":"boot","access":"protected","memberof":"Phaser.Time","longname":"Phaser.Time#boot","scope":"instance","___s":true},{"meta":{"range":[9641,9884],"filename":"Time.js","lineno":308,"path":"src\\time"},"description":"Adds an existing Phaser.Timer object to the Timer pool.","kind":"function","name":"add","params":[{"type":{"names":["Phaser.Timer"]},"description":"An existing Phaser.Timer object.","name":"timer"}],"returns":[{"type":{"names":["Phaser.Timer"]},"description":"The given Phaser.Timer object."}],"memberof":"Phaser.Time","longname":"Phaser.Time#add","scope":"instance","___s":true},{"meta":{"range":[9993,10347],"filename":"Time.js","lineno":323,"path":"src\\time"},"description":"Creates a new stand-alone Phaser.Timer object.","kind":"function","name":"create","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"A Timer that is set to automatically destroy itself will do so after all of its events have been dispatched (assuming no looping events).","name":"autoDestroy"}],"returns":[{"type":{"names":["Phaser.Timer"]},"description":"The Timer object that was created."}],"memberof":"Phaser.Time","longname":"Phaser.Time#create","scope":"instance","___s":true},{"meta":{"range":[10596,10782],"filename":"Time.js","lineno":342,"path":"src\\time"},"description":"Remove all Timer objects, regardless of their state and clears all Timers from the {@link Phaser.Time#events events} timer.","kind":"function","name":"removeAll","memberof":"Phaser.Time","longname":"Phaser.Time#removeAll","scope":"instance","___s":true},{"meta":{"range":[11015,11152],"filename":"Time.js","lineno":360,"path":"src\\time"},"description":"Refreshes the Time.time and Time.elapsedMS properties from the system clock.","kind":"function","name":"refresh","memberof":"Phaser.Time","longname":"Phaser.Time#refresh","scope":"instance","___s":true},{"meta":{"range":[11462,11743],"filename":"Time.js","lineno":378,"path":"src\\time"},"description":"Updates the game clock and if enabled the advanced timing data. This is called automatically by Phaser.Game.","kind":"function","name":"update","access":"protected","params":[{"type":{"names":["number"]},"description":"The current relative timestamp; see {@link Phaser.Time#now now}.","name":"time"}],"memberof":"Phaser.Time","longname":"Phaser.Time#update","scope":"instance","___s":true},{"meta":{"range":[16397,16629],"filename":"Time.js","lineno":550,"path":"src\\time"},"description":"The number of seconds that have elapsed since the game was started.","kind":"function","name":"totalElapsedSeconds","returns":[{"type":{"names":["number"]},"description":"The number of seconds that have elapsed since the game was started."}],"memberof":"Phaser.Time","longname":"Phaser.Time#totalElapsedSeconds","scope":"instance","___s":true},{"meta":{"range":[16737,16984],"filename":"Time.js","lineno":560,"path":"src\\time"},"description":"How long has passed since the given time.","kind":"function","name":"elapsedSince","params":[{"type":{"names":["number"]},"description":"The time you want to measure against.","name":"since"}],"returns":[{"type":{"names":["number"]},"description":"The difference between the given time and now."}],"memberof":"Phaser.Time","longname":"Phaser.Time#elapsedSince","scope":"instance","___s":true},{"meta":{"range":[17073,17348],"filename":"Time.js","lineno":571,"path":"src\\time"},"description":"How long has passed since the given time (in seconds).","kind":"function","name":"elapsedSecondsSince","params":[{"type":{"names":["number"]},"description":"The time you want to measure (in seconds).","name":"since"}],"returns":[{"type":{"names":["number"]},"description":"Duration between given time and now (in seconds)."}],"memberof":"Phaser.Time","longname":"Phaser.Time#elapsedSecondsSince","scope":"instance","___s":true},{"meta":{"range":[17454,17595],"filename":"Time.js","lineno":582,"path":"src\\time"},"description":"Resets the private _started value to now and removes all currently running Timers.","kind":"function","name":"reset","memberof":"Phaser.Time","longname":"Phaser.Time#reset","scope":"instance","___s":true},{"meta":{"range":[17705,17986],"filename":"Time.js","lineno":596,"path":"src\\time"},"description":"The desired frame rate of the game.\r\rThis is used is used to calculate the physic / logic multiplier and how to apply catch-up logic updates.","name":"desiredFps","properties":[{"type":{"names":["integer"]},"description":"The desired frame rate of the game. Defaults to 60.","name":"desiredFps"}],"memberof":"Phaser.Time","longname":"Phaser.Time#desiredFps","scope":"instance","kind":"member","___s":true},{"meta":{"range":[1071,4619],"filename":"Timer.js","lineno":21,"path":"src\\time"},"description":"A Timer is a way to create and manage {@link Phaser.TimerEvent timer events} that wait for a specific duration and then run a callback.\rMany different timer events, with individual delays, can be added to the same Timer.\r\rAll Timer delays are in milliseconds (there are 1000 ms in 1 second); so a delay value of 250 represents a quarter of a second.\r\rTimers are based on real life time, adjusted for game pause durations.\rThat is, *timer events are based on elapsed {@link Phaser.Time game time}* and do *not* take physics time or slow motion into account.","kind":"class","classdesc":"Phaser.Timer","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true, the timer will automatically destroy itself after all the events have been dispatched (assuming no looping events).","name":"autoDestroy"}],"name":"Timer","longname":"Phaser.Timer","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1284,1300],"filename":"Timer.js","lineno":29,"path":"src\\time"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"access":"protected","name":"game","longname":"Phaser.Timer#game","kind":"member","memberof":"Phaser.Timer","scope":"instance","___s":true},{"meta":{"range":[1581,1601],"filename":"Timer.js","lineno":39,"path":"src\\time"},"description":"True if the Timer is actively running.\r\rDo not modify this boolean - use {@link Phaser.Timer#pause pause} (and {@link Phaser.Timer#resume resume}) to pause the timer.","properties":[{"type":{"names":["boolean"]},"name":"running"}],"defaultvalue":false,"readonly":true,"name":"running","longname":"Phaser.Timer#running","kind":"member","memberof":"Phaser.Timer","scope":"instance","___s":true},{"meta":{"range":[1798,1828],"filename":"Timer.js","lineno":45,"path":"src\\time"},"description":"If true, the timer will automatically destroy itself after all the events have been dispatched (assuming no looping events).","properties":[{"type":{"names":["boolean"]},"name":"autoDestroy"}],"name":"autoDestroy","longname":"Phaser.Timer#autoDestroy","kind":"member","memberof":"Phaser.Timer","scope":"instance","___s":true},{"meta":{"range":[2018,2038],"filename":"Timer.js","lineno":52,"path":"src\\time"},"properties":[{"type":{"names":["boolean"]},"description":"An expired Timer is one in which all of its events have been dispatched and none are pending.","name":"expired"}],"readonly":true,"defaultvalue":false,"name":"expired","longname":"Phaser.Timer#expired","kind":"member","memberof":"Phaser.Timer","scope":"instance","___s":true},{"meta":{"range":[2161,2177],"filename":"Timer.js","lineno":58,"path":"src\\time"},"properties":[{"type":{"names":["number"]},"description":"Elapsed time since the last frame (in ms).","name":"elapsed"}],"access":"protected","name":"elapsed","longname":"Phaser.Timer#elapsed","kind":"member","memberof":"Phaser.Timer","scope":"instance","___s":true},{"meta":{"range":[2367,2383],"filename":"Timer.js","lineno":63,"path":"src\\time"},"properties":[{"type":{"names":["Array.<Phaser.TimerEvent>"]},"description":"An array holding all of this timers Phaser.TimerEvent objects. Use the methods add, repeat and loop to populate it.","name":"events"}],"name":"events","longname":"Phaser.Timer#events","kind":"member","memberof":"Phaser.Timer","scope":"instance","___s":true},{"meta":{"range":[2677,2714],"filename":"Timer.js","lineno":72,"path":"src\\time"},"description":"This signal will be dispatched when this Timer has completed which means that there are no more events in the queue.\r\rThe signal is supplied with one argument, `timer`, which is this Timer object.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onComplete"}],"name":"onComplete","longname":"Phaser.Timer#onComplete","kind":"member","memberof":"Phaser.Timer","scope":"instance","___s":true},{"meta":{"range":[2847,2864],"filename":"Timer.js","lineno":79,"path":"src\\time"},"properties":[{"type":{"names":["number"]},"description":"The time the next tick will occur.","name":"nextTick"}],"readonly":true,"access":"protected","name":"nextTick","longname":"Phaser.Timer#nextTick","kind":"member","memberof":"Phaser.Timer","scope":"instance","___s":true},{"meta":{"range":[3054,3073],"filename":"Timer.js","lineno":84,"path":"src\\time"},"properties":[{"type":{"names":["number"]},"description":"If the difference in time between two frame updates exceeds this value, the event times are reset to avoid catch-up situations.","name":"timeCap"}],"name":"timeCap","longname":"Phaser.Timer#timeCap","kind":"member","memberof":"Phaser.Timer","scope":"instance","___s":true},{"meta":{"range":[3291,3310],"filename":"Timer.js","lineno":91,"path":"src\\time"},"properties":[{"type":{"names":["boolean"]},"description":"The paused state of the Timer. You can pause the timer by calling Timer.pause() and Timer.resume() or by the game pausing.","name":"paused"}],"readonly":true,"defaultvalue":false,"name":"paused","longname":"Phaser.Timer#paused","kind":"member","memberof":"Phaser.Timer","scope":"instance","___s":true},{"meta":{"range":[4704,4731],"filename":"Timer.js","lineno":161,"path":"src\\time"},"description":"Number of milliseconds in a minute.","kind":"constant","type":{"names":["integer"]},"name":"MINUTE","longname":"Phaser.Timer.MINUTE","memberof":"Phaser.Timer","scope":"static","___s":true},{"meta":{"range":[4816,4842],"filename":"Timer.js","lineno":168,"path":"src\\time"},"description":"Number of milliseconds in a second.","kind":"constant","type":{"names":["integer"]},"name":"SECOND","longname":"Phaser.Timer.SECOND","memberof":"Phaser.Timer","scope":"static","___s":true},{"meta":{"range":[4932,4955],"filename":"Timer.js","lineno":175,"path":"src\\time"},"description":"Number of milliseconds in half a second.","kind":"constant","type":{"names":["integer"]},"name":"HALF","longname":"Phaser.Timer.HALF","memberof":"Phaser.Timer","scope":"static","___s":true},{"meta":{"range":[5053,5079],"filename":"Timer.js","lineno":182,"path":"src\\time"},"description":"Number of milliseconds in a quarter of a second.","kind":"constant","type":{"names":["integer"]},"name":"QUARTER","longname":"Phaser.Timer.QUARTER","memberof":"Phaser.Timer","scope":"static","___s":true},{"meta":{"range":[6574,7588],"filename":"Timer.js","lineno":228,"path":"src\\time"},"description":"Adds a new Event to this Timer.\r\rThe event will fire after the given amount of `delay` in milliseconds has passed, once the Timer has started running.\rThe delay is in relation to when the Timer starts, not the time it was added. If the Timer is already running the delay will be calculated based on the timers current time.\r\rMake sure to call {@link Phaser.Timer#start start} after adding all of the Events you require for this Timer.","kind":"function","name":"add","params":[{"type":{"names":["integer"]},"description":"The number of milliseconds, in {@link Phaser.Time game time}, before the timer event occurs.","name":"delay"},{"type":{"names":["function"]},"description":"The callback that will be called when the timer event occurs.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the callback will be called.","name":"callbackContext"},{"type":{"names":["*"]},"variable":true,"description":"Additional arguments that will be supplied to the callback.","name":"arguments"}],"returns":[{"type":{"names":["Phaser.TimerEvent"]},"description":"The Phaser.TimerEvent object that was created."}],"memberof":"Phaser.Timer","longname":"Phaser.Timer#add","scope":"instance","___s":true},{"meta":{"range":[7779,9077],"filename":"Timer.js","lineno":249,"path":"src\\time"},"description":"Adds a new TimerEvent that will always play through once and then repeat for the given number of iterations.\r\rThe event will fire after the given amount of `delay` in milliseconds has passed, once the Timer has started running.\rThe delay is in relation to when the Timer starts, not the time it was added.\rIf the Timer is already running the delay will be calculated based on the timers current time.\r\rMake sure to call {@link Phaser.Timer#start start} after adding all of the Events you require for this Timer.","kind":"function","name":"repeat","params":[{"type":{"names":["integer"]},"description":"The number of milliseconds, in {@link Phaser.Time game time}, before the timer event occurs.","name":"delay"},{"type":{"names":["number"]},"description":"The number of times the event will repeat once is has finished playback. A repeatCount of 1 means it will repeat itself once, playing the event twice in total.","name":"repeatCount"},{"type":{"names":["function"]},"description":"The callback that will be called when the timer event occurs.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the callback will be called.","name":"callbackContext"},{"type":{"names":["*"]},"variable":true,"description":"Additional arguments that will be supplied to the callback.","name":"arguments"}],"returns":[{"type":{"names":["Phaser.TimerEvent"]},"description":"The Phaser.TimerEvent object that was created."}],"memberof":"Phaser.Timer","longname":"Phaser.Timer#repeat","scope":"instance","___s":true},{"meta":{"range":[9294,10371],"filename":"Timer.js","lineno":272,"path":"src\\time"},"description":"Adds a new looped Event to this Timer that will repeat forever or until the Timer is stopped.\r\rThe event will fire after the given amount of `delay` in milliseconds has passed, once the Timer has started running.\rThe delay is in relation to when the Timer starts, not the time it was added. If the Timer is already running the delay will be calculated based on the timers current time.\r\rMake sure to call {@link Phaser.Timer#start start} after adding all of the Events you require for this Timer.","kind":"function","name":"loop","params":[{"type":{"names":["integer"]},"description":"The number of milliseconds, in {@link Phaser.Time game time}, before the timer event occurs.","name":"delay"},{"type":{"names":["function"]},"description":"The callback that will be called when the timer event occurs.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the callback will be called.","name":"callbackContext"},{"type":{"names":["*"]},"variable":true,"description":"Additional arguments that will be supplied to the callback.","name":"arguments"}],"returns":[{"type":{"names":["Phaser.TimerEvent"]},"description":"The Phaser.TimerEvent object that was created."}],"memberof":"Phaser.Timer","longname":"Phaser.Timer#loop","scope":"instance","___s":true},{"meta":{"range":[10562,10787],"filename":"Timer.js","lineno":293,"path":"src\\time"},"description":"Starts this Timer running.","kind":"function","name":"start","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The number of milliseconds, in {@link Phaser.Time game time}, that should elapse before the Timer will start.","name":"delay"}],"memberof":"Phaser.Timer","longname":"Phaser.Timer#start","scope":"instance","___s":true},{"meta":{"range":[11154,11423],"filename":"Timer.js","lineno":316,"path":"src\\time"},"description":"Stops this Timer from running. Does not cause it to be destroyed if autoDestroy is set to true.","kind":"function","name":"stop","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true all the events in Timer will be cleared, otherwise they will remain.","name":"clearEvents"}],"memberof":"Phaser.Timer","longname":"Phaser.Timer#stop","scope":"instance","___s":true},{"meta":{"range":[11663,11839],"filename":"Timer.js","lineno":334,"path":"src\\time"},"description":"Removes a pending TimerEvent from the queue.","params":[{"type":{"names":["Phaser.TimerEvent"]},"description":"The event to remove from the queue.","name":"event"}],"kind":"function","name":"remove","memberof":"Phaser.Timer","longname":"Phaser.Timer#remove","scope":"instance","___s":true},{"meta":{"range":[12149,12343],"filename":"Timer.js","lineno":354,"path":"src\\time"},"description":"Orders the events on this Timer so they are in tick order.\rThis is called automatically when new events are created.","kind":"function","name":"order","access":"protected","memberof":"Phaser.Timer","longname":"Phaser.Timer#order","scope":"instance","___s":true},{"meta":{"range":[12971,13179],"filename":"Timer.js","lineno":392,"path":"src\\time"},"description":"Clears any events from the Timer which have pendingDelete set to true and then resets the private _len and _i values.","kind":"function","name":"clearPendingEvents","access":"protected","memberof":"Phaser.Timer","longname":"Phaser.Timer#clearPendingEvents","scope":"instance","___s":true},{"meta":{"range":[13525,13871],"filename":"Timer.js","lineno":415,"path":"src\\time"},"description":"The main Timer update event, called automatically by Phaser.Time.update.","kind":"function","name":"update","access":"protected","params":[{"type":{"names":["number"]},"description":"The time from the core game clock.","name":"time"}],"returns":[{"type":{"names":["boolean"]},"description":"True if there are still events waiting to be dispatched, otherwise false if this Timer can be destroyed."}],"memberof":"Phaser.Timer","longname":"Phaser.Timer#update","scope":"instance","___s":true},{"meta":{"range":[16936,17034],"filename":"Timer.js","lineno":510,"path":"src\\time"},"description":"Pauses the Timer and all events in the queue.","kind":"function","name":"pause","memberof":"Phaser.Timer","longname":"Phaser.Timer#pause","scope":"instance","___s":true},{"meta":{"range":[17702,17865],"filename":"Timer.js","lineno":552,"path":"src\\time"},"description":"Adjusts the time of all pending events and the nextTick by the given baseTime.","kind":"function","name":"adjustEvents","access":"protected","memberof":"Phaser.Timer","longname":"Phaser.Timer#adjustEvents","scope":"instance","___s":true},{"meta":{"range":[18671,18781],"filename":"Timer.js","lineno":590,"path":"src\\time"},"description":"Resumes the Timer and updates all pending events.","kind":"function","name":"resume","memberof":"Phaser.Timer","longname":"Phaser.Timer#resume","scope":"instance","___s":true},{"meta":{"range":[19460,19681],"filename":"Timer.js","lineno":631,"path":"src\\time"},"description":"Removes all Events from this Timer and all callbacks linked to onComplete, but leaves the Timer running.    \rThe onComplete callbacks won't be called.","kind":"function","name":"removeAll","memberof":"Phaser.Timer","longname":"Phaser.Timer#removeAll","scope":"instance","___s":true},{"meta":{"range":[19848,20018],"filename":"Timer.js","lineno":646,"path":"src\\time"},"description":"Destroys this Timer. Any pending Events are not dispatched.\rThe onComplete callbacks won't be called.","kind":"function","name":"destroy","memberof":"Phaser.Timer","longname":"Phaser.Timer#destroy","scope":"instance","___s":true},{"meta":{"range":[20209,20330],"filename":"Timer.js","lineno":664,"path":"src\\time"},"name":"next","properties":[{"type":{"names":["number"]},"description":"The time at which the next event will occur.","name":"next"}],"readonly":true,"memberof":"Phaser.Timer","longname":"Phaser.Timer#next","scope":"instance","kind":"member","___s":true},{"meta":{"range":[20462,20608],"filename":"Timer.js","lineno":677,"path":"src\\time"},"name":"duration","properties":[{"type":{"names":["number"]},"description":"The duration in ms remaining until the next event will occur.","name":"duration"}],"readonly":true,"memberof":"Phaser.Timer","longname":"Phaser.Timer#duration","scope":"instance","kind":"member","___s":true},{"meta":{"range":[20901,21024],"filename":"Timer.js","lineno":699,"path":"src\\time"},"name":"length","properties":[{"type":{"names":["number"]},"description":"The number of pending events in the queue.","name":"length"}],"readonly":true,"memberof":"Phaser.Timer","longname":"Phaser.Timer#length","scope":"instance","kind":"member","___s":true},{"meta":{"range":[21163,21302],"filename":"Timer.js","lineno":712,"path":"src\\time"},"name":"ms","properties":[{"type":{"names":["number"]},"description":"The duration in milliseconds that this Timer has been running for.","name":"ms"}],"readonly":true,"memberof":"Phaser.Timer","longname":"Phaser.Timer#ms","scope":"instance","kind":"member","___s":true},{"meta":{"range":[21579,21723],"filename":"Timer.js","lineno":734,"path":"src\\time"},"name":"seconds","properties":[{"type":{"names":["number"]},"description":"The duration in seconds that this Timer has been running for.","name":"seconds"}],"readonly":true,"memberof":"Phaser.Timer","longname":"Phaser.Timer#seconds","scope":"instance","kind":"member","___s":true},{"meta":{"range":[1402,2840],"filename":"TimerEvent.js","lineno":28,"path":"src\\time"},"description":"A TimerEvent is a single event that is processed by a Phaser.Timer.\r\rIt consists of a delay, which is a value in milliseconds after which the event will fire.\rWhen the event fires it calls a specific callback with the specified arguments.\r\rTimerEvents are removed by their parent timer once finished firing or repeating.\r\rUse {@link Phaser.Timer#add}, {@link Phaser.Timer#repeat}, or {@link Phaser.Timer#loop} methods to create a new event.","kind":"class","classdesc":"Phaser.TimerEvent","params":[{"type":{"names":["Phaser.Timer"]},"description":"The Timer object that this TimerEvent belongs to.","name":"timer"},{"type":{"names":["number"]},"description":"The delay in ms at which this TimerEvent fires.","name":"delay"},{"type":{"names":["number"]},"description":"The tick is the next game clock time that this event will fire at.","name":"tick"},{"type":{"names":["number"]},"description":"If this TimerEvent repeats it will do so this many times.","name":"repeatCount"},{"type":{"names":["boolean"]},"description":"True if this TimerEvent loops, otherwise false.","name":"loop"},{"type":{"names":["function"]},"description":"The callback that will be called when the TimerEvent occurs.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the callback will be called.","name":"callbackContext"},{"type":{"names":["Array.<any>"]},"description":"Additional arguments to be passed to the callback.","name":"arguments"}],"name":"TimerEvent","longname":"Phaser.TimerEvent","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1655,1673],"filename":"TimerEvent.js","lineno":35,"path":"src\\time"},"properties":[{"type":{"names":["Phaser.Timer"]},"description":"The Timer object that this TimerEvent belongs to.","name":"timer"}],"access":"protected","readonly":true,"name":"timer","longname":"Phaser.TimerEvent#timer","kind":"member","memberof":"Phaser.TimerEvent","scope":"instance","___s":true},{"meta":{"range":[1781,1799],"filename":"TimerEvent.js","lineno":40,"path":"src\\time"},"properties":[{"type":{"names":["number"]},"description":"The delay in ms at which this TimerEvent fires.","name":"delay"}],"name":"delay","longname":"Phaser.TimerEvent#delay","kind":"member","memberof":"Phaser.TimerEvent","scope":"instance","___s":true},{"meta":{"range":[1925,1941],"filename":"TimerEvent.js","lineno":45,"path":"src\\time"},"properties":[{"type":{"names":["number"]},"description":"The tick is the next game clock time that this event will fire at.","name":"tick"}],"name":"tick","longname":"Phaser.TimerEvent#tick","kind":"member","memberof":"Phaser.TimerEvent","scope":"instance","___s":true},{"meta":{"range":[2065,2099],"filename":"TimerEvent.js","lineno":50,"path":"src\\time"},"properties":[{"type":{"names":["number"]},"description":"If this TimerEvent repeats it will do so this many times.","name":"repeatCount"}],"name":"repeatCount","longname":"Phaser.TimerEvent#repeatCount","kind":"member","memberof":"Phaser.TimerEvent","scope":"instance","___s":true},{"meta":{"range":[2207,2223],"filename":"TimerEvent.js","lineno":55,"path":"src\\time"},"properties":[{"type":{"names":["boolean"]},"description":"True if this TimerEvent loops, otherwise false.","name":"loop"}],"name":"loop","longname":"Phaser.TimerEvent#loop","kind":"member","memberof":"Phaser.TimerEvent","scope":"instance","___s":true},{"meta":{"range":[2349,2373],"filename":"TimerEvent.js","lineno":60,"path":"src\\time"},"properties":[{"type":{"names":["function"]},"description":"The callback that will be called when the TimerEvent occurs.","name":"callback"}],"name":"callback","longname":"Phaser.TimerEvent#callback","kind":"member","memberof":"Phaser.TimerEvent","scope":"instance","___s":true},{"meta":{"range":[2493,2531],"filename":"TimerEvent.js","lineno":65,"path":"src\\time"},"properties":[{"type":{"names":["object"]},"description":"The context in which the callback will be called.","name":"callbackContext"}],"name":"callbackContext","longname":"Phaser.TimerEvent#callbackContext","kind":"member","memberof":"Phaser.TimerEvent","scope":"instance","___s":true},{"meta":{"range":[2645,2661],"filename":"TimerEvent.js","lineno":70,"path":"src\\time"},"properties":[{"type":{"names":["Array.<any>"]},"description":"Additional arguments to be passed to the callback.","name":"arguments"}],"name":"args","longname":"Phaser.TimerEvent#args","kind":"member","memberof":"Phaser.TimerEvent","scope":"instance","___s":true},{"meta":{"range":[2808,2834],"filename":"TimerEvent.js","lineno":76,"path":"src\\time"},"properties":[{"type":{"names":["boolean"]},"description":"A flag that controls if the TimerEvent is pending deletion.","name":"pendingDelete"}],"access":"protected","name":"pendingDelete","longname":"Phaser.TimerEvent#pendingDelete","kind":"member","memberof":"Phaser.TimerEvent","scope":"instance","___s":true},{"meta":{"range":[233,339],"filename":"Easing.js","lineno":9,"path":"src\\tween"},"description":"A collection of easing methods defining ease-in and ease-out curves.","kind":"class","name":"Easing","memberof":"Phaser","longname":"Phaser.Easing","scope":"static","___s":true},{"meta":{"range":[366,441],"filename":"Easing.js","lineno":16,"path":"src\\tween"},"description":"Linear easing.","kind":"class","name":"Linear","memberof":"Phaser.Easing","longname":"Phaser.Easing.Linear","scope":"static","___s":true},{"meta":{"range":[468,668],"filename":"Easing.js","lineno":23,"path":"src\\tween"},"description":"Linear Easing (no variation).","kind":"function","name":"None","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"k."}],"memberof":"Phaser.Easing.Linear","longname":"Phaser.Easing.Linear#None","scope":"instance","___s":true},{"meta":{"range":[756,837],"filename":"Easing.js","lineno":38,"path":"src\\tween"},"description":"Quadratic easing.","kind":"class","name":"Quadratic","memberof":"Phaser.Easing","longname":"Phaser.Easing.Quadratic","scope":"static","___s":true},{"meta":{"range":[867,1049],"filename":"Easing.js","lineno":45,"path":"src\\tween"},"description":"Ease-in.","kind":"function","name":"In","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"k^2."}],"memberof":"Phaser.Easing.Quadratic","longname":"Phaser.Easing.Quadratic#In","scope":"instance","___s":true},{"meta":{"range":[1134,1323],"filename":"Easing.js","lineno":58,"path":"src\\tween"},"description":"Ease-out.","kind":"function","name":"Out","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"k* (2-k)."}],"memberof":"Phaser.Easing.Quadratic","longname":"Phaser.Easing.Quadratic#Out","scope":"instance","___s":true},{"meta":{"range":[1417,1620],"filename":"Easing.js","lineno":71,"path":"src\\tween"},"description":"Ease-in/out.","kind":"function","name":"InOut","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Quadratic","longname":"Phaser.Easing.Quadratic#InOut","scope":"instance","___s":true},{"meta":{"range":[1794,1867],"filename":"Easing.js","lineno":87,"path":"src\\tween"},"description":"Cubic easing.","kind":"class","name":"Cubic","memberof":"Phaser.Easing","longname":"Phaser.Easing.Cubic","scope":"static","___s":true},{"meta":{"range":[1893,2091],"filename":"Easing.js","lineno":94,"path":"src\\tween"},"description":"Cubic ease-in.","kind":"function","name":"In","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Cubic","longname":"Phaser.Easing.Cubic#In","scope":"instance","___s":true},{"meta":{"range":[2180,2380],"filename":"Easing.js","lineno":107,"path":"src\\tween"},"description":"Cubic ease-out.","kind":"function","name":"Out","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Cubic","longname":"Phaser.Easing.Cubic#Out","scope":"instance","___s":true},{"meta":{"range":[2476,2681],"filename":"Easing.js","lineno":120,"path":"src\\tween"},"description":"Cubic ease-in/out.","kind":"function","name":"InOut","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Cubic","longname":"Phaser.Easing.Cubic#InOut","scope":"instance","___s":true},{"meta":{"range":[2860,2937],"filename":"Easing.js","lineno":136,"path":"src\\tween"},"description":"Quartic easing.","kind":"class","name":"Quartic","memberof":"Phaser.Easing","longname":"Phaser.Easing.Quartic","scope":"static","___s":true},{"meta":{"range":[2965,3167],"filename":"Easing.js","lineno":143,"path":"src\\tween"},"description":"Quartic ease-in.","kind":"function","name":"In","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Quartic","longname":"Phaser.Easing.Quartic#In","scope":"instance","___s":true},{"meta":{"range":[3260,3464],"filename":"Easing.js","lineno":156,"path":"src\\tween"},"description":"Quartic ease-out.","kind":"function","name":"Out","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Quartic","longname":"Phaser.Easing.Quartic#Out","scope":"instance","___s":true},{"meta":{"range":[3568,3777],"filename":"Easing.js","lineno":169,"path":"src\\tween"},"description":"Quartic ease-in/out.","kind":"function","name":"InOut","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Quartic","longname":"Phaser.Easing.Quartic#InOut","scope":"instance","___s":true},{"meta":{"range":[3965,4042],"filename":"Easing.js","lineno":185,"path":"src\\tween"},"description":"Quintic easing.","kind":"class","name":"Quintic","memberof":"Phaser.Easing","longname":"Phaser.Easing.Quintic","scope":"static","___s":true},{"meta":{"range":[4070,4272],"filename":"Easing.js","lineno":192,"path":"src\\tween"},"description":"Quintic ease-in.","kind":"function","name":"In","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Quintic","longname":"Phaser.Easing.Quintic#In","scope":"instance","___s":true},{"meta":{"range":[4369,4573],"filename":"Easing.js","lineno":205,"path":"src\\tween"},"description":"Quintic ease-out.","kind":"function","name":"Out","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Quintic","longname":"Phaser.Easing.Quintic#Out","scope":"instance","___s":true},{"meta":{"range":[4677,4886],"filename":"Easing.js","lineno":218,"path":"src\\tween"},"description":"Quintic ease-in/out.","kind":"function","name":"InOut","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Quintic","longname":"Phaser.Easing.Quintic#InOut","scope":"instance","___s":true},{"meta":{"range":[5081,5164],"filename":"Easing.js","lineno":234,"path":"src\\tween"},"description":"Sinusoidal easing.","kind":"class","name":"Sinusoidal","memberof":"Phaser.Easing","longname":"Phaser.Easing.Sinusoidal","scope":"static","___s":true},{"meta":{"range":[5195,5403],"filename":"Easing.js","lineno":241,"path":"src\\tween"},"description":"Sinusoidal ease-in.","kind":"function","name":"In","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Sinusoidal","longname":"Phaser.Easing.Sinusoidal#In","scope":"instance","___s":true},{"meta":{"range":[5586,5796],"filename":"Easing.js","lineno":256,"path":"src\\tween"},"description":"Sinusoidal ease-out.","kind":"function","name":"Out","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Sinusoidal","longname":"Phaser.Easing.Sinusoidal#Out","scope":"instance","___s":true},{"meta":{"range":[5976,6191],"filename":"Easing.js","lineno":271,"path":"src\\tween"},"description":"Sinusoidal ease-in/out.","kind":"function","name":"InOut","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Sinusoidal","longname":"Phaser.Easing.Sinusoidal#InOut","scope":"instance","___s":true},{"meta":{"range":[6388,6473],"filename":"Easing.js","lineno":288,"path":"src\\tween"},"description":"Exponential easing.","kind":"class","name":"Exponential","memberof":"Phaser.Easing","longname":"Phaser.Easing.Exponential","scope":"static","___s":true},{"meta":{"range":[6505,6715],"filename":"Easing.js","lineno":295,"path":"src\\tween"},"description":"Exponential ease-in.","kind":"function","name":"In","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Exponential","longname":"Phaser.Easing.Exponential#In","scope":"instance","___s":true},{"meta":{"range":[6832,7044],"filename":"Easing.js","lineno":308,"path":"src\\tween"},"description":"Exponential ease-out.","kind":"function","name":"Out","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Exponential","longname":"Phaser.Easing.Exponential#Out","scope":"instance","___s":true},{"meta":{"range":[7166,7383],"filename":"Easing.js","lineno":321,"path":"src\\tween"},"description":"Exponential ease-in/out.","kind":"function","name":"InOut","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Exponential","longname":"Phaser.Easing.Exponential#InOut","scope":"instance","___s":true},{"meta":{"range":[7667,7746],"filename":"Easing.js","lineno":339,"path":"src\\tween"},"description":"Circular easing.","kind":"class","name":"Circular","memberof":"Phaser.Easing","longname":"Phaser.Easing.Circular","scope":"static","___s":true},{"meta":{"range":[7775,7979],"filename":"Easing.js","lineno":346,"path":"src\\tween"},"description":"Circular ease-in.","kind":"function","name":"In","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Circular","longname":"Phaser.Easing.Circular#In","scope":"instance","___s":true},{"meta":{"range":[8085,8291],"filename":"Easing.js","lineno":359,"path":"src\\tween"},"description":"Circular ease-out.","kind":"function","name":"Out","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Circular","longname":"Phaser.Easing.Circular#Out","scope":"instance","___s":true},{"meta":{"range":[8400,8611],"filename":"Easing.js","lineno":372,"path":"src\\tween"},"description":"Circular ease-in/out.","kind":"function","name":"InOut","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Circular","longname":"Phaser.Easing.Circular#InOut","scope":"instance","___s":true},{"meta":{"range":[8820,8897],"filename":"Easing.js","lineno":388,"path":"src\\tween"},"description":"Elastic easing.","kind":"class","name":"Elastic","memberof":"Phaser.Easing","longname":"Phaser.Easing.Elastic","scope":"static","___s":true},{"meta":{"range":[8925,9127],"filename":"Easing.js","lineno":395,"path":"src\\tween"},"description":"Elastic ease-in.","kind":"function","name":"In","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Elastic","longname":"Phaser.Easing.Elastic#In","scope":"instance","___s":true},{"meta":{"range":[9525,9729],"filename":"Easing.js","lineno":413,"path":"src\\tween"},"description":"Elastic ease-out.","kind":"function","name":"Out","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Elastic","longname":"Phaser.Easing.Elastic#Out","scope":"instance","___s":true},{"meta":{"range":[10122,10331],"filename":"Easing.js","lineno":431,"path":"src\\tween"},"description":"Elastic ease-in/out.","kind":"function","name":"InOut","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Elastic","longname":"Phaser.Easing.Elastic#InOut","scope":"instance","___s":true},{"meta":{"range":[10878,10949],"filename":"Easing.js","lineno":452,"path":"src\\tween"},"description":"Back easing.","kind":"class","name":"Back","memberof":"Phaser.Easing","longname":"Phaser.Easing.Back","scope":"static","___s":true},{"meta":{"range":[10974,11170],"filename":"Easing.js","lineno":459,"path":"src\\tween"},"description":"Back ease-in.","kind":"function","name":"In","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Back","longname":"Phaser.Easing.Back#In","scope":"instance","___s":true},{"meta":{"range":[11309,11507],"filename":"Easing.js","lineno":473,"path":"src\\tween"},"description":"Back ease-out.","kind":"function","name":"Out","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Back","longname":"Phaser.Easing.Back#Out","scope":"instance","___s":true},{"meta":{"range":[11653,11856],"filename":"Easing.js","lineno":487,"path":"src\\tween"},"description":"Back ease-in/out.","kind":"function","name":"InOut","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Back","longname":"Phaser.Easing.Back#InOut","scope":"instance","___s":true},{"meta":{"range":[12117,12192],"filename":"Easing.js","lineno":504,"path":"src\\tween"},"description":"Bounce easing.","kind":"class","name":"Bounce","memberof":"Phaser.Easing","longname":"Phaser.Easing.Bounce","scope":"static","___s":true},{"meta":{"range":[12219,12419],"filename":"Easing.js","lineno":511,"path":"src\\tween"},"description":"Bounce ease-in.","kind":"function","name":"In","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Bounce","longname":"Phaser.Easing.Bounce#In","scope":"instance","___s":true},{"meta":{"range":[12536,12738],"filename":"Easing.js","lineno":524,"path":"src\\tween"},"description":"Bounce ease-out.","kind":"function","name":"Out","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Bounce","longname":"Phaser.Easing.Bounce#Out","scope":"instance","___s":true},{"meta":{"range":[13239,13446],"filename":"Easing.js","lineno":553,"path":"src\\tween"},"description":"Bounce ease-in/out.","kind":"function","name":"InOut","params":[{"type":{"names":["number"]},"description":"The value to be tweened.","name":"k"}],"returns":[{"type":{"names":["number"]},"description":"The tweened value."}],"memberof":"Phaser.Easing.Bounce","longname":"Phaser.Easing.Bounce#InOut","scope":"instance","___s":true},{"meta":{"range":[1073,6893],"filename":"Tween.js","lineno":20,"path":"src\\tween"},"description":"A Tween allows you to alter one or more properties of a target object over a defined period of time.\rThis can be used for things such as alpha fading Sprites, scaling them or motion.\rUse `Tween.to` or `Tween.from` to set-up the tween values. You can create multiple tweens on the same object\rby calling Tween.to multiple times on the same Tween. Additional tweens specified in this way become \"child\" tweens and\rare played through in sequence. You can use Tween.timeScale and Tween.reverse to control the playback of this Tween and all of its children.","kind":"class","classdesc":"Phaser.Tween","params":[{"type":{"names":["object"]},"description":"The target object, such as a Phaser.Sprite or Phaser.Sprite.scale.","name":"target"},{"type":{"names":["Phaser.Game"]},"description":"Current game instance.","name":"game"},{"type":{"names":["Phaser.TweenManager"]},"description":"The TweenManager responsible for looking after this Tween.","name":"manager"}],"name":"Tween","longname":"Phaser.Tween","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1228,1244],"filename":"Tween.js","lineno":25,"path":"src\\tween"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running Game.","name":"game"}],"name":"game","longname":"Phaser.Tween#game","kind":"member","memberof":"Phaser.Tween","scope":"instance","___s":true},{"meta":{"range":[1386,1406],"filename":"Tween.js","lineno":30,"path":"src\\tween"},"properties":[{"type":{"names":["object"]},"description":"The target object, such as a Phaser.Sprite or property like Phaser.Sprite.scale.","name":"target"}],"name":"target","longname":"Phaser.Tween#target","kind":"member","memberof":"Phaser.Tween","scope":"instance","___s":true},{"meta":{"range":[1548,1570],"filename":"Tween.js","lineno":35,"path":"src\\tween"},"properties":[{"type":{"names":["Phaser.TweenManager"]},"description":"Reference to the TweenManager responsible for updating this Tween.","name":"manager"}],"name":"manager","longname":"Phaser.Tween#manager","kind":"member","memberof":"Phaser.Tween","scope":"instance","___s":true},{"meta":{"range":[1711,1729],"filename":"Tween.js","lineno":40,"path":"src\\tween"},"properties":[{"type":{"names":["Array"]},"description":"An Array of TweenData objects that comprise the different parts of this Tween.","name":"timeline"}],"name":"timeline","longname":"Phaser.Tween#timeline","kind":"member","memberof":"Phaser.Tween","scope":"instance","___s":true},{"meta":{"range":[2029,2049],"filename":"Tween.js","lineno":49,"path":"src\\tween"},"description":"If set to `true` the current tween will play in reverse.\rIf the tween hasn't yet started this has no effect.\rIf there are child tweens then all child tweens will play in reverse from the current point.","properties":[{"type":{"names":["boolean"]},"name":"reverse"}],"defaultvalue":false,"name":"reverse","longname":"Phaser.Tween#reverse","kind":"member","memberof":"Phaser.Tween","scope":"instance","___s":true},{"meta":{"range":[2407,2425],"filename":"Tween.js","lineno":58,"path":"src\\tween"},"description":"The speed at which the tweens will run. A value of 1 means it will match the game frame rate. 0.5 will run at half the frame rate. 2 at double the frame rate, etc.\rIf a tweens duration is 1 second but timeScale is 0.5 then it will take 2 seconds to complete.","properties":[{"type":{"names":["number"]},"name":"timeScale"}],"defaultvalue":1,"name":"timeScale","longname":"Phaser.Tween#timeScale","kind":"member","memberof":"Phaser.Tween","scope":"instance","___s":true},{"meta":{"range":[2585,2607],"filename":"Tween.js","lineno":63,"path":"src\\tween"},"properties":[{"type":{"names":["number"]},"description":"If the Tween and any child tweens are set to repeat this contains the current repeat count.","name":"repeatCounter"}],"name":"repeatCounter","longname":"Phaser.Tween#repeatCounter","kind":"member","memberof":"Phaser.Tween","scope":"instance","___s":true},{"meta":{"range":[2772,2798],"filename":"Tween.js","lineno":70,"path":"src\\tween"},"properties":[{"type":{"names":["boolean"]},"description":"True if this Tween is ready to be deleted by the TweenManager.","name":"pendingDelete"}],"defaultvalue":false,"readonly":true,"name":"pendingDelete","longname":"Phaser.Tween#pendingDelete","kind":"member","memberof":"Phaser.Tween","scope":"instance","___s":true},{"meta":{"range":[3085,3119],"filename":"Tween.js","lineno":77,"path":"src\\tween"},"description":"The onStart event is fired when the Tween begins. If there is a delay before the tween starts then onStart fires after the delay is finished.\rIt will be sent 2 parameters: the target object and this tween.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onStart"}],"name":"onStart","longname":"Phaser.Tween#onStart","kind":"member","memberof":"Phaser.Tween","scope":"instance","___s":true},{"meta":{"range":[3337,3370],"filename":"Tween.js","lineno":85,"path":"src\\tween"},"description":"The onLoop event is fired if the Tween, or any child tweens loop.\rIt will be sent 2 parameters: the target object and this tween.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onLoop"}],"name":"onLoop","longname":"Phaser.Tween#onLoop","kind":"member","memberof":"Phaser.Tween","scope":"instance","___s":true},{"meta":{"range":[3646,3681],"filename":"Tween.js","lineno":92,"path":"src\\tween"},"description":"The onRepeat event is fired if the Tween and all of its children repeats. If this tween has no children this will never be fired.\rIt will be sent 2 parameters: the target object and this tween.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onRepeat"}],"name":"onRepeat","longname":"Phaser.Tween#onRepeat","kind":"member","memberof":"Phaser.Tween","scope":"instance","___s":true},{"meta":{"range":[4001,4043],"filename":"Tween.js","lineno":100,"path":"src\\tween"},"description":"The onChildComplete event is fired when the Tween or any of its children completes.\rFires every time a child completes unless a child is set to repeat forever.\rIt will be sent 2 parameters: the target object and this tween.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildComplete"}],"name":"onChildComplete","longname":"Phaser.Tween#onChildComplete","kind":"member","memberof":"Phaser.Tween","scope":"instance","___s":true},{"meta":{"range":[4331,4368],"filename":"Tween.js","lineno":107,"path":"src\\tween"},"description":"The onComplete event is fired when the Tween and all of its children completes. Does not fire if the Tween is set to loop or repeatAll(-1).\rIt will be sent 2 parameters: the target object and this tween.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onComplete"}],"name":"onComplete","longname":"Phaser.Tween#onComplete","kind":"member","memberof":"Phaser.Tween","scope":"instance","___s":true},{"meta":{"range":[4599,4621],"filename":"Tween.js","lineno":113,"path":"src\\tween"},"properties":[{"type":{"names":["boolean"]},"description":"If the tween is running this is set to true, otherwise false. Tweens that are in a delayed state or waiting to start are considered as being running.","name":"isRunning"}],"defaultvalue":false,"name":"isRunning","longname":"Phaser.Tween#isRunning","kind":"member","memberof":"Phaser.Tween","scope":"instance","___s":true},{"meta":{"range":[4751,4767],"filename":"Tween.js","lineno":120,"path":"src\\tween"},"properties":[{"type":{"names":["number"]},"description":"The current Tween child being run.","name":"current"}],"defaultvalue":0,"readonly":true,"name":"current","longname":"Phaser.Tween#current","kind":"member","memberof":"Phaser.Tween","scope":"instance","___s":true},{"meta":{"range":[4896,4916],"filename":"Tween.js","lineno":125,"path":"src\\tween"},"properties":[{"type":{"names":["object"]},"description":"Target property cache used when building the child data values.","name":"properties"}],"name":"properties","longname":"Phaser.Tween#properties","kind":"member","memberof":"Phaser.Tween","scope":"instance","___s":true},{"meta":{"range":[5055,5079],"filename":"Tween.js","lineno":130,"path":"src\\tween"},"properties":[{"type":{"names":["Phaser.Tween"]},"description":"If this Tween is chained to another this holds a reference to it.","name":"chainedTween"}],"name":"chainedTween","longname":"Phaser.Tween#chainedTween","kind":"member","memberof":"Phaser.Tween","scope":"instance","___s":true},{"meta":{"range":[5188,5209],"filename":"Tween.js","lineno":136,"path":"src\\tween"},"properties":[{"type":{"names":["boolean"]},"description":"Is this Tween paused or not?","name":"isPaused"}],"defaultvalue":false,"name":"isPaused","longname":"Phaser.Tween#isPaused","kind":"member","memberof":"Phaser.Tween","scope":"instance","___s":true},{"meta":{"range":[6023,6059],"filename":"Tween.js","lineno":152,"path":"src\\tween"},"description":"Is this Tween frame or time based? A frame based tween will use the physics elapsed timer when updating. This means\rit will retain the same consistent frame rate, regardless of the speed of the device. The duration value given should\rbe given in frames.\r\rIf the Tween uses a time based update (which is the default) then the duration is given in milliseconds.\rIn this situation a 2000ms tween will last exactly 2 seconds, regardless of the device and how many visual updates the tween\rhas actually been through. For very short tweens you may wish to experiment with a frame based update instead.\r\rThe default value is whatever you've set in TweenManager.frameBased.","properties":[{"type":{"names":["boolean"]},"name":"frameBased"}],"name":"frameBased","longname":"Phaser.Tween#frameBased","kind":"member","memberof":"Phaser.Tween","scope":"instance","___s":true},{"meta":{"range":[6932,8713],"filename":"Tween.js","lineno":190,"path":"src\\tween"},"description":"Sets this tween to be a `to` tween on the properties given. A `to` tween starts at the current value and tweens to the destination value given.\rFor example a Sprite with an `x` coordinate of 100 could be tweened to `x` 200 by giving a properties object of `{ x: 200 }`.\rThe ease function allows you define the rate of change. You can pass either a function such as Phaser.Easing.Circular.Out or a string such as \"Circ\".\r\".easeIn\", \".easeOut\" and \"easeInOut\" variants are all supported for all ease types.","kind":"function","name":"to","params":[{"type":{"names":["object"]},"description":"An object containing the properties you want to tween, such as `Sprite.x` or `Sound.volume`. Given as a JavaScript object.","name":"properties"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1000,"description":"Duration of this tween in ms. Or if `Tween.frameBased` is true this represents the number of frames that should elapse.","name":"duration"},{"type":{"names":["function","string"]},"optional":true,"defaultvalue":null,"description":"Easing function. If not set it will default to Phaser.Easing.Default, which is Phaser.Easing.Linear.None by default but can be over-ridden.","name":"ease"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Set to `true` to allow this tween to start automatically. Otherwise call Tween.start().","name":"autoStart"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Delay before this tween will start in milliseconds. Defaults to 0, no delay.","name":"delay"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Should the tween automatically restart once complete? If you want it to run forever set as -1. This only effects this individual tween, not any chained tweens.","name":"repeat"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"A tween that yoyos will reverse itself and play backwards automatically. A yoyo'd tween doesn't fire the Tween.onComplete event, so listen for Tween.onLoop instead.","name":"yoyo"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"This Tween object."}],"memberof":"Phaser.Tween","longname":"Phaser.Tween#to","scope":"instance","___s":true},{"meta":{"range":[9696,11532],"filename":"Tween.js","lineno":237,"path":"src\\tween"},"description":"Sets this tween to be a `from` tween on the properties given. A `from` tween sets the target to the destination value and tweens to its current value.\rFor example a Sprite with an `x` coordinate of 100 tweened from `x` 500 would be set to `x` 500 and then tweened to `x` 100 by giving a properties object of `{ x: 500 }`.\rThe ease function allows you define the rate of change. You can pass either a function such as Phaser.Easing.Circular.Out or a string such as \"Circ\".\r\".easeIn\", \".easeOut\" and \"easeInOut\" variants are all supported for all ease types.","kind":"function","name":"from","params":[{"type":{"names":["object"]},"description":"An object containing the properties you want to tween., such as `Sprite.x` or `Sound.volume`. Given as a JavaScript object.","name":"properties"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1000,"description":"Duration of this tween in ms. Or if `Tween.frameBased` is true this represents the number of frames that should elapse.","name":"duration"},{"type":{"names":["function","string"]},"optional":true,"defaultvalue":null,"description":"Easing function. If not set it will default to Phaser.Easing.Default, which is Phaser.Easing.Linear.None by default but can be over-ridden.","name":"ease"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Set to `true` to allow this tween to start automatically. Otherwise call Tween.start().","name":"autoStart"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Delay before this tween will start in milliseconds. Defaults to 0, no delay.","name":"delay"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Should the tween automatically restart once complete? If you want it to run forever set as -1. This only effects this individual tween, not any chained tweens.","name":"repeat"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"A tween that yoyos will reverse itself and play backwards automatically. A yoyo'd tween doesn't fire the Tween.onComplete event, so listen for Tween.onLoop instead.","name":"yoyo"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"This Tween object."}],"memberof":"Phaser.Tween","longname":"Phaser.Tween#from","scope":"instance","___s":true},{"meta":{"range":[12504,13096],"filename":"Tween.js","lineno":284,"path":"src\\tween"},"description":"Starts the tween running. Can also be called by the autoStart parameter of `Tween.to` or `Tween.from`.\rThis sets the `Tween.isRunning` property to `true` and dispatches a `Tween.onStart` signal.\rIf the Tween has a delay set then nothing will start tweening until the delay has expired.","kind":"function","name":"start","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If this Tween contains child tweens you can specify which one to start from. The default is zero, i.e. the first tween created.","name":"index"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"This tween. Useful for method chaining."}],"memberof":"Phaser.Tween","longname":"Phaser.Tween#start","scope":"instance","___s":true},{"meta":{"range":[14332,14861],"filename":"Tween.js","lineno":340,"path":"src\\tween"},"description":"Stops the tween if running and flags it for deletion from the TweenManager.\rIf called directly the `Tween.onComplete` signal is not dispatched and no chained tweens are started unless the complete parameter is set to `true`.\rIf you just wish to pause a tween then use Tween.pause instead.","kind":"function","name":"stop","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Set to `true` to dispatch the Tween.onComplete signal.","name":"complete"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"This tween. Useful for method chaining."}],"memberof":"Phaser.Tween","longname":"Phaser.Tween#stop","scope":"instance","___s":true},{"meta":{"range":[15415,16196],"filename":"Tween.js","lineno":375,"path":"src\\tween"},"description":"Updates either a single TweenData or all TweenData objects properties to the given value.\rUsed internally by methods like Tween.delay, Tween.yoyo, etc. but can also be called directly if you know which property you want to tweak.\rThe property is not checked, so if you pass an invalid one you'll generate a run-time error.","kind":"function","name":"updateTweenData","params":[{"type":{"names":["string"]},"description":"The property to update.","name":"property"},{"type":{"names":["number","function"]},"description":"The value to set the property to.","name":"value"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If this tween has more than one child this allows you to target a specific child. If set to -1 it will set the delay on all the children.","name":"index"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"This tween. Useful for method chaining."}],"memberof":"Phaser.Tween","longname":"Phaser.Tween#updateTweenData","scope":"instance","___s":true},{"meta":{"range":[16690,17694],"filename":"Tween.js","lineno":408,"path":"src\\tween"},"description":"Sets the delay in milliseconds before this tween will start. If there are child tweens it sets the delay before the first child starts.\rThe delay is invoked as soon as you call `Tween.start`. If the tween is already running this method doesn't do anything for the current active tween.\rIf you have not yet called `Tween.to` or `Tween.from` at least once then this method will do nothing, as there are no tweens to delay.\rIf you have child tweens and pass -1 as the index value it sets the delay across all of them.","kind":"function","name":"delay","params":[{"type":{"names":["number"]},"description":"The amount of time in ms that the Tween should wait until it begins once started is called. Set to zero to remove any active delay.","name":"duration"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If this tween has more than one child this allows you to target a specific child. If set to -1 it will set the delay on all the children.","name":"index"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"This tween. Useful for method chaining."}],"memberof":"Phaser.Tween","longname":"Phaser.Tween#delay","scope":"instance","___s":true},{"meta":{"range":[17819,18818],"filename":"Tween.js","lineno":425,"path":"src\\tween"},"description":"Sets the number of times this tween will repeat.\rIf you have not yet called `Tween.to` or `Tween.from` at least once then this method will do nothing, as there are no tweens to repeat.\rIf you have child tweens and pass -1 as the index value it sets the number of times they'll repeat across all of them.\rIf you wish to define how many times this Tween and all children will repeat see Tween.repeatAll.","kind":"function","name":"repeat","params":[{"type":{"names":["number"]},"description":"How many times a tween should repeat before completing. Set to zero to remove an active repeat. Set to -1 to repeat forever.","name":"total"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"This is the amount of time to pause (in ms) before the repeat will start.","name":"repeat"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If this tween has more than one child this allows you to target a specific child. If set to -1 it will set the repeat value on all the children.","name":"index"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"This tween. Useful for method chaining."}],"memberof":"Phaser.Tween","longname":"Phaser.Tween#repeat","scope":"instance","___s":true},{"meta":{"range":[19090,20078],"filename":"Tween.js","lineno":447,"path":"src\\tween"},"description":"Sets the delay in milliseconds before this tween will repeat itself.\rThe repeatDelay is invoked as soon as you call `Tween.start`. If the tween is already running this method doesn't do anything for the current active tween.\rIf you have not yet called `Tween.to` or `Tween.from` at least once then this method will do nothing, as there are no tweens to set repeatDelay on.\rIf you have child tweens and pass -1 as the index value it sets the repeatDelay across all of them.","kind":"function","name":"repeatDelay","params":[{"type":{"names":["number"]},"description":"The amount of time in ms that the Tween should wait until it repeats or yoyos once start is called. Set to zero to remove any active repeatDelay.","name":"duration"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If this tween has more than one child this allows you to target a specific child. If set to -1 it will set the repeatDelay on all the children.","name":"index"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"This tween. Useful for method chaining."}],"memberof":"Phaser.Tween","longname":"Phaser.Tween#repeatDelay","scope":"instance","___s":true},{"meta":{"range":[20215,21279],"filename":"Tween.js","lineno":464,"path":"src\\tween"},"description":"A Tween that has yoyo set to true will run through from its starting values to its end values and then play back in reverse from end to start.\rUsed in combination with repeat you can create endless loops.\rIf you have not yet called `Tween.to` or `Tween.from` at least once then this method will do nothing, as there are no tweens to yoyo.\rIf you have child tweens and pass -1 as the index value it sets the yoyo property across all of them.\rIf you wish to yoyo this Tween and all of its children then see Tween.yoyoAll.","kind":"function","name":"yoyo","params":[{"type":{"names":["boolean"]},"description":"Set to true to yoyo this tween, or false to disable an already active yoyo.","name":"enable"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"This is the amount of time to pause (in ms) before the yoyo will start.","name":"yoyoDelay"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If this tween has more than one child this allows you to target a specific child. If set to -1 it will set yoyo on all the children.","name":"index"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"This tween. Useful for method chaining."}],"memberof":"Phaser.Tween","longname":"Phaser.Tween#yoyo","scope":"instance","___s":true},{"meta":{"range":[21531,22544],"filename":"Tween.js","lineno":487,"path":"src\\tween"},"description":"Sets the delay in milliseconds before this tween will run a yoyo (only applies if yoyo is enabled).\rThe repeatDelay is invoked as soon as you call `Tween.start`. If the tween is already running this method doesn't do anything for the current active tween.\rIf you have not yet called `Tween.to` or `Tween.from` at least once then this method will do nothing, as there are no tweens to set repeatDelay on.\rIf you have child tweens and pass -1 as the index value it sets the repeatDelay across all of them.","kind":"function","name":"yoyoDelay","params":[{"type":{"names":["number"]},"description":"The amount of time in ms that the Tween should wait until it repeats or yoyos once start is called. Set to zero to remove any active yoyoDelay.","name":"duration"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If this tween has more than one child this allows you to target a specific child. If set to -1 it will set the yoyoDelay on all the children.","name":"index"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"This tween. Useful for method chaining."}],"memberof":"Phaser.Tween","longname":"Phaser.Tween#yoyoDelay","scope":"instance","___s":true},{"meta":{"range":[22677,23544],"filename":"Tween.js","lineno":504,"path":"src\\tween"},"description":"Set easing function this tween will use, i.e. Phaser.Easing.Linear.None.\rThe ease function allows you define the rate of change. You can pass either a function such as Phaser.Easing.Circular.Out or a string such as \"Circ\".\r\".easeIn\", \".easeOut\" and \"easeInOut\" variants are all supported for all ease types.\rIf you have child tweens and pass -1 as the index value it sets the easing function defined here across all of them.","kind":"function","name":"easing","params":[{"type":{"names":["function","string"]},"description":"The easing function this tween will use, i.e. Phaser.Easing.Linear.None.","name":"ease"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If this tween has more than one child this allows you to target a specific child. If set to -1 it will set the easing function on all children.","name":"index"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"This tween. Useful for method chaining."}],"memberof":"Phaser.Tween","longname":"Phaser.Tween#easing","scope":"instance","___s":true},{"meta":{"range":[23812,24765],"filename":"Tween.js","lineno":526,"path":"src\\tween"},"description":"Sets the interpolation function the tween will use. By default it uses Phaser.Math.linearInterpolation.\rAlso available: Phaser.Math.bezierInterpolation and Phaser.Math.catmullRomInterpolation.\rThe interpolation function is only used if the target properties is an array.\rIf you have child tweens and pass -1 as the index value and it will set the interpolation function across all of them.","kind":"function","name":"interpolation","params":[{"type":{"names":["function"]},"description":"The interpolation function to use (Phaser.Math.linearInterpolation by default)","name":"interpolation"},{"type":{"names":["object"]},"optional":true,"description":"The context under which the interpolation function will be run.","name":"context"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"If this tween has more than one child this allows you to target a specific child. If set to -1 it will set the interpolation function on all children.","name":"index"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"This tween. Useful for method chaining."}],"memberof":"Phaser.Tween","longname":"Phaser.Tween#interpolation","scope":"instance","___s":true},{"meta":{"range":[25071,25567],"filename":"Tween.js","lineno":548,"path":"src\\tween"},"description":"Set how many times this tween and all of its children will repeat.\rA tween (A) with 3 children (B,C,D) with a `repeatAll` value of 2 would play as: ABCDABCD before completing.","kind":"function","name":"repeatAll","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"How many times this tween and all children should repeat before completing. Set to zero to remove an active repeat. Set to -1 to repeat forever.","name":"total"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"This tween. Useful for method chaining."}],"memberof":"Phaser.Tween","longname":"Phaser.Tween#repeatAll","scope":"instance","___s":true},{"meta":{"range":[25734,26742],"filename":"Tween.js","lineno":566,"path":"src\\tween"},"description":"This method allows you to chain tweens together. Any tween chained to this tween will have its `Tween.start` method called\ras soon as this tween completes. If this tween never completes (i.e. repeatAll or loop is set) then the chain will never progress.\rNote that `Tween.onComplete` will fire when *this* tween completes, not when the whole chain completes.\rFor that you should listen to `onComplete` on the final tween in your chain.\r\rIf you pass multiple tweens to this method they will be joined into a single long chain.\rFor example if this is Tween A and you pass in B, C and D then B will be chained to A, C will be chained to B and D will be chained to C.\rAny previously chained tweens that may have been set will be overwritten.","kind":"function","name":"chain","params":[{"type":{"names":["Phaser.Tween"]},"variable":true,"description":"One or more tweens that will be chained to this one.","name":"tweens"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"This tween. Useful for method chaining."}],"memberof":"Phaser.Tween","longname":"Phaser.Tween#chain","scope":"instance","___s":true},{"meta":{"range":[27108,27952],"filename":"Tween.js","lineno":600,"path":"src\\tween"},"description":"Enables the looping of this tween. The tween will loop forever, and onComplete will never fire.\r\rIf `value` is `true` then this is the same as setting `Tween.repeatAll(-1)`.\rIf `value` is `false` it is the same as setting `Tween.repeatAll(0)` and will reset the `repeatCounter` to zero.\r\rUsage:\rgame.add.tween(p).to({ x: 700 }, 1000, Phaser.Easing.Linear.None, true)\r.to({ y: 300 }, 1000, Phaser.Easing.Linear.None)\r.to({ x: 0 }, 1000, Phaser.Easing.Linear.None)\r.to({ y: 0 }, 1000, Phaser.Easing.Linear.None)\r.loop();","kind":"function","name":"loop","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If `true` this tween will loop once it reaches the end. Set to `false` to remove an active loop.","name":"value"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"This tween. Useful for method chaining."}],"memberof":"Phaser.Tween","longname":"Phaser.Tween#loop","scope":"instance","___s":true},{"meta":{"range":[28128,28563],"filename":"Tween.js","lineno":626,"path":"src\\tween"},"description":"Sets a callback to be fired each time this tween updates.","kind":"function","name":"onUpdateCallback","params":[{"type":{"names":["function"]},"description":"The callback to invoke each time this tween is updated. Set to `null` to remove an already active callback.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which to call the onUpdate callback.","name":"callbackContext"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"This tween. Useful for method chaining."}],"memberof":"Phaser.Tween","longname":"Phaser.Tween#onUpdateCallback","scope":"instance","___s":true},{"meta":{"range":[28771,28883],"filename":"Tween.js","lineno":643,"path":"src\\tween"},"description":"Pauses the tween. Resume playback with Tween.resume.","kind":"function","name":"pause","memberof":"Phaser.Tween","longname":"Phaser.Tween#pause","scope":"instance","___s":true},{"meta":{"range":[29402,29486],"filename":"Tween.js","lineno":675,"path":"src\\tween"},"description":"Resumes a paused tween.","kind":"function","name":"resume","memberof":"Phaser.Tween","longname":"Phaser.Tween#resume","scope":"instance","___s":true},{"meta":{"range":[30277,30654],"filename":"Tween.js","lineno":717,"path":"src\\tween"},"description":"Core tween update function called by the TweenManager. Does not need to be invoked directly.","kind":"function","name":"update","params":[{"type":{"names":["number"]},"description":"A timestamp passed in by the TweenManager.","name":"time"}],"returns":[{"type":{"names":["boolean"]},"description":"false if the tween and all child tweens have completed and should be deleted from the manager, otherwise true (still active)."}],"memberof":"Phaser.Tween","longname":"Phaser.Tween#update","scope":"instance","___s":true},{"meta":{"range":[34106,34913],"filename":"Tween.js","lineno":840,"path":"src\\tween"},"description":"This will generate an array populated with the tweened object values from start to end.\rIt works by running the tween simulation at the given frame rate based on the values set-up in Tween.to and Tween.from.\rIt ignores delay and repeat counts and any chained tweens, but does include child tweens.\rJust one play through of the tween data is returned, including yoyo if set.","kind":"function","name":"generateData","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":60,"description":"The speed in frames per second that the data should be generated at. The higher the value, the larger the array it creates.","name":"frameRate"},{"type":{"names":["array"]},"optional":true,"description":"If given the generated data will be appended to this array, otherwise a new array will be returned.","name":"data"}],"returns":[{"type":{"names":["array"]},"description":"An array of tweened values."}],"memberof":"Phaser.Tween","longname":"Phaser.Tween#generateData","scope":"instance","___s":true},{"meta":{"range":[36073,36248],"filename":"Tween.js","lineno":893,"path":"src\\tween"},"name":"totalDuration","properties":[{"type":{"names":["Phaser.TweenData"]},"description":"Gets the total duration of this Tween, including all child tweens, in milliseconds.","name":"totalDuration"}],"memberof":"Phaser.Tween","longname":"Phaser.Tween#totalDuration","scope":"instance","kind":"member","___s":true},{"meta":{"range":[632,4481],"filename":"TweenData.js","lineno":16,"path":"src\\tween"},"description":"A Phaser.Tween contains at least one TweenData object. It contains all of the tween data values, such as the\rstarting and ending values, the ease function, interpolation and duration. The Tween acts as a timeline manager for\rTweenData objects and can contain multiple TweenData objects.","kind":"class","classdesc":"Phaser.TweenData","params":[{"type":{"names":["Phaser.Tween"]},"description":"The Tween that owns this TweenData object.","name":"parent"}],"name":"TweenData","longname":"Phaser.TweenData","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[773,793],"filename":"TweenData.js","lineno":21,"path":"src\\tween"},"properties":[{"type":{"names":["Phaser.Tween"]},"description":"The Tween which owns this TweenData.","name":"parent"}],"name":"parent","longname":"Phaser.TweenData#parent","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[900,923],"filename":"TweenData.js","lineno":26,"path":"src\\tween"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running Game.","name":"game"}],"name":"game","longname":"Phaser.TweenData#game","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[1581,1601],"filename":"TweenData.js","lineno":56,"path":"src\\tween"},"properties":[{"type":{"names":["number"]},"description":"The duration of the tween in ms.","name":"duration"}],"defaultvalue":1000,"name":"duration","longname":"Phaser.TweenData#duration","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[1764,1780],"filename":"TweenData.js","lineno":62,"path":"src\\tween"},"properties":[{"type":{"names":["number"]},"description":"A value between 0 and 1 that represents how far through the duration this tween is.","name":"percent"}],"readonly":true,"name":"percent","longname":"Phaser.TweenData#percent","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[1887,1901],"filename":"TweenData.js","lineno":68,"path":"src\\tween"},"properties":[{"type":{"names":["number"]},"description":"The current calculated value.","name":"value"}],"readonly":true,"name":"value","longname":"Phaser.TweenData#value","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[2039,2061],"filename":"TweenData.js","lineno":73,"path":"src\\tween"},"properties":[{"type":{"names":["number"]},"description":"If the Tween is set to repeat this contains the current repeat count.","name":"repeatCounter"}],"name":"repeatCounter","longname":"Phaser.TweenData#repeatCounter","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[2183,2203],"filename":"TweenData.js","lineno":78,"path":"src\\tween"},"properties":[{"type":{"names":["number"]},"description":"The amount of time in ms between repeats of this tween.","name":"repeatDelay"}],"name":"repeatDelay","longname":"Phaser.TweenData#repeatDelay","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[2336,2356],"filename":"TweenData.js","lineno":84,"path":"src\\tween"},"properties":[{"type":{"names":["number"]},"description":"The total number of times this Tween will repeat.","name":"repeatTotal"}],"readonly":true,"name":"repeatTotal","longname":"Phaser.TweenData#repeatTotal","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[2514,2538],"filename":"TweenData.js","lineno":90,"path":"src\\tween"},"properties":[{"type":{"names":["boolean"]},"description":"True if the Tween will use interpolation (i.e. is an Array to Array tween)","name":"interpolate"}],"defaultvalue":false,"name":"interpolate","longname":"Phaser.TweenData#interpolate","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[2665,2682],"filename":"TweenData.js","lineno":96,"path":"src\\tween"},"properties":[{"type":{"names":["boolean"]},"description":"True if the Tween is set to yoyo, otherwise false.","name":"yoyo"}],"defaultvalue":false,"name":"yoyo","longname":"Phaser.TweenData#yoyo","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[2800,2818],"filename":"TweenData.js","lineno":101,"path":"src\\tween"},"properties":[{"type":{"names":["number"]},"description":"The amount of time in ms between yoyos of this tween.","name":"yoyoDelay"}],"name":"yoyoDelay","longname":"Phaser.TweenData#yoyoDelay","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[3005,3027],"filename":"TweenData.js","lineno":107,"path":"src\\tween"},"properties":[{"type":{"names":["boolean"]},"description":"When a Tween is yoyoing this value holds if it's currently playing forwards (false) or in reverse (true).","name":"inReverse"}],"defaultvalue":false,"name":"inReverse","longname":"Phaser.TweenData#inReverse","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[3220,3234],"filename":"TweenData.js","lineno":113,"path":"src\\tween"},"properties":[{"type":{"names":["number"]},"description":"The amount to delay by until the Tween starts (in ms). Only applies to the start, use repeatDelay to handle repeats.","name":"delay"}],"defaultvalue":0,"name":"delay","longname":"Phaser.TweenData#delay","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[3311,3322],"filename":"TweenData.js","lineno":118,"path":"src\\tween"},"properties":[{"type":{"names":["number"]},"description":"Current time value.","name":"dt"}],"name":"dt","longname":"Phaser.TweenData#dt","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[3447,3468],"filename":"TweenData.js","lineno":123,"path":"src\\tween"},"properties":[{"type":{"names":["number"]},"description":"The time the Tween started or null if it hasn't yet started.","name":"startTime"}],"name":"startTime","longname":"Phaser.TweenData#startTime","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[3617,3660],"filename":"TweenData.js","lineno":129,"path":"src\\tween"},"properties":[{"type":{"names":["function"]},"description":"The easing function used for the Tween.","name":"easingFunction"}],"defaultvalue":"Phaser.Easing.Default","name":"easingFunction","longname":"Phaser.TweenData#easingFunction","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[3833,3893],"filename":"TweenData.js","lineno":135,"path":"src\\tween"},"properties":[{"type":{"names":["function"]},"description":"The interpolation function used for the Tween.","name":"interpolationFunction"}],"defaultvalue":"Phaser.Math.linearInterpolation","name":"interpolationFunction","longname":"Phaser.TweenData#interpolationFunction","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[4051,4090],"filename":"TweenData.js","lineno":141,"path":"src\\tween"},"properties":[{"type":{"names":["object"]},"description":"The interpolation function context used for the Tween.","name":"interpolationContext"}],"defaultvalue":"Phaser.Math","name":"interpolationContext","longname":"Phaser.TweenData#interpolationContext","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[4320,4342],"filename":"TweenData.js","lineno":147,"path":"src\\tween"},"properties":[{"type":{"names":["boolean"]},"description":"If the tween is running this is set to `true`. Unless Phaser.Tween a TweenData that is waiting for a delay to expire is *not* considered as running.","name":"isRunning"}],"defaultvalue":false,"name":"isRunning","longname":"Phaser.TweenData#isRunning","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[4456,4475],"filename":"TweenData.js","lineno":153,"path":"src\\tween"},"properties":[{"type":{"names":["boolean"]},"description":"Is this a from tween or a to tween?","name":"isFrom"}],"defaultvalue":false,"name":"isFrom","longname":"Phaser.TweenData#isFrom","kind":"member","memberof":"Phaser.TweenData","scope":"instance","___s":true},{"meta":{"range":[4526,4554],"filename":"TweenData.js","lineno":161,"path":"src\\tween"},"kind":"constant","type":{"names":["number"]},"name":"PENDING","longname":"Phaser.TweenData.PENDING","memberof":"Phaser.TweenData","scope":"static","___s":true},{"meta":{"range":[4599,4627],"filename":"TweenData.js","lineno":167,"path":"src\\tween"},"kind":"constant","type":{"names":["number"]},"name":"RUNNING","longname":"Phaser.TweenData.RUNNING","memberof":"Phaser.TweenData","scope":"static","___s":true},{"meta":{"range":[4672,4699],"filename":"TweenData.js","lineno":173,"path":"src\\tween"},"kind":"constant","type":{"names":["number"]},"name":"LOOPED","longname":"Phaser.TweenData.LOOPED","memberof":"Phaser.TweenData","scope":"static","___s":true},{"meta":{"range":[4744,4773],"filename":"TweenData.js","lineno":179,"path":"src\\tween"},"kind":"constant","type":{"names":["number"]},"name":"COMPLETE","longname":"Phaser.TweenData.COMPLETE","memberof":"Phaser.TweenData","scope":"static","___s":true},{"meta":{"range":[4816,6089],"filename":"TweenData.js","lineno":183,"path":"src\\tween"},"description":"Sets this tween to be a `to` tween on the properties given. A `to` tween starts at the current value and tweens to the destination value given.\rFor example a Sprite with an `x` coordinate of 100 could be tweened to `x` 200 by giving a properties object of `{ x: 200 }`.","kind":"function","name":"to","params":[{"type":{"names":["object"]},"description":"The properties you want to tween, such as `Sprite.x` or `Sound.volume`. Given as a JavaScript object.","name":"properties"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1000,"description":"Duration of this tween in ms.","name":"duration"},{"type":{"names":["function"]},"optional":true,"defaultvalue":null,"description":"Easing function. If not set it will default to Phaser.Easing.Default, which is Phaser.Easing.Linear.None by default but can be over-ridden at will.","name":"ease"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Delay before this tween will start, defaults to 0 (no delay). Value given is in ms.","name":"delay"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Should the tween automatically restart once complete? If you want it to run forever set as -1. This ignores any chained tweens.","name":"repeat"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"A tween that yoyos will reverse itself and play backwards automatically. A yoyo'd tween doesn't fire the Tween.onComplete event, so listen for Tween.onLoop instead.","name":"yoyo"}],"returns":[{"type":{"names":["Phaser.TweenData"]},"description":"This Tween object."}],"memberof":"Phaser.TweenData","longname":"Phaser.TweenData#to","scope":"instance","___s":true},{"meta":{"range":[6432,7759],"filename":"TweenData.js","lineno":211,"path":"src\\tween"},"description":"Sets this tween to be a `from` tween on the properties given. A `from` tween sets the target to the destination value and tweens to its current value.\rFor example a Sprite with an `x` coordinate of 100 tweened from `x` 500 would be set to `x` 500 and then tweened to `x` 100 by giving a properties object of `{ x: 500 }`.","kind":"function","name":"from","params":[{"type":{"names":["object"]},"description":"The properties you want to tween, such as `Sprite.x` or `Sound.volume`. Given as a JavaScript object.","name":"properties"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1000,"description":"Duration of this tween in ms.","name":"duration"},{"type":{"names":["function"]},"optional":true,"defaultvalue":null,"description":"Easing function. If not set it will default to Phaser.Easing.Default, which is Phaser.Easing.Linear.None by default but can be over-ridden at will.","name":"ease"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Delay before this tween will start, defaults to 0 (no delay). Value given is in ms.","name":"delay"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Should the tween automatically restart once complete? If you want it to run forever set as -1. This ignores any chained tweens.","name":"repeat"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"A tween that yoyos will reverse itself and play backwards automatically. A yoyo'd tween doesn't fire the Tween.onComplete event, so listen for Tween.onLoop instead.","name":"yoyo"}],"returns":[{"type":{"names":["Phaser.TweenData"]},"description":"This Tween object."}],"memberof":"Phaser.TweenData","longname":"Phaser.TweenData#from","scope":"instance","___s":true},{"meta":{"range":[8103,8245],"filename":"TweenData.js","lineno":239,"path":"src\\tween"},"description":"Starts the Tween running.","kind":"function","name":"start","returns":[{"type":{"names":["Phaser.TweenData"]},"description":"This Tween object."}],"memberof":"Phaser.TweenData","longname":"Phaser.TweenData#start","scope":"instance","___s":true},{"meta":{"range":[11013,11369],"filename":"TweenData.js","lineno":340,"path":"src\\tween"},"description":"Updates this Tween. This is called automatically by Phaser.Tween.","access":"protected","kind":"function","name":"update","params":[{"type":{"names":["number"]},"description":"A timestamp passed in by the Tween parent.","name":"time"}],"returns":[{"type":{"names":["number"]},"description":"The current status of this Tween. One of the Phaser.TweenData constants: PENDING, RUNNING, LOOPED or COMPLETE."}],"memberof":"Phaser.TweenData","longname":"Phaser.TweenData#update","scope":"instance","___s":true},{"meta":{"range":[13110,13693],"filename":"TweenData.js","lineno":411,"path":"src\\tween"},"description":"This will generate an array populated with the tweened object values from start to end.\rIt works by running the tween simulation at the given frame rate based on the values set-up in Tween.to and Tween.from.\rJust one play through of the tween data is returned, including yoyo if set.","kind":"function","name":"generateData","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":60,"description":"The speed in frames per second that the data should be generated at. The higher the value, the larger the array it creates.","name":"frameRate"}],"returns":[{"type":{"names":["array"]},"description":"An array of tweened values."}],"memberof":"Phaser.TweenData","longname":"Phaser.TweenData#generateData","scope":"instance","___s":true},{"meta":{"range":[940,4622],"filename":"TweenManager.js","lineno":20,"path":"src\\tween"},"description":"Phaser.Game has a single instance of the TweenManager through which all Tween objects are created and updated.\rTweens are hooked into the game clock and pause system, adjusting based on the game state.\r\rTweenManager is based heavily on tween.js by http://soledadpenades.com.\rThe difference being that tweens belong to a games instance of TweenManager, rather than to a global TWEEN object.\rIt also has callbacks swapped for Signals and a few issues patched with regard to properties and completion errors.\rPlease see https://github.com/sole/tween.js for a full list of contributors.","kind":"class","classdesc":"Phaser.TweenManager","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"TweenManager","longname":"Phaser.TweenManager","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1067,1083],"filename":"TweenManager.js","lineno":25,"path":"src\\tween"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"Local reference to game.","name":"game"}],"name":"game","longname":"Phaser.TweenManager#game","kind":"member","memberof":"Phaser.TweenManager","scope":"instance","___s":true},{"meta":{"range":[1823,1846],"filename":"TweenManager.js","lineno":38,"path":"src\\tween"},"description":"Are all newly created Tweens frame or time based? A frame based tween will use the physics elapsed timer when updating. This means\rit will retain the same consistent frame rate, regardless of the speed of the device. The duration value given should\rbe given in frames.\r\rIf the Tween uses a time based update (which is the default) then the duration is given in milliseconds.\rIn this situation a 2000ms tween will last exactly 2 seconds, regardless of the device and how many visual updates the tween\rhas actually been through. For very short tweens you may wish to experiment with a frame based update instead.","properties":[{"type":{"names":["boolean"]},"name":"frameBased"}],"defaultvalue":false,"name":"frameBased","longname":"Phaser.TweenManager#frameBased","kind":"member","memberof":"Phaser.TweenManager","scope":"instance","___s":true},{"meta":{"range":[4668,4830],"filename":"TweenManager.js","lineno":114,"path":"src\\tween"},"description":"Get all the tween objects in an array.","kind":"function","name":"getAll","returns":[{"type":{"names":["Array.<Phaser.Tween>"]},"description":"Array with all tween objects."}],"memberof":"Phaser.TweenManager","longname":"Phaser.TweenManager#getAll","scope":"instance","___s":true},{"meta":{"range":[4907,5063],"filename":"TweenManager.js","lineno":125,"path":"src\\tween"},"description":"Remove all tweens running and in the queue. Doesn't call any of the tween onComplete events.","kind":"function","name":"removeAll","memberof":"Phaser.TweenManager","longname":"Phaser.TweenManager#removeAll","scope":"instance","___s":true},{"meta":{"range":[5272,5671],"filename":"TweenManager.js","lineno":140,"path":"src\\tween"},"description":"Remove all tweens from a specific object, array of objects or Group.","kind":"function","name":"removeFrom","params":[{"type":{"names":["object","Array.<object>","Phaser.Group"]},"description":"The object you want to remove the tweens from.","name":"obj"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If passing a group, setting this to true will remove the tweens from all of its children instead of the group itself.","name":"children"}],"memberof":"Phaser.TweenManager","longname":"Phaser.TweenManager#removeFrom","scope":"instance","___s":true},{"meta":{"range":[6766,7014],"filename":"TweenManager.js","lineno":189,"path":"src\\tween"},"description":"Add a new tween into the TweenManager.","kind":"function","name":"add","params":[{"type":{"names":["Phaser.Tween"]},"description":"The tween object you want to add.","name":"tween"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"The tween object you added to the manager."}],"memberof":"Phaser.TweenManager","longname":"Phaser.TweenManager#add","scope":"instance","___s":true},{"meta":{"range":[7127,7440],"filename":"TweenManager.js","lineno":203,"path":"src\\tween"},"description":"Create a tween object for a specific object. The object can be any JavaScript object or Phaser object such as Sprite.","kind":"function","name":"create","params":[{"type":{"names":["object"]},"description":"Object the tween will be run on.","name":"object"}],"returns":[{"type":{"names":["Phaser.Tween"]},"description":"The newly created tween object."}],"memberof":"Phaser.TweenManager","longname":"Phaser.TweenManager#create","scope":"instance","___s":true},{"meta":{"range":[7552,7727],"filename":"TweenManager.js","lineno":216,"path":"src\\tween"},"description":"Remove a tween from this manager.","kind":"function","name":"remove","params":[{"type":{"names":["Phaser.Tween"]},"description":"The tween object you want to remove.","name":"tween"}],"memberof":"Phaser.TweenManager","longname":"Phaser.TweenManager#remove","scope":"instance","___s":true},{"meta":{"range":[8113,8329],"filename":"TweenManager.js","lineno":242,"path":"src\\tween"},"description":"Update all the tween objects you added to this manager.","kind":"function","name":"update","returns":[{"type":{"names":["boolean"]},"description":"Return false if there's no tween to update, otherwise return true."}],"memberof":"Phaser.TweenManager","longname":"Phaser.TweenManager#update","scope":"instance","___s":true},{"meta":{"range":[9184,9487],"filename":"TweenManager.js","lineno":285,"path":"src\\tween"},"description":"Checks to see if a particular Sprite is currently being tweened.","kind":"function","name":"isTweening","params":[{"type":{"names":["object"]},"description":"The object to check for tweens against.","name":"object"}],"returns":[{"type":{"names":["boolean"]},"description":"Returns true if the object is currently being tweened, false if not."}],"memberof":"Phaser.TweenManager","longname":"Phaser.TweenManager#isTweening","scope":"instance","___s":true},{"meta":{"range":[10316,10422],"filename":"TweenManager.js","lineno":330,"path":"src\\tween"},"description":"Pauses all currently running tweens.","kind":"function","name":"pauseAll","memberof":"Phaser.TweenManager","longname":"Phaser.TweenManager#pauseAll","scope":"instance","___s":true},{"meta":{"range":[10591,10698],"filename":"TweenManager.js","lineno":344,"path":"src\\tween"},"description":"Resumes all currently paused tweens.","kind":"function","name":"resumeAll","memberof":"Phaser.TweenManager","longname":"Phaser.TweenManager#resumeAll","scope":"instance","___s":true},{"meta":{"range":[775,1083],"filename":"ArraySet.js","lineno":19,"path":"src\\utils"},"description":"ArraySet is a Set data structure (items must be unique within the set) that also maintains order.\rThis allows specific items to be easily added or removed from the Set.\r\rItem equality (and uniqueness) is determined by the behavior of `Array.indexOf`.\r\rThis used primarily by the Input subsystem.","kind":"class","classdesc":"Phaser.ArraySet","params":[{"type":{"names":["Array.<any>"]},"optional":true,"defaultvalue":"(new array)","description":"The backing array: if specified the items in the list _must_ be unique, per `Array.indexOf`, and the ownership of the array _should_ be relinquished to the ArraySet.","name":"list"}],"name":"ArraySet","longname":"Phaser.ArraySet","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[956,973],"filename":"ArraySet.js","lineno":26,"path":"src\\utils"},"description":"Current cursor position as established by `first` and `next`.","properties":[{"type":{"names":["integer"]},"name":"position"}],"defaultvalue":0,"name":"position","longname":"Phaser.ArraySet#position","kind":"member","memberof":"Phaser.ArraySet","scope":"instance","___s":true},{"meta":{"range":[1055,1077],"filename":"ArraySet.js","lineno":32,"path":"src\\utils"},"description":"The backing array.","properties":[{"type":{"names":["Array.<any>"]},"name":"list"}],"name":"list","longname":"Phaser.ArraySet#list","kind":"member","memberof":"Phaser.ArraySet","scope":"instance","___s":true},{"meta":{"range":[1125,1397],"filename":"ArraySet.js","lineno":38,"path":"src\\utils"},"description":"Adds a new element to the end of the list.\rIf the item already exists in the list it is not moved.","kind":"function","name":"add","params":[{"type":{"names":["any"]},"description":"The element to add to this list.","name":"item"}],"returns":[{"type":{"names":["any"]},"description":"The item that was added."}],"memberof":"Phaser.ArraySet","longname":"Phaser.ArraySet#add","scope":"instance","___s":true},{"meta":{"range":[1559,1828],"filename":"ArraySet.js","lineno":57,"path":"src\\utils"},"description":"Gets the index of the item in the list, or -1 if it isn't in the list.","kind":"function","name":"getIndex","params":[{"type":{"names":["any"]},"description":"The element to get the list index for.","name":"item"}],"returns":[{"type":{"names":["integer"]},"description":"The index of the item or -1 if not found."}],"memberof":"Phaser.ArraySet","longname":"Phaser.ArraySet#getIndex","scope":"instance","___s":true},{"meta":{"range":[1922,2333],"filename":"ArraySet.js","lineno":70,"path":"src\\utils"},"description":"Gets an item from the set based on the property strictly equaling the value given.\rReturns null if not found.","kind":"function","name":"getByKey","params":[{"type":{"names":["string"]},"description":"The property to check against the value.","name":"property"},{"type":{"names":["any"]},"description":"The value to check if the property strictly equals.","name":"value"}],"returns":[{"type":{"names":["any"]},"description":"The item that was found, or null if nothing matched."}],"memberof":"Phaser.ArraySet","longname":"Phaser.ArraySet#getByKey","scope":"instance","___s":true},{"meta":{"range":[2620,2868],"filename":"ArraySet.js","lineno":95,"path":"src\\utils"},"description":"Checks for the item within this list.","kind":"function","name":"exists","params":[{"type":{"names":["any"]},"description":"The element to get the list index for.","name":"item"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the item is found in the list, otherwise false."}],"memberof":"Phaser.ArraySet","longname":"Phaser.ArraySet#exists","scope":"instance","___s":true},{"meta":{"range":[2967,3052],"filename":"ArraySet.js","lineno":108,"path":"src\\utils"},"description":"Removes all the items.","kind":"function","name":"reset","memberof":"Phaser.ArraySet","longname":"Phaser.ArraySet#reset","scope":"instance","___s":true},{"meta":{"range":[3129,3367],"filename":"ArraySet.js","lineno":119,"path":"src\\utils"},"description":"Removes the given element from this list if it exists.","kind":"function","name":"remove","params":[{"type":{"names":["any"]},"description":"The item to be removed from the list.","name":"item"}],"returns":[{"type":{"names":["any"]},"description":"item - The item that was removed."}],"memberof":"Phaser.ArraySet","longname":"Phaser.ArraySet#remove","scope":"instance","___s":true},{"meta":{"range":[3574,3830],"filename":"ArraySet.js","lineno":138,"path":"src\\utils"},"description":"Sets the property `key` to the given value on all members of this list.","kind":"function","name":"setAll","params":[{"type":{"names":["any"]},"description":"The property of the item to set.","name":"key"},{"type":{"names":["any"]},"description":"The value to set the property to.","name":"value"}],"memberof":"Phaser.ArraySet","longname":"Phaser.ArraySet#setAll","scope":"instance","___s":true},{"meta":{"range":[4072,4537],"filename":"ArraySet.js","lineno":159,"path":"src\\utils"},"description":"Calls a function on all members of this list, using the member as the context for the callback.\r\rIf the `key` property is present it must be a function.\rThe function is invoked using the item as the context.","kind":"function","name":"callAll","params":[{"type":{"names":["string"]},"description":"The name of the property with the function to call.","name":"key"},{"type":{"names":["*"]},"variable":true,"description":"Additional parameters that will be passed to the callback.","name":"parameter"}],"memberof":"Phaser.ArraySet","longname":"Phaser.ArraySet#callAll","scope":"instance","___s":true},{"meta":{"range":[4876,5113],"filename":"ArraySet.js","lineno":185,"path":"src\\utils"},"description":"Removes every member from this ArraySet and optionally destroys it.","kind":"function","name":"removeAll","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Call `destroy` on each member as it's removed from this set.","name":"destroy"}],"memberof":"Phaser.ArraySet","longname":"Phaser.ArraySet#removeAll","scope":"instance","___s":true},{"meta":{"range":[5588,5717],"filename":"ArraySet.js","lineno":217,"path":"src\\utils"},"description":"Number of items in the ArraySet. Same as `list.length`.","name":"total","properties":[{"type":{"names":["integer"]},"name":"total"}],"memberof":"Phaser.ArraySet","longname":"Phaser.ArraySet#total","scope":"instance","kind":"member","___s":true},{"meta":{"range":[5856,5984],"filename":"ArraySet.js","lineno":231,"path":"src\\utils"},"description":"Returns the first item and resets the cursor to the start.","name":"first","properties":[{"type":{"names":["any"]},"name":"first"}],"memberof":"Phaser.ArraySet","longname":"Phaser.ArraySet#first","scope":"instance","kind":"member","___s":true},{"meta":{"range":[6276,6416],"filename":"ArraySet.js","lineno":256,"path":"src\\utils"},"description":"Returns the the next item (based on the cursor) and advances the cursor.","name":"next","properties":[{"type":{"names":["any"]},"name":"next"}],"memberof":"Phaser.ArraySet","longname":"Phaser.ArraySet#next","scope":"instance","kind":"member","___s":true},{"meta":{"range":[204,299],"filename":"ArrayUtils.js","lineno":7,"path":"src\\utils"},"description":"Utility functions for dealing with Arrays.","kind":"class","name":"ArrayUtils","scope":"static","memberof":"Phaser","longname":"Phaser.ArrayUtils","___s":true},{"meta":{"range":[934,1333],"filename":"ArrayUtils.js","lineno":27,"path":"src\\utils"},"description":"Fetch a random entry from the given array.\r\rWill return null if there are no array items that fall within the specified range\ror if there is no item for the randomly chosen index.","kind":"function","params":[{"type":{"names":["Array.<any>"]},"description":"An array of objects.","name":"objects"},{"type":{"names":["integer"]},"description":"Optional offset off the front of the array. Default value is 0, or the beginning of the array.","name":"startIndex"},{"type":{"names":["integer"]},"description":"Optional restriction on the number of values you want to randomly select from.","name":"length"}],"returns":[{"type":{"names":["object"]},"description":"The random object that was selected."}],"name":"getRandomItem","longname":"Phaser.ArrayUtils.getRandomItem","memberof":"Phaser.ArrayUtils","scope":"static","___s":true},{"meta":{"range":[1963,2577],"filename":"ArrayUtils.js","lineno":51,"path":"src\\utils"},"description":"Removes a random object from the given array and returns it.\r\rWill return null if there are no array items that fall within the specified range\ror if there is no item for the randomly chosen index.","kind":"function","params":[{"type":{"names":["Array.<any>"]},"description":"An array of objects.","name":"objects"},{"type":{"names":["integer"]},"description":"Optional offset off the front of the array. Default value is 0, or the beginning of the array.","name":"startIndex"},{"type":{"names":["integer"]},"description":"Optional restriction on the number of values you want to randomly select from.","name":"length"}],"returns":[{"type":{"names":["object"]},"description":"The random object that was removed."}],"name":"removeRandomItem","longname":"Phaser.ArrayUtils.removeRandomItem","memberof":"Phaser.ArrayUtils","scope":"static","___s":true},{"meta":{"range":[2829,3122],"filename":"ArrayUtils.js","lineno":80,"path":"src\\utils"},"description":"A standard Fisher-Yates Array shuffle implementation which modifies the array in place.","kind":"function","params":[{"type":{"names":["Array.<any>"]},"description":"The array to shuffle.","name":"array"}],"returns":[{"type":{"names":["Array.<any>"]},"description":"The original array, now shuffled."}],"name":"shuffle","longname":"Phaser.ArrayUtils.shuffle","memberof":"Phaser.ArrayUtils","scope":"static","___s":true},{"meta":{"range":[3356,3832],"filename":"ArrayUtils.js","lineno":101,"path":"src\\utils"},"description":"Transposes the elements of the given matrix (array of arrays).","kind":"function","params":[{"type":{"names":["Array.<Array.<any>>"]},"description":"The matrix to transpose.","name":"array"}],"returns":[{"type":{"names":["Array.<Array.<any>>"]},"description":"A new transposed matrix"}],"name":"transposeMatrix","longname":"Phaser.ArrayUtils.transposeMatrix","memberof":"Phaser.ArrayUtils","scope":"static","___s":true},{"meta":{"range":[4401,5295],"filename":"ArrayUtils.js","lineno":132,"path":"src\\utils"},"description":"Rotates the given matrix (array of arrays).\r\rBased on the routine from {@link http://jsfiddle.net/MrPolywhirl/NH42z/}.","kind":"function","params":[{"type":{"names":["Array.<Array.<any>>"]},"description":"The array to rotate; this matrix _may_ be altered.","name":"matrix"},{"type":{"names":["number","string"]},"description":"The amount to rotate: the rotation in degrees (90, -90, 270, -270, 180) or a string command ('rotateLeft', 'rotateRight' or 'rotate180').","name":"direction"}],"returns":[{"type":{"names":["Array.<Array.<any>>"]},"description":"The rotated matrix. The source matrix should be discarded for the returned matrix."}],"name":"rotateMatrix","longname":"Phaser.ArrayUtils.rotateMatrix","memberof":"Phaser.ArrayUtils","scope":"static","___s":true},{"meta":{"range":[5641,6123],"filename":"ArrayUtils.js","lineno":172,"path":"src\\utils"},"description":"Snaps a value to the nearest value in an array.\rThe result will always be in the range `[first_value, last_value]`.","kind":"function","params":[{"type":{"names":["number"]},"description":"The search value","name":"value"},{"type":{"names":["Array.<number>"]},"description":"The input array which _must_ be sorted.","name":"arr"}],"returns":[{"type":{"names":["number"]},"description":"The nearest value found."}],"name":"findClosest","longname":"Phaser.ArrayUtils.findClosest","memberof":"Phaser.ArrayUtils","scope":"static","___s":true},{"meta":{"range":[6132,6589],"filename":"ArrayUtils.js","lineno":195,"path":"src\\utils"},"description":"Moves the element from the end of the array to the start, shifting all items in the process.\rThe \"rotation\" happens to the right.\r\rBefore: `[ A, B, C, D, E, F ]`\rAfter: `[ F, A, B, C, D, E ]`\r\rSee also Phaser.ArrayUtils.rotateLeft.","kind":"function","name":"rotateRight","params":[{"type":{"names":["Array.<any>"]},"description":"The array to rotate. The array is modified.","name":"array"}],"returns":[{"type":{"names":["any"]},"description":"The shifted value."}],"memberof":"Phaser.ArrayUtils","longname":"Phaser.ArrayUtils.rotateRight","scope":"static","___s":true},{"meta":{"range":[6724,7179],"filename":"ArrayUtils.js","lineno":217,"path":"src\\utils"},"description":"Moves the element from the start of the array to the end, shifting all items in the process.\rThe \"rotation\" happens to the left.\r\rBefore: `[ A, B, C, D, E, F ]`\rAfter: `[ B, C, D, E, F, A ]`\r\rSee also Phaser.ArrayUtils.rotateRight","kind":"function","name":"rotateLeft","params":[{"type":{"names":["Array.<any>"]},"description":"The array to rotate. The array is modified.","name":"array"}],"returns":[{"type":{"names":["any"]},"description":"The rotated value."}],"memberof":"Phaser.ArrayUtils","longname":"Phaser.ArrayUtils.rotateLeft","scope":"static","___s":true},{"meta":{"range":[7312,7827],"filename":"ArrayUtils.js","lineno":239,"path":"src\\utils"},"description":"Moves the element from the start of the array to the end, shifting all items in the process.\rThe \"rotation\" happens to the left.\r\rBefore: `[ A, B, C, D, E, F ]`\rAfter: `[ B, C, D, E, F, A ]`\r\rSee also Phaser.ArrayUtils.rotateRight","kind":"function","name":"rotate","deprecated":"Please use Phaser.ArrayUtils.rotate instead.","params":[{"type":{"names":["Array.<any>"]},"description":"The array to rotate. The array is modified.","name":"array"}],"returns":[{"type":{"names":["any"]},"description":"The rotated value."}],"memberof":"Phaser.ArrayUtils","longname":"Phaser.ArrayUtils.rotate","scope":"static","___s":true},{"meta":{"range":[7956,8380],"filename":"ArrayUtils.js","lineno":262,"path":"src\\utils"},"description":"Create an array representing the inclusive range of numbers (usually integers) in `[start, end]`.\rThis is equivalent to `numberArrayStep(start, end, 1)`.","kind":"function","name":"numberArray","params":[{"type":{"names":["number"]},"description":"The minimum value the array starts with.","name":"start"},{"type":{"names":["number"]},"description":"The maximum value the array contains.","name":"end"}],"returns":[{"type":{"names":["Array.<number>"]},"description":"The array of number values."}],"memberof":"Phaser.ArrayUtils","longname":"Phaser.ArrayUtils#numberArray","scope":"instance","___s":true},{"meta":{"range":[8591,9826],"filename":"ArrayUtils.js","lineno":284,"path":"src\\utils"},"description":"Create an array of numbers (positive and/or negative) progressing from `start`\rup to but not including `end` by advancing by `step`.\r\rIf `start` is less than `end` a zero-length range is created unless a negative `step` is specified.\r\rCertain values for `start` and `end` (eg. NaN/undefined/null) are currently coerced to 0;\rfor forward compatibility make sure to pass in actual numbers.","kind":"function","name":"numberArrayStep","params":[{"type":{"names":["number"]},"description":"The start of the range.","name":"start"},{"type":{"names":["number"]},"optional":true,"description":"The end of the range.","name":"end"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The value to increment or decrement by.","name":"step"}],"returns":[{"type":{"names":["Array"]},"description":"Returns the new array of numbers."}],"examples":["Phaser.ArrayUtils.numberArrayStep(4);\r// => [0, 1, 2, 3]\r\rPhaser.ArrayUtils.numberArrayStep(1, 5);\r// => [1, 2, 3, 4]\r\rPhaser.ArrayUtils.numberArrayStep(0, 20, 5);\r// => [0, 5, 10, 15]\r\rPhaser.ArrayUtils.numberArrayStep(0, -4, -1);\r// => [0, -1, -2, -3]\r\rPhaser.ArrayUtils.numberArrayStep(1, 4, 0);\r// => [1, 1, 1]\r\rPhaser.ArrayUtils.numberArrayStep(0);\r// => []"],"memberof":"Phaser.ArrayUtils","longname":"Phaser.ArrayUtils#numberArrayStep","scope":"instance","___s":true},{"meta":{"range":[204,398],"filename":"Canvas.js","lineno":7,"path":"src\\utils"},"description":"The Canvas class handles everything related to creating the `canvas` DOM tag that Phaser will use, \rincluding styles, offset and aspect ratio.","kind":"class","name":"Canvas","scope":"static","memberof":"Phaser","longname":"Phaser.Canvas","___s":true},{"meta":{"range":[425,1136],"filename":"Canvas.js","lineno":16,"path":"src\\utils"},"description":"Creates a `canvas` DOM element. The element is not automatically added to the document.","kind":"function","name":"create","params":[{"type":{"names":["object"]},"description":"The object that will own the canvas that is created.","name":"parent"},{"type":{"names":["number"]},"optional":true,"defaultvalue":256,"description":"The width of the canvas element.","name":"width"},{"type":{"names":["number"]},"optional":true,"defaultvalue":256,"description":"The height of the canvas element..","name":"height"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"(none)","description":"If specified, and not the empty string, this will be set as the ID of the canvas element. Otherwise no ID will be set.","name":"id"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `true` the canvas will not be placed in the CanvasPool global.","name":"skipPool"}],"returns":[{"type":{"names":["HTMLCanvasElement"]},"description":"The newly created canvas element."}],"memberof":"Phaser.Canvas","longname":"Phaser.Canvas.create","scope":"static","___s":true},{"meta":{"range":[1637,2079],"filename":"Canvas.js","lineno":47,"path":"src\\utils"},"description":"Sets the background color behind the canvas. This changes the canvas style property.","kind":"function","name":"setBackgroundColor","params":[{"type":{"names":["HTMLCanvasElement"]},"description":"The canvas to set the background color on.","name":"canvas"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgb(0,0,0)'","description":"The color to set. Can be in the format 'rgb(r,g,b)', or '#RRGGBB' or any valid CSS color.","name":"color"}],"returns":[{"type":{"names":["HTMLCanvasElement"]},"description":"Returns the source canvas."}],"memberof":"Phaser.Canvas","longname":"Phaser.Canvas.setBackgroundColor","scope":"static","___s":true},{"meta":{"range":[2266,2655],"filename":"Canvas.js","lineno":65,"path":"src\\utils"},"description":"Sets the touch-action property on the canvas style. Can be used to disable default browser touch actions.","kind":"function","name":"setTouchAction","params":[{"type":{"names":["HTMLCanvasElement"]},"description":"The canvas to set the touch action on.","name":"canvas"},{"type":{"names":["string"]},"optional":true,"description":"The touch action to set. Defaults to 'none'.","name":"value"}],"returns":[{"type":{"names":["HTMLCanvasElement"]},"description":"The source canvas."}],"memberof":"Phaser.Canvas","longname":"Phaser.Canvas.setTouchAction","scope":"static","___s":true},{"meta":{"range":[2927,3318],"filename":"Canvas.js","lineno":85,"path":"src\\utils"},"description":"Sets the user-select property on the canvas style. Can be used to disable default browser selection actions.","kind":"function","name":"setUserSelect","params":[{"type":{"names":["HTMLCanvasElement"]},"description":"The canvas to set the touch action on.","name":"canvas"},{"type":{"names":["string"]},"optional":true,"description":"The touch action to set. Defaults to 'none'.","name":"value"}],"returns":[{"type":{"names":["HTMLCanvasElement"]},"description":"The source canvas."}],"memberof":"Phaser.Canvas","longname":"Phaser.Canvas.setUserSelect","scope":"static","___s":true},{"meta":{"range":[3832,4425],"filename":"Canvas.js","lineno":109,"path":"src\\utils"},"description":"Adds the given canvas element to the DOM. The canvas will be added as a child of the given parent.\rIf no parent is given it will be added as a child of the document.body.","kind":"function","name":"addToDOM","params":[{"type":{"names":["HTMLCanvasElement"]},"description":"The canvas to be added to the DOM.","name":"canvas"},{"type":{"names":["string","HTMLElement"]},"description":"The DOM element to add the canvas to.","name":"parent"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If set to true it will add the overflow='hidden' style to the parent DOM element.","name":"overflowHidden"}],"returns":[{"type":{"names":["HTMLCanvasElement"]},"description":"Returns the source canvas."}],"memberof":"Phaser.Canvas","longname":"Phaser.Canvas.addToDOM","scope":"static","___s":true},{"meta":{"range":[5344,5541],"filename":"Canvas.js","lineno":156,"path":"src\\utils"},"description":"Removes the given canvas element from the DOM.","kind":"function","name":"removeFromDOM","params":[{"type":{"names":["HTMLCanvasElement"]},"description":"The canvas to be removed from the DOM.","name":"canvas"}],"memberof":"Phaser.Canvas","longname":"Phaser.Canvas.removeFromDOM","scope":"static","___s":true},{"meta":{"range":[5707,6415],"filename":"Canvas.js","lineno":171,"path":"src\\utils"},"description":"Sets the transform of the given canvas to the matrix values provided.","kind":"function","name":"setTransform","params":[{"type":{"names":["CanvasRenderingContext2D"]},"description":"The context to set the transform on.","name":"context"},{"type":{"names":["number"]},"description":"The value to translate horizontally by.","name":"translateX"},{"type":{"names":["number"]},"description":"The value to translate vertically by.","name":"translateY"},{"type":{"names":["number"]},"description":"The value to scale horizontally by.","name":"scaleX"},{"type":{"names":["number"]},"description":"The value to scale vertically by.","name":"scaleY"},{"type":{"names":["number"]},"description":"The value to skew horizontaly by.","name":"skewX"},{"type":{"names":["number"]},"description":"The value to skew vertically by.","name":"skewY"}],"returns":[{"type":{"names":["CanvasRenderingContext2D"]},"description":"Returns the source context."}],"memberof":"Phaser.Canvas","longname":"Phaser.Canvas.setTransform","scope":"static","___s":true},{"meta":{"range":[6641,7485],"filename":"Canvas.js","lineno":192,"path":"src\\utils"},"description":"Sets the Image Smoothing property on the given context. Set to false to disable image smoothing.\rBy default browsers have image smoothing enabled, which isn't always what you visually want, especially\rwhen using pixel art in a game. Note that this sets the property on the context itself, so that any image\rdrawn to the context will be affected. This sets the property across all current browsers but support is\rpatchy on earlier browsers, especially on mobile.","kind":"function","name":"setSmoothingEnabled","params":[{"type":{"names":["CanvasRenderingContext2D"]},"description":"The context to enable or disable the image smoothing on.","name":"context"},{"type":{"names":["boolean"]},"description":"If set to true it will enable image smoothing, false will disable it.","name":"value"}],"returns":[{"type":{"names":["CanvasRenderingContext2D"]},"description":"Returns the source context."}],"memberof":"Phaser.Canvas","longname":"Phaser.Canvas.setSmoothingEnabled","scope":"static","___s":true},{"meta":{"range":[7719,8102],"filename":"Canvas.js","lineno":217,"path":"src\\utils"},"description":"Gets the Smoothing Enabled vendor prefix being used on the given context, or null if not set.","kind":"function","name":"getSmoothingPrefix","params":[{"type":{"names":["CanvasRenderingContext2D"]},"description":"The context to enable or disable the image smoothing on.","name":"context"}],"returns":[{"type":{"names":["string","null"]},"description":"Returns the smoothingEnabled vendor prefix, or null if not set on the context."}],"memberof":"Phaser.Canvas","longname":"Phaser.Canvas.getSmoothingPrefix","scope":"static","___s":true},{"meta":{"range":[8467,8826],"filename":"Canvas.js","lineno":242,"path":"src\\utils"},"description":"Returns `true` if the given context has image smoothing enabled, otherwise returns `false`.","kind":"function","name":"getSmoothingEnabled","params":[{"type":{"names":["CanvasRenderingContext2D"]},"description":"The context to check for smoothing on.","name":"context"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the given context has image smoothing enabled, otherwise false."}],"memberof":"Phaser.Canvas","longname":"Phaser.Canvas.getSmoothingEnabled","scope":"static","___s":true},{"meta":{"range":[9025,9452],"filename":"Canvas.js","lineno":260,"path":"src\\utils"},"description":"Sets the CSS image-rendering property on the given canvas to be 'crisp' (aka 'optimize contrast' on webkit).\rNote that if this doesn't given the desired result then see the setSmoothingEnabled.","kind":"function","name":"setImageRenderingCrisp","params":[{"type":{"names":["HTMLCanvasElement"]},"description":"The canvas to set image-rendering crisp on.","name":"canvas"}],"returns":[{"type":{"names":["HTMLCanvasElement"]},"description":"Returns the source canvas."}],"memberof":"Phaser.Canvas","longname":"Phaser.Canvas.setImageRenderingCrisp","scope":"static","___s":true},{"meta":{"range":[9882,10309],"filename":"Canvas.js","lineno":283,"path":"src\\utils"},"description":"Sets the CSS image-rendering property on the given canvas to be 'bicubic' (aka 'auto').\rNote that if this doesn't given the desired result then see the CanvasUtils.setSmoothingEnabled method.","kind":"function","name":"setImageRenderingBicubic","params":[{"type":{"names":["HTMLCanvasElement"]},"description":"The canvas to set image-rendering bicubic on.","name":"canvas"}],"returns":[{"type":{"names":["HTMLCanvasElement"]},"description":"Returns the source canvas."}],"memberof":"Phaser.Canvas","longname":"Phaser.Canvas.setImageRenderingBicubic","scope":"static","___s":true},{"meta":{"range":[204,340],"filename":"Color.js","lineno":7,"path":"src\\utils"},"description":"The Phaser.Color class is a set of static methods that assist in color manipulation and conversion.","kind":"class","name":"Color","memberof":"Phaser","longname":"Phaser.Color","scope":"static","___s":true},{"meta":{"range":[366,1009],"filename":"Color.js","lineno":14,"path":"src\\utils"},"description":"Packs the r, g, b, a components into a single integer, for use with Int32Array.\rIf device is little endian then ABGR order is used. Otherwise RGBA order is used.","author":["Matt DesLauriers (@mattdesl)"],"kind":"function","name":"packPixel","scope":"static","params":[{"type":{"names":["number"]},"description":"The red color component, in the range 0 - 255.","name":"r"},{"type":{"names":["number"]},"description":"The green color component, in the range 0 - 255.","name":"g"},{"type":{"names":["number"]},"description":"The blue color component, in the range 0 - 255.","name":"b"},{"type":{"names":["number"]},"description":"The alpha color component, in the range 0 - 255.","name":"a"}],"returns":[{"type":{"names":["number"]},"description":"The packed color as uint32"}],"memberof":"Phaser.Color","longname":"Phaser.Color.packPixel","___s":true},{"meta":{"range":[1307,2491],"filename":"Color.js","lineno":40,"path":"src\\utils"},"description":"Unpacks the r, g, b, a components into the specified color object, or a new\robject, for use with Int32Array. If little endian, then ABGR order is used when\runpacking, otherwise, RGBA order is used. The resulting color object has the\r`r, g, b, a` properties which are unrelated to endianness.\r\rNote that the integer is assumed to be packed in the correct endianness. On little-endian\rthe format is 0xAABBGGRR and on big-endian the format is 0xRRGGBBAA. If you want a\rendian-independent method, use fromRGBA(rgba) and toRGBA(r, g, b, a).","author":["Matt DesLauriers (@mattdesl)"],"kind":"function","name":"unpackPixel","scope":"static","params":[{"type":{"names":["number"]},"description":"The integer, packed in endian order by packPixel.","name":"rgba"},{"type":{"names":["object"]},"optional":true,"description":"An object into which 3 properties will be created: r, g and b. If not provided a new object will be created.","name":"out"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Also convert the rgb values into hsl?","name":"hsl"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Also convert the rgb values into hsv?","name":"hsv"}],"returns":[{"type":{"names":["object"]},"description":"An object with the red, green and blue values set in the r, g and b properties."}],"memberof":"Phaser.Color","longname":"Phaser.Color.unpackPixel","___s":true},{"meta":{"range":[3625,4001],"filename":"Color.js","lineno":97,"path":"src\\utils"},"description":"A utility to convert an integer in 0xRRGGBBAA format to a color object.\rThis does not rely on endianness.","author":["Matt DesLauriers (@mattdesl)"],"kind":"function","name":"fromRGBA","scope":"static","params":[{"type":{"names":["number"]},"description":"An RGBA hex","name":"rgba"},{"type":{"names":["object"]},"optional":true,"description":"The object to use, optional.","name":"out"}],"returns":[{"type":{"names":["object"]},"description":"A color object."}],"memberof":"Phaser.Color","longname":"Phaser.Color.fromRGBA","___s":true},{"meta":{"range":[4439,4989],"filename":"Color.js","lineno":126,"path":"src\\utils"},"description":"A utility to convert RGBA components to a 32 bit integer in RRGGBBAA format.","author":["Matt DesLauriers (@mattdesl)"],"kind":"function","name":"toRGBA","scope":"static","params":[{"type":{"names":["number"]},"description":"The red color component, in the range 0 - 255.","name":"r"},{"type":{"names":["number"]},"description":"The green color component, in the range 0 - 255.","name":"g"},{"type":{"names":["number"]},"description":"The blue color component, in the range 0 - 255.","name":"b"},{"type":{"names":["number"]},"description":"The alpha color component, in the range 0 - 255.","name":"a"}],"returns":[{"type":{"names":["number"]},"description":"A RGBA-packed 32 bit integer"}],"memberof":"Phaser.Color","longname":"Phaser.Color.toRGBA","___s":true},{"meta":{"range":[5101,5595],"filename":"Color.js","lineno":144,"path":"src\\utils"},"description":"Converts RGBA components to a 32 bit integer in AABBGGRR format.","kind":"function","name":"toABGR","scope":"static","params":[{"type":{"names":["number"]},"description":"The red color component, in the range 0 - 255.","name":"r"},{"type":{"names":["number"]},"description":"The green color component, in the range 0 - 255.","name":"g"},{"type":{"names":["number"]},"description":"The blue color component, in the range 0 - 255.","name":"b"},{"type":{"names":["number"]},"description":"The alpha color component, in the range 0 - 255.","name":"a"}],"returns":[{"type":{"names":["number"]},"description":"A RGBA-packed 32 bit integer"}],"memberof":"Phaser.Color","longname":"Phaser.Color.toABGR","___s":true},{"meta":{"range":[5714,6589],"filename":"Color.js","lineno":161,"path":"src\\utils"},"description":"Converts an RGB color value to HSL (hue, saturation and lightness).\rConversion forumla from http://en.wikipedia.org/wiki/HSL_color_space.\rAssumes RGB values are contained in the set [0, 255] and returns h, s and l in the set [0, 1].\rBased on code by Michael Jackson (https://github.com/mjijackson)","kind":"function","name":"RGBtoHSL","scope":"static","params":[{"type":{"names":["number"]},"description":"The red color component, in the range 0 - 255.","name":"r"},{"type":{"names":["number"]},"description":"The green color component, in the range 0 - 255.","name":"g"},{"type":{"names":["number"]},"description":"The blue color component, in the range 0 - 255.","name":"b"},{"type":{"names":["object"]},"optional":true,"description":"An object into which 3 properties will be created, h, s and l. If not provided a new object will be created.","name":"out"}],"returns":[{"type":{"names":["object"]},"description":"An object with the hue, saturation and lightness values set in the h, s and l properties."}],"memberof":"Phaser.Color","longname":"Phaser.Color.RGBtoHSL","___s":true},{"meta":{"range":[7529,8357],"filename":"Color.js","lineno":220,"path":"src\\utils"},"description":"Converts an HSL (hue, saturation and lightness) color value to RGB.\rConversion forumla from http://en.wikipedia.org/wiki/HSL_color_space.\rAssumes HSL values are contained in the set [0, 1] and returns r, g and b values in the set [0, 255].\rBased on code by Michael Jackson (https://github.com/mjijackson)","kind":"function","name":"HSLtoRGB","scope":"static","params":[{"type":{"names":["number"]},"description":"The hue, in the range 0 - 1.","name":"h"},{"type":{"names":["number"]},"description":"The saturation, in the range 0 - 1.","name":"s"},{"type":{"names":["number"]},"description":"The lightness, in the range 0 - 1.","name":"l"},{"type":{"names":["object"]},"optional":true,"description":"An object into which 3 properties will be created: r, g and b. If not provided a new object will be created.","name":"out"}],"returns":[{"type":{"names":["object"]},"description":"An object with the red, green and blue values set in the r, g and b properties."}],"memberof":"Phaser.Color","longname":"Phaser.Color.HSLtoRGB","___s":true},{"meta":{"range":[9308,10168],"filename":"Color.js","lineno":271,"path":"src\\utils"},"description":"Converts an RGB color value to HSV (hue, saturation and value).\rConversion forumla from http://en.wikipedia.org/wiki/HSL_color_space.\rAssumes RGB values are contained in the set [0, 255] and returns h, s and v in the set [0, 1].\rBased on code by Michael Jackson (https://github.com/mjijackson)","kind":"function","name":"RGBtoHSV","scope":"static","params":[{"type":{"names":["number"]},"description":"The red color component, in the range 0 - 255.","name":"r"},{"type":{"names":["number"]},"description":"The green color component, in the range 0 - 255.","name":"g"},{"type":{"names":["number"]},"description":"The blue color component, in the range 0 - 255.","name":"b"},{"type":{"names":["object"]},"optional":true,"description":"An object into which 3 properties will be created, h, s and v. If not provided a new object will be created.","name":"out"}],"returns":[{"type":{"names":["object"]},"description":"An object with the hue, saturation and value set in the h, s and v properties."}],"memberof":"Phaser.Color","longname":"Phaser.Color.RGBtoHSV","___s":true},{"meta":{"range":[11038,11858],"filename":"Color.js","lineno":327,"path":"src\\utils"},"description":"Converts an HSV (hue, saturation and value) color value to RGB.\rConversion forumla from http://en.wikipedia.org/wiki/HSL_color_space.\rAssumes HSV values are contained in the set [0, 1] and returns r, g and b values in the set [0, 255].\rBased on code by Michael Jackson (https://github.com/mjijackson)","kind":"function","name":"HSVtoRGB","scope":"static","params":[{"type":{"names":["number"]},"description":"The hue, in the range 0 - 1.","name":"h"},{"type":{"names":["number"]},"description":"The saturation, in the range 0 - 1.","name":"s"},{"type":{"names":["number"]},"description":"The value, in the range 0 - 1.","name":"v"},{"type":{"names":["object"]},"optional":true,"description":"An object into which 3 properties will be created: r, g and b. If not provided a new object will be created.","name":"out"}],"returns":[{"type":{"names":["object"]},"description":"An object with the red, green and blue values set in the r, g and b properties."}],"memberof":"Phaser.Color","longname":"Phaser.Color.HSVtoRGB","___s":true},{"meta":{"range":[13134,13443],"filename":"Color.js","lineno":396,"path":"src\\utils"},"description":"Converts a hue to an RGB color.\rBased on code by Michael Jackson (https://github.com/mjijackson)","kind":"function","name":"hueToColor","scope":"static","params":[{"type":{"names":["number"]},"name":"p"},{"type":{"names":["number"]},"name":"q"},{"type":{"names":["number"]},"name":"t"}],"returns":[{"type":{"names":["number"]},"description":"The color component value."}],"memberof":"Phaser.Color","longname":"Phaser.Color.hueToColor","___s":true},{"meta":{"range":[13909,14961],"filename":"Color.js","lineno":438,"path":"src\\utils"},"description":"A utility function to create a lightweight 'color' object with the default components.\rAny components that are not specified will default to zero.\r\rThis is useful when you want to use a shared color object for the getPixel and getPixelAt methods.","author":["Matt DesLauriers (@mattdesl)"],"kind":"function","name":"createColor","scope":"static","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The red color component, in the range 0 - 255.","name":"r"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The green color component, in the range 0 - 255.","name":"g"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The blue color component, in the range 0 - 255.","name":"b"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The alpha color component, in the range 0 - 1.","name":"a"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The hue, in the range 0 - 1.","name":"h"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The saturation, in the range 0 - 1.","name":"s"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The lightness, in the range 0 - 1.","name":"l"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The value, in the range 0 - 1.","name":"v"}],"returns":[{"type":{"names":["object"]},"description":"The resulting object with r, g, b, a properties and h, s, l and v."}],"memberof":"Phaser.Color","longname":"Phaser.Color.createColor","___s":true},{"meta":{"range":[15227,15513],"filename":"Color.js","lineno":465,"path":"src\\utils"},"description":"Takes a color object and updates the rgba, color and color32 properties.","kind":"function","name":"updateColor","scope":"static","params":[{"type":{"names":["object"]},"description":"The color object to update.","name":"out"}],"returns":[{"type":{"names":["number"]},"description":"A native color value integer (format: 0xAARRGGBB)."}],"memberof":"Phaser.Color","longname":"Phaser.Color.updateColor","___s":true},{"meta":{"range":[15867,16407],"filename":"Color.js","lineno":483,"path":"src\\utils"},"description":"Given an alpha and 3 color values this will return an integer representation of it.","kind":"function","name":"getColor32","scope":"static","params":[{"type":{"names":["number"]},"description":"The alpha color component, in the range 0 - 255.","name":"a"},{"type":{"names":["number"]},"description":"The red color component, in the range 0 - 255.","name":"r"},{"type":{"names":["number"]},"description":"The green color component, in the range 0 - 255.","name":"g"},{"type":{"names":["number"]},"description":"The blue color component, in the range 0 - 255.","name":"b"}],"returns":[{"type":{"names":["number"]},"description":"A native color value integer (format: 0xAARRGGBB)."}],"memberof":"Phaser.Color","longname":"Phaser.Color.getColor32","___s":true},{"meta":{"range":[16516,16963],"filename":"Color.js","lineno":500,"path":"src\\utils"},"description":"Given 3 color values this will return an integer representation of it.","kind":"function","name":"getColor","scope":"static","params":[{"type":{"names":["number"]},"description":"The red color component, in the range 0 - 255.","name":"r"},{"type":{"names":["number"]},"description":"The green color component, in the range 0 - 255.","name":"g"},{"type":{"names":["number"]},"description":"The blue color component, in the range 0 - 255.","name":"b"}],"returns":[{"type":{"names":["number"]},"description":"A native color value integer (format: 0xRRGGBB)."}],"memberof":"Phaser.Color","longname":"Phaser.Color.getColor","___s":true},{"meta":{"range":[17057,17842],"filename":"Color.js","lineno":516,"path":"src\\utils"},"description":"Converts the given color values into a string.\rIf prefix was '#' it will be in the format `#RRGGBB` otherwise `0xAARRGGBB`.","kind":"function","name":"RGBtoString","scope":"static","params":[{"type":{"names":["number"]},"description":"The red color component, in the range 0 - 255.","name":"r"},{"type":{"names":["number"]},"description":"The green color component, in the range 0 - 255.","name":"g"},{"type":{"names":["number"]},"description":"The blue color component, in the range 0 - 255.","name":"b"},{"type":{"names":["number"]},"optional":true,"defaultvalue":255,"description":"The alpha color component, in the range 0 - 255.","name":"a"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'#'","description":"The prefix used in the return string. If '#' it will return `#RRGGBB`, else `0xAARRGGBB`.","name":"prefix"}],"returns":[{"type":{"names":["string"]},"description":"A string containing the color values. If prefix was '#' it will be in the format `#RRGGBB` otherwise `0xAARRGGBB`."}],"memberof":"Phaser.Color","longname":"Phaser.Color.RGBtoString","___s":true},{"meta":{"range":[18343,18650],"filename":"Color.js","lineno":545,"path":"src\\utils"},"description":"Converts a hex string into an integer color value.","kind":"function","name":"hexToRGB","scope":"static","params":[{"type":{"names":["string"]},"description":"The hex string to convert. Can be in the short-hand format `#03f` or `#0033ff`.","name":"hex"}],"returns":[{"type":{"names":["number"]},"description":"The rgb color value in the format 0xAARRGGBB."}],"memberof":"Phaser.Color","longname":"Phaser.Color.hexToRGB","___s":true},{"meta":{"range":[18866,19520],"filename":"Color.js","lineno":564,"path":"src\\utils"},"description":"Converts a hex string into a Phaser Color object.\r\rThe hex string can supplied as `'#0033ff'` or the short-hand format of `'#03f'`; it can begin with an optional \"#\" or \"0x\", or be unprefixed.    \r\rAn alpha channel is _not_ supported.","kind":"function","name":"hexToColor","scope":"static","params":[{"type":{"names":["string"]},"description":"The color string in a hex format.","name":"hex"},{"type":{"names":["object"]},"optional":true,"description":"An object into which 3 properties will be created or set: r, g and b. If not provided a new object will be created.","name":"out"}],"returns":[{"type":{"names":["object"]},"description":"An object with the red, green and blue values set in the r, g and b properties."}],"memberof":"Phaser.Color","longname":"Phaser.Color.hexToColor","___s":true},{"meta":{"range":[20341,20954],"filename":"Color.js","lineno":608,"path":"src\\utils"},"description":"Converts a CSS 'web' string into a Phaser Color object.\r\rThe web string can be in the format `'rgb(r,g,b)'` or `'rgba(r,g,b,a)'` where r/g/b are in the range [0..255] and a is in the range [0..1].","kind":"function","name":"webToColor","scope":"static","params":[{"type":{"names":["string"]},"description":"The color string in CSS 'web' format.","name":"web"},{"type":{"names":["object"]},"optional":true,"description":"An object into which 4 properties will be created: r, g, b and a. If not provided a new object will be created.","name":"out"}],"returns":[{"type":{"names":["object"]},"description":"An object with the red, green, blue and alpha values set in the r, g, b and a properties."}],"memberof":"Phaser.Color","longname":"Phaser.Color.webToColor","___s":true},{"meta":{"range":[21536,22289],"filename":"Color.js","lineno":641,"path":"src\\utils"},"description":"Converts a value - a \"hex\" string, a \"CSS 'web' string\", or a number - into red, green, blue, and alpha components.\r\rThe value can be a string (see `hexToColor` and `webToColor` for the supported formats) or a packed integer (see `getRGB`).\r\rAn alpha channel is _not_ supported when specifying a hex string.","kind":"function","name":"valueToColor","scope":"static","params":[{"type":{"names":["string","number"]},"description":"The color expressed as a recognized string format or a packed integer.","name":"value"},{"type":{"names":["object"]},"optional":true,"description":"The object to use for the output. If not provided a new object will be created.","name":"out"}],"returns":[{"type":{"names":["object"]},"description":"The (`out`) object with the red, green, blue, and alpha values set as the r/g/b/a properties."}],"memberof":"Phaser.Color","longname":"Phaser.Color.valueToColor","___s":true},{"meta":{"range":[23523,23877],"filename":"Color.js","lineno":694,"path":"src\\utils"},"description":"Return a string containing a hex representation of the given color component.","kind":"function","name":"componentToHex","scope":"static","params":[{"type":{"names":["number"]},"description":"The color channel to get the hex value for, must be a value between 0 and 255.","name":"color"}],"returns":[{"type":{"names":["string"]},"description":"A string of length 2 characters, i.e. 255 = ff, 100 = 64."}],"memberof":"Phaser.Color","longname":"Phaser.Color.componentToHex","___s":true},{"meta":{"range":[24032,24412],"filename":"Color.js","lineno":710,"path":"src\\utils"},"description":"Get HSV color wheel values in an array which will be 360 elements in size.","kind":"function","name":"HSVColorWheel","scope":"static","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The saturation, in the range 0 - 1.","name":"s"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The value, in the range 0 - 1.","name":"v"}],"returns":[{"type":{"names":["array"]},"description":"An array containing 360 elements corresponding to the HSV color wheel."}],"memberof":"Phaser.Color","longname":"Phaser.Color.HSVColorWheel","___s":true},{"meta":{"range":[24738,25126],"filename":"Color.js","lineno":735,"path":"src\\utils"},"description":"Get HSL color wheel values in an array which will be 360 elements in size.","kind":"function","name":"HSLColorWheel","scope":"static","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0.5,"description":"The saturation, in the range 0 - 1.","name":"s"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0.5,"description":"The lightness, in the range 0 - 1.","name":"l"}],"returns":[{"type":{"names":["array"]},"description":"An array containing 360 elements corresponding to the HSL color wheel."}],"memberof":"Phaser.Color","longname":"Phaser.Color.HSLColorWheel","___s":true},{"meta":{"range":[25452,26102],"filename":"Color.js","lineno":760,"path":"src\\utils"},"description":"Interpolates the two given colours based on the supplied step and currentStep properties.","kind":"function","name":"interpolateColor","scope":"static","params":[{"type":{"names":["number"]},"description":"The first color value.","name":"color1"},{"type":{"names":["number"]},"description":"The second color value.","name":"color2"},{"type":{"names":["number"]},"description":"The number of steps to run the interpolation over.","name":"steps"},{"type":{"names":["number"]},"description":"The currentStep value. If the interpolation will take 100 steps, a currentStep value of 50 would be half-way between the two.","name":"currentStep"},{"type":{"names":["number"]},"description":"The alpha of the returned color.","name":"alpha"}],"returns":[{"type":{"names":["number"]},"description":"The interpolated color value."}],"memberof":"Phaser.Color","longname":"Phaser.Color.interpolateColor","___s":true},{"meta":{"range":[26650,27411],"filename":"Color.js","lineno":786,"path":"src\\utils"},"description":"Interpolates the two given colours based on the supplied step and currentStep properties.","kind":"function","name":"interpolateColorWithRGB","scope":"static","params":[{"type":{"names":["number"]},"description":"The first color value.","name":"color"},{"type":{"names":["number"]},"description":"The red color value, between 0 and 0xFF (255).","name":"r"},{"type":{"names":["number"]},"description":"The green color value, between 0 and 0xFF (255).","name":"g"},{"type":{"names":["number"]},"description":"The blue color value, between 0 and 0xFF (255).","name":"b"},{"type":{"names":["number"]},"description":"The number of steps to run the interpolation over.","name":"steps"},{"type":{"names":["number"]},"description":"The currentStep value. If the interpolation will take 100 steps, a currentStep value of 50 would be half-way between the two.","name":"currentStep"}],"returns":[{"type":{"names":["number"]},"description":"The interpolated color value."}],"memberof":"Phaser.Color","longname":"Phaser.Color.interpolateColorWithRGB","___s":true},{"meta":{"range":[27822,28744],"filename":"Color.js","lineno":810,"path":"src\\utils"},"description":"Interpolates the two given colours based on the supplied step and currentStep properties.","kind":"function","name":"interpolateRGB","scope":"static","params":[{"type":{"names":["number"]},"description":"The red color value, between 0 and 0xFF (255).","name":"r1"},{"type":{"names":["number"]},"description":"The green color value, between 0 and 0xFF (255).","name":"g1"},{"type":{"names":["number"]},"description":"The blue color value, between 0 and 0xFF (255).","name":"b1"},{"type":{"names":["number"]},"description":"The red color value, between 0 and 0xFF (255).","name":"r2"},{"type":{"names":["number"]},"description":"The green color value, between 0 and 0xFF (255).","name":"g2"},{"type":{"names":["number"]},"description":"The blue color value, between 0 and 0xFF (255).","name":"b2"},{"type":{"names":["number"]},"description":"The number of steps to run the interpolation over.","name":"steps"},{"type":{"names":["number"]},"description":"The currentStep value. If the interpolation will take 100 steps, a currentStep value of 50 would be half-way between the two.","name":"currentStep"}],"returns":[{"type":{"names":["number"]},"description":"The interpolated color value."}],"memberof":"Phaser.Color","longname":"Phaser.Color.interpolateRGB","___s":true},{"meta":{"range":[29068,29656],"filename":"Color.js","lineno":834,"path":"src\\utils"},"description":"Returns a random color value between black and white\rSet the min value to start each channel from the given offset.\rSet the max value to restrict the maximum color used per channel.","kind":"function","name":"getRandomColor","scope":"static","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The lowest value to use for the color.","name":"min"},{"type":{"names":["number"]},"optional":true,"defaultvalue":255,"description":"The highest value to use for the color.","name":"max"},{"type":{"names":["number"]},"optional":true,"defaultvalue":255,"description":"The alpha value of the returning color (default 255 = fully opaque).","name":"alpha"}],"returns":[{"type":{"names":["number"]},"description":"32-bit color value with alpha."}],"memberof":"Phaser.Color","longname":"Phaser.Color.getRandomColor","___s":true},{"meta":{"range":[30286,30786],"filename":"Color.js","lineno":866,"path":"src\\utils"},"description":"Return the component parts of a color as an Object with the properties alpha, red, green, blue.\r\rAlpha will only be set if it exist in the given color (0xAARRGGBB)","kind":"function","name":"getRGB","scope":"static","params":[{"type":{"names":["number"]},"description":"Color in RGB (0xRRGGBB) or ARGB format (0xAARRGGBB).","name":"color"}],"returns":[{"type":{"names":["object"]},"description":"An Object with properties: alpha, red, green, blue (also r, g, b and a). Alpha will only be present if a color value > 16777215 was given."}],"memberof":"Phaser.Color","longname":"Phaser.Color.getRGB","___s":true},{"meta":{"range":[31653,31983],"filename":"Color.js","lineno":908,"path":"src\\utils"},"description":"Returns a CSS friendly string value from the given color.","kind":"function","name":"getWebRGB","scope":"static","params":[{"type":{"names":["number","Object"]},"description":"Color in RGB (0xRRGGBB), ARGB format (0xAARRGGBB) or an Object with r, g, b, a properties.","name":"color"}],"returns":[{"type":{"names":["string"]},"description":"A string in the format: 'rgba(r,g,b,a)'"}],"memberof":"Phaser.Color","longname":"Phaser.Color.getWebRGB","___s":true},{"meta":{"range":[32469,32865],"filename":"Color.js","lineno":930,"path":"src\\utils"},"description":"Given a native color value (in the format 0xAARRGGBB) this will return the Alpha component, as a value between 0 and 255.","kind":"function","name":"getAlpha","scope":"static","params":[{"type":{"names":["number"]},"description":"In the format 0xAARRGGBB.","name":"color"}],"returns":[{"type":{"names":["number"]},"description":"The Alpha component of the color, will be between 0 and 1 (0 being no Alpha (opaque), 1 full Alpha (transparent))."}],"memberof":"Phaser.Color","longname":"Phaser.Color.getAlpha","___s":true},{"meta":{"range":[32945,33343],"filename":"Color.js","lineno":942,"path":"src\\utils"},"description":"Given a native color value (in the format 0xAARRGGBB) this will return the Alpha component as a value between 0 and 1.","kind":"function","name":"getAlphaFloat","scope":"static","params":[{"type":{"names":["number"]},"description":"In the format 0xAARRGGBB.","name":"color"}],"returns":[{"type":{"names":["number"]},"description":"The Alpha component of the color, will be between 0 and 1 (0 being no Alpha (opaque), 1 full Alpha (transparent))."}],"memberof":"Phaser.Color","longname":"Phaser.Color.getAlphaFloat","___s":true},{"meta":{"range":[33436,33803],"filename":"Color.js","lineno":954,"path":"src\\utils"},"description":"Given a native color value (in the format 0xAARRGGBB) this will return the Red component, as a value between 0 and 255.","kind":"function","name":"getRed","scope":"static","params":[{"type":{"names":["number"]},"description":"In the format 0xAARRGGBB.","name":"color"}],"returns":[{"type":{"names":["number"]},"description":"The Red component of the color, will be between 0 and 255 (0 being no color, 255 full Red)."}],"memberof":"Phaser.Color","longname":"Phaser.Color.getRed","___s":true},{"meta":{"range":[33887,34264],"filename":"Color.js","lineno":966,"path":"src\\utils"},"description":"Given a native color value (in the format 0xAARRGGBB) this will return the Green component, as a value between 0 and 255.","kind":"function","name":"getGreen","scope":"static","params":[{"type":{"names":["number"]},"description":"In the format 0xAARRGGBB.","name":"color"}],"returns":[{"type":{"names":["number"]},"description":"The Green component of the color, will be between 0 and 255 (0 being no color, 255 full Green)."}],"memberof":"Phaser.Color","longname":"Phaser.Color.getGreen","___s":true},{"meta":{"range":[34349,34722],"filename":"Color.js","lineno":978,"path":"src\\utils"},"description":"Given a native color value (in the format 0xAARRGGBB) this will return the Blue component, as a value between 0 and 255.","kind":"function","name":"getBlue","scope":"static","params":[{"type":{"names":["number"]},"description":"In the format 0xAARRGGBB.","name":"color"}],"returns":[{"type":{"names":["number"]},"description":"The Blue component of the color, will be between 0 and 255 (0 being no color, 255 full Blue)."}],"memberof":"Phaser.Color","longname":"Phaser.Color.getBlue","___s":true},{"meta":{"range":[34801,35161],"filename":"Color.js","lineno":990,"path":"src\\utils"},"description":"Blends the source color, ignoring the backdrop.","kind":"function","name":"blendNormal","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendNormal","___s":true},{"meta":{"range":[35229,35597],"filename":"Color.js","lineno":1003,"path":"src\\utils"},"description":"Selects the lighter of the backdrop and source colors.","kind":"function","name":"blendLighten","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendLighten","___s":true},{"meta":{"range":[35683,36049],"filename":"Color.js","lineno":1016,"path":"src\\utils"},"description":"Selects the darker of the backdrop and source colors.","kind":"function","name":"blendDarken","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendDarken","___s":true},{"meta":{"range":[36134,36712],"filename":"Color.js","lineno":1029,"path":"src\\utils"},"description":"Multiplies the backdrop and source color values.\rThe result color is always at least as dark as either of the two constituent\rcolors. Multiplying any color with black produces black;\rmultiplying with white leaves the original color unchanged.","kind":"function","name":"blendMultiply","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendMultiply","___s":true},{"meta":{"range":[36797,37163],"filename":"Color.js","lineno":1045,"path":"src\\utils"},"description":"Takes the average of the source and backdrop colors.","kind":"function","name":"blendAverage","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendAverage","___s":true},{"meta":{"range":[37245,37646],"filename":"Color.js","lineno":1058,"path":"src\\utils"},"description":"Adds the source and backdrop colors together and returns the value, up to a maximum of 255.","kind":"function","name":"blendAdd","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendAdd","___s":true},{"meta":{"range":[37733,38122],"filename":"Color.js","lineno":1071,"path":"src\\utils"},"description":"Combines the source and backdrop colors and returns their value minus 255.","kind":"function","name":"blendSubtract","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendSubtract","___s":true},{"meta":{"range":[38218,38707],"filename":"Color.js","lineno":1084,"path":"src\\utils"},"description":"Subtracts the darker of the two constituent colors from the lighter.\r\rPainting with white inverts the backdrop color; painting with black produces no change.","kind":"function","name":"blendDifference","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendDifference","___s":true},{"meta":{"range":[38796,39131],"filename":"Color.js","lineno":1099,"path":"src\\utils"},"description":"Negation blend mode.","kind":"function","name":"blendNegation","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendNegation","___s":true},{"meta":{"range":[39230,39846],"filename":"Color.js","lineno":1112,"path":"src\\utils"},"description":"Multiplies the complements of the backdrop and source color values, then complements the result.\rThe result color is always at least as light as either of the two constituent colors. \rScreening any color with white produces white; screening with black leaves the original color unchanged.","kind":"function","name":"blendScreen","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendScreen","___s":true},{"meta":{"range":[39952,40446],"filename":"Color.js","lineno":1127,"path":"src\\utils"},"description":"Produces an effect similar to that of the Difference mode, but lower in contrast. \rPainting with white inverts the backdrop color; painting with black produces no change.","kind":"function","name":"blendExclusion","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendExclusion","___s":true},{"meta":{"range":[40542,41142],"filename":"Color.js","lineno":1141,"path":"src\\utils"},"description":"Multiplies or screens the colors, depending on the backdrop color.\rSource colors overlay the backdrop while preserving its highlights and shadows. \rThe backdrop color is not replaced, but is mixed with the source color to reflect the lightness or darkness of the backdrop.","kind":"function","name":"blendOverlay","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendOverlay","___s":true},{"meta":{"range":[41282,42327],"filename":"Color.js","lineno":1156,"path":"src\\utils"},"description":"Darkens or lightens the colors, depending on the source color value. \r\rIf the source color is lighter than 0.5, the backdrop is lightened, as if it were dodged; \rthis is useful for adding highlights to a scene. \r\rIf the source color is darker than 0.5, the backdrop is darkened, as if it were burned in. \rThe degree of lightening or darkening is proportional to the difference between the source color and 0.5; \rif it is equal to 0.5, the backdrop is unchanged.\r\rPainting with pure black or white produces a distinctly darker or lighter area, but does not result in pure black or white. \rThe effect is similar to shining a diffused spotlight on the backdrop.","kind":"function","name":"blendSoftLight","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendSoftLight","___s":true},{"meta":{"range":[42499,43540],"filename":"Color.js","lineno":1179,"path":"src\\utils"},"description":"Multiplies or screens the colors, depending on the source color value. \r\rIf the source color is lighter than 0.5, the backdrop is lightened, as if it were screened; \rthis is useful for adding highlights to a scene. \r\rIf the source color is darker than 0.5, the backdrop is darkened, as if it were multiplied; \rthis is useful for adding shadows to a scene. \r\rThe degree of lightening or darkening is proportional to the difference between the source color and 0.5; \rif it is equal to 0.5, the backdrop is unchanged.\r\rPainting with pure black or white produces pure black or white. The effect is similar to shining a harsh spotlight on the backdrop.","kind":"function","name":"blendHardLight","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendHardLight","___s":true},{"meta":{"range":[43644,44066],"filename":"Color.js","lineno":1203,"path":"src\\utils"},"description":"Brightens the backdrop color to reflect the source color. \rPainting with black produces no change.","kind":"function","name":"blendColorDodge","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendColorDodge","___s":true},{"meta":{"range":[44193,44612],"filename":"Color.js","lineno":1217,"path":"src\\utils"},"description":"Darkens the backdrop color to reflect the source color.\rPainting with white produces no change.","kind":"function","name":"blendColorBurn","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendColorBurn","___s":true},{"meta":{"range":[44740,45125],"filename":"Color.js","lineno":1231,"path":"src\\utils"},"description":"An alias for blendAdd, it simply sums the values of the two colors.","kind":"function","name":"blendLinearDodge","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendLinearDodge","___s":true},{"meta":{"range":[45227,45634],"filename":"Color.js","lineno":1244,"path":"src\\utils"},"description":"An alias for blendSubtract, it simply sums the values of the two colors and subtracts 255.","kind":"function","name":"blendLinearBurn","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendLinearBurn","___s":true},{"meta":{"range":[45740,46386],"filename":"Color.js","lineno":1257,"path":"src\\utils"},"description":"This blend mode combines Linear Dodge and Linear Burn (rescaled so that neutral colors become middle gray).\rDodge applies to values of top layer lighter than middle gray, and burn to darker values.\rThe calculation simplifies to the sum of bottom layer and twice the top layer, subtract 128. The contrast decreases.","kind":"function","name":"blendLinearLight","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendLinearLight","___s":true},{"meta":{"range":[46561,47371],"filename":"Color.js","lineno":1272,"path":"src\\utils"},"description":"This blend mode combines Color Dodge and Color Burn (rescaled so that neutral colors become middle gray).\rDodge applies when values in the top layer are lighter than middle gray, and burn to darker values.\rThe middle gray is the neutral color. When color is lighter than this, this effectively moves the white point of the bottom \rlayer down by twice the difference; when it is darker, the black point is moved up by twice the difference. The perceived contrast increases.","kind":"function","name":"blendVividLight","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendVividLight","___s":true},{"meta":{"range":[47543,48161],"filename":"Color.js","lineno":1288,"path":"src\\utils"},"description":"If the backdrop color (light source) is lighter than 50%, the blendDarken mode is used, and colors lighter than the backdrop color do not change.\rIf the backdrop color is darker than 50% gray, colors lighter than the blend color are replaced, and colors darker than the blend color do not change.","kind":"function","name":"blendPinLight","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendPinLight","___s":true},{"meta":{"range":[48325,48996],"filename":"Color.js","lineno":1302,"path":"src\\utils"},"description":"Runs blendVividLight on the source and backdrop colors.\rIf the resulting color is 128 or more, it receives a value of 255; if less than 128, a value of 0.\rTherefore, all blended pixels have red, green, and blue channel values of either 0 or 255.\rThis changes all pixels to primary additive colors (red, green, or blue), white, or black.","kind":"function","name":"blendHardMix","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendHardMix","___s":true},{"meta":{"range":[49117,49525],"filename":"Color.js","lineno":1318,"path":"src\\utils"},"description":"Reflect blend mode. This mode is useful when adding shining objects or light zones to images.","kind":"function","name":"blendReflect","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendReflect","___s":true},{"meta":{"range":[49646,50059],"filename":"Color.js","lineno":1331,"path":"src\\utils"},"description":"Glow blend mode. This mode is a variation of reflect mode with the source and backdrop colors swapped.","kind":"function","name":"blendGlow","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendGlow","___s":true},{"meta":{"range":[50158,50585],"filename":"Color.js","lineno":1344,"path":"src\\utils"},"description":"Phoenix blend mode. This subtracts the lighter color from the darker color, and adds 255, giving a bright result.","kind":"function","name":"blendPhoenix","scope":"static","params":[{"type":{"names":["integer"]},"description":"The source color to blend, in the range 1 to 255.","name":"a"},{"type":{"names":["integer"]},"description":"The backdrop color to blend, in the range 1 to 255.","name":"b"}],"returns":[{"type":{"names":["integer"]},"description":"The blended color value, in the range 1 to 255."}],"memberof":"Phaser.Color","longname":"Phaser.Color.blendPhoenix","___s":true},{"meta":{"range":[1136,3073],"filename":"Debug.js","lineno":23,"path":"src\\utils"},"description":"A collection of methods for displaying debug information about game objects.\r\rIf your game is running in Canvas mode, then you should invoke all of the Debug methods from\ryour games `render` function. This is because they are drawn directly onto the game canvas\ritself, so if you call any debug methods outside of `render` they are likely to be overwritten\rby the game itself.\r\rIf your game is running in WebGL then Debug will create a Sprite that is placed at the top of the Stage display list and bind a canvas texture\rto it, which must be uploaded every frame. Be advised: this is very expensive, especially in browsers like Firefox. So please only enable Debug\rin WebGL mode if you really need it (or your desktop can cope with it well) and disable it for production!","kind":"class","classdesc":"Phaser.Utils.Debug","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"Debug","longname":"Phaser.Utils.Debug","memberof":"Phaser.Utils","scope":"static","___s":true},{"meta":{"range":[1280,1296],"filename":"Debug.js","lineno":28,"path":"src\\utils"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running Game.","name":"game"}],"name":"game","longname":"Phaser.Utils.Debug#game","kind":"member","memberof":"Phaser.Utils.Debug","scope":"instance","___s":true},{"meta":{"range":[1404,1422],"filename":"Debug.js","lineno":33,"path":"src\\utils"},"properties":[{"type":{"names":["Phaser.Image"]},"description":"If debugging in WebGL mode we need this.","name":"sprite"}],"name":"sprite","longname":"Phaser.Utils.Debug#sprite","kind":"member","memberof":"Phaser.Utils.Debug","scope":"instance","___s":true},{"meta":{"range":[1558,1573],"filename":"Debug.js","lineno":38,"path":"src\\utils"},"properties":[{"type":{"names":["Phaser.BitmapData"]},"description":"In WebGL mode this BitmapData contains a copy of the debug canvas.","name":"bmd"}],"name":"bmd","longname":"Phaser.Utils.Debug#bmd","kind":"member","memberof":"Phaser.Utils.Debug","scope":"instance","___s":true},{"meta":{"range":[1684,1702],"filename":"Debug.js","lineno":43,"path":"src\\utils"},"properties":[{"type":{"names":["HTMLCanvasElement"]},"description":"The canvas to which Debug calls draws.","name":"canvas"}],"name":"canvas","longname":"Phaser.Utils.Debug#canvas","kind":"member","memberof":"Phaser.Utils.Debug","scope":"instance","___s":true},{"meta":{"range":[1812,1831],"filename":"Debug.js","lineno":48,"path":"src\\utils"},"properties":[{"type":{"names":["CanvasRenderingContext2D"]},"description":"The 2d context of the canvas.","name":"context"}],"name":"context","longname":"Phaser.Utils.Debug#context","kind":"member","memberof":"Phaser.Utils.Debug","scope":"instance","___s":true},{"meta":{"range":[1973,1999],"filename":"Debug.js","lineno":54,"path":"src\\utils"},"properties":[{"type":{"names":["string"]},"description":"The font that the debug information is rendered in.","name":"font"}],"defaultvalue":"'14px Courier'","name":"font","longname":"Phaser.Utils.Debug#font","kind":"member","memberof":"Phaser.Utils.Debug","scope":"instance","___s":true},{"meta":{"range":[2094,2116],"filename":"Debug.js","lineno":59,"path":"src\\utils"},"properties":[{"type":{"names":["number"]},"description":"The spacing between columns.","name":"columnWidth"}],"name":"columnWidth","longname":"Phaser.Utils.Debug#columnWidth","kind":"member","memberof":"Phaser.Utils.Debug","scope":"instance","___s":true},{"meta":{"range":[2221,2241],"filename":"Debug.js","lineno":64,"path":"src\\utils"},"properties":[{"type":{"names":["number"]},"description":"The line height between the debug text.","name":"lineHeight"}],"name":"lineHeight","longname":"Phaser.Utils.Debug#lineHeight","kind":"member","memberof":"Phaser.Utils.Debug","scope":"instance","___s":true},{"meta":{"range":[2417,2441],"filename":"Debug.js","lineno":69,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Should the text be rendered with a slight shadow? Makes it easier to read on different types of background.","name":"renderShadow"}],"name":"renderShadow","longname":"Phaser.Utils.Debug#renderShadow","kind":"member","memberof":"Phaser.Utils.Debug","scope":"instance","___s":true},{"meta":{"range":[2586,2603],"filename":"Debug.js","lineno":75,"path":"src\\utils"},"properties":[{"type":{"names":["number"]},"description":"The current X position the debug information will be rendered at.","name":"currentX"}],"defaultvalue":0,"name":"currentX","longname":"Phaser.Utils.Debug#currentX","kind":"member","memberof":"Phaser.Utils.Debug","scope":"instance","___s":true},{"meta":{"range":[2748,2765],"filename":"Debug.js","lineno":81,"path":"src\\utils"},"properties":[{"type":{"names":["number"]},"description":"The current Y position the debug information will be rendered at.","name":"currentY"}],"defaultvalue":0,"name":"currentY","longname":"Phaser.Utils.Debug#currentY","kind":"member","memberof":"Phaser.Utils.Debug","scope":"instance","___s":true},{"meta":{"range":[2932,2953],"filename":"Debug.js","lineno":87,"path":"src\\utils"},"properties":[{"type":{"names":["number"]},"description":"The alpha of the Debug context, set before all debug information is rendered to it.","name":"currentAlpha"}],"defaultvalue":1,"name":"currentAlpha","longname":"Phaser.Utils.Debug#currentAlpha","kind":"member","memberof":"Phaser.Utils.Debug","scope":"instance","___s":true},{"meta":{"range":[3049,3067],"filename":"Debug.js","lineno":92,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Does the canvas need re-rendering?","name":"dirty"}],"name":"dirty","longname":"Phaser.Utils.Debug#dirty","kind":"member","memberof":"Phaser.Utils.Debug","scope":"instance","___s":true},{"meta":{"range":[3118,3248],"filename":"Debug.js","lineno":98,"path":"src\\utils"},"description":"Internal method that boots the debug displayer.","kind":"function","name":"boot","access":"protected","memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#boot","scope":"instance","___s":true},{"meta":{"range":[3898,4295],"filename":"Debug.js","lineno":124,"path":"src\\utils"},"description":"Internal method that resizes the BitmapData and Canvas.\rCalled by ScaleManager.onSizeChange only in WebGL mode.","kind":"function","name":"resize","access":"protected","params":[{"type":{"names":["Phaser.ScaleManager"]},"description":"The Phaser ScaleManager.","name":"scaleManager"},{"type":{"names":["number"]},"description":"The new width of the game.","name":"width"},{"type":{"names":["number"]},"description":"The new height of the game.","name":"height"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#resize","scope":"instance","___s":true},{"meta":{"range":[4486,4657],"filename":"Debug.js","lineno":143,"path":"src\\utils"},"description":"Internal method that clears the canvas (if a Sprite) ready for a new debug session.","kind":"function","name":"preUpdate","access":"protected","memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#preUpdate","scope":"instance","___s":true},{"meta":{"range":[4960,5050],"filename":"Debug.js","lineno":162,"path":"src\\utils"},"description":"Clears the Debug canvas.","kind":"function","name":"reset","memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#reset","scope":"instance","___s":true},{"meta":{"range":[5304,5763],"filename":"Debug.js","lineno":181,"path":"src\\utils"},"description":"Internal method that resets and starts the debug output values.","kind":"function","name":"start","access":"protected","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The X value the debug info will start from.","name":"x"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The Y value the debug info will start from.","name":"y"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgb(255,255,255)'","description":"The color the debug text will drawn in.","name":"color"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The spacing between columns.","name":"columnWidth"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#start","scope":"instance","___s":true},{"meta":{"range":[6464,6591],"filename":"Debug.js","lineno":214,"path":"src\\utils"},"description":"Internal method that stops the debug output.","kind":"function","name":"stop","access":"protected","memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#stop","scope":"instance","___s":true},{"meta":{"range":[6669,6859],"filename":"Debug.js","lineno":226,"path":"src\\utils"},"description":"Internal method that outputs a single line of text split over as many columns as needed, one per parameter.","kind":"function","name":"line","access":"protected","memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#line","scope":"instance","___s":true},{"meta":{"range":[7428,7905],"filename":"Debug.js","lineno":254,"path":"src\\utils"},"description":"Render Sound information, including decoded state, duration, volume and more.","kind":"function","name":"soundInfo","params":[{"type":{"names":["Phaser.Sound"]},"description":"The sound object to debug.","name":"sound"},{"type":{"names":["number"]},"description":"X position of the debug info to be rendered.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the debug info to be rendered.","name":"y"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgb(255,255,255)'","description":"color of the debug info to be rendered. (format is css color string).","name":"color"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#soundInfo","scope":"instance","___s":true},{"meta":{"range":[9018,9507],"filename":"Debug.js","lineno":285,"path":"src\\utils"},"description":"Render camera information including dimensions and location.","kind":"function","name":"cameraInfo","params":[{"type":{"names":["Phaser.Camera"]},"description":"The Phaser.Camera to show the debug information for.","name":"camera"},{"type":{"names":["number"]},"description":"X position of the debug info to be rendered.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the debug info to be rendered.","name":"y"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgb(255,255,255)'","description":"color of the debug info to be rendered. (format is css color string).","name":"color"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#cameraInfo","scope":"instance","___s":true},{"meta":{"range":[10326,10772],"filename":"Debug.js","lineno":312,"path":"src\\utils"},"description":"Render Timer information.","kind":"function","name":"timer","params":[{"type":{"names":["Phaser.Timer"]},"description":"The Phaser.Timer to show the debug information for.","name":"timer"},{"type":{"names":["number"]},"description":"X position of the debug info to be rendered.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the debug info to be rendered.","name":"y"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgb(255,255,255)'","description":"color of the debug info to be rendered. (format is css color string).","name":"color"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#timer","scope":"instance","___s":true},{"meta":{"range":[11142,11822],"filename":"Debug.js","lineno":331,"path":"src\\utils"},"description":"Renders the Pointer.circle object onto the stage in green if down or red if up along with debug text.","kind":"function","name":"pointer","params":[{"type":{"names":["Phaser.Pointer"]},"description":"The Pointer you wish to display.","name":"pointer"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Doesn't render the circle if the pointer is up.","name":"hideIfUp"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgba(0,255,0,0.5)'","description":"The color the circle is rendered in if down.","name":"downColor"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgba(255,0,0,0.5)'","description":"The color the circle is rendered in if up (and hideIfUp is false).","name":"upColor"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgb(255,255,255)'","description":"color of the debug info to be rendered. (format is css color string).","name":"color"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#pointer","scope":"instance","___s":true},{"meta":{"range":[13460,13934],"filename":"Debug.js","lineno":391,"path":"src\\utils"},"description":"Render Sprite Input Debug information.","kind":"function","name":"spriteInputInfo","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image"]},"description":"The sprite to display the input data for.","name":"sprite"},{"type":{"names":["number"]},"description":"X position of the debug info to be rendered.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the debug info to be rendered.","name":"y"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgb(255,255,255)'","description":"color of the debug info to be rendered. (format is css color string).","name":"color"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#spriteInputInfo","scope":"instance","___s":true},{"meta":{"range":[14593,15033],"filename":"Debug.js","lineno":412,"path":"src\\utils"},"description":"Renders Phaser.Key object information.","kind":"function","name":"key","params":[{"type":{"names":["Phaser.Key"]},"description":"The Key to render the information for.","name":"key"},{"type":{"names":["number"]},"description":"X position of the debug info to be rendered.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the debug info to be rendered.","name":"y"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgb(255,255,255)'","description":"color of the debug info to be rendered. (format is css color string).","name":"color"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#key","scope":"instance","___s":true},{"meta":{"range":[15389,15773],"filename":"Debug.js","lineno":433,"path":"src\\utils"},"description":"Render debug information about the Input object.","kind":"function","name":"inputInfo","params":[{"type":{"names":["number"]},"description":"X position of the debug info to be rendered.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the debug info to be rendered.","name":"y"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgb(255,255,255)'","description":"color of the debug info to be rendered. (format is css color string).","name":"color"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#inputInfo","scope":"instance","___s":true},{"meta":{"range":[16345,16840],"filename":"Debug.js","lineno":453,"path":"src\\utils"},"description":"Renders the Sprites bounds. Note: This is really expensive as it has to calculate the bounds every time you call it!","kind":"function","name":"spriteBounds","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image"]},"description":"The sprite to display the bounds of.","name":"sprite"},{"type":{"names":["string"]},"optional":true,"description":"Color of the debug info to be rendered (format is css color string).","name":"color"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Render the rectangle as a fillRect (default, true) or a strokeRect (false)","name":"filled"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#spriteBounds","scope":"instance","___s":true},{"meta":{"range":[17090,17570],"filename":"Debug.js","lineno":472,"path":"src\\utils"},"description":"Renders the Rope's segments. Note: This is really expensive as it has to calculate new segments every time you call it","kind":"function","name":"ropeSegments","params":[{"type":{"names":["Phaser.Rope"]},"description":"The rope to display the segments of.","name":"rope"},{"type":{"names":["string"]},"optional":true,"description":"Color of the debug info to be rendered (format is css color string).","name":"color"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Render the rectangle as a fillRect (default, true) or a strokeRect (false)","name":"filled"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#ropeSegments","scope":"instance","___s":true},{"meta":{"range":[17829,18349],"filename":"Debug.js","lineno":492,"path":"src\\utils"},"description":"Render debug infos (including name, bounds info, position and some other properties) about the Sprite.","kind":"function","name":"spriteInfo","params":[{"type":{"names":["Phaser.Sprite"]},"description":"The Sprite to display the information of.","name":"sprite"},{"type":{"names":["number"]},"description":"X position of the debug info to be rendered.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the debug info to be rendered.","name":"y"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgb(255,255,255)'","description":"color of the debug info to be rendered. (format is css color string).","name":"color"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#spriteInfo","scope":"instance","___s":true},{"meta":{"range":[19073,19575],"filename":"Debug.js","lineno":515,"path":"src\\utils"},"description":"Renders the sprite coordinates in local, positional and world space.","kind":"function","name":"spriteCoords","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image"]},"description":"The sprite to display the coordinates for.","name":"sprite"},{"type":{"names":["number"]},"description":"X position of the debug info to be rendered.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the debug info to be rendered.","name":"y"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgb(255,255,255)'","description":"color of the debug info to be rendered. (format is css color string).","name":"color"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#spriteCoords","scope":"instance","___s":true},{"meta":{"range":[20071,20519],"filename":"Debug.js","lineno":541,"path":"src\\utils"},"description":"Renders Line information in the given color.","kind":"function","name":"lineInfo","params":[{"type":{"names":["Phaser.Line"]},"description":"The Line to display the data for.","name":"line"},{"type":{"names":["number"]},"description":"X position of the debug info to be rendered.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the debug info to be rendered.","name":"y"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgb(255,255,255)'","description":"color of the debug info to be rendered. (format is css color string).","name":"color"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#lineInfo","scope":"instance","___s":true},{"meta":{"range":[20902,21294],"filename":"Debug.js","lineno":560,"path":"src\\utils"},"description":"Renders a single pixel at the given size.","kind":"function","name":"pixel","params":[{"type":{"names":["number"]},"description":"X position of the pixel to be rendered.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the pixel to be rendered.","name":"y"},{"type":{"names":["string"]},"optional":true,"description":"Color of the pixel (format is css color string).","name":"color"},{"type":{"names":["number"]},"optional":true,"defaultvalue":2,"description":"The 'size' to render the pixel at.","name":"size"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#pixel","scope":"instance","___s":true},{"meta":{"range":[21522,22151],"filename":"Debug.js","lineno":580,"path":"src\\utils"},"description":"Renders a Phaser geometry object including Rectangle, Circle, Point or Line.","kind":"function","name":"geom","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Circle","Phaser.Point","Phaser.Line"]},"description":"The geometry object to render.","name":"object"},{"type":{"names":["string"]},"optional":true,"description":"Color of the debug info to be rendered (format is css color string).","name":"color"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Render the objected as a filled (default, true) or a stroked (false)","name":"filled"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"Force rendering of a specific type. If 0 no type will be forced, otherwise 1 = Rectangle, 2 = Circle, 3 = Point and 4 = Line.","name":"forceType"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#geom","scope":"instance","___s":true},{"meta":{"range":[24150,24526],"filename":"Debug.js","lineno":645,"path":"src\\utils"},"description":"Renders a Rectangle.","kind":"function","name":"geom","params":[{"type":{"names":["Phaser.Rectangle","object"]},"description":"The geometry object to render.","name":"object"},{"type":{"names":["string"]},"optional":true,"description":"Color of the debug info to be rendered (format is css color string).","name":"color"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Render the objected as a filled (default, true) or a stroked (false)","name":"filled"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#geom","scope":"instance","___s":true},{"meta":{"range":[25181,25630],"filename":"Debug.js","lineno":676,"path":"src\\utils"},"description":"Render a string of text.","kind":"function","name":"text","params":[{"type":{"names":["string"]},"description":"The line of text to draw.","name":"text"},{"type":{"names":["number"]},"description":"X position of the debug info to be rendered.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the debug info to be rendered.","name":"y"},{"type":{"names":["string"]},"optional":true,"description":"Color of the debug info to be rendered (format is css color string).","name":"color"},{"type":{"names":["string"]},"optional":true,"description":"The font of text to draw.","name":"font"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#text","scope":"instance","___s":true},{"meta":{"range":[26119,26369],"filename":"Debug.js","lineno":707,"path":"src\\utils"},"description":"Visually renders a QuadTree to the display.","kind":"function","name":"quadTree","params":[{"type":{"names":["Phaser.QuadTree"]},"description":"The quadtree to render.","name":"quadtree"},{"type":{"names":["string"]},"description":"The color of the lines in the quadtree.","name":"color"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#quadTree","scope":"instance","___s":true},{"meta":{"range":[27365,28102],"filename":"Debug.js","lineno":747,"path":"src\\utils"},"description":"Render a Sprites Physics body if it has one set. The body is rendered as a filled or stroked rectangle.\rThis only works for Arcade Physics, Ninja Physics (AABB and Circle only) and Box2D Physics bodies.\rTo display a P2 Physics body you should enable debug mode on the body when creating it.","kind":"function","name":"body","params":[{"type":{"names":["Phaser.Sprite"]},"description":"The Sprite who's body will be rendered.","name":"sprite"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgba(0,255,0,0.4)'","description":"Color of the debug rectangle to be rendered. The format is a CSS color string such as '#ff0000' or 'rgba(255,0,0,0.5)'.","name":"color"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Render the body as a filled rectangle (true) or a stroked rectangle (false)","name":"filled"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#body","scope":"instance","___s":true},{"meta":{"range":[28825,29267],"filename":"Debug.js","lineno":781,"path":"src\\utils"},"description":"Render a Sprites Physic Body information.","kind":"function","name":"bodyInfo","params":[{"type":{"names":["Phaser.Sprite"]},"description":"The sprite to be rendered.","name":"sprite"},{"type":{"names":["number"]},"description":"X position of the debug info to be rendered.","name":"x"},{"type":{"names":["number"]},"description":"Y position of the debug info to be rendered.","name":"y"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgb(255,255,255)'","description":"color of the debug info to be rendered. (format is css color string).","name":"color"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#bodyInfo","scope":"instance","___s":true},{"meta":{"range":[29797,30043],"filename":"Debug.js","lineno":810,"path":"src\\utils"},"description":"Renders 'debug draw' data for the Box2D world if it exists.\rThis uses the standard debug drawing feature of Box2D, so colors will be decided by\rthe Box2D engine.","kind":"function","name":"box2dWorld","memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#box2dWorld","scope":"instance","___s":true},{"meta":{"range":[30315,30741],"filename":"Debug.js","lineno":828,"path":"src\\utils"},"description":"Renders 'debug draw' data for the given Box2D body.\rThis uses the standard debug drawing feature of Box2D, so colors will be decided by the Box2D engine.","kind":"function","name":"box2dBody","params":[{"type":{"names":["Phaser.Sprite"]},"description":"The sprite whos body will be rendered.","name":"sprite"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'rgb(0,255,0)'","description":"color of the debug info to be rendered. (format is css color string).","name":"color"}],"memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#box2dBody","scope":"instance","___s":true},{"meta":{"range":[30920,31356],"filename":"Debug.js","lineno":844,"path":"src\\utils"},"description":"Call this function from the Dev Tools console.\r\rIt will scan the display list and output all of the Objects it finds, and their renderOrderIDs.\r\r**Note** Requires a browser that supports console.group and console.groupEnd (such as Chrome)","kind":"function","name":"displayList","params":[{"type":{"names":["Object"]},"optional":true,"description":"The displayObject level display object to start from. Defaults to the World.","name":"displayObject"}],"longname":"displayList","scope":"global","___s":true},{"meta":{"range":[32019,32107],"filename":"Debug.js","lineno":877,"path":"src\\utils"},"description":"Destroy this object.","kind":"function","name":"destroy","memberof":"Phaser.Utils.Debug","longname":"Phaser.Utils.Debug#destroy","scope":"instance","___s":true},{"meta":{"range":[1321,13086],"filename":"Device.js","lineno":30,"path":"src\\utils"},"classdesc":"Detects device support capabilities and is responsible for device initialization - see {@link Phaser.Device.whenReady whenReady}.\r\rThis class represents a singleton object that can be accessed directly as `game.device`\r(or, as a fallback, `Phaser.Device` when a game instance is not available) without the need to instantiate it.\r\rUnless otherwise noted the device capabilities are only guaranteed after initialization. Initialization\roccurs automatically and is guaranteed complete before {@link Phaser.Game} begins its \"boot\" phase.\rFeature detection can be modified in the {@link Phaser.Device.onInitialized onInitialized} signal.\r\rWhen checking features using the exposed properties only the *truth-iness* of the value should be relied upon\runless the documentation states otherwise: properties may return `false`, `''`, `null`, or even `undefined`\rwhen indicating the lack of a feature.\r\rUses elements from System.js by MrDoob and Modernizr","description":"It is not possible to instantiate the Device class manually.","kind":"class","access":"protected","name":"Device","longname":"Phaser.Device","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[1475,1497],"filename":"Device.js","lineno":37,"path":"src\\utils"},"description":"The time the device became ready.","properties":[{"type":{"names":["integer"]},"name":"deviceReadyAt"}],"access":"protected","name":"deviceReadyAt","longname":"Phaser.Device#deviceReadyAt","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[1635,1659],"filename":"Device.js","lineno":44,"path":"src\\utils"},"description":"The time as which initialization has completed.","properties":[{"type":{"names":["boolean"]},"name":"initialized"}],"access":"protected","name":"initialized","longname":"Phaser.Device#initialized","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[1808,1828],"filename":"Device.js","lineno":52,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is running on a desktop?","name":"desktop"}],"defaultvalue":false,"name":"desktop","longname":"Phaser.Device#desktop","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[1922,1938],"filename":"Device.js","lineno":58,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is running on iOS?","name":"iOS"}],"defaultvalue":false,"name":"iOS","longname":"Phaser.Device#iOS","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[2081,2100],"filename":"Device.js","lineno":64,"path":"src\\utils"},"properties":[{"type":{"names":["number"]},"description":"If running in iOS this will contain the major version number.","name":"iOSVersion"}],"defaultvalue":0,"name":"iOSVersion","longname":"Phaser.Device#iOSVersion","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[2216,2237],"filename":"Device.js","lineno":70,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is the game running under CocoonJS?","name":"cocoonJS"}],"defaultvalue":false,"name":"cocoonJS","longname":"Phaser.Device#cocoonJS","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[2364,2388],"filename":"Device.js","lineno":76,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is this game running with CocoonJS.App?","name":"cocoonJSApp"}],"defaultvalue":false,"name":"cocoonJSApp","longname":"Phaser.Device#cocoonJSApp","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[2513,2533],"filename":"Device.js","lineno":82,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is the game running under Apache Cordova?","name":"cordova"}],"defaultvalue":false,"name":"cordova","longname":"Phaser.Device#cordova","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[2648,2665],"filename":"Device.js","lineno":88,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is the game running under Node.js?","name":"node"}],"defaultvalue":false,"name":"node","longname":"Phaser.Device#node","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[2790,2813],"filename":"Device.js","lineno":94,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is the game running under Node-Webkit?","name":"nodeWebkit"}],"defaultvalue":false,"name":"nodeWebkit","longname":"Phaser.Device#nodeWebkit","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[2940,2961],"filename":"Device.js","lineno":100,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is the game running under GitHub Electron?","name":"electron"}],"defaultvalue":false,"name":"electron","longname":"Phaser.Device#electron","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[3077,3096],"filename":"Device.js","lineno":106,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is the game running under Ejecta?","name":"ejecta"}],"defaultvalue":false,"name":"ejecta","longname":"Phaser.Device#ejecta","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[3228,3250],"filename":"Device.js","lineno":112,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is the game running under the Intel Crosswalk XDK?","name":"crosswalk"}],"defaultvalue":false,"name":"crosswalk","longname":"Phaser.Device#crosswalk","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[3352,3372],"filename":"Device.js","lineno":118,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is running on android?","name":"android"}],"defaultvalue":false,"name":"android","longname":"Phaser.Device#android","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[3476,3497],"filename":"Device.js","lineno":124,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is running on chromeOS?","name":"chromeOS"}],"defaultvalue":false,"name":"chromeOS","longname":"Phaser.Device#chromeOS","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[3595,3613],"filename":"Device.js","lineno":130,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is running on linux?","name":"linux"}],"defaultvalue":false,"name":"linux","longname":"Phaser.Device#linux","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[3711,3729],"filename":"Device.js","lineno":136,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is running on macOS?","name":"macOS"}],"defaultvalue":false,"name":"macOS","longname":"Phaser.Device#macOS","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[3831,3851],"filename":"Device.js","lineno":142,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is running on windows?","name":"windows"}],"defaultvalue":false,"name":"windows","longname":"Phaser.Device#windows","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[3966,3991],"filename":"Device.js","lineno":148,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is running on a Windows Phone?","name":"windowsPhone"}],"defaultvalue":false,"name":"windowsPhone","longname":"Phaser.Device#windowsPhone","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[4110,4129],"filename":"Device.js","lineno":156,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is canvas available?","name":"canvas"}],"defaultvalue":false,"name":"canvas","longname":"Phaser.Device#canvas","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[4320,4349],"filename":"Device.js","lineno":162,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"nullable":true,"description":"True if canvas supports a 'copy' bitblt onto itself when the source and destination regions overlap.","name":"canvasBitBltShift"}],"defaultvalue":null,"name":"canvasBitBltShift","longname":"Phaser.Device#canvasBitBltShift","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[4446,4464],"filename":"Device.js","lineno":168,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is webGL available?","name":"webGL"}],"defaultvalue":false,"name":"webGL","longname":"Phaser.Device#webGL","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[4559,4576],"filename":"Device.js","lineno":174,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is file available?","name":"file"}],"defaultvalue":false,"name":"file","longname":"Phaser.Device#file","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[4683,4706],"filename":"Device.js","lineno":180,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is fileSystem available?","name":"fileSystem"}],"defaultvalue":false,"name":"fileSystem","longname":"Phaser.Device#fileSystem","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[4817,4842],"filename":"Device.js","lineno":186,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is localStorage available?","name":"localStorage"}],"defaultvalue":false,"name":"localStorage","longname":"Phaser.Device#localStorage","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[4941,4960],"filename":"Device.js","lineno":192,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is worker available?","name":"worker"}],"defaultvalue":false,"name":"worker","longname":"Phaser.Device#worker","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[5057,5075],"filename":"Device.js","lineno":198,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is css3D available?","name":"css3D"}],"defaultvalue":false,"name":"css3D","longname":"Phaser.Device#css3D","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[5185,5209],"filename":"Device.js","lineno":204,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is Pointer Lock available?","name":"pointerLock"}],"defaultvalue":false,"name":"pointerLock","longname":"Phaser.Device#pointerLock","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[5329,5352],"filename":"Device.js","lineno":210,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Does the browser support TypedArrays?","name":"typedArray"}],"defaultvalue":false,"name":"typedArray","longname":"Phaser.Device#typedArray","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[5476,5498],"filename":"Device.js","lineno":216,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Does the device support the Vibration API?","name":"vibration"}],"defaultvalue":false,"name":"vibration","longname":"Phaser.Device#vibration","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[5628,5652],"filename":"Device.js","lineno":222,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Does the device support the getUserMedia API?","name":"getUserMedia"}],"defaultvalue":true,"name":"getUserMedia","longname":"Phaser.Device#getUserMedia","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[5803,5826],"filename":"Device.js","lineno":228,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is the browser running in strict mode (false) or quirks mode? (true)","name":"quirksMode"}],"defaultvalue":false,"name":"quirksMode","longname":"Phaser.Device#quirksMode","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[5940,5958],"filename":"Device.js","lineno":236,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is touch available?","name":"touch"}],"defaultvalue":false,"name":"touch","longname":"Phaser.Device#touch","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[6063,6085],"filename":"Device.js","lineno":242,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is mspointer available?","name":"mspointer"}],"defaultvalue":false,"name":"mspointer","longname":"Phaser.Device#mspointer","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[6273,6295],"filename":"Device.js","lineno":249,"path":"src\\utils"},"properties":[{"type":{"names":["string"]},"nullable":true,"description":"The newest type of Wheel/Scroll event supported: 'wheel', 'mousewheel', 'DOMMouseScroll'","name":"wheelType"}],"defaultvalue":null,"access":"protected","name":"wheelEvent","longname":"Phaser.Device#wheelEvent","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[6424,6442],"filename":"Device.js","lineno":257,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Set to true if running in Arora.","name":"arora"}],"defaultvalue":false,"name":"arora","longname":"Phaser.Device#arora","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[6554,6573],"filename":"Device.js","lineno":263,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Set to true if running in Chrome.","name":"chrome"}],"defaultvalue":false,"name":"chrome","longname":"Phaser.Device#chrome","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[6722,6744],"filename":"Device.js","lineno":269,"path":"src\\utils"},"properties":[{"type":{"names":["number"]},"description":"If running in Chrome this will contain the major version number.","name":"chromeVersion"}],"defaultvalue":0,"name":"chromeVersion","longname":"Phaser.Device#chromeVersion","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[6860,6881],"filename":"Device.js","lineno":275,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Set to true if running in Epiphany.","name":"epiphany"}],"defaultvalue":false,"name":"epiphany","longname":"Phaser.Device#epiphany","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[6995,7015],"filename":"Device.js","lineno":281,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Set to true if running in Firefox.","name":"firefox"}],"defaultvalue":false,"name":"firefox","longname":"Phaser.Device#firefox","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[7166,7189],"filename":"Device.js","lineno":287,"path":"src\\utils"},"properties":[{"type":{"names":["number"]},"description":"If running in Firefox this will contain the major version number.","name":"firefoxVersion"}],"defaultvalue":0,"name":"firefoxVersion","longname":"Phaser.Device#firefoxVersion","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[7308,7323],"filename":"Device.js","lineno":293,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Set to true if running in Internet Explorer.","name":"ie"}],"defaultvalue":false,"name":"ie","longname":"Phaser.Device#ie","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[7548,7566],"filename":"Device.js","lineno":299,"path":"src\\utils"},"properties":[{"type":{"names":["number"]},"description":"If running in Internet Explorer this will contain the major version number. Beyond IE10 you should use Device.trident and Device.tridentVersion.","name":"ieVersion"}],"defaultvalue":0,"name":"ieVersion","longname":"Phaser.Device#ieVersion","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[7715,7735],"filename":"Device.js","lineno":305,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Set to true if running a Trident version of Internet Explorer (IE11+)","name":"trident"}],"defaultvalue":false,"name":"trident","longname":"Phaser.Device#trident","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[7977,8000],"filename":"Device.js","lineno":311,"path":"src\\utils"},"properties":[{"type":{"names":["number"]},"description":"If running in Internet Explorer 11 this will contain the major version number. See {@link http://msdn.microsoft.com/en-us/library/ie/ms537503(v=vs.85).aspx}","name":"tridentVersion"}],"defaultvalue":0,"name":"tridentVersion","longname":"Phaser.Device#tridentVersion","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[8126,8143],"filename":"Device.js","lineno":317,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Set to true if running in Microsoft Edge browser.","name":"edge"}],"defaultvalue":false,"name":"edge","longname":"Phaser.Device#edge","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[8268,8293],"filename":"Device.js","lineno":323,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Set to true if running in Mobile Safari.","name":"mobileSafari"}],"defaultvalue":false,"name":"mobileSafari","longname":"Phaser.Device#mobileSafari","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[8405,8424],"filename":"Device.js","lineno":329,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Set to true if running in Midori.","name":"midori"}],"defaultvalue":false,"name":"midori","longname":"Phaser.Device#midori","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[8534,8552],"filename":"Device.js","lineno":335,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Set to true if running in Opera.","name":"opera"}],"defaultvalue":false,"name":"opera","longname":"Phaser.Device#opera","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[8664,8683],"filename":"Device.js","lineno":341,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Set to true if running in Safari.","name":"safari"}],"defaultvalue":false,"name":"safari","longname":"Phaser.Device#safari","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[8832,8854],"filename":"Device.js","lineno":347,"path":"src\\utils"},"properties":[{"type":{"names":["number"]},"description":"If running in Safari this will contain the major version number.","name":"safariVersion"}],"defaultvalue":0,"name":"safariVersion","longname":"Phaser.Device#safariVersion","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[8990,9009],"filename":"Device.js","lineno":353,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Set to true if running as a WebApp, i.e. within a WebView","name":"webApp"}],"defaultvalue":false,"name":"webApp","longname":"Phaser.Device#webApp","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[9159,9176],"filename":"Device.js","lineno":359,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Set to true if running in the Silk browser (as used on the Amazon Kindle)","name":"silk"}],"defaultvalue":false,"name":"silk","longname":"Phaser.Device#silk","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[9300,9322],"filename":"Device.js","lineno":367,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Are Audio tags available?","name":"audioData"}],"defaultvalue":false,"name":"audioData","longname":"Phaser.Device#audioData","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[9433,9454],"filename":"Device.js","lineno":373,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is the WebAudio API available?","name":"webAudio"}],"defaultvalue":false,"name":"webAudio","longname":"Phaser.Device#webAudio","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[9561,9577],"filename":"Device.js","lineno":379,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Can this device play ogg files?","name":"ogg"}],"defaultvalue":false,"name":"ogg","longname":"Phaser.Device#ogg","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[9686,9703],"filename":"Device.js","lineno":385,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Can this device play opus files?","name":"opus"}],"defaultvalue":false,"name":"opus","longname":"Phaser.Device#opus","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[9810,9826],"filename":"Device.js","lineno":391,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Can this device play mp3 files?","name":"mp3"}],"defaultvalue":false,"name":"mp3","longname":"Phaser.Device#mp3","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[9933,9949],"filename":"Device.js","lineno":397,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Can this device play wav files?","name":"wav"}],"defaultvalue":false,"name":"wav","longname":"Phaser.Device#wav","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[10103,10119],"filename":"Device.js","lineno":404,"path":"src\\utils"},"description":"Can this device play m4a files?","properties":[{"type":{"names":["boolean"]},"description":"True if this device can play m4a files.","name":"m4a"}],"defaultvalue":false,"name":"m4a","longname":"Phaser.Device#m4a","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[10228,10245],"filename":"Device.js","lineno":410,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Can this device play webm files?","name":"webm"}],"defaultvalue":false,"name":"webm","longname":"Phaser.Device#webm","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[10374,10392],"filename":"Device.js","lineno":416,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Can this device play EC-3 Dolby Digital Plus files?","name":"dolby"}],"defaultvalue":false,"name":"dolby","longname":"Phaser.Device#dolby","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[10527,10548],"filename":"Device.js","lineno":424,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Can this device play ogg video files?","name":"oggVideo"}],"defaultvalue":false,"name":"oggVideo","longname":"Phaser.Device#oggVideo","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[10672,10694],"filename":"Device.js","lineno":430,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Can this device play h264 mp4 video files?","name":"h264Video"}],"defaultvalue":false,"name":"h264Video","longname":"Phaser.Device#h264Video","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[10817,10838],"filename":"Device.js","lineno":436,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Can this device play h264 mp4 video files?","name":"mp4Video"}],"defaultvalue":false,"name":"mp4Video","longname":"Phaser.Device#mp4Video","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[10958,10980],"filename":"Device.js","lineno":442,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Can this device play webm video files?","name":"webmVideo"}],"defaultvalue":false,"name":"webmVideo","longname":"Phaser.Device#webmVideo","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[11098,11119],"filename":"Device.js","lineno":448,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Can this device play vp9 video files?","name":"vp9Video"}],"defaultvalue":false,"name":"vp9Video","longname":"Phaser.Device#vp9Video","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[11237,11258],"filename":"Device.js","lineno":454,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Can this device play hls video files?","name":"hlsVideo"}],"defaultvalue":false,"name":"hlsVideo","longname":"Phaser.Device#hlsVideo","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[11376,11395],"filename":"Device.js","lineno":462,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is running on iPhone?","name":"iPhone"}],"defaultvalue":false,"name":"iPhone","longname":"Phaser.Device#iPhone","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[11497,11517],"filename":"Device.js","lineno":468,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is running on iPhone4?","name":"iPhone4"}],"defaultvalue":false,"name":"iPhone4","longname":"Phaser.Device#iPhone4","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[11613,11630],"filename":"Device.js","lineno":474,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is running on iPad?","name":"iPad"}],"defaultvalue":false,"name":"iPad","longname":"Phaser.Device#iPad","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[11768,11787],"filename":"Device.js","lineno":482,"path":"src\\utils"},"properties":[{"type":{"names":["number"]},"description":"PixelRatio of the host device?","name":"pixelRatio"}],"defaultvalue":0,"name":"pixelRatio","longname":"Phaser.Device#pixelRatio","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[11959,11984],"filename":"Device.js","lineno":488,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Is the device big or little endian? (only detected if the browser supports TypedArrays)","name":"littleEndian"}],"defaultvalue":false,"name":"littleEndian","longname":"Phaser.Device#littleEndian","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[12099,12125],"filename":"Device.js","lineno":494,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Same value as `littleEndian`.","name":"LITTLE_ENDIAN"}],"defaultvalue":false,"name":"LITTLE_ENDIAN","longname":"Phaser.Device#LITTLE_ENDIAN","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[12292,12317],"filename":"Device.js","lineno":500,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Does the device context support 32bit pixel manipulation using array buffer views?","name":"support32bit"}],"defaultvalue":false,"name":"support32bit","longname":"Phaser.Device#support32bit","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[12445,12468],"filename":"Device.js","lineno":506,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Does the browser support the Full Screen API?","name":"fullscreen"}],"defaultvalue":false,"name":"fullscreen","longname":"Phaser.Device#fullscreen","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[12652,12679],"filename":"Device.js","lineno":512,"path":"src\\utils"},"properties":[{"type":{"names":["string"]},"description":"If the browser supports the Full Screen API this holds the call you need to use to activate it.","name":"requestFullscreen"}],"defaultvalue":"","name":"requestFullscreen","longname":"Phaser.Device#requestFullscreen","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[12860,12886],"filename":"Device.js","lineno":518,"path":"src\\utils"},"properties":[{"type":{"names":["string"]},"description":"If the browser supports the Full Screen API this holds the call you need to use to cancel it.","name":"cancelFullscreen"}],"defaultvalue":"","name":"cancelFullscreen","longname":"Phaser.Device#cancelFullscreen","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[13049,13080],"filename":"Device.js","lineno":524,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Does the browser support access to the Keyboard during Full Screen mode?","name":"fullscreenKeyboard"}],"defaultvalue":false,"name":"fullscreenKeyboard","longname":"Phaser.Device#fullscreenKeyboard","kind":"member","memberof":"Phaser.Device","scope":"instance","___s":true},{"meta":{"range":[13708,13757],"filename":"Device.js","lineno":544,"path":"src\\utils"},"description":"This signal is dispatched after device initialization occurs but before any of the ready\rcallbacks (see {@link Phaser.Device.whenReady whenReady}) have been invoked.\r\rLocal \"patching\" for a particular device can/should be done in this event.\r\r_Note_: This signal is removed after the device has been readied; if a handler has not been\radded _before_ `new Phaser.Game(..)` it is probably too late.","type":{"names":["Phaser.Signal"]},"nullable":true,"scope":"static","name":"onInitialized","longname":"Phaser.Device.onInitialized","kind":"member","memberof":"Phaser.Device","___s":true},{"meta":{"range":[14561,15960],"filename":"Device.js","lineno":560,"path":"src\\utils"},"description":"Add a device-ready handler and ensure the device ready sequence is started.\r\rPhaser.Device will _not_ activate or initialize until at least one `whenReady` handler is added,\rwhich is normally done automatically be calling `new Phaser.Game(..)`.\r\rThe handler is invoked when the device is considered \"ready\", which may be immediately\rif the device is already \"ready\". See {@link Phaser.Device#deviceReadyAt deviceReadyAt}.","kind":"function","params":[{"type":{"names":["function"]},"description":"Callback to invoke when the device is ready. It is invoked with the given context the Phaser.Device object is supplied as the first argument.","name":"handler"},{"type":{"names":["object"]},"optional":true,"description":"Context in which to invoke the handler","name":"context"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the device ready check will not be started.","name":"nonPrimer"}],"name":"whenReady","longname":"Phaser.Device.whenReady","memberof":"Phaser.Device","scope":"static","___s":true},{"meta":{"range":[35419,35717],"filename":"Device.js","lineno":1250,"path":"src\\utils"},"description":"Check whether the host environment can play audio.","kind":"function","name":"canPlayAudio","memberof":"Phaser.Device","params":[{"type":{"names":["string"]},"description":"One of 'mp3, 'ogg', 'm4a', 'wav', 'webm' or 'opus'.","name":"type"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the given file type is supported by the browser, otherwise false."}],"longname":"Phaser.Device#canPlayAudio","scope":"instance","___s":true},{"meta":{"range":[36360,36650],"filename":"Device.js","lineno":1293,"path":"src\\utils"},"description":"Check whether the host environment can play video files.","kind":"function","name":"canPlayVideo","memberof":"Phaser.Device","params":[{"type":{"names":["string"]},"description":"One of 'mp4, 'ogg', 'webm' or 'mpeg'.","name":"type"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the given file type is supported by the browser, otherwise false."}],"longname":"Phaser.Device#canPlayVideo","scope":"instance","___s":true},{"meta":{"range":[37120,37455],"filename":"Device.js","lineno":1324,"path":"src\\utils"},"description":"Check whether the console is open.\rNote that this only works in Firefox with Firebug and earlier versions of Chrome.\rIt used to work in Chrome, but then they removed the ability: {@link http://src.chromium.org/viewvc/blink?view=revision&revision=151136}","kind":"function","name":"isConsoleOpen","memberof":"Phaser.Device","longname":"Phaser.Device#isConsoleOpen","scope":"instance","___s":true},{"meta":{"range":[37915,38327],"filename":"Device.js","lineno":1359,"path":"src\\utils"},"description":"Detect if the host is a an Android Stock browser.\rThis is available before the device \"ready\" event.\r\rAuthors might want to scale down on effects and switch to the CANVAS rendering method on those devices.","examples":["var defaultRenderingMode = Phaser.Device.isAndroidStockBrowser() ? Phaser.CANVAS : Phaser.AUTO;"],"kind":"function","name":"isAndroidStockBrowser","memberof":"Phaser.Device","longname":"Phaser.Device#isAndroidStockBrowser","scope":"instance","___s":true},{"meta":{"range":[204,552],"filename":"DOM.js","lineno":7,"path":"src\\utils"},"description":"DOM utility class.\r\rProvides a useful Window and Element functions as well as cross-browser compatibility buffer.\r\rSome code originally derived from {@link https://github.com/ryanve/verge verge}.\rSome parts were inspired by the research of Ryan Van Etten, released under MIT License 2013.","kind":"class","name":"DOM","scope":"static","memberof":"Phaser","longname":"Phaser.DOM","___s":true},{"meta":{"range":[576,1074],"filename":"DOM.js","lineno":20,"path":"src\\utils"},"description":"Get the [absolute] position of the element relative to the Document.\r\rThe value may vary slightly as the page is scrolled due to rounding errors.","kind":"function","name":"getOffset","params":[{"type":{"names":["DOMElement"]},"description":"The targeted element that we want to retrieve the offset.","name":"element"},{"type":{"names":["Phaser.Point"]},"optional":true,"description":"The point we want to take the x/y values of the offset.","name":"point"}],"returns":[{"type":{"names":["Phaser.Point"]},"description":"- A point objet with the offsetX and Y as its properties."}],"memberof":"Phaser.DOM","longname":"Phaser.DOM.getOffset","scope":"static","___s":true},{"meta":{"range":[1589,2455],"filename":"DOM.js","lineno":48,"path":"src\\utils"},"description":"A cross-browser element.getBoundingClientRect method with optional cushion.\r\rReturns a plain object containing the properties `top/bottom/left/right/width/height` with respect to the top-left corner of the current viewport.\rIts properties match the native rectangle.\rThe cushion parameter is an amount of pixels (+/-) to cushion the element.\rIt adjusts the measurements such that it is possible to detect when an element is near the viewport.","kind":"function","name":"getBounds","params":[{"type":{"names":["DOMElement","Object"]},"description":"The element or stack (uses first item) to get the bounds for.","name":"element"},{"type":{"names":["number"]},"optional":true,"description":"A +/- pixel adjustment amount.","name":"cushion"}],"returns":[{"type":{"names":["Object","boolean"]},"description":"A plain object containing the properties `top/bottom/left/right/width/height` or `false` if a non-valid element is given."}],"memberof":"Phaser.DOM","longname":"Phaser.DOM.getBounds","scope":"static","___s":true},{"meta":{"range":[3698,4065],"filename":"DOM.js","lineno":100,"path":"src\\utils"},"description":"Get the Visual viewport aspect ratio (or the aspect ratio of an object or element)","kind":"function","name":"getAspectRatio","params":[{"type":{"names":["DOMElement","Object"]},"optional":true,"defaultvalue":"(visualViewport)","description":"The object to determine the aspect ratio for. Must have public `width` and `height` properties or methods.","name":"object"}],"returns":[{"type":{"names":["number"]},"description":"The aspect ratio."}],"memberof":"Phaser.DOM","longname":"Phaser.DOM.getAspectRatio","scope":"static","___s":true},{"meta":{"range":[4524,5326],"filename":"DOM.js","lineno":128,"path":"src\\utils"},"description":"Tests if the given DOM element is within the Layout viewport.\r\rThe optional cushion parameter allows you to specify a distance.\r\rinLayoutViewport(element, 100) is `true` if the element is in the viewport or 100px near it.\rinLayoutViewport(element, -100) is `true` if the element is in the viewport or at least 100px near it.","kind":"function","name":"inLayoutViewport","params":[{"type":{"names":["DOMElement","Object"]},"description":"The DOM element to check. If no element is given it defaults to the Phaser game canvas.","name":"element"},{"type":{"names":["number"]},"optional":true,"description":"The cushion allows you to specify a distance within which the element must be within the viewport.","name":"cushion"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the element is within the viewport, or within `cushion` distance from it."}],"memberof":"Phaser.DOM","longname":"Phaser.DOM.inLayoutViewport","scope":"static","___s":true},{"meta":{"range":[5580,7010],"filename":"DOM.js","lineno":149,"path":"src\\utils"},"description":"Returns the device screen orientation.\r\rOrientation values: 'portrait-primary', 'landscape-primary', 'portrait-secondary', 'landscape-secondary'.\r\rOrder of resolving:\r- Screen Orientation API, or variation of - Future track. Most desktop and mobile browsers.\r- Screen size ratio check - If fallback is 'screen', suited for desktops.\r- Viewport size ratio check - If fallback is 'viewport', suited for mobile.\r- window.orientation - If fallback is 'window.orientation', works iOS and probably most Android; non-recommended track.\r- Media query\r- Viewport size ratio check (probably only IE9 and legacy mobile gets here..)\r\rSee\r- https://w3c.github.io/screen-orientation/ (conflicts with mozOrientation/msOrientation)\r- https://developer.mozilla.org/en-US/docs/Web/API/Screen.orientation (mozOrientation)\r- http://msdn.microsoft.com/en-us/library/ie/dn342934(v=vs.85).aspx\r- https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Testing_media_queries\r- http://stackoverflow.com/questions/4917664/detect-viewport-orientation\r- http://www.matthewgifford.com/blog/2011/12/22/a-misconception-about-window-orientation","kind":"function","name":"getScreenOrientation","access":"protected","params":[{"type":{"names":["string"]},"optional":true,"defaultvalue":"(none)","description":"Specify 'screen', 'viewport', or 'window.orientation'.","name":"primaryFallback"}],"memberof":"Phaser.DOM","longname":"Phaser.DOM.getScreenOrientation","scope":"static","___s":true},{"meta":{"range":[9459,9495],"filename":"DOM.js","lineno":239,"path":"src\\utils"},"description":"The bounds of the Visual viewport, as discussed in \r{@link http://www.quirksmode.org/mobile/viewports.html A tale of two viewports — part one}\rwith one difference: the viewport size _excludes_ scrollbars, as found on some desktop browsers.   \r\rSupported mobile:\r  iOS/Safari, Android 4, IE10, Firefox OS (maybe not Firefox Android), Opera Mobile 16\r\rThe properties change dynamically.","type":{"names":["Phaser.Rectangle"]},"properties":[{"type":{"names":["number"]},"description":"Scroll, left offset - eg. \"scrollX\"","name":"x"},{"type":{"names":["number"]},"description":"Scroll, top offset - eg. \"scrollY\"","name":"y"},{"type":{"names":["number"]},"description":"Viewport width in pixels.","name":"width"},{"type":{"names":["number"]},"description":"Viewport height in pixels.","name":"height"}],"readonly":true,"name":"visualBounds","longname":"Phaser.DOM.visualBounds","kind":"member","memberof":"Phaser.DOM","scope":"static","___s":true},{"meta":{"range":[10416,10452],"filename":"DOM.js","lineno":260,"path":"src\\utils"},"description":"The bounds of the Layout viewport, as discussed in \r{@link http://www.quirksmode.org/mobile/viewports2.html A tale of two viewports — part two};\rbut honoring the constraints as specified applicable viewport meta-tag.\r\rThe bounds returned are not guaranteed to be fully aligned with CSS media queries (see\r{@link http://www.matanich.com/2013/01/07/viewport-size/ What size is my viewport?}).\r\rThis is _not_ representative of the Visual bounds: in particular the non-primary axis will\rgenerally be significantly larger than the screen height on mobile devices when running with a\rconstrained viewport.\r\rThe properties change dynamically.","type":{"names":["Phaser.Rectangle"]},"properties":[{"type":{"names":["number"]},"description":"Viewport width in pixels.","name":"width"},{"type":{"names":["number"]},"description":"Viewport height in pixels.","name":"height"}],"readonly":true,"name":"layoutBounds","longname":"Phaser.DOM.layoutBounds","kind":"member","memberof":"Phaser.DOM","scope":"static","___s":true},{"meta":{"range":[10817,10855],"filename":"DOM.js","lineno":274,"path":"src\\utils"},"description":"The size of the document / Layout viewport.\r\rThis incorrectly reports the dimensions in IE.\r\rThe properties change dynamically.","type":{"names":["Phaser.Rectangle"]},"properties":[{"type":{"names":["number"]},"description":"Document width in pixels.","name":"width"},{"type":{"names":["number"]},"description":"Document height in pixels.","name":"height"}],"readonly":true,"name":"documentBounds","longname":"Phaser.DOM.documentBounds","kind":"member","memberof":"Phaser.DOM","scope":"static","___s":true},{"meta":{"range":[11340,11498],"filename":"DOM.js","lineno":289,"path":"src\\utils"},"description":"A cross-browser window.scrollX.","name":"scrollX","properties":[{"type":{"names":["number"]},"name":"scrollX"}],"readonly":true,"access":"protected","memberof":"Phaser.DOM","longname":"Phaser.DOM.scrollX","scope":"static","kind":"member","___s":true},{"meta":{"range":[11589,11747],"filename":"DOM.js","lineno":301,"path":"src\\utils"},"description":"A cross-browser window.scrollY.","name":"scrollY","properties":[{"type":{"names":["number"]},"name":"scrollY"}],"readonly":true,"access":"protected","memberof":"Phaser.DOM","longname":"Phaser.DOM.scrollY","scope":"static","kind":"member","___s":true},{"meta":{"range":[593,1254],"filename":"LinkedList.js","lineno":18,"path":"src\\utils"},"description":"A basic Linked List data structure.\r\rThis implementation _modifies_ the `prev` and `next` properties of each item added:\r- The `prev` and `next` properties must be writable and should not be used for any other purpose.\r- Items _cannot_ be added to multiple LinkedLists at the same time.\r- Only objects can be added.","kind":"class","classdesc":"Phaser.LinkedList","name":"LinkedList","longname":"Phaser.LinkedList","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[731,747],"filename":"LinkedList.js","lineno":25,"path":"src\\utils"},"description":"Next element in the list.","properties":[{"type":{"names":["object"]},"name":"next"}],"defaultvalue":null,"name":"next","longname":"Phaser.LinkedList#next","kind":"member","memberof":"Phaser.LinkedList","scope":"instance","___s":true},{"meta":{"range":[857,873],"filename":"LinkedList.js","lineno":32,"path":"src\\utils"},"description":"Previous element in the list.","properties":[{"type":{"names":["object"]},"name":"prev"}],"defaultvalue":null,"name":"prev","longname":"Phaser.LinkedList#prev","kind":"member","memberof":"Phaser.LinkedList","scope":"instance","___s":true},{"meta":{"range":[981,998],"filename":"LinkedList.js","lineno":39,"path":"src\\utils"},"description":"First element in the list.","properties":[{"type":{"names":["object"]},"name":"first"}],"defaultvalue":null,"name":"first","longname":"Phaser.LinkedList#first","kind":"member","memberof":"Phaser.LinkedList","scope":"instance","___s":true},{"meta":{"range":[1104,1120],"filename":"LinkedList.js","lineno":46,"path":"src\\utils"},"description":"Last element in the list.","properties":[{"type":{"names":["object"]},"name":"last"}],"defaultvalue":null,"name":"last","longname":"Phaser.LinkedList#last","kind":"member","memberof":"Phaser.LinkedList","scope":"instance","___s":true},{"meta":{"range":[1234,1248],"filename":"LinkedList.js","lineno":53,"path":"src\\utils"},"description":"Number of elements in the list.","properties":[{"type":{"names":["integer"]},"name":"total"}],"defaultvalue":0,"name":"total","longname":"Phaser.LinkedList#total","kind":"member","memberof":"Phaser.LinkedList","scope":"instance","___s":true},{"meta":{"range":[1298,1592],"filename":"LinkedList.js","lineno":59,"path":"src\\utils"},"description":"Adds a new element to this linked list.","kind":"function","name":"add","params":[{"type":{"names":["object"]},"description":"The element to add to this list. Can be a Phaser.Sprite or any other object you need to quickly iterate through.","name":"item"}],"returns":[{"type":{"names":["object"]},"description":"The item that was added."}],"memberof":"Phaser.LinkedList","longname":"Phaser.LinkedList#add","scope":"instance","___s":true},{"meta":{"range":[2231,2365],"filename":"LinkedList.js","lineno":92,"path":"src\\utils"},"description":"Resets the first, last, next and previous node pointers in this list.","kind":"function","name":"reset","memberof":"Phaser.LinkedList","longname":"Phaser.LinkedList#reset","scope":"instance","___s":true},{"meta":{"range":[2545,2740],"filename":"LinkedList.js","lineno":107,"path":"src\\utils"},"description":"Removes the given element from this linked list if it exists.","kind":"function","name":"remove","params":[{"type":{"names":["object"]},"description":"The item to be removed from the list.","name":"item"}],"memberof":"Phaser.LinkedList","longname":"Phaser.LinkedList#remove","scope":"instance","___s":true},{"meta":{"range":[3742,4008],"filename":"LinkedList.js","lineno":156,"path":"src\\utils"},"description":"Calls a function on all members of this list, using the member as the context for the callback.\rThe function must exist on the member.","kind":"function","name":"callAll","params":[{"type":{"names":["function"]},"description":"The function to call.","name":"callback"}],"memberof":"Phaser.LinkedList","longname":"Phaser.LinkedList#callAll","scope":"instance","___s":true},{"meta":{"range":[525,1906],"filename":"RequestAnimationFrame.js","lineno":15,"path":"src\\utils"},"description":"Abstracts away the use of RAF or setTimeOut for the core game update loop.","kind":"class","classdesc":"Phaser.RequestAnimationFrame","params":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Tell Phaser to use setTimeOut even if raf is available.","name":"forceSetTimeOut"}],"name":"RequestAnimationFrame","longname":"Phaser.RequestAnimationFrame","memberof":"Phaser","scope":"static","___s":true},{"meta":{"range":[751,767],"filename":"RequestAnimationFrame.js","lineno":22,"path":"src\\utils"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"The currently running game.","name":"game"}],"name":"game","longname":"Phaser.RequestAnimationFrame#game","kind":"member","memberof":"Phaser.RequestAnimationFrame","scope":"instance","___s":true},{"meta":{"range":[907,929],"filename":"RequestAnimationFrame.js","lineno":28,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"true if RequestAnimationFrame is running, otherwise false.","name":"isRunning"}],"defaultvalue":false,"name":"isRunning","longname":"Phaser.RequestAnimationFrame#isRunning","kind":"member","memberof":"Phaser.RequestAnimationFrame","scope":"instance","___s":true},{"meta":{"range":[1056,1094],"filename":"RequestAnimationFrame.js","lineno":33,"path":"src\\utils"},"properties":[{"type":{"names":["boolean"]},"description":"Tell Phaser to use setTimeOut even if raf is available.","name":"forceSetTimeOut"}],"name":"forceSetTimeOut","longname":"Phaser.RequestAnimationFrame#forceSetTimeOut","kind":"member","memberof":"Phaser.RequestAnimationFrame","scope":"instance","___s":true},{"meta":{"range":[1961,2110],"filename":"RequestAnimationFrame.js","lineno":70,"path":"src\\utils"},"description":"Starts the requestAnimationFrame running or setTimeout if unavailable in browser","kind":"function","name":"start","memberof":"Phaser.RequestAnimationFrame","longname":"Phaser.RequestAnimationFrame#start","scope":"instance","___s":true},{"meta":{"range":[2793,2913],"filename":"RequestAnimationFrame.js","lineno":103,"path":"src\\utils"},"description":"The update method for the requestAnimationFrame","kind":"function","name":"updateRAF","memberof":"Phaser.RequestAnimationFrame","longname":"Phaser.RequestAnimationFrame#updateRAF","scope":"instance","___s":true},{"meta":{"range":[3266,3383],"filename":"RequestAnimationFrame.js","lineno":119,"path":"src\\utils"},"description":"The update method for the setTimeout.","kind":"function","name":"updateSetTimeout","memberof":"Phaser.RequestAnimationFrame","longname":"Phaser.RequestAnimationFrame#updateSetTimeout","scope":"instance","___s":true},{"meta":{"range":[3627,3740],"filename":"RequestAnimationFrame.js","lineno":134,"path":"src\\utils"},"description":"Stops the requestAnimationFrame from running.","kind":"function","name":"stop","memberof":"Phaser.RequestAnimationFrame","longname":"Phaser.RequestAnimationFrame#stop","scope":"instance","___s":true},{"meta":{"range":[4014,4147],"filename":"RequestAnimationFrame.js","lineno":153,"path":"src\\utils"},"description":"Is the browser using setTimeout?","kind":"function","name":"isSetTimeOut","returns":[{"type":{"names":["boolean"]}}],"memberof":"Phaser.RequestAnimationFrame","longname":"Phaser.RequestAnimationFrame#isSetTimeOut","scope":"instance","___s":true},{"meta":{"range":[4232,4369],"filename":"RequestAnimationFrame.js","lineno":162,"path":"src\\utils"},"description":"Is the browser using requestAnimationFrame?","kind":"function","name":"isRAF","returns":[{"type":{"names":["boolean"]}}],"memberof":"Phaser.RequestAnimationFrame","longname":"Phaser.RequestAnimationFrame#isRAF","scope":"instance","___s":true},{"meta":{"range":[204,245],"filename":"Utils.js","lineno":7,"path":"src\\utils"},"kind":"class","name":"Utils","scope":"static","memberof":"Phaser","longname":"Phaser.Utils","___s":true},{"meta":{"range":[271,597],"filename":"Utils.js","lineno":13,"path":"src\\utils"},"description":"Takes the given string and reverses it, returning the reversed string.\rFor example if given the string `Atari 520ST` it would return `TS025 iratA`.","kind":"function","name":"reverseString","params":[{"type":{"names":["string"]},"description":"The string to be reversed.","name":"string"}],"returns":[{"type":{"names":["string"]},"description":"The reversed string."}],"memberof":"Phaser.Utils","longname":"Phaser.Utils.reverseString","scope":"static","___s":true},{"meta":{"range":[710,1023],"filename":"Utils.js","lineno":27,"path":"src\\utils"},"description":"Gets an objects property by string.","kind":"function","name":"getProperty","params":[{"type":{"names":["object"]},"description":"The object to traverse.","name":"obj"},{"type":{"names":["string"]},"description":"The property whose value will be returned.","name":"prop"}],"returns":[{"type":{"names":["*"]},"description":"the value of the property or null if property isn't found ."}],"memberof":"Phaser.Utils","longname":"Phaser.Utils.getProperty","scope":"static","___s":true},{"meta":{"range":[1495,1792],"filename":"Utils.js","lineno":60,"path":"src\\utils"},"description":"Sets an objects property by string.","kind":"function","name":"setProperty","params":[{"type":{"names":["object"]},"description":"The object to traverse","name":"obj"},{"type":{"names":["string"]},"description":"The property whose value will be changed","name":"prop"}],"returns":[{"type":{"names":["object"]},"description":"The object on which the property was set."}],"memberof":"Phaser.Utils","longname":"Phaser.Utils.setProperty","scope":"static","___s":true},{"meta":{"range":[2233,2779],"filename":"Utils.js","lineno":91,"path":"src\\utils"},"description":"Generate a random bool result based on the chance value.\r\rReturns true or false based on the chance value (default 50%). For example if you wanted a player to have a 30% chance\rof getting a bonus, call chanceRoll(30) - true means the chance passed, false means it failed.","kind":"function","name":"chanceRoll","params":[{"type":{"names":["number"]},"description":"The chance of receiving the value. A number between 0 and 100 (effectively 0% to 100%).","name":"chance"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the roll passed, or false otherwise."}],"memberof":"Phaser.Utils","longname":"Phaser.Utils#chanceRoll","scope":"instance","___s":true},{"meta":{"range":[2947,3162],"filename":"Utils.js","lineno":106,"path":"src\\utils"},"description":"Choose between one of two values randomly.","kind":"function","name":"randomChoice","params":[{"type":{"names":["any"]},"name":"choice1"},{"type":{"names":["any"]},"name":"choice2"}],"returns":[{"type":{"names":["any"]},"description":"The randomly selected choice"}],"memberof":"Phaser.Utils","longname":"Phaser.Utils#randomChoice","scope":"instance","___s":true},{"meta":{"range":[3286,3558],"filename":"Utils.js","lineno":118,"path":"src\\utils"},"description":"Get a unit dimension from a string.","kind":"function","name":"parseDimension","params":[{"type":{"names":["string","number"]},"description":"The size to parse.","name":"size"},{"type":{"names":["number"]},"description":"The window dimension to check.","name":"dimension"}],"returns":[{"type":{"names":["number"]},"description":"The parsed dimension."}],"memberof":"Phaser.Utils","longname":"Phaser.Utils.parseDimension","scope":"static","___s":true},{"meta":{"range":[4280,5448],"filename":"Utils.js","lineno":161,"path":"src\\utils"},"description":"Takes the given string and pads it out, to the length required, using the character\rspecified. For example if you need a string to be 6 characters long, you can call:\r\r`pad('bob', 6, '-', 2)`\r\rThis would return: `bob---` as it has padded it out to 6 characters, using the `-` on the right.\r\rYou can also use it to pad numbers (they are always returned as strings):\r\r`pad(512, 6, '0', 1)`\r\rWould return: `000512` with the string padded to the left.\r\rIf you don't specify a direction it'll pad to both sides:\r\r`pad('c64', 7, '*')`\r\rWould return: `**c64**`","kind":"function","name":"pad","params":[{"type":{"names":["string"]},"description":"The target string. `toString()` will be called on the string, which means you can also pass in common data types like numbers.","name":"str"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The number of characters to be added.","name":"len"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\" \"","description":"The string to pad it out with (defaults to a space).","name":"pad"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":3,"description":"The direction dir = 1 (left), 2 (right), 3 (both).","name":"dir"}],"returns":[{"type":{"names":["string"]},"description":"The padded string."}],"memberof":"Phaser.Utils","longname":"Phaser.Utils.pad","scope":"static","___s":true},{"meta":{"range":[6392,6723],"filename":"Utils.js","lineno":222,"path":"src\\utils"},"description":"This is a slightly modified version of jQuery.isPlainObject.\rA plain object is an object whose internal class property is [object Object].","kind":"function","name":"isPlainObject","params":[{"type":{"names":["object"]},"description":"The object to inspect.","name":"obj"}],"returns":[{"type":{"names":["boolean"]},"description":"- true if the object is plain, otherwise false."}],"memberof":"Phaser.Utils","longname":"Phaser.Utils.isPlainObject","scope":"static","___s":true},{"meta":{"range":[7763,8059],"filename":"Utils.js","lineno":258,"path":"src\\utils"},"description":"This is a slightly modified version of http://api.jquery.com/jQuery.extend/","kind":"function","name":"extend","params":[{"type":{"names":["boolean"]},"description":"Perform a deep copy?","name":"deep"},{"type":{"names":["object"]},"description":"The target object to copy to.","name":"target"}],"returns":[{"type":{"names":["object"]},"description":"The extended object."}],"memberof":"Phaser.Utils","longname":"Phaser.Utils.extend","scope":"static","___s":true},{"meta":{"range":[10312,10983],"filename":"Utils.js","lineno":338,"path":"src\\utils"},"description":"Mixes in an existing mixin object with the target.\r\rValues in the mixin that have either `get` or `set` functions are created as properties via `defineProperty`\r_except_ if they also define a `clone` method - if a clone method is defined that is called instead and\rthe result is assigned directly.","kind":"function","name":"mixinPrototype","params":[{"type":{"names":["object"]},"description":"The target object to receive the new functions.","name":"target"},{"type":{"names":["object"]},"description":"The object to copy the functions from.","name":"mixin"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If the target object already has a matching function should it be overwritten or not?","name":"replace"}],"memberof":"Phaser.Utils","longname":"Phaser.Utils.mixinPrototype","scope":"static","___s":true},{"meta":{"range":[12183,12589],"filename":"Utils.js","lineno":390,"path":"src\\utils"},"description":"Mixes the source object into the destination object, returning the newly modified destination object.\rBased on original code by @mudcube","kind":"function","name":"mixin","params":[{"type":{"names":["object"]},"description":"The object to copy (the source object).","name":"from"},{"type":{"names":["object"]},"description":"The object to copy to (the destination object).","name":"to"}],"returns":[{"type":{"names":["object"]},"description":"The modified destination object."}],"memberof":"Phaser.Utils","longname":"Phaser.Utils.mixin","scope":"static","___s":true},{"meta":{"range":[580,598],"filename":"DisplayObjectContainer.js","lineno":24,"path":"src\\pixi\\display"},"description":"[read-only] The array of children of this container.","properties":[{"name":"children"}],"type":{"names":["Array(DisplayObject)"]},"readonly":true,"name":"children","longname":"Phaser.Group#children","kind":"member","memberof":"Phaser.Group","scope":"instance","inherits":"PIXI.DisplayObjectContainer#children","inherited":true,"___s":true},{"meta":{"range":[1045,1074],"filename":"DisplayObjectContainer.js","lineno":35,"path":"src\\pixi\\display"},"description":"If `ignoreChildInput`  is `false` it will allow this objects _children_ to be considered as valid for Input events.\r\rIf this property is `true` then the children will _not_ be considered as valid for Input events.\r\rNote that this property isn't recursive: only immediate children are influenced, it doesn't scan further down.","properties":[{"type":{"names":["boolean"]},"name":"ignoreChildInput"}],"defaultvalue":false,"name":"ignoreChildInput","longname":"Phaser.Group#ignoreChildInput","kind":"member","memberof":"Phaser.Group","scope":"instance","inherits":"PIXI.DisplayObjectContainer#ignoreChildInput","inherited":true,"___s":true},{"meta":{"range":[2199,2215],"filename":"Group.js","lineno":38,"path":"src\\core"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"access":"protected","name":"game","longname":"Phaser.FlexLayer#game","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#game","inherited":true,"___s":true},{"meta":{"range":[2425,2452],"filename":"Group.js","lineno":49,"path":"src\\core"},"description":"A name for this group. Not used internally but useful for debugging.","properties":[{"type":{"names":["string"]},"name":"name"}],"name":"name","longname":"Phaser.FlexLayer#name","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#name","inherited":true,"___s":true},{"meta":{"range":[2690,2700],"filename":"Group.js","lineno":57,"path":"src\\core"},"description":"The z-depth value of this object within its parent container/Group - the World is a Group as well.\rThis value must be unique for each child in a Group.","properties":[{"type":{"names":["integer"]},"name":"z"}],"readonly":true,"name":"z","longname":"Phaser.FlexLayer#z","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#z","inherited":true,"___s":true},{"meta":{"range":[3136,3160],"filename":"Group.js","lineno":80,"path":"src\\core"},"description":"Internal Phaser Type value.","properties":[{"type":{"names":["integer"]},"name":"type"}],"access":"protected","name":"type","longname":"Phaser.FlexLayer#type","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#type","inherited":true,"___s":true},{"meta":{"range":[3287,3318],"filename":"Group.js","lineno":86,"path":"src\\core"},"properties":[{"type":{"names":["number"]},"description":"The const physics body type of this object.","name":"physicsType"}],"readonly":true,"name":"physicsType","longname":"Phaser.FlexLayer#physicsType","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#physicsType","inherited":true,"___s":true},{"meta":{"range":[3536,3553],"filename":"Group.js","lineno":93,"path":"src\\core"},"description":"The alive property is useful for Groups that are children of other Groups and need to be included/excluded in checks like forEachAlive.","properties":[{"type":{"names":["boolean"]},"name":"alive"}],"defaultvalue":true,"name":"alive","longname":"Phaser.FlexLayer#alive","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#alive","inherited":true,"___s":true},{"meta":{"range":[3701,3719],"filename":"Group.js","lineno":100,"path":"src\\core"},"description":"If exists is true the group is updated, otherwise it is skipped.","properties":[{"type":{"names":["boolean"]},"name":"exists"}],"defaultvalue":true,"name":"exists","longname":"Phaser.FlexLayer#exists","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#exists","inherited":true,"___s":true},{"meta":{"range":[3895,3921],"filename":"Group.js","lineno":107,"path":"src\\core"},"description":"A group with `ignoreDestroy` set to `true` ignores all calls to its `destroy` method.","properties":[{"type":{"names":["boolean"]},"name":"ignoreDestroy"}],"defaultvalue":false,"name":"ignoreDestroy","longname":"Phaser.FlexLayer#ignoreDestroy","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#ignoreDestroy","inherited":true,"___s":true},{"meta":{"range":[4369,4396],"filename":"Group.js","lineno":119,"path":"src\\core"},"description":"A Group is that has `pendingDestroy` set to `true` is flagged to have its destroy method\rcalled on the next logic update.\rYou can set it directly to flag the Group to be destroyed on its next update.\r\rThis is extremely useful if you wish to destroy a Group from within one of its own callbacks\ror a callback of one of its children.","properties":[{"type":{"names":["boolean"]},"name":"pendingDestroy"}],"name":"pendingDestroy","longname":"Phaser.FlexLayer#pendingDestroy","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#pendingDestroy","inherited":true,"___s":true},{"meta":{"range":[4852,4882],"filename":"Group.js","lineno":130,"path":"src\\core"},"description":"The type of objects that will be created when using {@link #create} or {@link #createMultiple}.\r\rAny object may be used but it should extend either Sprite or Image and accept the same constructor arguments:\rwhen a new object is created it is passed the following parameters to its constructor: `(game, x, y, key, frame)`.","properties":[{"type":{"names":["object"]},"name":"classType"}],"defaultvalue":"{@link Phaser.Sprite}","name":"classType","longname":"Phaser.FlexLayer#classType","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#classType","inherited":true,"___s":true},{"meta":{"range":[5172,5190],"filename":"Group.js","lineno":138,"path":"src\\core"},"description":"The current display object that the group cursor is pointing to, if any. (Can be set manually.)\r\rThe cursor is a way to iterate through the children in a Group using {@link #next} and {@link #previous}.","properties":[{"type":{"names":["DisplayObject"]},"nullable":true,"name":"cursor"}],"name":"cursor","longname":"Phaser.FlexLayer#cursor","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#cursor","inherited":true,"___s":true},{"meta":{"range":[5569,5601],"filename":"Group.js","lineno":149,"path":"src\\core"},"description":"A Group with `inputEnableChildren` set to `true` will automatically call `inputEnabled = true` \ron any children _added_ to, or _created by_, this Group.\r\rIf there are children already in the Group at the time you set this property, they are not changed.","properties":[{"type":{"names":["boolean"]},"name":"inputEnableChildren"}],"defaultvalue":false,"name":"inputEnableChildren","longname":"Phaser.FlexLayer#inputEnableChildren","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#inputEnableChildren","inherited":true,"___s":true},{"meta":{"range":[6075,6118],"filename":"Group.js","lineno":161,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputDown signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 2 arguments: A reference to the Sprite that triggered the signal, and\ra reference to the Pointer that caused it.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputDown"}],"name":"onChildInputDown","longname":"Phaser.FlexLayer#onChildInputDown","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#onChildInputDown","inherited":true,"___s":true},{"meta":{"range":[6684,6725],"filename":"Group.js","lineno":174,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputUp signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 3 arguments: A reference to the Sprite that triggered the signal, \ra reference to the Pointer that caused it, and a boolean value `isOver` that tells you if the Pointer\ris still over the Sprite or not.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputUp"}],"name":"onChildInputUp","longname":"Phaser.FlexLayer#onChildInputUp","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#onChildInputUp","inherited":true,"___s":true},{"meta":{"range":[7199,7242],"filename":"Group.js","lineno":186,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputOver signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 2 arguments: A reference to the Sprite that triggered the signal, and\ra reference to the Pointer that caused it.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputOver"}],"name":"onChildInputOver","longname":"Phaser.FlexLayer#onChildInputOver","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#onChildInputOver","inherited":true,"___s":true},{"meta":{"range":[7714,7756],"filename":"Group.js","lineno":198,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputOut signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 2 arguments: A reference to the Sprite that triggered the signal, and\ra reference to the Pointer that caused it.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputOut"}],"name":"onChildInputOut","longname":"Phaser.FlexLayer#onChildInputOut","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#onChildInputOut","inherited":true,"___s":true},{"meta":{"range":[8120,8148],"filename":"Group.js","lineno":208,"path":"src\\core"},"description":"If true all Sprites created by, or added to this group, will have a physics body enabled on them.\r\rIf there are children already in the Group at the time you set this property, they are not changed.\r\rThe default body type is controlled with {@link #physicsBodyType}.","properties":[{"type":{"names":["boolean"]},"name":"enableBody"}],"name":"enableBody","longname":"Phaser.FlexLayer#enableBody","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#enableBody","inherited":true,"___s":true},{"meta":{"range":[8397,8425],"filename":"Group.js","lineno":217,"path":"src\\core"},"description":"If true when a physics body is created (via {@link #enableBody}) it will create a physics debug object as well.\r\rThis only works for P2 bodies.","properties":[{"type":{"names":["boolean"]},"name":"enableBodyDebug"}],"defaultvalue":false,"name":"enableBodyDebug","longname":"Phaser.FlexLayer#enableBodyDebug","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#enableBodyDebug","inherited":true,"___s":true},{"meta":{"range":[8727,8765],"filename":"Group.js","lineno":225,"path":"src\\core"},"description":"If {@link #enableBody} is true this is the type of physics body that is created on new Sprites.\r\rThe valid values are {@link Phaser.Physics.ARCADE}, {@link Phaser.Physics.P2JS}, {@link Phaser.Physics.NINJA}, etc.","properties":[{"type":{"names":["integer"]},"name":"physicsBodyType"}],"name":"physicsBodyType","longname":"Phaser.FlexLayer#physicsBodyType","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#physicsBodyType","inherited":true,"___s":true},{"meta":{"range":[9408,9440],"filename":"Group.js","lineno":243,"path":"src\\core"},"description":"If this Group contains Arcade Physics Sprites you can set a custom sort direction via this property.\r\rIt should be set to one of the Phaser.Physics.Arcade sort direction constants: \r\rPhaser.Physics.Arcade.SORT_NONE\rPhaser.Physics.Arcade.LEFT_RIGHT\rPhaser.Physics.Arcade.RIGHT_LEFT\rPhaser.Physics.Arcade.TOP_BOTTOM\rPhaser.Physics.Arcade.BOTTOM_TOP\r\rIf set to `null` the Group will use whatever Phaser.Physics.Arcade.sortDirection is set to. This is the default behavior.","properties":[{"type":{"names":["integer"]},"name":"physicsSortDirection"}],"defaultvalue":null,"name":"physicsSortDirection","longname":"Phaser.FlexLayer#physicsSortDirection","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#physicsSortDirection","inherited":true,"___s":true},{"meta":{"range":[9571,9607],"filename":"Group.js","lineno":249,"path":"src\\core"},"description":"This signal is dispatched when the group is destroyed.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onDestroy"}],"name":"onDestroy","longname":"Phaser.FlexLayer#onDestroy","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#onDestroy","inherited":true,"___s":true},{"meta":{"range":[9758,9778],"filename":"Group.js","lineno":255,"path":"src\\core"},"properties":[{"type":{"names":["integer"]},"description":"The current index of the Group cursor. Advance it with Group.next.","name":"cursorIndex"}],"readonly":true,"name":"cursorIndex","longname":"Phaser.FlexLayer#cursorIndex","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#cursorIndex","inherited":true,"___s":true},{"meta":{"range":[10207,10233],"filename":"Group.js","lineno":265,"path":"src\\core"},"description":"A Group that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in Group.cameraOffset.\r\rNote that the cameraOffset values are in addition to any parent in the display list.\rSo if this Group was in a Group that has x: 200, then this will be added to the cameraOffset.x","properties":[{"type":{"names":["boolean"]},"name":"fixedToCamera"}],"name":"fixedToCamera","longname":"Phaser.FlexLayer#fixedToCamera","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#fixedToCamera","inherited":true,"___s":true},{"meta":{"range":[10575,10613],"filename":"Group.js","lineno":272,"path":"src\\core"},"description":"If this object is {@link #fixedToCamera} then this stores the x/y position offset relative to the top-left of the camera view.\rIf the parent of this Group is also `fixedToCamera` then the offset here is in addition to that and should typically be disabled.","properties":[{"type":{"names":["Phaser.Point"]},"name":"cameraOffset"}],"name":"cameraOffset","longname":"Phaser.FlexLayer#cameraOffset","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#cameraOffset","inherited":true,"___s":true},{"meta":{"range":[11287,11301],"filename":"Group.js","lineno":285,"path":"src\\core"},"description":"The hash array is an array belonging to this Group into which you can add any of its children via Group.addToHash and Group.removeFromHash.\r\rOnly children of this Group can be added to and removed from the hash.\r\rThis hash is used automatically by Phaser Arcade Physics in order to perform non z-index based destructive sorting.\rHowever if you don't use Arcade Physics, or this isn't a physics enabled Group, then you can use the hash to perform your own\rsorting and filtering of Group children without touching their z-index (and therefore display draw order)","properties":[{"type":{"names":["array"]},"name":"hash"}],"name":"hash","longname":"Phaser.FlexLayer#hash","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"Phaser.Group#hash","inherited":true,"___s":true},{"meta":{"range":[12415,13611],"filename":"Group.js","lineno":341,"path":"src\\core"},"description":"Adds an existing object as the top child in this group.\r\rThe child is automatically added to the top of the group, and is displayed above every previous child.\r\rOr if the _optional_ index is specified, the child is added at the location specified by the index value, \rthis allows you to control child ordering.\r\rIf the child was already in this Group, it is simply returned, and nothing else happens to it.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.\r\rUse {@link #addAt} to control where a child is added. Use {@link #create} to create and add a new child.","kind":"function","name":"add","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to add as a child.","name":"child"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the child will not dispatch the `onAddedToGroup` event.","name":"silent"},{"type":{"names":["integer"]},"optional":true,"description":"The index within the group to insert the child to. Where 0 is the bottom of the Group.","name":"index"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was added to the group."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#add","scope":"instance","inherits":"Phaser.Group#add","inherited":true,"___s":true},{"meta":{"range":[14707,15502],"filename":"Group.js","lineno":418,"path":"src\\core"},"description":"Adds an existing object to this group.\r\rThe child is added to the group at the location specified by the index value, this allows you to control child ordering.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.","kind":"function","name":"addAt","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to add as a child.","name":"child"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The index within the group to insert the child to.","name":"index"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the child will not dispatch the `onAddedToGroup` event.","name":"silent"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was added to the group."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#addAt","scope":"instance","inherits":"Phaser.Group#addAt","inherited":true,"___s":true},{"meta":{"range":[15617,16054],"filename":"Group.js","lineno":439,"path":"src\\core"},"description":"Adds a child of this Group into the hash array.\rThis call will return false if the child is not a child of this Group, or is already in the hash.","kind":"function","name":"addToHash","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to add to this Groups hash. Must be a member of this Group already and not present in the hash.","name":"child"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the child was successfully added to the hash, otherwise false."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#addToHash","scope":"instance","inherits":"Phaser.Group#addToHash","inherited":true,"___s":true},{"meta":{"range":[16348,16745],"filename":"Group.js","lineno":464,"path":"src\\core"},"description":"Removes a child of this Group from the hash array.\rThis call will return false if the child is not in the hash.","kind":"function","name":"removeFromHash","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to remove from this Groups hash. Must be a member of this Group and in the hash.","name":"child"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the child was successfully removed from the hash, otherwise false."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#removeFromHash","scope":"instance","inherits":"Phaser.Group#removeFromHash","inherited":true,"___s":true},{"meta":{"range":[17033,18107],"filename":"Group.js","lineno":489,"path":"src\\core"},"description":"Adds an array of existing Display Objects to this Group.\r\rThe Display Objects are automatically added to the top of this Group, and will render on-top of everything already in this Group.\r\rAs well as an array you can also pass another Group as the first argument. In this case all of the children from that\rGroup will be removed from it and added into this Group.\r\rIf `Group.enableBody` is set, then a physics body will be created on the objects, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the objects, so long as one does not already exist.","kind":"function","name":"addMultiple","params":[{"type":{"names":["Array.<DisplayObject>","Phaser.Group"]},"description":"An array of display objects or a Phaser.Group. If a Group is given then *all* children will be moved from it.","name":"children"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch the `onAddedToGroup` event.","name":"silent"}],"returns":[{"type":{"names":["Array.<DisplayObject>","Phaser.Group"]},"description":"The array of children or Group of children that were added to this Group."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#addMultiple","scope":"instance","inherits":"Phaser.Group#addMultiple","inherited":true,"___s":true},{"meta":{"range":[18479,18756],"filename":"Group.js","lineno":524,"path":"src\\core"},"description":"Returns the child found at the given index within this group.","kind":"function","name":"getAt","params":[{"type":{"names":["integer"]},"description":"The index to return the child from.","name":"index"}],"returns":[{"type":{"names":["DisplayObject","integer"]},"description":"The child that was found at the given index, or -1 for an invalid index."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#getAt","scope":"instance","inherits":"Phaser.Group#getAt","inherited":true,"___s":true},{"meta":{"range":[18970,20735],"filename":"Group.js","lineno":544,"path":"src\\core"},"description":"Creates a new Phaser.Sprite object and adds it to the top of this group.\r\rUse {@link #classType} to change the type of object created.\r\rThe child is automatically added to the top of the group, and is displayed above every previous child.\r\rOr if the _optional_ index is specified, the child is added at the location specified by the index value, \rthis allows you to control child ordering.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.","kind":"function","name":"create","params":[{"type":{"names":["number"]},"description":"The x coordinate to display the newly created Sprite at. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to display the newly created Sprite at. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"The default exists state of the Sprite.","name":"exists"},{"type":{"names":["integer"]},"optional":true,"description":"The index within the group to insert the child to. Where 0 is the bottom of the Group.","name":"index"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was created: will be a {@link Phaser.Sprite} unless {@link #classType} has been changed."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#create","scope":"instance","inherits":"Phaser.Group#create","inherited":true,"___s":true},{"meta":{"range":[21074,23649],"filename":"Group.js","lineno":581,"path":"src\\core"},"description":"Creates multiple Phaser.Sprite objects and adds them to the top of this Group.\r\rThis method is useful if you need to quickly generate a pool of sprites, such as bullets.\r\rUse {@link #classType} to change the type of object created.\r\rYou can provide an array as the `key` and / or `frame` arguments. When you do this\rit will create `quantity` Sprites for every key (and frame) in the arrays.\r\rFor example:\r\r`createMultiple(25, ['ball', 'carrot'])`\r\rIn the above code there are 2 keys (ball and carrot) which means that 50 sprites will be\rcreated in total, 25 of each. You can also have the `frame` as an array:\r\r`createMultiple(5, 'bricks', [0, 1, 2, 3])`\r\rIn the above there is one key (bricks), which is a sprite sheet. The frames array tells\rthis method to use frames 0, 1, 2 and 3. So in total it will create 20 sprites, because\rthe quantity was set to 5, so that is 5 brick sprites of frame 0, 5 brick sprites with\rframe 1, and so on.\r\rIf you set both the key and frame arguments to be arrays then understand it will create\ra total quantity of sprites equal to the size of both arrays times each other. I.e.:\r\r`createMultiple(20, ['diamonds', 'balls'], [0, 1, 2])`\r\rThe above will create 20 'diamonds' of frame 0, 20 with frame 1 and 20 with frame 2.\rIt will then create 20 'balls' of frame 0, 20 with frame 1 and 20 with frame 2.\rIn total it will have created 120 sprites.\r\rBy default the Sprites will have their `exists` property set to `false`, and they will be \rpositioned at 0x0, relative to the `Group.x / y` values.\r\rIf `Group.enableBody` is set, then a physics body will be created on the objects, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the objects, so long as one does not already exist.","kind":"function","name":"createMultiple","params":[{"type":{"names":["integer"]},"description":"The number of Sprites to create.","name":"quantity"},{"type":{"names":["string","array"]},"description":"The Cache key of the image that the Sprites will use. Or an Array of keys. See the description for details on how the quantity applies when arrays are used.","name":"key"},{"type":{"names":["integer","string","array"]},"optional":true,"defaultvalue":0,"description":"If the Sprite image contains multiple frames you can specify which one to use here. Or an Array of frames. See the description for details on how the quantity applies when arrays are used.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"The default exists state of the Sprite.","name":"exists"}],"returns":[{"type":{"names":["array"]},"description":"An array containing all of the Sprites that were created."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#createMultiple","scope":"instance","inherits":"Phaser.Group#createMultiple","inherited":true,"___s":true},{"meta":{"range":[24339,24575],"filename":"Group.js","lineno":663,"path":"src\\core"},"description":"Internal method that re-applies all of the children's Z values.\r\rThis must be called whenever children ordering is altered so that their `z` indices are correctly updated.","kind":"function","name":"updateZ","access":"protected","memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#updateZ","scope":"instance","inherits":"Phaser.Group#updateZ","inherited":true,"___s":true},{"meta":{"range":[24736,27678],"filename":"Group.js","lineno":682,"path":"src\\core"},"description":"This method iterates through all children in the Group (regardless if they are visible or exist)\rand then changes their position so they are arranged in a Grid formation. Children must have\rthe `alignTo` method in order to be positioned by this call. All default Phaser Game Objects have\rthis.\r\rThe grid dimensions are determined by the first four arguments. The `width` and `height` arguments\rrelate to the width and height of the grid respectively.\r\rFor example if the Group had 100 children in it:\r\r`Group.align(10, 10, 32, 32)`\r\rThis will align all of the children into a grid formation of 10x10, using 32 pixels per\rgrid cell. If you want a wider grid, you could do:\r\r`Group.align(25, 4, 32, 32)`\r\rThis will align the children into a grid of 25x4, again using 32 pixels per grid cell.\r\rYou can choose to set _either_ the `width` or `height` value to -1. Doing so tells the method\rto keep on aligning children until there are no children left. For example if this Group had\r48 children in it, the following:\r\r`Group.align(-1, 8, 32, 32)`\r\r... will align the children so that there are 8 children vertically (the second argument), \rand each row will contain 6 sprites, except the last one, which will contain 5 (totaling 48)\r\rYou can also do:\r\r`Group.align(10, -1, 32, 32)`\r\rIn this case it will create a grid 10 wide, and as tall as it needs to be in order to fit\rall of the children in.\r\rThe `position` property allows you to control where in each grid cell the child is positioned.\rThis is a constant and can be one of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, \r`Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, \r`Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.\r\rThe final argument; `offset` lets you start the alignment from a specific child index.","kind":"function","name":"align","params":[{"type":{"names":["integer"]},"description":"The width of the grid in items (not pixels). Set to -1 for a dynamic width. If -1 then you must set an explicit height value.","name":"width"},{"type":{"names":["integer"]},"description":"The height of the grid in items (not pixels). Set to -1 for a dynamic height. If -1 then you must set an explicit width value.","name":"height"},{"type":{"names":["integer"]},"description":"The width of each grid cell, in pixels.","name":"cellWidth"},{"type":{"names":["integer"]},"description":"The height of each grid cell, in pixels.","name":"cellHeight"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Optional index to start the alignment from. Defaults to zero, the first child in the Group, but can be set to any valid child index value.","name":"offset"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the Group children were aligned, otherwise false."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#align","scope":"instance","inherits":"Phaser.Group#align","inherited":true,"___s":true},{"meta":{"range":[29501,29838],"filename":"Group.js","lineno":806,"path":"src\\core"},"description":"Sets the group cursor to the first child in the group.\r\rIf the optional index parameter is given it sets the cursor to the object at that index instead.","kind":"function","name":"resetCursor","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Set the cursor to point to a specific index.","name":"index"}],"returns":[{"type":{"names":["any"]},"description":"The child the cursor now points to."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#resetCursor","scope":"instance","inherits":"Phaser.Group#resetCursor","inherited":true,"___s":true},{"meta":{"range":[30189,30462],"filename":"Group.js","lineno":833,"path":"src\\core"},"description":"Advances the group cursor to the next (higher) object in the group.\r\rIf the cursor is at the end of the group (top child) it is moved the start of the group (bottom child).","kind":"function","name":"next","returns":[{"type":{"names":["any"]},"description":"The child the cursor now points to."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#next","scope":"instance","inherits":"Phaser.Group#next","inherited":true,"___s":true},{"meta":{"range":[30859,31125],"filename":"Group.js","lineno":862,"path":"src\\core"},"description":"Moves the group cursor to the previous (lower) child in the group.\r\rIf the cursor is at the start of the group (bottom child) it is moved to the end (top child).","kind":"function","name":"previous","returns":[{"type":{"names":["any"]},"description":"The child the cursor now points to."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#previous","scope":"instance","inherits":"Phaser.Group#previous","inherited":true,"___s":true},{"meta":{"range":[31527,31845],"filename":"Group.js","lineno":891,"path":"src\\core"},"description":"Swaps the position of two children in this group.\r\rBoth children must be in this group, a child cannot be swapped with itself, and unparented children cannot be swapped.","kind":"function","name":"swap","params":[{"type":{"names":["any"]},"description":"The first child to swap.","name":"child1"},{"type":{"names":["any"]},"description":"The second child to swap.","name":"child2"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#swap","scope":"instance","inherits":"Phaser.Group#swap","inherited":true,"___s":true},{"meta":{"range":[31977,32225],"filename":"Group.js","lineno":907,"path":"src\\core"},"description":"Brings the given child to the top of this group so it renders above all other children.","kind":"function","name":"bringToTop","params":[{"type":{"names":["any"]},"description":"The child to bring to the top of this group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#bringToTop","scope":"instance","inherits":"Phaser.Group#bringToTop","inherited":true,"___s":true},{"meta":{"range":[32481,32733],"filename":"Group.js","lineno":926,"path":"src\\core"},"description":"Sends the given child to the bottom of this group so it renders below all other children.","kind":"function","name":"sendToBack","params":[{"type":{"names":["any"]},"description":"The child to send to the bottom of this group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#sendToBack","scope":"instance","inherits":"Phaser.Group#sendToBack","inherited":true,"___s":true},{"meta":{"range":[32975,33202],"filename":"Group.js","lineno":945,"path":"src\\core"},"description":"Moves the given child up one place in this group unless it's already at the top.","kind":"function","name":"moveUp","params":[{"type":{"names":["any"]},"description":"The child to move up in the group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#moveUp","scope":"instance","inherits":"Phaser.Group#moveUp","inherited":true,"___s":true},{"meta":{"range":[33533,33769],"filename":"Group.js","lineno":969,"path":"src\\core"},"description":"Moves the given child down one place in this group unless it's already at the bottom.","kind":"function","name":"moveDown","params":[{"type":{"names":["any"]},"description":"The child to move down in the group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#moveDown","scope":"instance","inherits":"Phaser.Group#moveDown","inherited":true,"___s":true},{"meta":{"range":[34079,34416],"filename":"Group.js","lineno":993,"path":"src\\core"},"description":"Positions the child found at the given index within this group to the given x and y coordinates.","kind":"function","name":"xy","params":[{"type":{"names":["integer"]},"description":"The index of the child in the group to set the position of.","name":"index"},{"type":{"names":["number"]},"description":"The new x position of the child.","name":"x"},{"type":{"names":["number"]},"description":"The new y position of the child.","name":"y"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#xy","scope":"instance","inherits":"Phaser.Group#xy","inherited":true,"___s":true},{"meta":{"range":[34670,34845],"filename":"Group.js","lineno":1015,"path":"src\\core"},"description":"Reverses all children in this group.\r\rThis operation applies only to immediate children and does not propagate to subgroups.","kind":"function","name":"reverse","memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#reverse","scope":"instance","inherits":"Phaser.Group#reverse","inherited":true,"___s":true},{"meta":{"range":[34956,35246],"filename":"Group.js","lineno":1029,"path":"src\\core"},"description":"Get the index position of the given child in this group, which should match the child's `z` property.","kind":"function","name":"getIndex","params":[{"type":{"names":["any"]},"description":"The child to get the index for.","name":"child"}],"returns":[{"type":{"names":["integer"]},"description":"The index of the child or -1 if it's not a member of this group."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#getIndex","scope":"instance","inherits":"Phaser.Group#getIndex","inherited":true,"___s":true},{"meta":{"range":[35354,35730],"filename":"Group.js","lineno":1042,"path":"src\\core"},"description":"Searches the Group for the first instance of a child with the `name`\rproperty matching the given argument. Should more than one child have\rthe same name only the first instance is returned.","kind":"function","name":"getByName","params":[{"type":{"names":["string"]},"description":"The name to search for.","name":"name"}],"returns":[{"type":{"names":["any"]},"description":"The first child with a matching name, or null if none were found."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#getByName","scope":"instance","inherits":"Phaser.Group#getByName","inherited":true,"___s":true},{"meta":{"range":[35987,36616],"filename":"Group.js","lineno":1065,"path":"src\\core"},"description":"Replaces a child of this Group with the given newChild. The newChild cannot be a member of this Group.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.","kind":"function","name":"replace","params":[{"type":{"names":["any"]},"description":"The child in this group that will be replaced.","name":"oldChild"},{"type":{"names":["any"]},"description":"The child to be inserted into this group.","name":"newChild"}],"returns":[{"type":{"names":["any"]},"description":"Returns the oldChild that was replaced within this group."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#replace","scope":"instance","inherits":"Phaser.Group#replace","inherited":true,"___s":true},{"meta":{"range":[37172,37536],"filename":"Group.js","lineno":1104,"path":"src\\core"},"description":"Checks if the child has the given property.\r\rWill scan up to 4 levels deep only.","kind":"function","name":"hasProperty","params":[{"type":{"names":["any"]},"description":"The child to check for the existence of the property on.","name":"child"},{"type":{"names":["Array.<string>"]},"description":"An array of strings that make up the property.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the child has the property, otherwise false."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#hasProperty","scope":"instance","inherits":"Phaser.Group#hasProperty","inherited":true,"___s":true},{"meta":{"range":[38169,39389],"filename":"Group.js","lineno":1139,"path":"src\\core"},"description":"Sets a property to the given value on the child. The operation parameter controls how the value is set.\r\rThe operations are:\r- 0: set the existing value to the given value; if force is `true` a new property will be created if needed\r- 1: will add the given value to the value already present.\r- 2: will subtract the given value from the value already present.\r- 3: will multiply the value already present by the given value.\r- 4: will divide the value already present by the given value.","kind":"function","name":"setProperty","params":[{"type":{"names":["any"]},"description":"The child to set the property value on.","name":"child"},{"type":{"names":["array"]},"description":"An array of strings that make up the property that will be set.","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the property was set, false if not."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#setProperty","scope":"instance","inherits":"Phaser.Group#setProperty","inherited":true,"___s":true},{"meta":{"range":[41812,42411],"filename":"Group.js","lineno":1217,"path":"src\\core"},"description":"Checks a property for the given value on the child.","kind":"function","name":"checkProperty","params":[{"type":{"names":["any"]},"description":"The child to check the property value on.","name":"child"},{"type":{"names":["array"]},"description":"An array of strings that make up the property that will be set.","name":"key"},{"type":{"names":["any"]},"description":"The value that will be checked.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the property was was equal to value, false if not."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#checkProperty","scope":"instance","inherits":"Phaser.Group#checkProperty","inherited":true,"___s":true},{"meta":{"range":[42841,43970],"filename":"Group.js","lineno":1246,"path":"src\\core"},"description":"Quickly set a property on a single child of this group to a new value.\r\rThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","kind":"function","name":"set","params":[{"type":{"names":["Phaser.Sprite"]},"description":"The child to set the property on.","name":"child"},{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then the child will only be updated if alive=true.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then the child will only be updated if visible=true.","name":"checkVisible"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the property was set, false if not."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#set","scope":"instance","inherits":"Phaser.Group#set","inherited":true,"___s":true},{"meta":{"range":[44503,45816],"filename":"Group.js","lineno":1277,"path":"src\\core"},"description":"Quickly set the same property across all children of this group to a new value.\r\rThis call doesn't descend down children, so if you have a Group inside of this group, the property will be set on the group but not its children.\rIf you need that ability please see `Group.setAllChildren`.\r\rThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","kind":"function","name":"setAll","params":[{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with alive=true will be updated. This includes any Groups that are children.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with visible=true will be updated. This includes any Groups that are children.","name":"checkVisible"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#setAll","scope":"instance","inherits":"Phaser.Group#setAll","inherited":true,"___s":true},{"meta":{"range":[46466,47814],"filename":"Group.js","lineno":1312,"path":"src\\core"},"description":"Quickly set the same property across all children of this group, and any child Groups, to a new value.\r\rIf this group contains other Groups then the same property is set across their children as well, iterating down until it reaches the bottom.\rUnlike with `setAll` the property is NOT set on child Groups itself.\r\rThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","kind":"function","name":"setAllChildren","params":[{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with alive=true will be updated. This includes any Groups that are children.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with visible=true will be updated. This includes any Groups that are children.","name":"checkVisible"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#setAllChildren","scope":"instance","inherits":"Phaser.Group#setAllChildren","inherited":true,"___s":true},{"meta":{"range":[48703,49653],"filename":"Group.js","lineno":1353,"path":"src\\core"},"description":"Quickly check that the same property across all children of this group is equal to the given value.\r\rThis call doesn't descend down children, so if you have a Group inside of this group, the property will be checked on the group but not its children.","kind":"function","name":"checkAll","params":[{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be checked.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with alive=true will be checked. This includes any Groups that are children.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with visible=true will be checked. This includes any Groups that are children.","name":"checkVisible"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned.","name":"force"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#checkAll","scope":"instance","inherits":"Phaser.Group#checkAll","inherited":true,"___s":true},{"meta":{"range":[50309,50931],"filename":"Group.js","lineno":1386,"path":"src\\core"},"description":"Adds the amount to the given property on all children in this group.\r\r`Group.addAll('x', 10)` will add 10 to the child.x value for each child.","kind":"function","name":"addAll","params":[{"type":{"names":["string"]},"description":"The property to increment, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to increment the property by. If child.x = 10 then addAll('x', 40) would make child.x = 50.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#addAll","scope":"instance","inherits":"Phaser.Group#addAll","inherited":true,"___s":true},{"meta":{"range":[51097,51731],"filename":"Group.js","lineno":1403,"path":"src\\core"},"description":"Subtracts the amount from the given property on all children in this group.\r\r`Group.subAll('x', 10)` will minus 10 from the child.x value for each child.","kind":"function","name":"subAll","params":[{"type":{"names":["string"]},"description":"The property to decrement, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to subtract from the property. If child.x = 50 then subAll('x', 40) would make child.x = 10.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#subAll","scope":"instance","inherits":"Phaser.Group#subAll","inherited":true,"___s":true},{"meta":{"range":[51897,52529],"filename":"Group.js","lineno":1420,"path":"src\\core"},"description":"Multiplies the given property by the amount on all children in this group.\r\r`Group.multiplyAll('x', 2)` will x2 the child.x value for each child.","kind":"function","name":"multiplyAll","params":[{"type":{"names":["string"]},"description":"The property to multiply, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to multiply the property by. If child.x = 10 then multiplyAll('x', 2) would make child.x = 20.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#multiplyAll","scope":"instance","inherits":"Phaser.Group#multiplyAll","inherited":true,"___s":true},{"meta":{"range":[52700,53322],"filename":"Group.js","lineno":1437,"path":"src\\core"},"description":"Divides the given property by the amount on all children in this group.\r\r`Group.divideAll('x', 2)` will half the child.x value for each child.","kind":"function","name":"divideAll","params":[{"type":{"names":["string"]},"description":"The property to divide, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to divide the property by. If child.x = 100 then divideAll('x', 2) would make child.x = 50.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#divideAll","scope":"instance","inherits":"Phaser.Group#divideAll","inherited":true,"___s":true},{"meta":{"range":[53491,54021],"filename":"Group.js","lineno":1454,"path":"src\\core"},"description":"Calls a function, specified by name, on all children in the group who exist (or do not exist).\r\rAfter the existsValue parameter you can add as many parameters as you like, which will all be passed to the child callback.","kind":"function","name":"callAllExists","params":[{"type":{"names":["string"]},"description":"Name of the function on the children to call.","name":"callback"},{"type":{"names":["boolean"]},"description":"Only children with exists=existsValue will be called.","name":"existsValue"},{"type":{"names":["any"]},"variable":true,"description":"Additional parameters that will be passed to the callback.","name":"parameter"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#callAllExists","scope":"instance","inherits":"Phaser.Group#callAllExists","inherited":true,"___s":true},{"meta":{"range":[54549,54911],"filename":"Group.js","lineno":1488,"path":"src\\core"},"description":"Returns a reference to a function that exists on a child of the group based on the given callback array.","kind":"function","name":"callbackFromArray","params":[{"type":{"names":["object"]},"description":"The object to inspect.","name":"child"},{"type":{"names":["array"]},"description":"The array of function names.","name":"callback"},{"type":{"names":["integer"]},"description":"The size of the array (pre-calculated in callAll).","name":"length"}],"access":"protected","memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#callbackFromArray","scope":"instance","inherits":"Phaser.Group#callbackFromArray","inherited":true,"___s":true},{"meta":{"range":[55847,56541],"filename":"Group.js","lineno":1538,"path":"src\\core"},"description":"Calls a function, specified by name, on all on children.\r\rThe function is called for all children regardless if they are dead or alive (see callAllExists for different options).\rAfter the method parameter and context you can add as many extra parameters as you like, which will all be passed to the child.","kind":"function","name":"callAll","params":[{"type":{"names":["string"]},"description":"Name of the function on the child to call. Deep property lookup is supported.","name":"method"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"A string containing the context under which the method will be executed. Set to null to default to the child.","name":"context"},{"type":{"names":["any"]},"variable":true,"description":"Additional parameters that will be passed to the method.","name":"args"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#callAll","scope":"instance","inherits":"Phaser.Group#callAll","inherited":true,"___s":true},{"meta":{"range":[57918,58017],"filename":"Group.js","lineno":1611,"path":"src\\core"},"description":"The core preUpdate - as called by World.","kind":"function","name":"preUpdate","access":"protected","memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#preUpdate","scope":"instance","inherits":"Phaser.Group#preUpdate","inherited":true,"___s":true},{"meta":{"range":[58417,58510],"filename":"Group.js","lineno":1639,"path":"src\\core"},"description":"The core update - as called by World.","kind":"function","name":"update","access":"protected","memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#update","scope":"instance","inherits":"Phaser.Group#update","inherited":true,"___s":true},{"meta":{"range":[58768,58869],"filename":"Group.js","lineno":1656,"path":"src\\core"},"description":"The core postUpdate - as called by World.","kind":"function","name":"postUpdate","access":"protected","memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#postUpdate","scope":"instance","inherits":"Phaser.Group#postUpdate","inherited":true,"___s":true},{"meta":{"range":[59239,60105],"filename":"Group.js","lineno":1677,"path":"src\\core"},"description":"Find children matching a certain predicate.\r\rFor example:\r\r    var healthyList = Group.filter(function(child, index, children) {\r        return child.health > 10 ? true : false;\r    }, true);\r    healthyList.callAll('attack');\r\rNote: Currently this will skip any children which are Groups themselves.","kind":"function","name":"filter","params":[{"type":{"names":["function"]},"description":"The function that each child will be evaluated against. Each child of the group will be passed to it as its first parameter, the index as the second, and the entire child array as the third","name":"predicate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true, only existing can be selected; otherwise all children can be selected and will be passed to the predicate.","name":"checkExists"}],"returns":[{"type":{"names":["Phaser.ArraySet"]},"description":"Returns an array list containing all the children that the predicate returned true for"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#filter","scope":"instance","inherits":"Phaser.Group#filter","inherited":true,"___s":true},{"meta":{"range":[60612,61562],"filename":"Group.js","lineno":1717,"path":"src\\core"},"description":"Call a function on each child in this group.\r\rAdditional arguments for the callback can be specified after the `checkExists` parameter. For example,\r\r    Group.forEach(awardBonusGold, this, true, 100, 500)\r\rwould invoke `awardBonusGold` function with the parameters `(child, 100, 500)`.\r\rNote: This check will skip any children which are Groups themselves.","kind":"function","name":"forEach","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set only children matching for which `exists` is true will be passed to the callback, otherwise all children will be passed.","name":"checkExists"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#forEach","scope":"instance","inherits":"Phaser.Group#forEach","inherited":true,"___s":true},{"meta":{"range":[62664,63187],"filename":"Group.js","lineno":1771,"path":"src\\core"},"description":"Call a function on each existing child in this group.\r\rSee {@link Phaser.Group#forEach forEach} for details.","kind":"function","name":"forEachExists","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#forEachExists","scope":"instance","inherits":"Phaser.Group#forEachExists","inherited":true,"___s":true},{"meta":{"range":[63575,64094],"filename":"Group.js","lineno":1799,"path":"src\\core"},"description":"Call a function on each alive child in this group.\r\rSee {@link Phaser.Group#forEach forEach} for details.","kind":"function","name":"forEachAlive","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#forEachAlive","scope":"instance","inherits":"Phaser.Group#forEachAlive","inherited":true,"___s":true},{"meta":{"range":[64480,64997],"filename":"Group.js","lineno":1827,"path":"src\\core"},"description":"Call a function on each dead child in this group.\r\rSee {@link Phaser.Group#forEach forEach} for details.","kind":"function","name":"forEachDead","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#forEachDead","scope":"instance","inherits":"Phaser.Group#forEachDead","inherited":true,"___s":true},{"meta":{"range":[65383,66281],"filename":"Group.js","lineno":1855,"path":"src\\core"},"description":"Sort the children in the group according to a particular key and ordering.\r\rCall this function to sort the group according to a particular key value and order.\r\rFor example to depth sort Sprites for Zelda-style game you might call `group.sort('y', Phaser.Group.SORT_ASCENDING)` at the bottom of your `State.update()`.\r\rInternally this uses a standard JavaScript Array sort, so everything that applies there also applies here, including\ralphabetical sorting, mixing strings and numbers, and Unicode sorting. See MDN for more details.","kind":"function","name":"sort","params":[{"type":{"names":["string"]},"optional":true,"defaultvalue":"'z'","description":"The name of the property to sort on. Defaults to the objects z-depth value.","name":"key"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"Phaser.Group.SORT_ASCENDING","description":"Order ascending ({@link Phaser.Group.SORT_ASCENDING SORT_ASCENDING}) or descending ({@link Phaser.Group.SORT_DESCENDING SORT_DESCENDING}).","name":"order"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#sort","scope":"instance","inherits":"Phaser.Group#sort","inherited":true,"___s":true},{"meta":{"range":[66838,67280],"filename":"Group.js","lineno":1895,"path":"src\\core"},"description":"Sort the children in the group according to custom sort function.\r\rThe `sortHandler` is provided the two parameters: the two children involved in the comparison (a and b).\rIt should return -1 if `a > b`, 1 if `a < b` or 0 if `a === b`.","kind":"function","name":"customSort","params":[{"type":{"names":["function"]},"description":"The custom sort function.","name":"sortHandler"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the sortHandler is called.","name":"context"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#customSort","scope":"instance","inherits":"Phaser.Group#customSort","inherited":true,"___s":true},{"meta":{"range":[67535,67766],"filename":"Group.js","lineno":1919,"path":"src\\core"},"description":"An internal helper function for the sort process.","kind":"function","name":"ascendingSortHandler","access":"protected","params":[{"type":{"names":["object"]},"description":"The first object being sorted.","name":"a"},{"type":{"names":["object"]},"description":"The second object being sorted.","name":"b"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#ascendingSortHandler","scope":"instance","inherits":"Phaser.Group#ascendingSortHandler","inherited":true,"___s":true},{"meta":{"range":[68180,68412],"filename":"Group.js","lineno":1951,"path":"src\\core"},"description":"An internal helper function for the sort process.","kind":"function","name":"descendingSortHandler","access":"protected","params":[{"type":{"names":["object"]},"description":"The first object being sorted.","name":"a"},{"type":{"names":["object"]},"description":"The second object being sorted.","name":"b"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#descendingSortHandler","scope":"instance","inherits":"Phaser.Group#descendingSortHandler","inherited":true,"___s":true},{"meta":{"range":[68717,70530],"filename":"Group.js","lineno":1976,"path":"src\\core"},"description":"Iterates over the children of the group performing one of several actions for matched children.\r\rA child is considered a match when it has a property, named `key`, whose value is equal to `value`\raccording to a strict equality comparison.\r\rThe result depends on the `returnType`:\r\r- {@link Phaser.Group.RETURN_TOTAL RETURN_TOTAL}:\r    The callback, if any, is applied to all matching children. The number of matched children is returned.\r- {@link Phaser.Group.RETURN_NONE RETURN_NONE}:\r    The callback, if any, is applied to all matching children. No value is returned.\r- {@link Phaser.Group.RETURN_CHILD RETURN_CHILD}:\r    The callback, if any, is applied to the *first* matching child and the *first* matched child is returned.\r    If there is no matching child then null is returned.\r\rIf `args` is specified it must be an array. The matched child will be assigned to the first\relement and the entire array will be applied to the callback function.","kind":"function","name":"iterate","params":[{"type":{"names":["string"]},"description":"The child property to check, i.e. 'exists', 'alive', 'health'","name":"key"},{"type":{"names":["any"]},"description":"A child matches if `child[key] === value` is true.","name":"value"},{"type":{"names":["integer"]},"description":"How to iterate the children and what to return.","name":"returnType"},{"type":{"names":["function"]},"optional":true,"defaultvalue":null,"description":"Optional function that will be called on each matching child. The matched child is supplied as the first argument.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["Array.<any>"]},"optional":true,"defaultvalue":"(none)","description":"The arguments supplied to to the callback; the first array index (argument) will be replaced with the matched child.","name":"args"}],"returns":[{"type":{"names":["any"]},"description":"Returns either an integer (for RETURN_TOTAL), the first matched child (for RETURN_CHILD), or null."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#iterate","scope":"instance","inherits":"Phaser.Group#iterate","inherited":true,"___s":true},{"meta":{"range":[72077,73685],"filename":"Group.js","lineno":2071,"path":"src\\core"},"description":"Get the first display object that exists, or doesn't exist.\r\rYou can use the optional argument `createIfNull` to create a new Game Object if none matching your exists argument were found in this Group.\r\rIt works by calling `Group.create` passing it the parameters given to this method, and returning the new child.\r\rIf a child *was* found , `createIfNull` is `false` and you provided the additional arguments then the child\rwill be reset and/or have a new texture loaded on it. This is handled by `Group.resetChild`.","kind":"function","name":"getFirstExists","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true, find the first existing child; otherwise find the first non-existing child.","name":"exists"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `true` and no alive children are found a new one is created.","name":"createIfNull"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The first child, or `null` if none found and `createIfNull` was false."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#getFirstExists","scope":"instance","inherits":"Phaser.Group#getFirstExists","inherited":true,"___s":true},{"meta":{"range":[74132,75655],"filename":"Group.js","lineno":2105,"path":"src\\core"},"description":"Get the first child that is alive (`child.alive === true`).\r\rThis is handy for choosing a squad leader, etc.\r\rYou can use the optional argument `createIfNull` to create a new Game Object if no alive ones were found in this Group.\r\rIt works by calling `Group.create` passing it the parameters given to this method, and returning the new child.\r\rIf a child *was* found , `createIfNull` is `false` and you provided the additional arguments then the child\rwill be reset and/or have a new texture loaded on it. This is handled by `Group.resetChild`.","kind":"function","name":"getFirstAlive","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `true` and no alive children are found a new one is created.","name":"createIfNull"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The alive dead child, or `null` if none found and `createIfNull` was false."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#getFirstAlive","scope":"instance","inherits":"Phaser.Group#getFirstAlive","inherited":true,"___s":true},{"meta":{"range":[76012,77578],"filename":"Group.js","lineno":2135,"path":"src\\core"},"description":"Get the first child that is dead (`child.alive === false`).\r\rThis is handy for checking if everything has been wiped out and adding to the pool as needed.\r\rYou can use the optional argument `createIfNull` to create a new Game Object if no dead ones were found in this Group.\r\rIt works by calling `Group.create` passing it the parameters given to this method, and returning the new child.\r\rIf a child *was* found , `createIfNull` is `false` and you provided the additional arguments then the child\rwill be reset and/or have a new texture loaded on it. This is handled by `Group.resetChild`.","kind":"function","name":"getFirstDead","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `true` and no dead children are found a new one is created.","name":"createIfNull"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The first dead child, or `null` if none found and `createIfNull` was false."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#getFirstDead","scope":"instance","inherits":"Phaser.Group#getFirstDead","inherited":true,"___s":true},{"meta":{"range":[77935,79182],"filename":"Group.js","lineno":2165,"path":"src\\core"},"description":"Takes a child and if the `x` and `y` arguments are given it calls `child.reset(x, y)` on it.\r\rIf the `key` and optionally the `frame` arguments are given, it calls `child.loadTexture(key, frame)` on it.\r\rThe two operations are separate. For example if you just wish to load a new texture then pass `null` as the x and y values.","kind":"function","name":"resetChild","params":[{"type":{"names":["DisplayObject"]},"description":"The child to reset and/or load the texture on.","name":"child"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was reset: usually a {@link Phaser.Sprite}."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#resetChild","scope":"instance","inherits":"Phaser.Group#resetChild","inherited":true,"___s":true},{"meta":{"range":[79595,79813],"filename":"Group.js","lineno":2204,"path":"src\\core"},"description":"Return the child at the top of this group.\r\rThe top child is the child displayed (rendered) above every other child.","kind":"function","name":"getTop","returns":[{"type":{"names":["any"]},"description":"The child at the top of the Group."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#getTop","scope":"instance","inherits":"Phaser.Group#getTop","inherited":true,"___s":true},{"meta":{"range":[79978,80212],"filename":"Group.js","lineno":2221,"path":"src\\core"},"description":"Returns the child at the bottom of this group.\r\rThe bottom child the child being displayed (rendered) below every other child.","kind":"function","name":"getBottom","returns":[{"type":{"names":["any"]},"description":"The child at the bottom of the Group."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#getBottom","scope":"instance","inherits":"Phaser.Group#getBottom","inherited":true,"___s":true},{"meta":{"range":[80357,81660],"filename":"Group.js","lineno":2238,"path":"src\\core"},"description":"Get the closest child to given Object, with optional callback to filter children.\r\rThis can be a Sprite, Group, Image or any object with public x and y properties.\r\r'close' is determined by the distance from the objects `x` and `y` properties compared to the childs `x` and `y` properties.\r\rYou can use the optional `callback` argument to apply your own filter to the distance checks.\rIf the child is closer then the previous child, it will be sent to `callback` as the first argument,\rwith the distance as the second. The callback should return `true` if it passes your \rfiltering criteria, otherwise it should return `false`.","kind":"function","name":"getClosestTo","params":[{"type":{"names":["any"]},"description":"The object used to determine the distance. This can be a Sprite, Group, Image or any object with public x and y properties.","name":"object"},{"type":{"names":["function"]},"optional":true,"description":"The function that each child will be evaluated against. Each child of the group will be passed to it as its first parameter, with the distance as the second. It should return `true` if the child passes the matching criteria.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"}],"returns":[{"type":{"names":["any"]},"description":"The child closest to given object, or `null` if no child was found."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#getClosestTo","scope":"instance","inherits":"Phaser.Group#getClosestTo","inherited":true,"___s":true},{"meta":{"range":[82322,83655],"filename":"Group.js","lineno":2282,"path":"src\\core"},"description":"Get the child furthest away from the given Object, with optional callback to filter children.\r\rThis can be a Sprite, Group, Image or any object with public x and y properties.\r\r'furthest away' is determined by the distance from the objects `x` and `y` properties compared to the childs `x` and `y` properties.\r\rYou can use the optional `callback` argument to apply your own filter to the distance checks.\rIf the child is closer then the previous child, it will be sent to `callback` as the first argument,\rwith the distance as the second. The callback should return `true` if it passes your \rfiltering criteria, otherwise it should return `false`.","kind":"function","name":"getFurthestFrom","params":[{"type":{"names":["any"]},"description":"The object used to determine the distance. This can be a Sprite, Group, Image or any object with public x and y properties.","name":"object"},{"type":{"names":["function"]},"optional":true,"description":"The function that each child will be evaluated against. Each child of the group will be passed to it as its first parameter, with the distance as the second. It should return `true` if the child passes the matching criteria.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"}],"returns":[{"type":{"names":["any"]},"description":"The child furthest from the given object, or `null` if no child was found."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#getFurthestFrom","scope":"instance","inherits":"Phaser.Group#getFurthestFrom","inherited":true,"___s":true},{"meta":{"range":[84305,84465],"filename":"Group.js","lineno":2326,"path":"src\\core"},"description":"Get the number of living children in this group.","kind":"function","name":"countLiving","returns":[{"type":{"names":["integer"]},"description":"The number of children flagged as alive."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#countLiving","scope":"instance","inherits":"Phaser.Group#countLiving","inherited":true,"___s":true},{"meta":{"range":[84597,84752],"filename":"Group.js","lineno":2338,"path":"src\\core"},"description":"Get the number of dead children in this group.","kind":"function","name":"countDead","returns":[{"type":{"names":["integer"]},"description":"The number of children flagged as dead."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#countDead","scope":"instance","inherits":"Phaser.Group#countDead","inherited":true,"___s":true},{"meta":{"range":[84883,85214],"filename":"Group.js","lineno":2350,"path":"src\\core"},"description":"Returns a random child from the group.","kind":"function","name":"getRandom","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Offset from the front of the group (lowest child).","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"(to top)","description":"Restriction on the number of values you want to randomly select from.","name":"length"}],"returns":[{"type":{"names":["any"]},"description":"A random child of this Group."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#getRandom","scope":"instance","inherits":"Phaser.Group#getRandom","inherited":true,"___s":true},{"meta":{"range":[85558,86132],"filename":"Group.js","lineno":2372,"path":"src\\core"},"description":"Returns a random child from the Group that has `exists` set to `true`.\r\rOptionally you can specify a start and end index. For example if this Group had 100 children,\rand you set `startIndex` to 0 and `endIndex` to 50, it would return a random child from only\rthe first 50 children in the Group.","kind":"function","name":"getRandomExists","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The first child index to start the search from.","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"description":"The last child index to search up to.","name":"endIndex"}],"returns":[{"type":{"names":["any"]},"description":"A random child of this Group that exists."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#getRandomExists","scope":"instance","inherits":"Phaser.Group#getRandomExists","inherited":true,"___s":true},{"meta":{"range":[86327,87278],"filename":"Group.js","lineno":2392,"path":"src\\core"},"description":"Returns all children in this Group.\r\rYou can optionally specify a matching criteria using the `property` and `value` arguments.\r\rFor example: `getAll('exists', true)` would return only children that have their exists property set.\r\rOptionally you can specify a start and end index. For example if this Group had 100 children,\rand you set `startIndex` to 0 and `endIndex` to 50, it would return a random child from only\rthe first 50 children in the Group.","kind":"function","name":"getAll","params":[{"type":{"names":["string"]},"optional":true,"description":"An optional property to test against the value argument.","name":"property"},{"type":{"names":["any"]},"optional":true,"description":"If property is set then Child.property must strictly equal this value to be included in the results.","name":"value"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The first child index to start the search from.","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"description":"The last child index to search up until.","name":"endIndex"}],"returns":[{"type":{"names":["any"]},"description":"A random existing child of this Group."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#getAll","scope":"instance","inherits":"Phaser.Group#getAll","inherited":true,"___s":true},{"meta":{"range":[87758,88400],"filename":"Group.js","lineno":2431,"path":"src\\core"},"description":"Removes the given child from this group.\r\rThis will dispatch an `onRemovedFromGroup` event from the child (if it has one), and optionally destroy the child.\r\rIf the group cursor was referring to the removed child it is updated to refer to the next child.","kind":"function","name":"remove","params":[{"type":{"names":["any"]},"description":"The child to remove.","name":"child"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true `destroy` will be invoked on the removed child.","name":"destroy"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the the child will not dispatch the `onRemovedFromGroup` event.","name":"silent"}],"returns":[{"type":{"names":["boolean"]},"description":"true if the child was removed from this group, otherwise false."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#remove","scope":"instance","inherits":"Phaser.Group#remove","inherited":true,"___s":true},{"meta":{"range":[89108,89491],"filename":"Group.js","lineno":2479,"path":"src\\core"},"description":"Moves all children from this Group to the Group given.","kind":"function","name":"moveAll","params":[{"type":{"names":["Phaser.Group"]},"description":"The new Group to which the children will be moved to.","name":"group"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch the `onAddedToGroup` event for the new Group.","name":"silent"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"The Group to which all the children were moved."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#moveAll","scope":"instance","inherits":"Phaser.Group#moveAll","inherited":true,"___s":true},{"meta":{"range":[89905,90715],"filename":"Group.js","lineno":2508,"path":"src\\core"},"description":"Removes all children from this Group, but does not remove the group from its parent.\r\rThe children can be optionally destroyed as they are removed.\r\rYou can also optionally also destroy the BaseTexture the Child is using. Be careful if you've\rmore than one Game Object sharing the same BaseTexture.","kind":"function","name":"removeAll","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true `destroy` will be invoked on each removed child.","name":"destroy"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch their `onRemovedFromGroup` events.","name":"silent"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true, and if the `destroy` argument is also true, the BaseTexture belonging to the Child is also destroyed. Note that if another Game Object is sharing the same BaseTexture it will invalidate it.","name":"destroyTexture"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#removeAll","scope":"instance","inherits":"Phaser.Group#removeAll","inherited":true,"___s":true},{"meta":{"range":[91534,92171],"filename":"Group.js","lineno":2556,"path":"src\\core"},"description":"Removes all children from this group whose index falls beteen the given startIndex and endIndex values.","kind":"function","name":"removeBetween","params":[{"type":{"names":["integer"]},"description":"The index to start removing children from.","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"description":"The index to stop removing children at. Must be higher than startIndex. If undefined this method will remove all children between startIndex and the end of the group.","name":"endIndex"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true `destroy` will be invoked on each removed child.","name":"destroy"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch their `onRemovedFromGroup` events.","name":"silent"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#removeBetween","scope":"instance","inherits":"Phaser.Group#removeBetween","inherited":true,"___s":true},{"meta":{"range":[93215,93635],"filename":"Group.js","lineno":2611,"path":"src\\core"},"description":"Destroys this group.\r\rRemoves all children, then removes this group from its parent and nulls references.","kind":"function","name":"destroy","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true `destroy` will be invoked on each removed child.","name":"destroyChildren"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"A 'soft destroy' (set to true) doesn't remove this group from its parent or null the game reference. Set to false and it does.","name":"soft"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#destroy","scope":"instance","inherits":"Phaser.Group#destroy","inherited":true,"___s":true},{"meta":{"range":[94267,94398],"filename":"Group.js","lineno":2648,"path":"src\\core"},"description":"Total number of existing children in the group.","name":"total","properties":[{"type":{"names":["integer"]},"name":"total"}],"readonly":true,"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#total","scope":"instance","kind":"member","inherits":"Phaser.Group#total","inherited":true,"___s":true},{"meta":{"range":[94577,94738],"filename":"Group.js","lineno":2665,"path":"src\\core"},"description":"Total number of children in this group, regardless of exists/alive status.","name":"length","properties":[{"type":{"names":["integer"]},"name":"length"}],"readonly":true,"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#length","scope":"instance","kind":"member","inherits":"Phaser.Group#length","inherited":true,"___s":true},{"meta":{"range":[94883,95247],"filename":"Group.js","lineno":2682,"path":"src\\core"},"description":"The angle of rotation of the group container, in degrees.\r\rThis adjusts the group itself by modifying its local rotation transform.\r\rThis has no impact on the rotation/angle properties of the children, but it will update their worldTransform\rand on-screen orientation and position.","name":"angle","properties":[{"type":{"names":["number"]},"name":"angle"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#angle","scope":"instance","kind":"member","inherits":"Phaser.Group#angle","inherited":true,"___s":true},{"meta":{"range":[95493,95718],"filename":"Group.js","lineno":2705,"path":"src\\core"},"description":"The center x coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"centerX","properties":[{"type":{"names":["number"]},"name":"centerX"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#centerX","scope":"instance","kind":"member","inherits":"Phaser.Group#centerX","inherited":true,"___s":true},{"meta":{"range":[96056,96281],"filename":"Group.js","lineno":2733,"path":"src\\core"},"description":"The center y coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"centerY","properties":[{"type":{"names":["number"]},"name":"centerY"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#centerY","scope":"instance","kind":"member","inherits":"Phaser.Group#centerY","inherited":true,"___s":true},{"meta":{"range":[96620,96835],"filename":"Group.js","lineno":2761,"path":"src\\core"},"description":"The left coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"left","properties":[{"type":{"names":["number"]},"name":"left"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#left","scope":"instance","kind":"member","inherits":"Phaser.Group#left","inherited":true,"___s":true},{"meta":{"range":[97151,97368],"filename":"Group.js","lineno":2789,"path":"src\\core"},"description":"The right coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"right","properties":[{"type":{"names":["number"]},"name":"right"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#right","scope":"instance","kind":"member","inherits":"Phaser.Group#right","inherited":true,"___s":true},{"meta":{"range":[97698,97909],"filename":"Group.js","lineno":2817,"path":"src\\core"},"description":"The top coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"top","properties":[{"type":{"names":["number"]},"name":"top"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#top","scope":"instance","kind":"member","inherits":"Phaser.Group#top","inherited":true,"___s":true},{"meta":{"range":[98225,98446],"filename":"Group.js","lineno":2845,"path":"src\\core"},"description":"The bottom coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"bottom","properties":[{"type":{"names":["number"]},"name":"bottom"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#bottom","scope":"instance","kind":"member","inherits":"Phaser.Group#bottom","inherited":true,"___s":true},{"meta":{"range":[98779,101436],"filename":"Group.js","lineno":2873,"path":"src\\core"},"description":"Aligns this Group within another Game Object, or Rectangle, known as the\r'container', to one of 9 possible positions.\r\rThe container must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Groups within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Group to another Game Object does **not** make it a child of\rthe container. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, \r`Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, \r`Phaser.BOTTOM_CENTER` and `Phaser.BOTTOM_RIGHT`.\r\rGroups are placed in such a way that their _bounds_ align with the\rcontainer, taking into consideration rotation and scale of its children.\rThis allows you to neatly align Groups, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Group. For example:\r\r`group.alignIn(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `group` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the containers bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the container bounds by that amount, and providing a positive\rone expands it.","kind":"function","name":"alignIn","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Group to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"container"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"This Group."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#alignIn","scope":"instance","inherits":"Phaser.Group#alignIn","inherited":true,"___s":true},{"meta":{"range":[101522,104305],"filename":"Group.js","lineno":2915,"path":"src\\core"},"description":"Aligns this Group to the side of another Game Object, or Rectangle, known as the\r'parent', in one of 11 possible positions.\r\rThe parent must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Groups within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Group to another Game Object does **not** make it a child of\rthe parent. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, \r`Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, \r`Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` \rand `Phaser.BOTTOM_RIGHT`.\r\rGroups are placed in such a way that their _bounds_ align with the\rparent, taking into consideration rotation and scale of the children.\rThis allows you to neatly align Groups, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Group. For example:\r\r`group.alignTo(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `group` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the parents bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the parent bounds by that amount, and providing a positive\rone expands it.","kind":"function","name":"alignTo","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Group to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"parent"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, `Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, `Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"This Group."}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#alignTo","scope":"instance","inherits":"Phaser.Group#alignTo","inherited":true,"___s":true},{"meta":{"range":[104771,105080],"filename":"Group.js","lineno":2969,"path":"src\\core"},"description":"The x coordinate of the group container.\r\rYou can adjust the group container itself by modifying its coordinates.\rThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position.","name":"x","properties":[{"type":{"names":["number"]},"name":"x"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#x","scope":"instance","kind":"member","inherits":"Phaser.Group#x","inherited":true,"___s":true},{"meta":{"range":[105084,105393],"filename":"Group.js","lineno":2978,"path":"src\\core"},"description":"The y coordinate of the group container.\r\rYou can adjust the group container itself by modifying its coordinates.\rThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position.","name":"y","properties":[{"type":{"names":["number"]},"name":"y"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#y","scope":"instance","kind":"member","inherits":"Phaser.Group#y","inherited":true,"___s":true},{"meta":{"range":[105397,105735],"filename":"Group.js","lineno":2987,"path":"src\\core"},"description":"The angle of rotation of the group container, in radians.\r\rThis will adjust the group container itself by modifying its rotation.\rThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position.","name":"rotation","properties":[{"type":{"names":["number"]},"name":"rotation"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#rotation","scope":"instance","kind":"member","inherits":"Phaser.Group#rotation","inherited":true,"___s":true},{"meta":{"range":[105739,105908],"filename":"Group.js","lineno":2996,"path":"src\\core"},"description":"The visible state of the group. Non-visible Groups and all of their children are not rendered.","name":"visible","properties":[{"type":{"names":["boolean"]},"name":"visible"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#visible","scope":"instance","kind":"member","inherits":"Phaser.Group#visible","inherited":true,"___s":true},{"meta":{"range":[105912,106021],"filename":"Group.js","lineno":3003,"path":"src\\core"},"description":"The alpha value of the group container.","name":"alpha","properties":[{"type":{"names":["number"]},"name":"alpha"}],"memberof":"Phaser.FlexLayer","longname":"Phaser.FlexLayer#alpha","scope":"instance","kind":"member","inherits":"Phaser.Group#alpha","inherited":true,"___s":true},{"meta":{"range":[580,598],"filename":"DisplayObjectContainer.js","lineno":24,"path":"src\\pixi\\display"},"description":"[read-only] The array of children of this container.","properties":[{"name":"children"}],"type":{"names":["Array(DisplayObject)"]},"readonly":true,"name":"children","longname":"Phaser.FlexLayer#children","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"PIXI.DisplayObjectContainer#children","inherited":true,"___s":true},{"meta":{"range":[1045,1074],"filename":"DisplayObjectContainer.js","lineno":35,"path":"src\\pixi\\display"},"description":"If `ignoreChildInput`  is `false` it will allow this objects _children_ to be considered as valid for Input events.\r\rIf this property is `true` then the children will _not_ be considered as valid for Input events.\r\rNote that this property isn't recursive: only immediate children are influenced, it doesn't scan further down.","properties":[{"type":{"names":["boolean"]},"name":"ignoreChildInput"}],"defaultvalue":false,"name":"ignoreChildInput","longname":"Phaser.FlexLayer#ignoreChildInput","kind":"member","memberof":"Phaser.FlexLayer","scope":"instance","inherits":"PIXI.DisplayObjectContainer#ignoreChildInput","inherited":true,"___s":true},{"meta":{"range":[580,598],"filename":"DisplayObjectContainer.js","lineno":24,"path":"src\\pixi\\display"},"description":"[read-only] The array of children of this container.","properties":[{"name":"children"}],"type":{"names":["Array(DisplayObject)"]},"readonly":true,"name":"children","longname":"Phaser.Stage#children","kind":"member","memberof":"Phaser.Stage","scope":"instance","inherits":"PIXI.DisplayObjectContainer#children","inherited":true,"___s":true},{"meta":{"range":[1045,1074],"filename":"DisplayObjectContainer.js","lineno":35,"path":"src\\pixi\\display"},"description":"If `ignoreChildInput`  is `false` it will allow this objects _children_ to be considered as valid for Input events.\r\rIf this property is `true` then the children will _not_ be considered as valid for Input events.\r\rNote that this property isn't recursive: only immediate children are influenced, it doesn't scan further down.","properties":[{"type":{"names":["boolean"]},"name":"ignoreChildInput"}],"defaultvalue":false,"name":"ignoreChildInput","longname":"Phaser.Stage#ignoreChildInput","kind":"member","memberof":"Phaser.Stage","scope":"instance","inherits":"PIXI.DisplayObjectContainer#ignoreChildInput","inherited":true,"___s":true},{"meta":{"range":[2199,2215],"filename":"Group.js","lineno":38,"path":"src\\core"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"access":"protected","name":"game","longname":"Phaser.World#game","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#game","inherited":true,"___s":true},{"meta":{"range":[2425,2452],"filename":"Group.js","lineno":49,"path":"src\\core"},"description":"A name for this group. Not used internally but useful for debugging.","properties":[{"type":{"names":["string"]},"name":"name"}],"name":"name","longname":"Phaser.World#name","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#name","inherited":true,"___s":true},{"meta":{"range":[2690,2700],"filename":"Group.js","lineno":57,"path":"src\\core"},"description":"The z-depth value of this object within its parent container/Group - the World is a Group as well.\rThis value must be unique for each child in a Group.","properties":[{"type":{"names":["integer"]},"name":"z"}],"readonly":true,"name":"z","longname":"Phaser.World#z","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#z","inherited":true,"___s":true},{"meta":{"range":[3136,3160],"filename":"Group.js","lineno":80,"path":"src\\core"},"description":"Internal Phaser Type value.","properties":[{"type":{"names":["integer"]},"name":"type"}],"access":"protected","name":"type","longname":"Phaser.World#type","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#type","inherited":true,"___s":true},{"meta":{"range":[3287,3318],"filename":"Group.js","lineno":86,"path":"src\\core"},"properties":[{"type":{"names":["number"]},"description":"The const physics body type of this object.","name":"physicsType"}],"readonly":true,"name":"physicsType","longname":"Phaser.World#physicsType","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#physicsType","inherited":true,"___s":true},{"meta":{"range":[3536,3553],"filename":"Group.js","lineno":93,"path":"src\\core"},"description":"The alive property is useful for Groups that are children of other Groups and need to be included/excluded in checks like forEachAlive.","properties":[{"type":{"names":["boolean"]},"name":"alive"}],"defaultvalue":true,"name":"alive","longname":"Phaser.World#alive","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#alive","inherited":true,"___s":true},{"meta":{"range":[3701,3719],"filename":"Group.js","lineno":100,"path":"src\\core"},"description":"If exists is true the group is updated, otherwise it is skipped.","properties":[{"type":{"names":["boolean"]},"name":"exists"}],"defaultvalue":true,"name":"exists","longname":"Phaser.World#exists","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#exists","inherited":true,"___s":true},{"meta":{"range":[3895,3921],"filename":"Group.js","lineno":107,"path":"src\\core"},"description":"A group with `ignoreDestroy` set to `true` ignores all calls to its `destroy` method.","properties":[{"type":{"names":["boolean"]},"name":"ignoreDestroy"}],"defaultvalue":false,"name":"ignoreDestroy","longname":"Phaser.World#ignoreDestroy","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#ignoreDestroy","inherited":true,"___s":true},{"meta":{"range":[4369,4396],"filename":"Group.js","lineno":119,"path":"src\\core"},"description":"A Group is that has `pendingDestroy` set to `true` is flagged to have its destroy method\rcalled on the next logic update.\rYou can set it directly to flag the Group to be destroyed on its next update.\r\rThis is extremely useful if you wish to destroy a Group from within one of its own callbacks\ror a callback of one of its children.","properties":[{"type":{"names":["boolean"]},"name":"pendingDestroy"}],"name":"pendingDestroy","longname":"Phaser.World#pendingDestroy","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#pendingDestroy","inherited":true,"___s":true},{"meta":{"range":[4852,4882],"filename":"Group.js","lineno":130,"path":"src\\core"},"description":"The type of objects that will be created when using {@link #create} or {@link #createMultiple}.\r\rAny object may be used but it should extend either Sprite or Image and accept the same constructor arguments:\rwhen a new object is created it is passed the following parameters to its constructor: `(game, x, y, key, frame)`.","properties":[{"type":{"names":["object"]},"name":"classType"}],"defaultvalue":"{@link Phaser.Sprite}","name":"classType","longname":"Phaser.World#classType","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#classType","inherited":true,"___s":true},{"meta":{"range":[5172,5190],"filename":"Group.js","lineno":138,"path":"src\\core"},"description":"The current display object that the group cursor is pointing to, if any. (Can be set manually.)\r\rThe cursor is a way to iterate through the children in a Group using {@link #next} and {@link #previous}.","properties":[{"type":{"names":["DisplayObject"]},"nullable":true,"name":"cursor"}],"name":"cursor","longname":"Phaser.World#cursor","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#cursor","inherited":true,"___s":true},{"meta":{"range":[5569,5601],"filename":"Group.js","lineno":149,"path":"src\\core"},"description":"A Group with `inputEnableChildren` set to `true` will automatically call `inputEnabled = true` \ron any children _added_ to, or _created by_, this Group.\r\rIf there are children already in the Group at the time you set this property, they are not changed.","properties":[{"type":{"names":["boolean"]},"name":"inputEnableChildren"}],"defaultvalue":false,"name":"inputEnableChildren","longname":"Phaser.World#inputEnableChildren","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#inputEnableChildren","inherited":true,"___s":true},{"meta":{"range":[6075,6118],"filename":"Group.js","lineno":161,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputDown signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 2 arguments: A reference to the Sprite that triggered the signal, and\ra reference to the Pointer that caused it.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputDown"}],"name":"onChildInputDown","longname":"Phaser.World#onChildInputDown","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#onChildInputDown","inherited":true,"___s":true},{"meta":{"range":[6684,6725],"filename":"Group.js","lineno":174,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputUp signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 3 arguments: A reference to the Sprite that triggered the signal, \ra reference to the Pointer that caused it, and a boolean value `isOver` that tells you if the Pointer\ris still over the Sprite or not.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputUp"}],"name":"onChildInputUp","longname":"Phaser.World#onChildInputUp","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#onChildInputUp","inherited":true,"___s":true},{"meta":{"range":[7199,7242],"filename":"Group.js","lineno":186,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputOver signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 2 arguments: A reference to the Sprite that triggered the signal, and\ra reference to the Pointer that caused it.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputOver"}],"name":"onChildInputOver","longname":"Phaser.World#onChildInputOver","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#onChildInputOver","inherited":true,"___s":true},{"meta":{"range":[7714,7756],"filename":"Group.js","lineno":198,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputOut signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 2 arguments: A reference to the Sprite that triggered the signal, and\ra reference to the Pointer that caused it.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputOut"}],"name":"onChildInputOut","longname":"Phaser.World#onChildInputOut","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#onChildInputOut","inherited":true,"___s":true},{"meta":{"range":[8120,8148],"filename":"Group.js","lineno":208,"path":"src\\core"},"description":"If true all Sprites created by, or added to this group, will have a physics body enabled on them.\r\rIf there are children already in the Group at the time you set this property, they are not changed.\r\rThe default body type is controlled with {@link #physicsBodyType}.","properties":[{"type":{"names":["boolean"]},"name":"enableBody"}],"name":"enableBody","longname":"Phaser.World#enableBody","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#enableBody","inherited":true,"___s":true},{"meta":{"range":[8397,8425],"filename":"Group.js","lineno":217,"path":"src\\core"},"description":"If true when a physics body is created (via {@link #enableBody}) it will create a physics debug object as well.\r\rThis only works for P2 bodies.","properties":[{"type":{"names":["boolean"]},"name":"enableBodyDebug"}],"defaultvalue":false,"name":"enableBodyDebug","longname":"Phaser.World#enableBodyDebug","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#enableBodyDebug","inherited":true,"___s":true},{"meta":{"range":[8727,8765],"filename":"Group.js","lineno":225,"path":"src\\core"},"description":"If {@link #enableBody} is true this is the type of physics body that is created on new Sprites.\r\rThe valid values are {@link Phaser.Physics.ARCADE}, {@link Phaser.Physics.P2JS}, {@link Phaser.Physics.NINJA}, etc.","properties":[{"type":{"names":["integer"]},"name":"physicsBodyType"}],"name":"physicsBodyType","longname":"Phaser.World#physicsBodyType","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#physicsBodyType","inherited":true,"___s":true},{"meta":{"range":[9408,9440],"filename":"Group.js","lineno":243,"path":"src\\core"},"description":"If this Group contains Arcade Physics Sprites you can set a custom sort direction via this property.\r\rIt should be set to one of the Phaser.Physics.Arcade sort direction constants: \r\rPhaser.Physics.Arcade.SORT_NONE\rPhaser.Physics.Arcade.LEFT_RIGHT\rPhaser.Physics.Arcade.RIGHT_LEFT\rPhaser.Physics.Arcade.TOP_BOTTOM\rPhaser.Physics.Arcade.BOTTOM_TOP\r\rIf set to `null` the Group will use whatever Phaser.Physics.Arcade.sortDirection is set to. This is the default behavior.","properties":[{"type":{"names":["integer"]},"name":"physicsSortDirection"}],"defaultvalue":null,"name":"physicsSortDirection","longname":"Phaser.World#physicsSortDirection","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#physicsSortDirection","inherited":true,"___s":true},{"meta":{"range":[9571,9607],"filename":"Group.js","lineno":249,"path":"src\\core"},"description":"This signal is dispatched when the group is destroyed.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onDestroy"}],"name":"onDestroy","longname":"Phaser.World#onDestroy","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#onDestroy","inherited":true,"___s":true},{"meta":{"range":[9758,9778],"filename":"Group.js","lineno":255,"path":"src\\core"},"properties":[{"type":{"names":["integer"]},"description":"The current index of the Group cursor. Advance it with Group.next.","name":"cursorIndex"}],"readonly":true,"name":"cursorIndex","longname":"Phaser.World#cursorIndex","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#cursorIndex","inherited":true,"___s":true},{"meta":{"range":[10207,10233],"filename":"Group.js","lineno":265,"path":"src\\core"},"description":"A Group that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in Group.cameraOffset.\r\rNote that the cameraOffset values are in addition to any parent in the display list.\rSo if this Group was in a Group that has x: 200, then this will be added to the cameraOffset.x","properties":[{"type":{"names":["boolean"]},"name":"fixedToCamera"}],"name":"fixedToCamera","longname":"Phaser.World#fixedToCamera","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#fixedToCamera","inherited":true,"___s":true},{"meta":{"range":[10575,10613],"filename":"Group.js","lineno":272,"path":"src\\core"},"description":"If this object is {@link #fixedToCamera} then this stores the x/y position offset relative to the top-left of the camera view.\rIf the parent of this Group is also `fixedToCamera` then the offset here is in addition to that and should typically be disabled.","properties":[{"type":{"names":["Phaser.Point"]},"name":"cameraOffset"}],"name":"cameraOffset","longname":"Phaser.World#cameraOffset","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#cameraOffset","inherited":true,"___s":true},{"meta":{"range":[11287,11301],"filename":"Group.js","lineno":285,"path":"src\\core"},"description":"The hash array is an array belonging to this Group into which you can add any of its children via Group.addToHash and Group.removeFromHash.\r\rOnly children of this Group can be added to and removed from the hash.\r\rThis hash is used automatically by Phaser Arcade Physics in order to perform non z-index based destructive sorting.\rHowever if you don't use Arcade Physics, or this isn't a physics enabled Group, then you can use the hash to perform your own\rsorting and filtering of Group children without touching their z-index (and therefore display draw order)","properties":[{"type":{"names":["array"]},"name":"hash"}],"name":"hash","longname":"Phaser.World#hash","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"Phaser.Group#hash","inherited":true,"___s":true},{"meta":{"range":[12415,13611],"filename":"Group.js","lineno":341,"path":"src\\core"},"description":"Adds an existing object as the top child in this group.\r\rThe child is automatically added to the top of the group, and is displayed above every previous child.\r\rOr if the _optional_ index is specified, the child is added at the location specified by the index value, \rthis allows you to control child ordering.\r\rIf the child was already in this Group, it is simply returned, and nothing else happens to it.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.\r\rUse {@link #addAt} to control where a child is added. Use {@link #create} to create and add a new child.","kind":"function","name":"add","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to add as a child.","name":"child"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the child will not dispatch the `onAddedToGroup` event.","name":"silent"},{"type":{"names":["integer"]},"optional":true,"description":"The index within the group to insert the child to. Where 0 is the bottom of the Group.","name":"index"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was added to the group."}],"memberof":"Phaser.World","longname":"Phaser.World#add","scope":"instance","inherits":"Phaser.Group#add","inherited":true,"___s":true},{"meta":{"range":[14707,15502],"filename":"Group.js","lineno":418,"path":"src\\core"},"description":"Adds an existing object to this group.\r\rThe child is added to the group at the location specified by the index value, this allows you to control child ordering.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.","kind":"function","name":"addAt","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to add as a child.","name":"child"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The index within the group to insert the child to.","name":"index"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the child will not dispatch the `onAddedToGroup` event.","name":"silent"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was added to the group."}],"memberof":"Phaser.World","longname":"Phaser.World#addAt","scope":"instance","inherits":"Phaser.Group#addAt","inherited":true,"___s":true},{"meta":{"range":[15617,16054],"filename":"Group.js","lineno":439,"path":"src\\core"},"description":"Adds a child of this Group into the hash array.\rThis call will return false if the child is not a child of this Group, or is already in the hash.","kind":"function","name":"addToHash","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to add to this Groups hash. Must be a member of this Group already and not present in the hash.","name":"child"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the child was successfully added to the hash, otherwise false."}],"memberof":"Phaser.World","longname":"Phaser.World#addToHash","scope":"instance","inherits":"Phaser.Group#addToHash","inherited":true,"___s":true},{"meta":{"range":[16348,16745],"filename":"Group.js","lineno":464,"path":"src\\core"},"description":"Removes a child of this Group from the hash array.\rThis call will return false if the child is not in the hash.","kind":"function","name":"removeFromHash","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to remove from this Groups hash. Must be a member of this Group and in the hash.","name":"child"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the child was successfully removed from the hash, otherwise false."}],"memberof":"Phaser.World","longname":"Phaser.World#removeFromHash","scope":"instance","inherits":"Phaser.Group#removeFromHash","inherited":true,"___s":true},{"meta":{"range":[17033,18107],"filename":"Group.js","lineno":489,"path":"src\\core"},"description":"Adds an array of existing Display Objects to this Group.\r\rThe Display Objects are automatically added to the top of this Group, and will render on-top of everything already in this Group.\r\rAs well as an array you can also pass another Group as the first argument. In this case all of the children from that\rGroup will be removed from it and added into this Group.\r\rIf `Group.enableBody` is set, then a physics body will be created on the objects, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the objects, so long as one does not already exist.","kind":"function","name":"addMultiple","params":[{"type":{"names":["Array.<DisplayObject>","Phaser.Group"]},"description":"An array of display objects or a Phaser.Group. If a Group is given then *all* children will be moved from it.","name":"children"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch the `onAddedToGroup` event.","name":"silent"}],"returns":[{"type":{"names":["Array.<DisplayObject>","Phaser.Group"]},"description":"The array of children or Group of children that were added to this Group."}],"memberof":"Phaser.World","longname":"Phaser.World#addMultiple","scope":"instance","inherits":"Phaser.Group#addMultiple","inherited":true,"___s":true},{"meta":{"range":[18479,18756],"filename":"Group.js","lineno":524,"path":"src\\core"},"description":"Returns the child found at the given index within this group.","kind":"function","name":"getAt","params":[{"type":{"names":["integer"]},"description":"The index to return the child from.","name":"index"}],"returns":[{"type":{"names":["DisplayObject","integer"]},"description":"The child that was found at the given index, or -1 for an invalid index."}],"memberof":"Phaser.World","longname":"Phaser.World#getAt","scope":"instance","inherits":"Phaser.Group#getAt","inherited":true,"___s":true},{"meta":{"range":[18970,20735],"filename":"Group.js","lineno":544,"path":"src\\core"},"description":"Creates a new Phaser.Sprite object and adds it to the top of this group.\r\rUse {@link #classType} to change the type of object created.\r\rThe child is automatically added to the top of the group, and is displayed above every previous child.\r\rOr if the _optional_ index is specified, the child is added at the location specified by the index value, \rthis allows you to control child ordering.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.","kind":"function","name":"create","params":[{"type":{"names":["number"]},"description":"The x coordinate to display the newly created Sprite at. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to display the newly created Sprite at. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"The default exists state of the Sprite.","name":"exists"},{"type":{"names":["integer"]},"optional":true,"description":"The index within the group to insert the child to. Where 0 is the bottom of the Group.","name":"index"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was created: will be a {@link Phaser.Sprite} unless {@link #classType} has been changed."}],"memberof":"Phaser.World","longname":"Phaser.World#create","scope":"instance","inherits":"Phaser.Group#create","inherited":true,"___s":true},{"meta":{"range":[21074,23649],"filename":"Group.js","lineno":581,"path":"src\\core"},"description":"Creates multiple Phaser.Sprite objects and adds them to the top of this Group.\r\rThis method is useful if you need to quickly generate a pool of sprites, such as bullets.\r\rUse {@link #classType} to change the type of object created.\r\rYou can provide an array as the `key` and / or `frame` arguments. When you do this\rit will create `quantity` Sprites for every key (and frame) in the arrays.\r\rFor example:\r\r`createMultiple(25, ['ball', 'carrot'])`\r\rIn the above code there are 2 keys (ball and carrot) which means that 50 sprites will be\rcreated in total, 25 of each. You can also have the `frame` as an array:\r\r`createMultiple(5, 'bricks', [0, 1, 2, 3])`\r\rIn the above there is one key (bricks), which is a sprite sheet. The frames array tells\rthis method to use frames 0, 1, 2 and 3. So in total it will create 20 sprites, because\rthe quantity was set to 5, so that is 5 brick sprites of frame 0, 5 brick sprites with\rframe 1, and so on.\r\rIf you set both the key and frame arguments to be arrays then understand it will create\ra total quantity of sprites equal to the size of both arrays times each other. I.e.:\r\r`createMultiple(20, ['diamonds', 'balls'], [0, 1, 2])`\r\rThe above will create 20 'diamonds' of frame 0, 20 with frame 1 and 20 with frame 2.\rIt will then create 20 'balls' of frame 0, 20 with frame 1 and 20 with frame 2.\rIn total it will have created 120 sprites.\r\rBy default the Sprites will have their `exists` property set to `false`, and they will be \rpositioned at 0x0, relative to the `Group.x / y` values.\r\rIf `Group.enableBody` is set, then a physics body will be created on the objects, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the objects, so long as one does not already exist.","kind":"function","name":"createMultiple","params":[{"type":{"names":["integer"]},"description":"The number of Sprites to create.","name":"quantity"},{"type":{"names":["string","array"]},"description":"The Cache key of the image that the Sprites will use. Or an Array of keys. See the description for details on how the quantity applies when arrays are used.","name":"key"},{"type":{"names":["integer","string","array"]},"optional":true,"defaultvalue":0,"description":"If the Sprite image contains multiple frames you can specify which one to use here. Or an Array of frames. See the description for details on how the quantity applies when arrays are used.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"The default exists state of the Sprite.","name":"exists"}],"returns":[{"type":{"names":["array"]},"description":"An array containing all of the Sprites that were created."}],"memberof":"Phaser.World","longname":"Phaser.World#createMultiple","scope":"instance","inherits":"Phaser.Group#createMultiple","inherited":true,"___s":true},{"meta":{"range":[24339,24575],"filename":"Group.js","lineno":663,"path":"src\\core"},"description":"Internal method that re-applies all of the children's Z values.\r\rThis must be called whenever children ordering is altered so that their `z` indices are correctly updated.","kind":"function","name":"updateZ","access":"protected","memberof":"Phaser.World","longname":"Phaser.World#updateZ","scope":"instance","inherits":"Phaser.Group#updateZ","inherited":true,"___s":true},{"meta":{"range":[24736,27678],"filename":"Group.js","lineno":682,"path":"src\\core"},"description":"This method iterates through all children in the Group (regardless if they are visible or exist)\rand then changes their position so they are arranged in a Grid formation. Children must have\rthe `alignTo` method in order to be positioned by this call. All default Phaser Game Objects have\rthis.\r\rThe grid dimensions are determined by the first four arguments. The `width` and `height` arguments\rrelate to the width and height of the grid respectively.\r\rFor example if the Group had 100 children in it:\r\r`Group.align(10, 10, 32, 32)`\r\rThis will align all of the children into a grid formation of 10x10, using 32 pixels per\rgrid cell. If you want a wider grid, you could do:\r\r`Group.align(25, 4, 32, 32)`\r\rThis will align the children into a grid of 25x4, again using 32 pixels per grid cell.\r\rYou can choose to set _either_ the `width` or `height` value to -1. Doing so tells the method\rto keep on aligning children until there are no children left. For example if this Group had\r48 children in it, the following:\r\r`Group.align(-1, 8, 32, 32)`\r\r... will align the children so that there are 8 children vertically (the second argument), \rand each row will contain 6 sprites, except the last one, which will contain 5 (totaling 48)\r\rYou can also do:\r\r`Group.align(10, -1, 32, 32)`\r\rIn this case it will create a grid 10 wide, and as tall as it needs to be in order to fit\rall of the children in.\r\rThe `position` property allows you to control where in each grid cell the child is positioned.\rThis is a constant and can be one of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, \r`Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, \r`Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.\r\rThe final argument; `offset` lets you start the alignment from a specific child index.","kind":"function","name":"align","params":[{"type":{"names":["integer"]},"description":"The width of the grid in items (not pixels). Set to -1 for a dynamic width. If -1 then you must set an explicit height value.","name":"width"},{"type":{"names":["integer"]},"description":"The height of the grid in items (not pixels). Set to -1 for a dynamic height. If -1 then you must set an explicit width value.","name":"height"},{"type":{"names":["integer"]},"description":"The width of each grid cell, in pixels.","name":"cellWidth"},{"type":{"names":["integer"]},"description":"The height of each grid cell, in pixels.","name":"cellHeight"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Optional index to start the alignment from. Defaults to zero, the first child in the Group, but can be set to any valid child index value.","name":"offset"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the Group children were aligned, otherwise false."}],"memberof":"Phaser.World","longname":"Phaser.World#align","scope":"instance","inherits":"Phaser.Group#align","inherited":true,"___s":true},{"meta":{"range":[29501,29838],"filename":"Group.js","lineno":806,"path":"src\\core"},"description":"Sets the group cursor to the first child in the group.\r\rIf the optional index parameter is given it sets the cursor to the object at that index instead.","kind":"function","name":"resetCursor","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Set the cursor to point to a specific index.","name":"index"}],"returns":[{"type":{"names":["any"]},"description":"The child the cursor now points to."}],"memberof":"Phaser.World","longname":"Phaser.World#resetCursor","scope":"instance","inherits":"Phaser.Group#resetCursor","inherited":true,"___s":true},{"meta":{"range":[30189,30462],"filename":"Group.js","lineno":833,"path":"src\\core"},"description":"Advances the group cursor to the next (higher) object in the group.\r\rIf the cursor is at the end of the group (top child) it is moved the start of the group (bottom child).","kind":"function","name":"next","returns":[{"type":{"names":["any"]},"description":"The child the cursor now points to."}],"memberof":"Phaser.World","longname":"Phaser.World#next","scope":"instance","inherits":"Phaser.Group#next","inherited":true,"___s":true},{"meta":{"range":[30859,31125],"filename":"Group.js","lineno":862,"path":"src\\core"},"description":"Moves the group cursor to the previous (lower) child in the group.\r\rIf the cursor is at the start of the group (bottom child) it is moved to the end (top child).","kind":"function","name":"previous","returns":[{"type":{"names":["any"]},"description":"The child the cursor now points to."}],"memberof":"Phaser.World","longname":"Phaser.World#previous","scope":"instance","inherits":"Phaser.Group#previous","inherited":true,"___s":true},{"meta":{"range":[31527,31845],"filename":"Group.js","lineno":891,"path":"src\\core"},"description":"Swaps the position of two children in this group.\r\rBoth children must be in this group, a child cannot be swapped with itself, and unparented children cannot be swapped.","kind":"function","name":"swap","params":[{"type":{"names":["any"]},"description":"The first child to swap.","name":"child1"},{"type":{"names":["any"]},"description":"The second child to swap.","name":"child2"}],"memberof":"Phaser.World","longname":"Phaser.World#swap","scope":"instance","inherits":"Phaser.Group#swap","inherited":true,"___s":true},{"meta":{"range":[31977,32225],"filename":"Group.js","lineno":907,"path":"src\\core"},"description":"Brings the given child to the top of this group so it renders above all other children.","kind":"function","name":"bringToTop","params":[{"type":{"names":["any"]},"description":"The child to bring to the top of this group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.World","longname":"Phaser.World#bringToTop","scope":"instance","inherits":"Phaser.Group#bringToTop","inherited":true,"___s":true},{"meta":{"range":[32481,32733],"filename":"Group.js","lineno":926,"path":"src\\core"},"description":"Sends the given child to the bottom of this group so it renders below all other children.","kind":"function","name":"sendToBack","params":[{"type":{"names":["any"]},"description":"The child to send to the bottom of this group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.World","longname":"Phaser.World#sendToBack","scope":"instance","inherits":"Phaser.Group#sendToBack","inherited":true,"___s":true},{"meta":{"range":[32975,33202],"filename":"Group.js","lineno":945,"path":"src\\core"},"description":"Moves the given child up one place in this group unless it's already at the top.","kind":"function","name":"moveUp","params":[{"type":{"names":["any"]},"description":"The child to move up in the group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.World","longname":"Phaser.World#moveUp","scope":"instance","inherits":"Phaser.Group#moveUp","inherited":true,"___s":true},{"meta":{"range":[33533,33769],"filename":"Group.js","lineno":969,"path":"src\\core"},"description":"Moves the given child down one place in this group unless it's already at the bottom.","kind":"function","name":"moveDown","params":[{"type":{"names":["any"]},"description":"The child to move down in the group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.World","longname":"Phaser.World#moveDown","scope":"instance","inherits":"Phaser.Group#moveDown","inherited":true,"___s":true},{"meta":{"range":[34079,34416],"filename":"Group.js","lineno":993,"path":"src\\core"},"description":"Positions the child found at the given index within this group to the given x and y coordinates.","kind":"function","name":"xy","params":[{"type":{"names":["integer"]},"description":"The index of the child in the group to set the position of.","name":"index"},{"type":{"names":["number"]},"description":"The new x position of the child.","name":"x"},{"type":{"names":["number"]},"description":"The new y position of the child.","name":"y"}],"memberof":"Phaser.World","longname":"Phaser.World#xy","scope":"instance","inherits":"Phaser.Group#xy","inherited":true,"___s":true},{"meta":{"range":[34670,34845],"filename":"Group.js","lineno":1015,"path":"src\\core"},"description":"Reverses all children in this group.\r\rThis operation applies only to immediate children and does not propagate to subgroups.","kind":"function","name":"reverse","memberof":"Phaser.World","longname":"Phaser.World#reverse","scope":"instance","inherits":"Phaser.Group#reverse","inherited":true,"___s":true},{"meta":{"range":[34956,35246],"filename":"Group.js","lineno":1029,"path":"src\\core"},"description":"Get the index position of the given child in this group, which should match the child's `z` property.","kind":"function","name":"getIndex","params":[{"type":{"names":["any"]},"description":"The child to get the index for.","name":"child"}],"returns":[{"type":{"names":["integer"]},"description":"The index of the child or -1 if it's not a member of this group."}],"memberof":"Phaser.World","longname":"Phaser.World#getIndex","scope":"instance","inherits":"Phaser.Group#getIndex","inherited":true,"___s":true},{"meta":{"range":[35354,35730],"filename":"Group.js","lineno":1042,"path":"src\\core"},"description":"Searches the Group for the first instance of a child with the `name`\rproperty matching the given argument. Should more than one child have\rthe same name only the first instance is returned.","kind":"function","name":"getByName","params":[{"type":{"names":["string"]},"description":"The name to search for.","name":"name"}],"returns":[{"type":{"names":["any"]},"description":"The first child with a matching name, or null if none were found."}],"memberof":"Phaser.World","longname":"Phaser.World#getByName","scope":"instance","inherits":"Phaser.Group#getByName","inherited":true,"___s":true},{"meta":{"range":[35987,36616],"filename":"Group.js","lineno":1065,"path":"src\\core"},"description":"Replaces a child of this Group with the given newChild. The newChild cannot be a member of this Group.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.","kind":"function","name":"replace","params":[{"type":{"names":["any"]},"description":"The child in this group that will be replaced.","name":"oldChild"},{"type":{"names":["any"]},"description":"The child to be inserted into this group.","name":"newChild"}],"returns":[{"type":{"names":["any"]},"description":"Returns the oldChild that was replaced within this group."}],"memberof":"Phaser.World","longname":"Phaser.World#replace","scope":"instance","inherits":"Phaser.Group#replace","inherited":true,"___s":true},{"meta":{"range":[37172,37536],"filename":"Group.js","lineno":1104,"path":"src\\core"},"description":"Checks if the child has the given property.\r\rWill scan up to 4 levels deep only.","kind":"function","name":"hasProperty","params":[{"type":{"names":["any"]},"description":"The child to check for the existence of the property on.","name":"child"},{"type":{"names":["Array.<string>"]},"description":"An array of strings that make up the property.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the child has the property, otherwise false."}],"memberof":"Phaser.World","longname":"Phaser.World#hasProperty","scope":"instance","inherits":"Phaser.Group#hasProperty","inherited":true,"___s":true},{"meta":{"range":[38169,39389],"filename":"Group.js","lineno":1139,"path":"src\\core"},"description":"Sets a property to the given value on the child. The operation parameter controls how the value is set.\r\rThe operations are:\r- 0: set the existing value to the given value; if force is `true` a new property will be created if needed\r- 1: will add the given value to the value already present.\r- 2: will subtract the given value from the value already present.\r- 3: will multiply the value already present by the given value.\r- 4: will divide the value already present by the given value.","kind":"function","name":"setProperty","params":[{"type":{"names":["any"]},"description":"The child to set the property value on.","name":"child"},{"type":{"names":["array"]},"description":"An array of strings that make up the property that will be set.","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the property was set, false if not."}],"memberof":"Phaser.World","longname":"Phaser.World#setProperty","scope":"instance","inherits":"Phaser.Group#setProperty","inherited":true,"___s":true},{"meta":{"range":[41812,42411],"filename":"Group.js","lineno":1217,"path":"src\\core"},"description":"Checks a property for the given value on the child.","kind":"function","name":"checkProperty","params":[{"type":{"names":["any"]},"description":"The child to check the property value on.","name":"child"},{"type":{"names":["array"]},"description":"An array of strings that make up the property that will be set.","name":"key"},{"type":{"names":["any"]},"description":"The value that will be checked.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the property was was equal to value, false if not."}],"memberof":"Phaser.World","longname":"Phaser.World#checkProperty","scope":"instance","inherits":"Phaser.Group#checkProperty","inherited":true,"___s":true},{"meta":{"range":[42841,43970],"filename":"Group.js","lineno":1246,"path":"src\\core"},"description":"Quickly set a property on a single child of this group to a new value.\r\rThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","kind":"function","name":"set","params":[{"type":{"names":["Phaser.Sprite"]},"description":"The child to set the property on.","name":"child"},{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then the child will only be updated if alive=true.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then the child will only be updated if visible=true.","name":"checkVisible"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the property was set, false if not."}],"memberof":"Phaser.World","longname":"Phaser.World#set","scope":"instance","inherits":"Phaser.Group#set","inherited":true,"___s":true},{"meta":{"range":[44503,45816],"filename":"Group.js","lineno":1277,"path":"src\\core"},"description":"Quickly set the same property across all children of this group to a new value.\r\rThis call doesn't descend down children, so if you have a Group inside of this group, the property will be set on the group but not its children.\rIf you need that ability please see `Group.setAllChildren`.\r\rThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","kind":"function","name":"setAll","params":[{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with alive=true will be updated. This includes any Groups that are children.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with visible=true will be updated. This includes any Groups that are children.","name":"checkVisible"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"memberof":"Phaser.World","longname":"Phaser.World#setAll","scope":"instance","inherits":"Phaser.Group#setAll","inherited":true,"___s":true},{"meta":{"range":[46466,47814],"filename":"Group.js","lineno":1312,"path":"src\\core"},"description":"Quickly set the same property across all children of this group, and any child Groups, to a new value.\r\rIf this group contains other Groups then the same property is set across their children as well, iterating down until it reaches the bottom.\rUnlike with `setAll` the property is NOT set on child Groups itself.\r\rThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","kind":"function","name":"setAllChildren","params":[{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with alive=true will be updated. This includes any Groups that are children.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with visible=true will be updated. This includes any Groups that are children.","name":"checkVisible"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"memberof":"Phaser.World","longname":"Phaser.World#setAllChildren","scope":"instance","inherits":"Phaser.Group#setAllChildren","inherited":true,"___s":true},{"meta":{"range":[48703,49653],"filename":"Group.js","lineno":1353,"path":"src\\core"},"description":"Quickly check that the same property across all children of this group is equal to the given value.\r\rThis call doesn't descend down children, so if you have a Group inside of this group, the property will be checked on the group but not its children.","kind":"function","name":"checkAll","params":[{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be checked.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with alive=true will be checked. This includes any Groups that are children.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with visible=true will be checked. This includes any Groups that are children.","name":"checkVisible"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned.","name":"force"}],"memberof":"Phaser.World","longname":"Phaser.World#checkAll","scope":"instance","inherits":"Phaser.Group#checkAll","inherited":true,"___s":true},{"meta":{"range":[50309,50931],"filename":"Group.js","lineno":1386,"path":"src\\core"},"description":"Adds the amount to the given property on all children in this group.\r\r`Group.addAll('x', 10)` will add 10 to the child.x value for each child.","kind":"function","name":"addAll","params":[{"type":{"names":["string"]},"description":"The property to increment, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to increment the property by. If child.x = 10 then addAll('x', 40) would make child.x = 50.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.World","longname":"Phaser.World#addAll","scope":"instance","inherits":"Phaser.Group#addAll","inherited":true,"___s":true},{"meta":{"range":[51097,51731],"filename":"Group.js","lineno":1403,"path":"src\\core"},"description":"Subtracts the amount from the given property on all children in this group.\r\r`Group.subAll('x', 10)` will minus 10 from the child.x value for each child.","kind":"function","name":"subAll","params":[{"type":{"names":["string"]},"description":"The property to decrement, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to subtract from the property. If child.x = 50 then subAll('x', 40) would make child.x = 10.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.World","longname":"Phaser.World#subAll","scope":"instance","inherits":"Phaser.Group#subAll","inherited":true,"___s":true},{"meta":{"range":[51897,52529],"filename":"Group.js","lineno":1420,"path":"src\\core"},"description":"Multiplies the given property by the amount on all children in this group.\r\r`Group.multiplyAll('x', 2)` will x2 the child.x value for each child.","kind":"function","name":"multiplyAll","params":[{"type":{"names":["string"]},"description":"The property to multiply, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to multiply the property by. If child.x = 10 then multiplyAll('x', 2) would make child.x = 20.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.World","longname":"Phaser.World#multiplyAll","scope":"instance","inherits":"Phaser.Group#multiplyAll","inherited":true,"___s":true},{"meta":{"range":[52700,53322],"filename":"Group.js","lineno":1437,"path":"src\\core"},"description":"Divides the given property by the amount on all children in this group.\r\r`Group.divideAll('x', 2)` will half the child.x value for each child.","kind":"function","name":"divideAll","params":[{"type":{"names":["string"]},"description":"The property to divide, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to divide the property by. If child.x = 100 then divideAll('x', 2) would make child.x = 50.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.World","longname":"Phaser.World#divideAll","scope":"instance","inherits":"Phaser.Group#divideAll","inherited":true,"___s":true},{"meta":{"range":[53491,54021],"filename":"Group.js","lineno":1454,"path":"src\\core"},"description":"Calls a function, specified by name, on all children in the group who exist (or do not exist).\r\rAfter the existsValue parameter you can add as many parameters as you like, which will all be passed to the child callback.","kind":"function","name":"callAllExists","params":[{"type":{"names":["string"]},"description":"Name of the function on the children to call.","name":"callback"},{"type":{"names":["boolean"]},"description":"Only children with exists=existsValue will be called.","name":"existsValue"},{"type":{"names":["any"]},"variable":true,"description":"Additional parameters that will be passed to the callback.","name":"parameter"}],"memberof":"Phaser.World","longname":"Phaser.World#callAllExists","scope":"instance","inherits":"Phaser.Group#callAllExists","inherited":true,"___s":true},{"meta":{"range":[54549,54911],"filename":"Group.js","lineno":1488,"path":"src\\core"},"description":"Returns a reference to a function that exists on a child of the group based on the given callback array.","kind":"function","name":"callbackFromArray","params":[{"type":{"names":["object"]},"description":"The object to inspect.","name":"child"},{"type":{"names":["array"]},"description":"The array of function names.","name":"callback"},{"type":{"names":["integer"]},"description":"The size of the array (pre-calculated in callAll).","name":"length"}],"access":"protected","memberof":"Phaser.World","longname":"Phaser.World#callbackFromArray","scope":"instance","inherits":"Phaser.Group#callbackFromArray","inherited":true,"___s":true},{"meta":{"range":[55847,56541],"filename":"Group.js","lineno":1538,"path":"src\\core"},"description":"Calls a function, specified by name, on all on children.\r\rThe function is called for all children regardless if they are dead or alive (see callAllExists for different options).\rAfter the method parameter and context you can add as many extra parameters as you like, which will all be passed to the child.","kind":"function","name":"callAll","params":[{"type":{"names":["string"]},"description":"Name of the function on the child to call. Deep property lookup is supported.","name":"method"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"A string containing the context under which the method will be executed. Set to null to default to the child.","name":"context"},{"type":{"names":["any"]},"variable":true,"description":"Additional parameters that will be passed to the method.","name":"args"}],"memberof":"Phaser.World","longname":"Phaser.World#callAll","scope":"instance","inherits":"Phaser.Group#callAll","inherited":true,"___s":true},{"meta":{"range":[57918,58017],"filename":"Group.js","lineno":1611,"path":"src\\core"},"description":"The core preUpdate - as called by World.","kind":"function","name":"preUpdate","access":"protected","memberof":"Phaser.World","longname":"Phaser.World#preUpdate","scope":"instance","inherits":"Phaser.Group#preUpdate","inherited":true,"___s":true},{"meta":{"range":[58417,58510],"filename":"Group.js","lineno":1639,"path":"src\\core"},"description":"The core update - as called by World.","kind":"function","name":"update","access":"protected","memberof":"Phaser.World","longname":"Phaser.World#update","scope":"instance","inherits":"Phaser.Group#update","inherited":true,"___s":true},{"meta":{"range":[58768,58869],"filename":"Group.js","lineno":1656,"path":"src\\core"},"description":"The core postUpdate - as called by World.","kind":"function","name":"postUpdate","access":"protected","memberof":"Phaser.World","longname":"Phaser.World#postUpdate","scope":"instance","inherits":"Phaser.Group#postUpdate","inherited":true,"___s":true},{"meta":{"range":[59239,60105],"filename":"Group.js","lineno":1677,"path":"src\\core"},"description":"Find children matching a certain predicate.\r\rFor example:\r\r    var healthyList = Group.filter(function(child, index, children) {\r        return child.health > 10 ? true : false;\r    }, true);\r    healthyList.callAll('attack');\r\rNote: Currently this will skip any children which are Groups themselves.","kind":"function","name":"filter","params":[{"type":{"names":["function"]},"description":"The function that each child will be evaluated against. Each child of the group will be passed to it as its first parameter, the index as the second, and the entire child array as the third","name":"predicate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true, only existing can be selected; otherwise all children can be selected and will be passed to the predicate.","name":"checkExists"}],"returns":[{"type":{"names":["Phaser.ArraySet"]},"description":"Returns an array list containing all the children that the predicate returned true for"}],"memberof":"Phaser.World","longname":"Phaser.World#filter","scope":"instance","inherits":"Phaser.Group#filter","inherited":true,"___s":true},{"meta":{"range":[60612,61562],"filename":"Group.js","lineno":1717,"path":"src\\core"},"description":"Call a function on each child in this group.\r\rAdditional arguments for the callback can be specified after the `checkExists` parameter. For example,\r\r    Group.forEach(awardBonusGold, this, true, 100, 500)\r\rwould invoke `awardBonusGold` function with the parameters `(child, 100, 500)`.\r\rNote: This check will skip any children which are Groups themselves.","kind":"function","name":"forEach","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set only children matching for which `exists` is true will be passed to the callback, otherwise all children will be passed.","name":"checkExists"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.World","longname":"Phaser.World#forEach","scope":"instance","inherits":"Phaser.Group#forEach","inherited":true,"___s":true},{"meta":{"range":[62664,63187],"filename":"Group.js","lineno":1771,"path":"src\\core"},"description":"Call a function on each existing child in this group.\r\rSee {@link Phaser.Group#forEach forEach} for details.","kind":"function","name":"forEachExists","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.World","longname":"Phaser.World#forEachExists","scope":"instance","inherits":"Phaser.Group#forEachExists","inherited":true,"___s":true},{"meta":{"range":[63575,64094],"filename":"Group.js","lineno":1799,"path":"src\\core"},"description":"Call a function on each alive child in this group.\r\rSee {@link Phaser.Group#forEach forEach} for details.","kind":"function","name":"forEachAlive","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.World","longname":"Phaser.World#forEachAlive","scope":"instance","inherits":"Phaser.Group#forEachAlive","inherited":true,"___s":true},{"meta":{"range":[64480,64997],"filename":"Group.js","lineno":1827,"path":"src\\core"},"description":"Call a function on each dead child in this group.\r\rSee {@link Phaser.Group#forEach forEach} for details.","kind":"function","name":"forEachDead","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.World","longname":"Phaser.World#forEachDead","scope":"instance","inherits":"Phaser.Group#forEachDead","inherited":true,"___s":true},{"meta":{"range":[65383,66281],"filename":"Group.js","lineno":1855,"path":"src\\core"},"description":"Sort the children in the group according to a particular key and ordering.\r\rCall this function to sort the group according to a particular key value and order.\r\rFor example to depth sort Sprites for Zelda-style game you might call `group.sort('y', Phaser.Group.SORT_ASCENDING)` at the bottom of your `State.update()`.\r\rInternally this uses a standard JavaScript Array sort, so everything that applies there also applies here, including\ralphabetical sorting, mixing strings and numbers, and Unicode sorting. See MDN for more details.","kind":"function","name":"sort","params":[{"type":{"names":["string"]},"optional":true,"defaultvalue":"'z'","description":"The name of the property to sort on. Defaults to the objects z-depth value.","name":"key"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"Phaser.Group.SORT_ASCENDING","description":"Order ascending ({@link Phaser.Group.SORT_ASCENDING SORT_ASCENDING}) or descending ({@link Phaser.Group.SORT_DESCENDING SORT_DESCENDING}).","name":"order"}],"memberof":"Phaser.World","longname":"Phaser.World#sort","scope":"instance","inherits":"Phaser.Group#sort","inherited":true,"___s":true},{"meta":{"range":[66838,67280],"filename":"Group.js","lineno":1895,"path":"src\\core"},"description":"Sort the children in the group according to custom sort function.\r\rThe `sortHandler` is provided the two parameters: the two children involved in the comparison (a and b).\rIt should return -1 if `a > b`, 1 if `a < b` or 0 if `a === b`.","kind":"function","name":"customSort","params":[{"type":{"names":["function"]},"description":"The custom sort function.","name":"sortHandler"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the sortHandler is called.","name":"context"}],"memberof":"Phaser.World","longname":"Phaser.World#customSort","scope":"instance","inherits":"Phaser.Group#customSort","inherited":true,"___s":true},{"meta":{"range":[67535,67766],"filename":"Group.js","lineno":1919,"path":"src\\core"},"description":"An internal helper function for the sort process.","kind":"function","name":"ascendingSortHandler","access":"protected","params":[{"type":{"names":["object"]},"description":"The first object being sorted.","name":"a"},{"type":{"names":["object"]},"description":"The second object being sorted.","name":"b"}],"memberof":"Phaser.World","longname":"Phaser.World#ascendingSortHandler","scope":"instance","inherits":"Phaser.Group#ascendingSortHandler","inherited":true,"___s":true},{"meta":{"range":[68180,68412],"filename":"Group.js","lineno":1951,"path":"src\\core"},"description":"An internal helper function for the sort process.","kind":"function","name":"descendingSortHandler","access":"protected","params":[{"type":{"names":["object"]},"description":"The first object being sorted.","name":"a"},{"type":{"names":["object"]},"description":"The second object being sorted.","name":"b"}],"memberof":"Phaser.World","longname":"Phaser.World#descendingSortHandler","scope":"instance","inherits":"Phaser.Group#descendingSortHandler","inherited":true,"___s":true},{"meta":{"range":[68717,70530],"filename":"Group.js","lineno":1976,"path":"src\\core"},"description":"Iterates over the children of the group performing one of several actions for matched children.\r\rA child is considered a match when it has a property, named `key`, whose value is equal to `value`\raccording to a strict equality comparison.\r\rThe result depends on the `returnType`:\r\r- {@link Phaser.Group.RETURN_TOTAL RETURN_TOTAL}:\r    The callback, if any, is applied to all matching children. The number of matched children is returned.\r- {@link Phaser.Group.RETURN_NONE RETURN_NONE}:\r    The callback, if any, is applied to all matching children. No value is returned.\r- {@link Phaser.Group.RETURN_CHILD RETURN_CHILD}:\r    The callback, if any, is applied to the *first* matching child and the *first* matched child is returned.\r    If there is no matching child then null is returned.\r\rIf `args` is specified it must be an array. The matched child will be assigned to the first\relement and the entire array will be applied to the callback function.","kind":"function","name":"iterate","params":[{"type":{"names":["string"]},"description":"The child property to check, i.e. 'exists', 'alive', 'health'","name":"key"},{"type":{"names":["any"]},"description":"A child matches if `child[key] === value` is true.","name":"value"},{"type":{"names":["integer"]},"description":"How to iterate the children and what to return.","name":"returnType"},{"type":{"names":["function"]},"optional":true,"defaultvalue":null,"description":"Optional function that will be called on each matching child. The matched child is supplied as the first argument.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["Array.<any>"]},"optional":true,"defaultvalue":"(none)","description":"The arguments supplied to to the callback; the first array index (argument) will be replaced with the matched child.","name":"args"}],"returns":[{"type":{"names":["any"]},"description":"Returns either an integer (for RETURN_TOTAL), the first matched child (for RETURN_CHILD), or null."}],"memberof":"Phaser.World","longname":"Phaser.World#iterate","scope":"instance","inherits":"Phaser.Group#iterate","inherited":true,"___s":true},{"meta":{"range":[72077,73685],"filename":"Group.js","lineno":2071,"path":"src\\core"},"description":"Get the first display object that exists, or doesn't exist.\r\rYou can use the optional argument `createIfNull` to create a new Game Object if none matching your exists argument were found in this Group.\r\rIt works by calling `Group.create` passing it the parameters given to this method, and returning the new child.\r\rIf a child *was* found , `createIfNull` is `false` and you provided the additional arguments then the child\rwill be reset and/or have a new texture loaded on it. This is handled by `Group.resetChild`.","kind":"function","name":"getFirstExists","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true, find the first existing child; otherwise find the first non-existing child.","name":"exists"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `true` and no alive children are found a new one is created.","name":"createIfNull"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The first child, or `null` if none found and `createIfNull` was false."}],"memberof":"Phaser.World","longname":"Phaser.World#getFirstExists","scope":"instance","inherits":"Phaser.Group#getFirstExists","inherited":true,"___s":true},{"meta":{"range":[74132,75655],"filename":"Group.js","lineno":2105,"path":"src\\core"},"description":"Get the first child that is alive (`child.alive === true`).\r\rThis is handy for choosing a squad leader, etc.\r\rYou can use the optional argument `createIfNull` to create a new Game Object if no alive ones were found in this Group.\r\rIt works by calling `Group.create` passing it the parameters given to this method, and returning the new child.\r\rIf a child *was* found , `createIfNull` is `false` and you provided the additional arguments then the child\rwill be reset and/or have a new texture loaded on it. This is handled by `Group.resetChild`.","kind":"function","name":"getFirstAlive","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `true` and no alive children are found a new one is created.","name":"createIfNull"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The alive dead child, or `null` if none found and `createIfNull` was false."}],"memberof":"Phaser.World","longname":"Phaser.World#getFirstAlive","scope":"instance","inherits":"Phaser.Group#getFirstAlive","inherited":true,"___s":true},{"meta":{"range":[76012,77578],"filename":"Group.js","lineno":2135,"path":"src\\core"},"description":"Get the first child that is dead (`child.alive === false`).\r\rThis is handy for checking if everything has been wiped out and adding to the pool as needed.\r\rYou can use the optional argument `createIfNull` to create a new Game Object if no dead ones were found in this Group.\r\rIt works by calling `Group.create` passing it the parameters given to this method, and returning the new child.\r\rIf a child *was* found , `createIfNull` is `false` and you provided the additional arguments then the child\rwill be reset and/or have a new texture loaded on it. This is handled by `Group.resetChild`.","kind":"function","name":"getFirstDead","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `true` and no dead children are found a new one is created.","name":"createIfNull"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The first dead child, or `null` if none found and `createIfNull` was false."}],"memberof":"Phaser.World","longname":"Phaser.World#getFirstDead","scope":"instance","inherits":"Phaser.Group#getFirstDead","inherited":true,"___s":true},{"meta":{"range":[77935,79182],"filename":"Group.js","lineno":2165,"path":"src\\core"},"description":"Takes a child and if the `x` and `y` arguments are given it calls `child.reset(x, y)` on it.\r\rIf the `key` and optionally the `frame` arguments are given, it calls `child.loadTexture(key, frame)` on it.\r\rThe two operations are separate. For example if you just wish to load a new texture then pass `null` as the x and y values.","kind":"function","name":"resetChild","params":[{"type":{"names":["DisplayObject"]},"description":"The child to reset and/or load the texture on.","name":"child"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was reset: usually a {@link Phaser.Sprite}."}],"memberof":"Phaser.World","longname":"Phaser.World#resetChild","scope":"instance","inherits":"Phaser.Group#resetChild","inherited":true,"___s":true},{"meta":{"range":[79595,79813],"filename":"Group.js","lineno":2204,"path":"src\\core"},"description":"Return the child at the top of this group.\r\rThe top child is the child displayed (rendered) above every other child.","kind":"function","name":"getTop","returns":[{"type":{"names":["any"]},"description":"The child at the top of the Group."}],"memberof":"Phaser.World","longname":"Phaser.World#getTop","scope":"instance","inherits":"Phaser.Group#getTop","inherited":true,"___s":true},{"meta":{"range":[79978,80212],"filename":"Group.js","lineno":2221,"path":"src\\core"},"description":"Returns the child at the bottom of this group.\r\rThe bottom child the child being displayed (rendered) below every other child.","kind":"function","name":"getBottom","returns":[{"type":{"names":["any"]},"description":"The child at the bottom of the Group."}],"memberof":"Phaser.World","longname":"Phaser.World#getBottom","scope":"instance","inherits":"Phaser.Group#getBottom","inherited":true,"___s":true},{"meta":{"range":[80357,81660],"filename":"Group.js","lineno":2238,"path":"src\\core"},"description":"Get the closest child to given Object, with optional callback to filter children.\r\rThis can be a Sprite, Group, Image or any object with public x and y properties.\r\r'close' is determined by the distance from the objects `x` and `y` properties compared to the childs `x` and `y` properties.\r\rYou can use the optional `callback` argument to apply your own filter to the distance checks.\rIf the child is closer then the previous child, it will be sent to `callback` as the first argument,\rwith the distance as the second. The callback should return `true` if it passes your \rfiltering criteria, otherwise it should return `false`.","kind":"function","name":"getClosestTo","params":[{"type":{"names":["any"]},"description":"The object used to determine the distance. This can be a Sprite, Group, Image or any object with public x and y properties.","name":"object"},{"type":{"names":["function"]},"optional":true,"description":"The function that each child will be evaluated against. Each child of the group will be passed to it as its first parameter, with the distance as the second. It should return `true` if the child passes the matching criteria.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"}],"returns":[{"type":{"names":["any"]},"description":"The child closest to given object, or `null` if no child was found."}],"memberof":"Phaser.World","longname":"Phaser.World#getClosestTo","scope":"instance","inherits":"Phaser.Group#getClosestTo","inherited":true,"___s":true},{"meta":{"range":[82322,83655],"filename":"Group.js","lineno":2282,"path":"src\\core"},"description":"Get the child furthest away from the given Object, with optional callback to filter children.\r\rThis can be a Sprite, Group, Image or any object with public x and y properties.\r\r'furthest away' is determined by the distance from the objects `x` and `y` properties compared to the childs `x` and `y` properties.\r\rYou can use the optional `callback` argument to apply your own filter to the distance checks.\rIf the child is closer then the previous child, it will be sent to `callback` as the first argument,\rwith the distance as the second. The callback should return `true` if it passes your \rfiltering criteria, otherwise it should return `false`.","kind":"function","name":"getFurthestFrom","params":[{"type":{"names":["any"]},"description":"The object used to determine the distance. This can be a Sprite, Group, Image or any object with public x and y properties.","name":"object"},{"type":{"names":["function"]},"optional":true,"description":"The function that each child will be evaluated against. Each child of the group will be passed to it as its first parameter, with the distance as the second. It should return `true` if the child passes the matching criteria.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"}],"returns":[{"type":{"names":["any"]},"description":"The child furthest from the given object, or `null` if no child was found."}],"memberof":"Phaser.World","longname":"Phaser.World#getFurthestFrom","scope":"instance","inherits":"Phaser.Group#getFurthestFrom","inherited":true,"___s":true},{"meta":{"range":[84305,84465],"filename":"Group.js","lineno":2326,"path":"src\\core"},"description":"Get the number of living children in this group.","kind":"function","name":"countLiving","returns":[{"type":{"names":["integer"]},"description":"The number of children flagged as alive."}],"memberof":"Phaser.World","longname":"Phaser.World#countLiving","scope":"instance","inherits":"Phaser.Group#countLiving","inherited":true,"___s":true},{"meta":{"range":[84597,84752],"filename":"Group.js","lineno":2338,"path":"src\\core"},"description":"Get the number of dead children in this group.","kind":"function","name":"countDead","returns":[{"type":{"names":["integer"]},"description":"The number of children flagged as dead."}],"memberof":"Phaser.World","longname":"Phaser.World#countDead","scope":"instance","inherits":"Phaser.Group#countDead","inherited":true,"___s":true},{"meta":{"range":[84883,85214],"filename":"Group.js","lineno":2350,"path":"src\\core"},"description":"Returns a random child from the group.","kind":"function","name":"getRandom","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Offset from the front of the group (lowest child).","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"(to top)","description":"Restriction on the number of values you want to randomly select from.","name":"length"}],"returns":[{"type":{"names":["any"]},"description":"A random child of this Group."}],"memberof":"Phaser.World","longname":"Phaser.World#getRandom","scope":"instance","inherits":"Phaser.Group#getRandom","inherited":true,"___s":true},{"meta":{"range":[85558,86132],"filename":"Group.js","lineno":2372,"path":"src\\core"},"description":"Returns a random child from the Group that has `exists` set to `true`.\r\rOptionally you can specify a start and end index. For example if this Group had 100 children,\rand you set `startIndex` to 0 and `endIndex` to 50, it would return a random child from only\rthe first 50 children in the Group.","kind":"function","name":"getRandomExists","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The first child index to start the search from.","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"description":"The last child index to search up to.","name":"endIndex"}],"returns":[{"type":{"names":["any"]},"description":"A random child of this Group that exists."}],"memberof":"Phaser.World","longname":"Phaser.World#getRandomExists","scope":"instance","inherits":"Phaser.Group#getRandomExists","inherited":true,"___s":true},{"meta":{"range":[86327,87278],"filename":"Group.js","lineno":2392,"path":"src\\core"},"description":"Returns all children in this Group.\r\rYou can optionally specify a matching criteria using the `property` and `value` arguments.\r\rFor example: `getAll('exists', true)` would return only children that have their exists property set.\r\rOptionally you can specify a start and end index. For example if this Group had 100 children,\rand you set `startIndex` to 0 and `endIndex` to 50, it would return a random child from only\rthe first 50 children in the Group.","kind":"function","name":"getAll","params":[{"type":{"names":["string"]},"optional":true,"description":"An optional property to test against the value argument.","name":"property"},{"type":{"names":["any"]},"optional":true,"description":"If property is set then Child.property must strictly equal this value to be included in the results.","name":"value"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The first child index to start the search from.","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"description":"The last child index to search up until.","name":"endIndex"}],"returns":[{"type":{"names":["any"]},"description":"A random existing child of this Group."}],"memberof":"Phaser.World","longname":"Phaser.World#getAll","scope":"instance","inherits":"Phaser.Group#getAll","inherited":true,"___s":true},{"meta":{"range":[87758,88400],"filename":"Group.js","lineno":2431,"path":"src\\core"},"description":"Removes the given child from this group.\r\rThis will dispatch an `onRemovedFromGroup` event from the child (if it has one), and optionally destroy the child.\r\rIf the group cursor was referring to the removed child it is updated to refer to the next child.","kind":"function","name":"remove","params":[{"type":{"names":["any"]},"description":"The child to remove.","name":"child"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true `destroy` will be invoked on the removed child.","name":"destroy"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the the child will not dispatch the `onRemovedFromGroup` event.","name":"silent"}],"returns":[{"type":{"names":["boolean"]},"description":"true if the child was removed from this group, otherwise false."}],"memberof":"Phaser.World","longname":"Phaser.World#remove","scope":"instance","inherits":"Phaser.Group#remove","inherited":true,"___s":true},{"meta":{"range":[89108,89491],"filename":"Group.js","lineno":2479,"path":"src\\core"},"description":"Moves all children from this Group to the Group given.","kind":"function","name":"moveAll","params":[{"type":{"names":["Phaser.Group"]},"description":"The new Group to which the children will be moved to.","name":"group"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch the `onAddedToGroup` event for the new Group.","name":"silent"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"The Group to which all the children were moved."}],"memberof":"Phaser.World","longname":"Phaser.World#moveAll","scope":"instance","inherits":"Phaser.Group#moveAll","inherited":true,"___s":true},{"meta":{"range":[89905,90715],"filename":"Group.js","lineno":2508,"path":"src\\core"},"description":"Removes all children from this Group, but does not remove the group from its parent.\r\rThe children can be optionally destroyed as they are removed.\r\rYou can also optionally also destroy the BaseTexture the Child is using. Be careful if you've\rmore than one Game Object sharing the same BaseTexture.","kind":"function","name":"removeAll","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true `destroy` will be invoked on each removed child.","name":"destroy"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch their `onRemovedFromGroup` events.","name":"silent"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true, and if the `destroy` argument is also true, the BaseTexture belonging to the Child is also destroyed. Note that if another Game Object is sharing the same BaseTexture it will invalidate it.","name":"destroyTexture"}],"memberof":"Phaser.World","longname":"Phaser.World#removeAll","scope":"instance","inherits":"Phaser.Group#removeAll","inherited":true,"___s":true},{"meta":{"range":[91534,92171],"filename":"Group.js","lineno":2556,"path":"src\\core"},"description":"Removes all children from this group whose index falls beteen the given startIndex and endIndex values.","kind":"function","name":"removeBetween","params":[{"type":{"names":["integer"]},"description":"The index to start removing children from.","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"description":"The index to stop removing children at. Must be higher than startIndex. If undefined this method will remove all children between startIndex and the end of the group.","name":"endIndex"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true `destroy` will be invoked on each removed child.","name":"destroy"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch their `onRemovedFromGroup` events.","name":"silent"}],"memberof":"Phaser.World","longname":"Phaser.World#removeBetween","scope":"instance","inherits":"Phaser.Group#removeBetween","inherited":true,"___s":true},{"meta":{"range":[93215,93635],"filename":"Group.js","lineno":2611,"path":"src\\core"},"description":"Destroys this group.\r\rRemoves all children, then removes this group from its parent and nulls references.","kind":"function","name":"destroy","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true `destroy` will be invoked on each removed child.","name":"destroyChildren"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"A 'soft destroy' (set to true) doesn't remove this group from its parent or null the game reference. Set to false and it does.","name":"soft"}],"memberof":"Phaser.World","longname":"Phaser.World#destroy","scope":"instance","inherits":"Phaser.Group#destroy","inherited":true,"___s":true},{"meta":{"range":[94267,94398],"filename":"Group.js","lineno":2648,"path":"src\\core"},"description":"Total number of existing children in the group.","name":"total","properties":[{"type":{"names":["integer"]},"name":"total"}],"readonly":true,"memberof":"Phaser.World","longname":"Phaser.World#total","scope":"instance","kind":"member","inherits":"Phaser.Group#total","inherited":true,"___s":true},{"meta":{"range":[94577,94738],"filename":"Group.js","lineno":2665,"path":"src\\core"},"description":"Total number of children in this group, regardless of exists/alive status.","name":"length","properties":[{"type":{"names":["integer"]},"name":"length"}],"readonly":true,"memberof":"Phaser.World","longname":"Phaser.World#length","scope":"instance","kind":"member","inherits":"Phaser.Group#length","inherited":true,"___s":true},{"meta":{"range":[94883,95247],"filename":"Group.js","lineno":2682,"path":"src\\core"},"description":"The angle of rotation of the group container, in degrees.\r\rThis adjusts the group itself by modifying its local rotation transform.\r\rThis has no impact on the rotation/angle properties of the children, but it will update their worldTransform\rand on-screen orientation and position.","name":"angle","properties":[{"type":{"names":["number"]},"name":"angle"}],"memberof":"Phaser.World","longname":"Phaser.World#angle","scope":"instance","kind":"member","inherits":"Phaser.Group#angle","inherited":true,"___s":true},{"meta":{"range":[96620,96835],"filename":"Group.js","lineno":2761,"path":"src\\core"},"description":"The left coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"left","properties":[{"type":{"names":["number"]},"name":"left"}],"memberof":"Phaser.World","longname":"Phaser.World#left","scope":"instance","kind":"member","inherits":"Phaser.Group#left","inherited":true,"___s":true},{"meta":{"range":[97151,97368],"filename":"Group.js","lineno":2789,"path":"src\\core"},"description":"The right coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"right","properties":[{"type":{"names":["number"]},"name":"right"}],"memberof":"Phaser.World","longname":"Phaser.World#right","scope":"instance","kind":"member","inherits":"Phaser.Group#right","inherited":true,"___s":true},{"meta":{"range":[97698,97909],"filename":"Group.js","lineno":2817,"path":"src\\core"},"description":"The top coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"top","properties":[{"type":{"names":["number"]},"name":"top"}],"memberof":"Phaser.World","longname":"Phaser.World#top","scope":"instance","kind":"member","inherits":"Phaser.Group#top","inherited":true,"___s":true},{"meta":{"range":[98225,98446],"filename":"Group.js","lineno":2845,"path":"src\\core"},"description":"The bottom coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"bottom","properties":[{"type":{"names":["number"]},"name":"bottom"}],"memberof":"Phaser.World","longname":"Phaser.World#bottom","scope":"instance","kind":"member","inherits":"Phaser.Group#bottom","inherited":true,"___s":true},{"meta":{"range":[98779,101436],"filename":"Group.js","lineno":2873,"path":"src\\core"},"description":"Aligns this Group within another Game Object, or Rectangle, known as the\r'container', to one of 9 possible positions.\r\rThe container must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Groups within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Group to another Game Object does **not** make it a child of\rthe container. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, \r`Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, \r`Phaser.BOTTOM_CENTER` and `Phaser.BOTTOM_RIGHT`.\r\rGroups are placed in such a way that their _bounds_ align with the\rcontainer, taking into consideration rotation and scale of its children.\rThis allows you to neatly align Groups, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Group. For example:\r\r`group.alignIn(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `group` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the containers bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the container bounds by that amount, and providing a positive\rone expands it.","kind":"function","name":"alignIn","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Group to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"container"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"This Group."}],"memberof":"Phaser.World","longname":"Phaser.World#alignIn","scope":"instance","inherits":"Phaser.Group#alignIn","inherited":true,"___s":true},{"meta":{"range":[101522,104305],"filename":"Group.js","lineno":2915,"path":"src\\core"},"description":"Aligns this Group to the side of another Game Object, or Rectangle, known as the\r'parent', in one of 11 possible positions.\r\rThe parent must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Groups within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Group to another Game Object does **not** make it a child of\rthe parent. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, \r`Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, \r`Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` \rand `Phaser.BOTTOM_RIGHT`.\r\rGroups are placed in such a way that their _bounds_ align with the\rparent, taking into consideration rotation and scale of the children.\rThis allows you to neatly align Groups, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Group. For example:\r\r`group.alignTo(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `group` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the parents bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the parent bounds by that amount, and providing a positive\rone expands it.","kind":"function","name":"alignTo","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Group to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"parent"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, `Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, `Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"This Group."}],"memberof":"Phaser.World","longname":"Phaser.World#alignTo","scope":"instance","inherits":"Phaser.Group#alignTo","inherited":true,"___s":true},{"meta":{"range":[104771,105080],"filename":"Group.js","lineno":2969,"path":"src\\core"},"description":"The x coordinate of the group container.\r\rYou can adjust the group container itself by modifying its coordinates.\rThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position.","name":"x","properties":[{"type":{"names":["number"]},"name":"x"}],"memberof":"Phaser.World","longname":"Phaser.World#x","scope":"instance","kind":"member","inherits":"Phaser.Group#x","inherited":true,"overrides":"Phaser.Group#x","___s":true},{"meta":{"range":[105084,105393],"filename":"Group.js","lineno":2978,"path":"src\\core"},"description":"The y coordinate of the group container.\r\rYou can adjust the group container itself by modifying its coordinates.\rThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position.","name":"y","properties":[{"type":{"names":["number"]},"name":"y"}],"memberof":"Phaser.World","longname":"Phaser.World#y","scope":"instance","kind":"member","inherits":"Phaser.Group#y","inherited":true,"overrides":"Phaser.Group#y","___s":true},{"meta":{"range":[105397,105735],"filename":"Group.js","lineno":2987,"path":"src\\core"},"description":"The angle of rotation of the group container, in radians.\r\rThis will adjust the group container itself by modifying its rotation.\rThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position.","name":"rotation","properties":[{"type":{"names":["number"]},"name":"rotation"}],"memberof":"Phaser.World","longname":"Phaser.World#rotation","scope":"instance","kind":"member","inherits":"Phaser.Group#rotation","inherited":true,"___s":true},{"meta":{"range":[105739,105908],"filename":"Group.js","lineno":2996,"path":"src\\core"},"description":"The visible state of the group. Non-visible Groups and all of their children are not rendered.","name":"visible","properties":[{"type":{"names":["boolean"]},"name":"visible"}],"memberof":"Phaser.World","longname":"Phaser.World#visible","scope":"instance","kind":"member","inherits":"Phaser.Group#visible","inherited":true,"___s":true},{"meta":{"range":[105912,106021],"filename":"Group.js","lineno":3003,"path":"src\\core"},"description":"The alpha value of the group container.","name":"alpha","properties":[{"type":{"names":["number"]},"name":"alpha"}],"memberof":"Phaser.World","longname":"Phaser.World#alpha","scope":"instance","kind":"member","inherits":"Phaser.Group#alpha","inherited":true,"___s":true},{"meta":{"range":[580,598],"filename":"DisplayObjectContainer.js","lineno":24,"path":"src\\pixi\\display"},"description":"[read-only] The array of children of this container.","properties":[{"name":"children"}],"type":{"names":["Array(DisplayObject)"]},"readonly":true,"name":"children","longname":"Phaser.World#children","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"PIXI.DisplayObjectContainer#children","inherited":true,"___s":true},{"meta":{"range":[1045,1074],"filename":"DisplayObjectContainer.js","lineno":35,"path":"src\\pixi\\display"},"description":"If `ignoreChildInput`  is `false` it will allow this objects _children_ to be considered as valid for Input events.\r\rIf this property is `true` then the children will _not_ be considered as valid for Input events.\r\rNote that this property isn't recursive: only immediate children are influenced, it doesn't scan further down.","properties":[{"type":{"names":["boolean"]},"name":"ignoreChildInput"}],"defaultvalue":false,"name":"ignoreChildInput","longname":"Phaser.World#ignoreChildInput","kind":"member","memberof":"Phaser.World","scope":"instance","inherits":"PIXI.DisplayObjectContainer#ignoreChildInput","inherited":true,"___s":true},{"meta":{"range":[580,598],"filename":"DisplayObjectContainer.js","lineno":24,"path":"src\\pixi\\display"},"description":"[read-only] The array of children of this container.","properties":[{"name":"children"}],"type":{"names":["Array(DisplayObject)"]},"readonly":true,"name":"children","longname":"Phaser.BitmapText#children","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"PIXI.DisplayObjectContainer#children","inherited":true,"___s":true},{"meta":{"range":[1045,1074],"filename":"DisplayObjectContainer.js","lineno":35,"path":"src\\pixi\\display"},"description":"If `ignoreChildInput`  is `false` it will allow this objects _children_ to be considered as valid for Input events.\r\rIf this property is `true` then the children will _not_ be considered as valid for Input events.\r\rNote that this property isn't recursive: only immediate children are influenced, it doesn't scan further down.","properties":[{"type":{"names":["boolean"]},"name":"ignoreChildInput"}],"defaultvalue":false,"name":"ignoreChildInput","longname":"Phaser.BitmapText#ignoreChildInput","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"PIXI.DisplayObjectContainer#ignoreChildInput","inherited":true,"___s":true},{"meta":{"range":[3048,3058],"filename":"Core.js","lineno":142,"path":"src\\gameobjects\\components"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"name":"game","longname":"Phaser.BitmapText#game","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Core#game","inherited":true,"___s":true},{"meta":{"range":[3279,3287],"filename":"Core.js","lineno":150,"path":"src\\gameobjects\\components"},"description":"A user defined name given to this Game Object.\rThis value isn't ever used internally by Phaser, it is meant as a game level property.","properties":[{"type":{"names":["string"]},"name":"name"}],"defaultvalue":"","name":"name","longname":"Phaser.BitmapText#name","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Core#name","inherited":true,"___s":true},{"meta":{"range":[3651,3659],"filename":"Core.js","lineno":160,"path":"src\\gameobjects\\components"},"description":"An empty Object that belongs to this Game Object.\rThis value isn't ever used internally by Phaser, but may be used by your own code, or\rby Phaser Plugins, to store data that needs to be associated with the Game Object,\rwithout polluting the Game Object directly.","properties":[{"type":{"names":["Object"]},"name":"data"}],"defaultvalue":"{}","defaultvaluetype":"object","name":"data","longname":"Phaser.BitmapText#data","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Core#data","inherited":true,"___s":true},{"meta":{"range":[3794,3808],"filename":"Core.js","lineno":167,"path":"src\\gameobjects\\components"},"description":"The components this Game Object has installed.","properties":[{"type":{"names":["object"]},"name":"components"}],"access":"protected","name":"components","longname":"Phaser.BitmapText#components","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Core#components","inherited":true,"___s":true},{"meta":{"range":[4202,4206],"filename":"Core.js","lineno":177,"path":"src\\gameobjects\\components"},"description":"The z depth of this Game Object within its parent Group.\rNo two objects in a Group can have the same z value.\rThis value is adjusted automatically whenever the Group hierarchy changes.\rIf you wish to re-order the layering of a Game Object then see methods like Group.moveUp or Group.bringToTop.","properties":[{"type":{"names":["number"]},"name":"z"}],"readonly":true,"name":"z","longname":"Phaser.BitmapText#z","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Core#z","inherited":true,"___s":true},{"meta":{"range":[4484,4501],"filename":"Core.js","lineno":185,"path":"src\\gameobjects\\components"},"description":"All Phaser Game Objects have an Events class which contains all of the events that are dispatched when certain things happen to this\rGame Object, or any of its components.","see":["Phaser.Events"],"properties":[{"type":{"names":["Phaser.Events"]},"name":"events"}],"name":"events","longname":"Phaser.BitmapText#events","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Core#events","inherited":true,"___s":true},{"meta":{"range":[4815,4836],"filename":"Core.js","lineno":193,"path":"src\\gameobjects\\components"},"description":"If the Game Object is enabled for animation (such as a Phaser.Sprite) this is a reference to its AnimationManager instance.\rThrough it you can create, play, pause and stop animations.","see":["Phaser.AnimationManager"],"properties":[{"type":{"names":["Phaser.AnimationManager"]},"name":"animations"}],"name":"animations","longname":"Phaser.BitmapText#animations","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Core#animations","inherited":true,"___s":true},{"meta":{"range":[5559,5566],"filename":"Core.js","lineno":203,"path":"src\\gameobjects\\components"},"description":"The key of the image or texture used by this Game Object during rendering.\rIf it is a string it's the string used to retrieve the texture from the Phaser Image Cache.\rIt can also be an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.\rIf a Game Object is created without a key it is automatically assigned the key `__default` which is a 32x32 transparent PNG stored within the Cache.\rIf a Game Object is given a key which doesn't exist in the Image Cache it is re-assigned the key `__missing` which is a 32x32 PNG of a green box with a line through it.","properties":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"name":"key"}],"name":"key","longname":"Phaser.BitmapText#key","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Core#key","inherited":true,"___s":true},{"meta":{"range":[5882,5893],"filename":"Core.js","lineno":211,"path":"src\\gameobjects\\components"},"description":"The world coordinates of this Game Object in pixels.\rDepending on where in the display list this Game Object is placed this value can differ from `position`, \rwhich contains the x/y coordinates relative to the Game Objects parent.","properties":[{"type":{"names":["Phaser.Point"]},"name":"world"}],"name":"world","longname":"Phaser.BitmapText#world","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Core#world","inherited":true,"___s":true},{"meta":{"range":[6029,6041],"filename":"Core.js","lineno":218,"path":"src\\gameobjects\\components"},"description":"A debug flag designed for use with `Game.enableStep`.","properties":[{"type":{"names":["boolean"]},"name":"debug"}],"defaultvalue":false,"name":"debug","longname":"Phaser.BitmapText#debug","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Core#debug","inherited":true,"___s":true},{"meta":{"range":[6204,6226],"filename":"Core.js","lineno":225,"path":"src\\gameobjects\\components"},"description":"The position the Game Object was located in the previous frame.","properties":[{"type":{"names":["Phaser.Point"]},"name":"previousPosition"}],"readonly":true,"name":"previousPosition","longname":"Phaser.BitmapText#previousPosition","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Core#previousPosition","inherited":true,"___s":true},{"meta":{"range":[6406,6425],"filename":"Core.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"The rotation the Game Object was in set to in the previous frame. Value is in radians.","properties":[{"type":{"names":["number"]},"name":"previousRotation"}],"readonly":true,"name":"previousRotation","longname":"Phaser.BitmapText#previousRotation","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Core#previousRotation","inherited":true,"___s":true},{"meta":{"range":[6720,6736],"filename":"Core.js","lineno":240,"path":"src\\gameobjects\\components"},"description":"The render order ID is used internally by the renderer and Input Manager and should not be modified.\rThis property is mostly used internally by the renderers, but is exposed for the use of plugins.","properties":[{"type":{"names":["number"]},"name":"renderOrderID"}],"readonly":true,"name":"renderOrderID","longname":"Phaser.BitmapText#renderOrderID","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Core#renderOrderID","inherited":true,"___s":true},{"meta":{"range":[7053,7064],"filename":"Core.js","lineno":248,"path":"src\\gameobjects\\components"},"description":"A Game Object is considered `fresh` if it has just been created or reset and is yet to receive a renderer transform update.\rThis property is mostly used internally by the physics systems, but is exposed for the use of plugins.","properties":[{"type":{"names":["boolean"]},"name":"fresh"}],"readonly":true,"name":"fresh","longname":"Phaser.BitmapText#fresh","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Core#fresh","inherited":true,"___s":true},{"meta":{"range":[7518,7539],"filename":"Core.js","lineno":259,"path":"src\\gameobjects\\components"},"description":"A Game Object is that is pendingDestroy is flagged to have its destroy method called on the next logic update.\rYou can set it directly to allow you to flag an object to be destroyed on its next update.\r\rThis is extremely useful if you wish to destroy an object from within one of its own callbacks \rsuch as with Buttons or other Input events.","properties":[{"type":{"names":["boolean"]},"name":"pendingDestroy"}],"name":"pendingDestroy","longname":"Phaser.BitmapText#pendingDestroy","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Core#pendingDestroy","inherited":true,"___s":true},{"meta":{"range":[8354,9085],"filename":"Core.js","lineno":284,"path":"src\\gameobjects\\components"},"description":"Controls if this Game Object is processed by the core game loop.\rIf this Game Object has a physics body it also controls if its physics body is updated or not.\rWhen `exists` is set to `false` it will remove its physics body from the physics world if it has one.\rIt also toggles the `visible` property to false as well.\r\rSetting `exists` to true will add its physics body back in to the physics world, if it has one.\rIt will also set the `visible` property to `true`.","properties":[{"type":{"names":["boolean"]},"name":"exists"}],"name":"exists","longname":"Phaser.BitmapText#exists","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Core#exists","inherited":true,"___s":true},{"meta":{"range":[9388,9417],"filename":"Core.js","lineno":328,"path":"src\\gameobjects\\components"},"description":"Override this method in your own custom objects to handle any update requirements.\rIt is called immediately after `preUpdate` and before `postUpdate`.\rRemember if this Game Object has any children you should call update on those too.","kind":"function","name":"update","longname":"Phaser.BitmapText#update","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Core#update","inherited":true,"___s":true},{"meta":{"range":[1110,1382],"filename":"Angle.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"The angle property is the rotation of the Game Object in *degrees* from its original orientation.\r\rValues from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\r\rValues outside this range are added to or subtracted from 360 to obtain a value within the range. \rFor example, the statement player.angle = 450 is the same as player.angle = 90.\r\rIf you wish to work in radians instead of degrees you can use the property `rotation` instead. \rWorking in radians is slightly faster as it doesn't have to perform any calculations.","properties":[{"type":{"names":["number"]},"name":"angle"}],"name":"angle","longname":"Phaser.BitmapText#angle","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Angle#angle","inherited":true,"___s":true},{"meta":{"range":[1129,1144],"filename":"AutoCull.js","lineno":28,"path":"src\\gameobjects\\components"},"description":"A Game Object with `autoCull` set to true will check its bounds against the World Camera every frame.\rIf it is not intersecting the Camera bounds at any point then it has its `renderable` property set to `false`.\rThis keeps the Game Object alive and still processing updates, but forces it to skip the render step entirely.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"autoCull"}],"defaultvalue":false,"name":"autoCull","longname":"Phaser.BitmapText#autoCull","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.AutoCull#autoCull","inherited":true,"___s":true},{"meta":{"range":[1402,1809],"filename":"AutoCull.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds intersect with the Game Camera bounds.\rReturns `true` if they do, otherwise `false` if fully outside of the Cameras bounds.","properties":[{"type":{"names":["boolean"]},"name":"inCamera"}],"readonly":true,"name":"inCamera","longname":"Phaser.BitmapText#inCamera","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.AutoCull#inCamera","inherited":true,"___s":true},{"meta":{"range":[661,773],"filename":"Bounds.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its x coordinate.\rThis is the same as `width * anchor.x`.\rIt will only be > 0 if anchor.x is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetX"}],"readonly":true,"name":"offsetX","longname":"Phaser.BitmapText#offsetX","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Bounds#offsetX","inherited":true,"___s":true},{"meta":{"range":[1042,1155],"filename":"Bounds.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its y coordinate.\rThis is the same as `height * anchor.y`.\rIt will only be > 0 if anchor.y is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetY"}],"readonly":true,"name":"offsetY","longname":"Phaser.BitmapText#offsetY","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Bounds#offsetY","inherited":true,"___s":true},{"meta":{"range":[1331,1579],"filename":"Bounds.js","lineno":58,"path":"src\\gameobjects\\components"},"description":"The center x coordinate of the Game Object.\rThis is the same as `(x - offsetX) + (width / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerX"}],"name":"centerX","longname":"Phaser.BitmapText#centerX","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Bounds#centerX","inherited":true,"___s":true},{"meta":{"range":[1756,2006],"filename":"Bounds.js","lineno":80,"path":"src\\gameobjects\\components"},"description":"The center y coordinate of the Game Object.\rThis is the same as `(y - offsetY) + (height / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerY"}],"name":"centerY","longname":"Phaser.BitmapText#centerY","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Bounds#centerY","inherited":true,"___s":true},{"meta":{"range":[2159,2358],"filename":"Bounds.js","lineno":102,"path":"src\\gameobjects\\components"},"description":"The left coordinate of the Game Object.\rThis is the same as `x - offsetX`.","properties":[{"type":{"names":["number"]},"name":"left"}],"name":"left","longname":"Phaser.BitmapText#left","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Bounds#left","inherited":true,"___s":true},{"meta":{"range":[2521,2751],"filename":"Bounds.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The right coordinate of the Game Object.\rThis is the same as `x + width - offsetX`.","properties":[{"type":{"names":["number"]},"name":"right"}],"name":"right","longname":"Phaser.BitmapText#right","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Bounds#right","inherited":true,"___s":true},{"meta":{"range":[2900,3098],"filename":"Bounds.js","lineno":146,"path":"src\\gameobjects\\components"},"description":"The y coordinate of the Game Object.\rThis is the same as `y - offsetY`.","properties":[{"type":{"names":["number"]},"name":"top"}],"name":"top","longname":"Phaser.BitmapText#top","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Bounds#top","inherited":true,"___s":true},{"meta":{"range":[3262,3495],"filename":"Bounds.js","lineno":168,"path":"src\\gameobjects\\components"},"description":"The sum of the y and height properties.\rThis is the same as `y + height - offsetY`.","properties":[{"type":{"names":["number"]},"name":"bottom"}],"name":"bottom","longname":"Phaser.BitmapText#bottom","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Bounds#bottom","inherited":true,"___s":true},{"meta":{"range":[6346,8224],"filename":"Bounds.js","lineno":223,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object within another Game Object, or Rectangle, known as the\r'container', to one of 9 possible positions.\r\rThe container must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe container. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, \r`Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, \r`Phaser.BOTTOM_CENTER` and `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rcontainer, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignIn(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the containers bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the container bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"container"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignIn","longname":"Phaser.BitmapText#alignIn","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Bounds#alignIn","inherited":true,"___s":true},{"meta":{"range":[11205,13527],"filename":"Bounds.js","lineno":321,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object to the side of another Game Object, or Rectangle, known as the\r'parent', in one of 11 possible positions.\r\rThe parent must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe parent. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, \r`Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, \r`Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` \rand `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rparent, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignTo(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the parents bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the parent bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"parent"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, `Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, `Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignTo","longname":"Phaser.BitmapText#alignTo","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Bounds#alignTo","inherited":true,"___s":true},{"meta":{"range":[629,648],"filename":"Destroy.js","lineno":22,"path":"src\\gameobjects\\components"},"description":"As a Game Object runs through its destroy method this flag is set to true, \rand can be checked in any sub-systems or plugins it is being destroyed from.","properties":[{"type":{"names":["boolean"]},"name":"destroyPhase"}],"readonly":true,"name":"destroyPhase","longname":"Phaser.BitmapText#destroyPhase","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Destroy#destroyPhase","inherited":true,"___s":true},{"meta":{"range":[1497,4401],"filename":"Destroy.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Destroys the Game Object. This removes it from its parent group, destroys the input, event and animation handlers if present\rand nulls its reference to `game`, freeing it up for garbage collection.\r\rIf this Game Object has the Events component it will also dispatch the `onDestroy` event.\r\rYou can optionally also destroy the BaseTexture this Game Object is using. Be careful if you've\rmore than one Game Object sharing the same BaseTexture.","kind":"function","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should every child of this object have its destroy method called as well?","name":"destroyChildren"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Destroy the BaseTexture this Game Object is using? Note that if another Game Object is sharing the same BaseTexture it will invalidate it.","name":"destroyTexture"}],"name":"destroy","longname":"Phaser.BitmapText#destroy","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Destroy#destroy","inherited":true,"___s":true},{"meta":{"range":[2104,2515],"filename":"FixedToCamera.js","lineno":56,"path":"src\\gameobjects\\components"},"description":"A Game Object that is \"fixed\" to the camera uses its x/y coordinates as offsets from the top left of the camera during rendering.\r\rThe values are adjusted at the rendering stage, overriding the Game Objects actual world position.\r\rThe end result is that the Game Object will appear to be 'fixed' to the camera, regardless of where in the game world\rthe camera is viewing. This is useful if for example this Game Object is a UI item that you wish to be visible at all times \rregardless where in the world the camera is.\r\rThe offsets are stored in the `cameraOffset` property.\r\rNote that the `cameraOffset` values are in addition to any parent of this Game Object on the display list.\r\rBe careful not to set `fixedToCamera` on Game Objects which are in Groups that already have `fixedToCamera` enabled on them.","properties":[{"type":{"names":["boolean"]},"name":"fixedToCamera"}],"name":"fixedToCamera","longname":"Phaser.BitmapText#fixedToCamera","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.FixedToCamera#fixedToCamera","inherited":true,"___s":true},{"meta":{"range":[2868,2900],"filename":"FixedToCamera.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"The x/y coordinate offset applied to the top-left of the camera that this Game Object will be drawn at if `fixedToCamera` is true.\r\rThe values are relative to the top-left of the camera view and in addition to any parent of the Game Object on the display list.","properties":[{"type":{"names":["Phaser.Point"]},"name":"cameraOffset"}],"name":"cameraOffset","longname":"Phaser.BitmapText#cameraOffset","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.FixedToCamera#cameraOffset","inherited":true,"___s":true},{"meta":{"range":[805,816],"filename":"InputEnabled.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Input Handler for this Game Object.\r\rBy default it is disabled. If you wish this Game Object to process input events you should enable it with: `inputEnabled = true`.\r\rAfter you have done this, this property will be a reference to the Phaser InputHandler.","properties":[{"type":{"names":["Phaser.InputHandler","null"]},"name":"input"}],"name":"input","longname":"Phaser.BitmapText#input","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.InputEnabled#input","inherited":true,"___s":true},{"meta":{"range":[1661,2398],"filename":"InputEnabled.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"By default a Game Object won't process any input events. By setting `inputEnabled` to true a Phaser.InputHandler is created\rfor this Game Object and it will then start to process click / touch events and more.\r\rYou can then access the Input Handler via `this.input`.\r\rNote that Input related events are dispatched from `this.events`, i.e.: `events.onInputDown`.\r\rIf you set this property to false it will stop the Input Handler from processing any more input events.\r\rIf you want to _temporarily_ disable input for a Game Object, then it's better to set\r`input.enabled = false`, as it won't reset any of the Input Handlers internal properties.\rYou can then toggle this back on as needed.","properties":[{"type":{"names":["boolean"]},"name":"inputEnabled"}],"name":"inputEnabled","longname":"Phaser.BitmapText#inputEnabled","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.InputEnabled#inputEnabled","inherited":true,"___s":true},{"meta":{"range":[3394,3417],"filename":"InWorld.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"If this is set to `true` the Game Object checks if it is within the World bounds each frame. \r\rWhen it is no longer intersecting the world bounds it dispatches the `onOutOfBounds` event.\r\rIf it was *previously* out of bounds but is now intersecting the world bounds again it dispatches the `onEnterBounds` event.\r\rIt also optionally kills the Game Object if `outOfBoundsKill` is `true`.\r\rWhen `checkWorldBounds` is enabled it forces the Game Object to calculate its full bounds every frame.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"checkWorldBounds"}],"defaultvalue":false,"name":"checkWorldBounds","longname":"Phaser.BitmapText#checkWorldBounds","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.InWorld#checkWorldBounds","inherited":true,"___s":true},{"meta":{"range":[3653,3675],"filename":"InWorld.js","lineno":106,"path":"src\\gameobjects\\components"},"description":"If this and the `checkWorldBounds` property are both set to `true` then the `kill` method is called as soon as `inWorld` returns false.","properties":[{"type":{"names":["boolean"]},"name":"outOfBoundsKill"}],"defaultvalue":false,"name":"outOfBoundsKill","longname":"Phaser.BitmapText#outOfBoundsKill","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.InWorld#outOfBoundsKill","inherited":true,"___s":true},{"meta":{"range":[3939,3967],"filename":"InWorld.js","lineno":115,"path":"src\\gameobjects\\components"},"description":"If this and the `autoCull` property are both set to `true`, then the `kill` method\ris called as soon as the Game Object leaves the camera bounds.","properties":[{"type":{"names":["boolean"]},"name":"outOfCameraBoundsKill"}],"defaultvalue":false,"name":"outOfCameraBoundsKill","longname":"Phaser.BitmapText#outOfCameraBoundsKill","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.InWorld#outOfCameraBoundsKill","inherited":true,"___s":true},{"meta":{"range":[4292,4429],"filename":"InWorld.js","lineno":129,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds are within, or intersect at any point with the Game World bounds.","properties":[{"type":{"names":["boolean"]},"name":"inWorld"}],"readonly":true,"name":"inWorld","longname":"Phaser.BitmapText#inWorld","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.InWorld#inWorld","inherited":true,"___s":true},{"meta":{"range":[1310,1321],"filename":"LifeSpan.js","lineno":50,"path":"src\\gameobjects\\components"},"description":"A useful flag to control if the Game Object is alive or dead.\r\rThis is set automatically by the Health components `damage` method should the object run out of health.\rOr you can toggle it via your game code.\r\rThis property is mostly just provided to be used by your game - it doesn't effect rendering or logic updates.\rHowever you can use `Group.getFirstAlive` in conjunction with this property for fast object pooling and recycling.","properties":[{"type":{"names":["boolean"]},"name":"alive"}],"defaultvalue":true,"name":"alive","longname":"Phaser.BitmapText#alive","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.LifeSpan#alive","inherited":true,"___s":true},{"meta":{"range":[1843,1854],"filename":"LifeSpan.js","lineno":65,"path":"src\\gameobjects\\components"},"description":"The lifespan allows you to give a Game Object a lifespan in milliseconds.\r\rOnce the Game Object is 'born' you can set this to a positive value.\r\rIt is automatically decremented by the millisecond equivalent of `game.time.physicsElapsed` each frame.\rWhen it reaches zero it will call the `kill` method.\r\rVery handy for particles, bullets, collectibles, or any other short-lived entity.","properties":[{"type":{"names":["number"]},"name":"lifespan"}],"defaultvalue":0,"name":"lifespan","longname":"Phaser.BitmapText#lifespan","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.LifeSpan#lifespan","inherited":true,"___s":true},{"meta":{"range":[2390,2807],"filename":"LifeSpan.js","lineno":78,"path":"src\\gameobjects\\components"},"description":"Brings a 'dead' Game Object back to life, optionally resetting its health value in the process.\r\rA resurrected Game Object has its `alive`, `exists` and `visible` properties all set to true.\r\rIt will dispatch the `onRevived` event. Listen to `events.onRevived` for the signal.","kind":"function","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"The health to give the Game Object. Only set if the GameObject has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"revive","longname":"Phaser.BitmapText#revive","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.LifeSpan#revive","inherited":true,"___s":true},{"meta":{"range":[3390,3634],"filename":"LifeSpan.js","lineno":113,"path":"src\\gameobjects\\components"},"description":"Kills a Game Object. A killed Game Object has its `alive`, `exists` and `visible` properties all set to false.\r\rIt will dispatch the `onKilled` event. You can listen to `events.onKilled` for the signal.\r\rNote that killing a Game Object is a way for you to quickly recycle it in an object pool,\rit doesn't destroy the object or free it up from memory.\r\rIf you don't need this Game Object any more you should call `destroy` instead.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"kill","longname":"Phaser.BitmapText#kill","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.LifeSpan#kill","inherited":true,"___s":true},{"meta":{"range":[2899,2909],"filename":"PhysicsBody.js","lineno":91,"path":"src\\gameobjects\\components"},"description":"`body` is the Game Objects physics body. Once a Game Object is enabled for physics you access all associated \rproperties and methods via it.\r\rBy default Game Objects won't add themselves to any physics system and their `body` property will be `null`.\r\rTo enable this Game Object for physics you need to call `game.physics.enable(object, system)` where `object` is this object\rand `system` is the Physics system you are using. If none is given it defaults to `Phaser.Physics.Arcade`.\r\rYou can alternatively call `game.physics.arcade.enable(object)`, or add this Game Object to a physics enabled Group.\r\rImportant: Enabling a Game Object for P2 or Ninja physics will automatically set its `anchor` property to 0.5, \rso the physics body is centered on the Game Object.\r\rIf you need a different result then adjust or re-create the Body shape offsets manually or reset the anchor after enabling physics.","properties":[{"type":{"names":["Phaser.Physics.Arcade.Body","Phaser.Physics.P2.Body","Phaser.Physics.Ninja.Body","null"]},"name":"body"}],"defaultvalue":null,"name":"body","longname":"Phaser.BitmapText#body","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.PhysicsBody#body","inherited":true,"___s":true},{"meta":{"range":[3072,3378],"filename":"PhysicsBody.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the x axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"x"}],"name":"x","longname":"Phaser.BitmapText#x","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.PhysicsBody#x","inherited":true,"___s":true},{"meta":{"range":[3541,3847],"filename":"PhysicsBody.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the y axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"y"}],"name":"y","longname":"Phaser.BitmapText#y","kind":"member","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.PhysicsBody#y","inherited":true,"___s":true},{"meta":{"range":[1061,1717],"filename":"Reset.js","lineno":30,"path":"src\\gameobjects\\components"},"description":"Resets the Game Object.\r\rThis moves the Game Object to the given x/y world coordinates and sets `fresh`, `exists`, \r`visible` and `renderable` to true.\r\rIf this Game Object has the LifeSpan component it will also set `alive` to true and `health` to the given value.\r\rIf this Game Object has a Physics Body it will reset the Body.","kind":"function","params":[{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the Game Object at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the Game Object at.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The health to give the Game Object if it has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"reset","longname":"Phaser.BitmapText#reset","memberof":"Phaser.BitmapText","scope":"instance","inherits":"Phaser.Component.Reset#reset","inherited":true,"___s":true},{"meta":{"range":[774,804],"filename":"Sprite.js","lineno":26,"path":"src\\pixi\\display"},"description":"The anchor sets the origin point of the texture.\rThe default is 0,0 this means the texture's origin is the top left\rSetting than anchor to 0.5,0.5 means the textures origin is centered\rSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner","properties":[{"name":"anchor"}],"type":{"names":["Point"]},"name":"anchor","longname":"Phaser.Image#anchor","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"PIXI.Sprite#anchor","inherited":true,"___s":true},{"meta":{"range":[932,983],"filename":"Sprite.js","lineno":34,"path":"src\\pixi\\display"},"description":"The texture that the sprite is using","properties":[{"name":"texture"}],"type":{"names":["Texture"]},"name":"texture","longname":"Phaser.Image#texture","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"PIXI.Sprite#texture","inherited":true,"___s":true},{"meta":{"range":[1569,1589],"filename":"Sprite.js","lineno":61,"path":"src\\pixi\\display"},"description":"The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.","properties":[{"name":"tint"}],"type":{"names":["Number"]},"defaultvalue":"0xFFFFFF","name":"tint","longname":"Phaser.Image#tint","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"PIXI.Sprite#tint","inherited":true,"___s":true},{"meta":{"range":[2061,2086],"filename":"Sprite.js","lineno":80,"path":"src\\pixi\\display"},"description":"A canvas that contains the tinted version of the Sprite (in Canvas mode, WebGL doesn't populate this)","properties":[{"name":"tintedTexture"}],"type":{"names":["Canvas"]},"defaultvalue":"null","name":"tintedTexture","longname":"Phaser.Image#tintedTexture","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"PIXI.Sprite#tintedTexture","inherited":true,"___s":true},{"meta":{"range":[2456,2495],"filename":"Sprite.js","lineno":91,"path":"src\\pixi\\display"},"description":"The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode.\r\rWarning: You cannot have a blend mode and a filter active on the same Sprite. Doing so will render the sprite invisible.","properties":[{"name":"blendMode"}],"type":{"names":["Number"]},"defaultvalue":"PIXI.blendModes.NORMAL;","name":"blendMode","longname":"Phaser.Image#blendMode","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"PIXI.Sprite#blendMode","inherited":true,"___s":true},{"meta":{"range":[2714,2732],"filename":"Sprite.js","lineno":101,"path":"src\\pixi\\display"},"description":"The shader that will be used to render this Sprite.\rSet to null to remove a current shader.","properties":[{"name":"shader"}],"type":{"names":["AbstractFilter"]},"defaultvalue":"null","name":"shader","longname":"Phaser.Image#shader","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"PIXI.Sprite#shader","inherited":true,"___s":true},{"meta":{"range":[2922,2940],"filename":"Sprite.js","lineno":110,"path":"src\\pixi\\display"},"description":"Controls if this Sprite is processed by the core Phaser game loops and Group loops.","properties":[{"name":"exists"}],"type":{"names":["Boolean"]},"defaultvalue":"true","name":"exists","longname":"Phaser.Image#exists","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"PIXI.Sprite#exists","inherited":true,"overrides":"Phaser.Component.Core#exists","___s":true},{"meta":{"range":[3048,3058],"filename":"Core.js","lineno":142,"path":"src\\gameobjects\\components"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"name":"game","longname":"Phaser.Image#game","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Core#game","inherited":true,"___s":true},{"meta":{"range":[3279,3287],"filename":"Core.js","lineno":150,"path":"src\\gameobjects\\components"},"description":"A user defined name given to this Game Object.\rThis value isn't ever used internally by Phaser, it is meant as a game level property.","properties":[{"type":{"names":["string"]},"name":"name"}],"defaultvalue":"","name":"name","longname":"Phaser.Image#name","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Core#name","inherited":true,"___s":true},{"meta":{"range":[3651,3659],"filename":"Core.js","lineno":160,"path":"src\\gameobjects\\components"},"description":"An empty Object that belongs to this Game Object.\rThis value isn't ever used internally by Phaser, but may be used by your own code, or\rby Phaser Plugins, to store data that needs to be associated with the Game Object,\rwithout polluting the Game Object directly.","properties":[{"type":{"names":["Object"]},"name":"data"}],"defaultvalue":"{}","defaultvaluetype":"object","name":"data","longname":"Phaser.Image#data","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Core#data","inherited":true,"___s":true},{"meta":{"range":[3794,3808],"filename":"Core.js","lineno":167,"path":"src\\gameobjects\\components"},"description":"The components this Game Object has installed.","properties":[{"type":{"names":["object"]},"name":"components"}],"access":"protected","name":"components","longname":"Phaser.Image#components","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Core#components","inherited":true,"___s":true},{"meta":{"range":[4202,4206],"filename":"Core.js","lineno":177,"path":"src\\gameobjects\\components"},"description":"The z depth of this Game Object within its parent Group.\rNo two objects in a Group can have the same z value.\rThis value is adjusted automatically whenever the Group hierarchy changes.\rIf you wish to re-order the layering of a Game Object then see methods like Group.moveUp or Group.bringToTop.","properties":[{"type":{"names":["number"]},"name":"z"}],"readonly":true,"name":"z","longname":"Phaser.Image#z","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Core#z","inherited":true,"___s":true},{"meta":{"range":[4484,4501],"filename":"Core.js","lineno":185,"path":"src\\gameobjects\\components"},"description":"All Phaser Game Objects have an Events class which contains all of the events that are dispatched when certain things happen to this\rGame Object, or any of its components.","see":["Phaser.Events"],"properties":[{"type":{"names":["Phaser.Events"]},"name":"events"}],"name":"events","longname":"Phaser.Image#events","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Core#events","inherited":true,"___s":true},{"meta":{"range":[4815,4836],"filename":"Core.js","lineno":193,"path":"src\\gameobjects\\components"},"description":"If the Game Object is enabled for animation (such as a Phaser.Sprite) this is a reference to its AnimationManager instance.\rThrough it you can create, play, pause and stop animations.","see":["Phaser.AnimationManager"],"properties":[{"type":{"names":["Phaser.AnimationManager"]},"name":"animations"}],"name":"animations","longname":"Phaser.Image#animations","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Core#animations","inherited":true,"___s":true},{"meta":{"range":[5559,5566],"filename":"Core.js","lineno":203,"path":"src\\gameobjects\\components"},"description":"The key of the image or texture used by this Game Object during rendering.\rIf it is a string it's the string used to retrieve the texture from the Phaser Image Cache.\rIt can also be an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.\rIf a Game Object is created without a key it is automatically assigned the key `__default` which is a 32x32 transparent PNG stored within the Cache.\rIf a Game Object is given a key which doesn't exist in the Image Cache it is re-assigned the key `__missing` which is a 32x32 PNG of a green box with a line through it.","properties":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"name":"key"}],"name":"key","longname":"Phaser.Image#key","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Core#key","inherited":true,"___s":true},{"meta":{"range":[5882,5893],"filename":"Core.js","lineno":211,"path":"src\\gameobjects\\components"},"description":"The world coordinates of this Game Object in pixels.\rDepending on where in the display list this Game Object is placed this value can differ from `position`, \rwhich contains the x/y coordinates relative to the Game Objects parent.","properties":[{"type":{"names":["Phaser.Point"]},"name":"world"}],"name":"world","longname":"Phaser.Image#world","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Core#world","inherited":true,"___s":true},{"meta":{"range":[6029,6041],"filename":"Core.js","lineno":218,"path":"src\\gameobjects\\components"},"description":"A debug flag designed for use with `Game.enableStep`.","properties":[{"type":{"names":["boolean"]},"name":"debug"}],"defaultvalue":false,"name":"debug","longname":"Phaser.Image#debug","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Core#debug","inherited":true,"___s":true},{"meta":{"range":[6204,6226],"filename":"Core.js","lineno":225,"path":"src\\gameobjects\\components"},"description":"The position the Game Object was located in the previous frame.","properties":[{"type":{"names":["Phaser.Point"]},"name":"previousPosition"}],"readonly":true,"name":"previousPosition","longname":"Phaser.Image#previousPosition","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Core#previousPosition","inherited":true,"___s":true},{"meta":{"range":[6406,6425],"filename":"Core.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"The rotation the Game Object was in set to in the previous frame. Value is in radians.","properties":[{"type":{"names":["number"]},"name":"previousRotation"}],"readonly":true,"name":"previousRotation","longname":"Phaser.Image#previousRotation","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Core#previousRotation","inherited":true,"___s":true},{"meta":{"range":[6720,6736],"filename":"Core.js","lineno":240,"path":"src\\gameobjects\\components"},"description":"The render order ID is used internally by the renderer and Input Manager and should not be modified.\rThis property is mostly used internally by the renderers, but is exposed for the use of plugins.","properties":[{"type":{"names":["number"]},"name":"renderOrderID"}],"readonly":true,"name":"renderOrderID","longname":"Phaser.Image#renderOrderID","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Core#renderOrderID","inherited":true,"___s":true},{"meta":{"range":[7053,7064],"filename":"Core.js","lineno":248,"path":"src\\gameobjects\\components"},"description":"A Game Object is considered `fresh` if it has just been created or reset and is yet to receive a renderer transform update.\rThis property is mostly used internally by the physics systems, but is exposed for the use of plugins.","properties":[{"type":{"names":["boolean"]},"name":"fresh"}],"readonly":true,"name":"fresh","longname":"Phaser.Image#fresh","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Core#fresh","inherited":true,"___s":true},{"meta":{"range":[7518,7539],"filename":"Core.js","lineno":259,"path":"src\\gameobjects\\components"},"description":"A Game Object is that is pendingDestroy is flagged to have its destroy method called on the next logic update.\rYou can set it directly to allow you to flag an object to be destroyed on its next update.\r\rThis is extremely useful if you wish to destroy an object from within one of its own callbacks \rsuch as with Buttons or other Input events.","properties":[{"type":{"names":["boolean"]},"name":"pendingDestroy"}],"name":"pendingDestroy","longname":"Phaser.Image#pendingDestroy","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Core#pendingDestroy","inherited":true,"___s":true},{"meta":{"range":[9388,9417],"filename":"Core.js","lineno":328,"path":"src\\gameobjects\\components"},"description":"Override this method in your own custom objects to handle any update requirements.\rIt is called immediately after `preUpdate` and before `postUpdate`.\rRemember if this Game Object has any children you should call update on those too.","kind":"function","name":"update","longname":"Phaser.Image#update","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Core#update","inherited":true,"___s":true},{"meta":{"range":[9544,10055],"filename":"Core.js","lineno":338,"path":"src\\gameobjects\\components"},"description":"Internal method called by the World postUpdate cycle.","kind":"function","access":"protected","name":"postUpdate","longname":"Phaser.Image#postUpdate","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Core#postUpdate","inherited":true,"___s":true},{"meta":{"range":[1110,1382],"filename":"Angle.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"The angle property is the rotation of the Game Object in *degrees* from its original orientation.\r\rValues from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\r\rValues outside this range are added to or subtracted from 360 to obtain a value within the range. \rFor example, the statement player.angle = 450 is the same as player.angle = 90.\r\rIf you wish to work in radians instead of degrees you can use the property `rotation` instead. \rWorking in radians is slightly faster as it doesn't have to perform any calculations.","properties":[{"type":{"names":["number"]},"name":"angle"}],"name":"angle","longname":"Phaser.Image#angle","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Angle#angle","inherited":true,"___s":true},{"meta":{"range":[1545,1745],"filename":"Animation.js","lineno":31,"path":"src\\gameobjects\\components"},"description":"Plays an Animation.\r\rThe animation should have previously been created via `animations.add`.\r\rIf the animation is already playing calling this again won't do anything.\rIf you need to reset an already running animation do so directly on the Animation object itself or via `AnimationManager.stop`.","kind":"function","params":[{"type":{"names":["string"]},"description":"The name of the animation to be played, e.g. \"fire\", \"walk\", \"jump\". Must have been previously created via 'AnimationManager.add'.","name":"name"},{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"The framerate to play the animation at. The speed is given in frames per second. If not provided the previously set frameRate of the Animation is used.","name":"frameRate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the animation be looped after playback. If not provided the previously set loop value of the Animation is used.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set to true when the animation completes (only happens if loop=false) the parent Sprite will be killed.","name":"killOnComplete"}],"returns":[{"type":{"names":["Phaser.Animation"]},"description":"A reference to playing Animation."}],"name":"play","longname":"Phaser.Image#play","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Animation#play","inherited":true,"___s":true},{"meta":{"range":[1129,1144],"filename":"AutoCull.js","lineno":28,"path":"src\\gameobjects\\components"},"description":"A Game Object with `autoCull` set to true will check its bounds against the World Camera every frame.\rIf it is not intersecting the Camera bounds at any point then it has its `renderable` property set to `false`.\rThis keeps the Game Object alive and still processing updates, but forces it to skip the render step entirely.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"autoCull"}],"defaultvalue":false,"name":"autoCull","longname":"Phaser.Image#autoCull","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.AutoCull#autoCull","inherited":true,"___s":true},{"meta":{"range":[1402,1809],"filename":"AutoCull.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds intersect with the Game Camera bounds.\rReturns `true` if they do, otherwise `false` if fully outside of the Cameras bounds.","properties":[{"type":{"names":["boolean"]},"name":"inCamera"}],"readonly":true,"name":"inCamera","longname":"Phaser.Image#inCamera","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.AutoCull#inCamera","inherited":true,"___s":true},{"meta":{"range":[661,773],"filename":"Bounds.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its x coordinate.\rThis is the same as `width * anchor.x`.\rIt will only be > 0 if anchor.x is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetX"}],"readonly":true,"name":"offsetX","longname":"Phaser.Image#offsetX","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Bounds#offsetX","inherited":true,"___s":true},{"meta":{"range":[1042,1155],"filename":"Bounds.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its y coordinate.\rThis is the same as `height * anchor.y`.\rIt will only be > 0 if anchor.y is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetY"}],"readonly":true,"name":"offsetY","longname":"Phaser.Image#offsetY","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Bounds#offsetY","inherited":true,"___s":true},{"meta":{"range":[1331,1579],"filename":"Bounds.js","lineno":58,"path":"src\\gameobjects\\components"},"description":"The center x coordinate of the Game Object.\rThis is the same as `(x - offsetX) + (width / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerX"}],"name":"centerX","longname":"Phaser.Image#centerX","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Bounds#centerX","inherited":true,"___s":true},{"meta":{"range":[1756,2006],"filename":"Bounds.js","lineno":80,"path":"src\\gameobjects\\components"},"description":"The center y coordinate of the Game Object.\rThis is the same as `(y - offsetY) + (height / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerY"}],"name":"centerY","longname":"Phaser.Image#centerY","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Bounds#centerY","inherited":true,"___s":true},{"meta":{"range":[2159,2358],"filename":"Bounds.js","lineno":102,"path":"src\\gameobjects\\components"},"description":"The left coordinate of the Game Object.\rThis is the same as `x - offsetX`.","properties":[{"type":{"names":["number"]},"name":"left"}],"name":"left","longname":"Phaser.Image#left","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Bounds#left","inherited":true,"___s":true},{"meta":{"range":[2521,2751],"filename":"Bounds.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The right coordinate of the Game Object.\rThis is the same as `x + width - offsetX`.","properties":[{"type":{"names":["number"]},"name":"right"}],"name":"right","longname":"Phaser.Image#right","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Bounds#right","inherited":true,"___s":true},{"meta":{"range":[2900,3098],"filename":"Bounds.js","lineno":146,"path":"src\\gameobjects\\components"},"description":"The y coordinate of the Game Object.\rThis is the same as `y - offsetY`.","properties":[{"type":{"names":["number"]},"name":"top"}],"name":"top","longname":"Phaser.Image#top","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Bounds#top","inherited":true,"___s":true},{"meta":{"range":[3262,3495],"filename":"Bounds.js","lineno":168,"path":"src\\gameobjects\\components"},"description":"The sum of the y and height properties.\rThis is the same as `y + height - offsetY`.","properties":[{"type":{"names":["number"]},"name":"bottom"}],"name":"bottom","longname":"Phaser.Image#bottom","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Bounds#bottom","inherited":true,"___s":true},{"meta":{"range":[6346,8224],"filename":"Bounds.js","lineno":223,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object within another Game Object, or Rectangle, known as the\r'container', to one of 9 possible positions.\r\rThe container must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe container. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, \r`Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, \r`Phaser.BOTTOM_CENTER` and `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rcontainer, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignIn(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the containers bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the container bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"container"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignIn","longname":"Phaser.Image#alignIn","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Bounds#alignIn","inherited":true,"___s":true},{"meta":{"range":[11205,13527],"filename":"Bounds.js","lineno":321,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object to the side of another Game Object, or Rectangle, known as the\r'parent', in one of 11 possible positions.\r\rThe parent must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe parent. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, \r`Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, \r`Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` \rand `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rparent, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignTo(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the parents bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the parent bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"parent"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, `Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, `Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignTo","longname":"Phaser.Image#alignTo","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Bounds#alignTo","inherited":true,"___s":true},{"meta":{"range":[784,949],"filename":"BringToTop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"Brings this Game Object to the top of its parents display list.\rVisually this means it will render over the top of any old child in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will bring it to the top of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"bringToTop","longname":"Phaser.Image#bringToTop","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.BringToTop#bringToTop","inherited":true,"___s":true},{"meta":{"range":[1378,1543],"filename":"BringToTop.js","lineno":45,"path":"src\\gameobjects\\components"},"description":"Sends this Game Object to the bottom of its parents display list.\rVisually this means it will render below all other children in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will send it to the bottom of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"sendToBack","longname":"Phaser.Image#sendToBack","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.BringToTop#sendToBack","inherited":true,"___s":true},{"meta":{"range":[1982,2140],"filename":"BringToTop.js","lineno":66,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object up one place in its parents display list.\rThis call has no effect if the Game Object is already at the top of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object up within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveUp","longname":"Phaser.Image#moveUp","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.BringToTop#moveUp","inherited":true,"___s":true},{"meta":{"range":[2586,2748],"filename":"BringToTop.js","lineno":87,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object down one place in its parents display list.\rThis call has no effect if the Game Object is already at the bottom of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object down within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveDown","longname":"Phaser.Image#moveDown","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.BringToTop#moveDown","inherited":true,"___s":true},{"meta":{"range":[751,765],"filename":"Crop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Rectangle used to crop the texture this Game Object uses.\rSet this property via `crop`. \rIf you modify this property directly you must call `updateCrop` in order to have the change take effect.","properties":[{"type":{"names":["Phaser.Rectangle"]},"name":"cropRect"}],"defaultvalue":null,"name":"cropRect","longname":"Phaser.Image#cropRect","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Crop#cropRect","inherited":true,"___s":true},{"meta":{"range":[2112,2842],"filename":"Crop.js","lineno":49,"path":"src\\gameobjects\\components"},"description":"Crop allows you to crop the texture being used to display this Game Object.\rSetting a crop rectangle modifies the core texture frame. The Game Object width and height properties will be adjusted accordingly.\r\rCropping takes place from the top-left and can be modified in real-time either by providing an updated rectangle object to this method,\ror by modifying `cropRect` property directly and then calling `updateCrop`.\r\rThe rectangle object given to this method can be either a `Phaser.Rectangle` or any other object \rso long as it has public `x`, `y`, `width`, `height`, `right` and `bottom` properties.\r\rA reference to the rectangle is stored in `cropRect` unless the `copy` parameter is `true`, \rin which case the values are duplicated to a local object.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle used during cropping. Pass null or no parameters to clear a previously set crop rectangle.","name":"rect"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If false `cropRect` will be stored as a reference to the given rect. If true it will copy the rect values into a local Phaser Rectangle object stored in cropRect.","name":"copy"}],"name":"crop","longname":"Phaser.Image#crop","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Crop#crop","inherited":true,"___s":true},{"meta":{"range":[3107,4426],"filename":"Crop.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"If you have set a crop rectangle on this Game Object via `crop` and since modified the `cropRect` property,\ror the rectangle it references, then you need to update the crop frame by calling this method.","kind":"function","name":"updateCrop","longname":"Phaser.Image#updateCrop","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Crop#updateCrop","inherited":true,"___s":true},{"meta":{"range":[629,648],"filename":"Destroy.js","lineno":22,"path":"src\\gameobjects\\components"},"description":"As a Game Object runs through its destroy method this flag is set to true, \rand can be checked in any sub-systems or plugins it is being destroyed from.","properties":[{"type":{"names":["boolean"]},"name":"destroyPhase"}],"readonly":true,"name":"destroyPhase","longname":"Phaser.Image#destroyPhase","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Destroy#destroyPhase","inherited":true,"___s":true},{"meta":{"range":[1497,4401],"filename":"Destroy.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Destroys the Game Object. This removes it from its parent group, destroys the input, event and animation handlers if present\rand nulls its reference to `game`, freeing it up for garbage collection.\r\rIf this Game Object has the Events component it will also dispatch the `onDestroy` event.\r\rYou can optionally also destroy the BaseTexture this Game Object is using. Be careful if you've\rmore than one Game Object sharing the same BaseTexture.","kind":"function","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should every child of this object have its destroy method called as well?","name":"destroyChildren"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Destroy the BaseTexture this Game Object is using? Note that if another Game Object is sharing the same BaseTexture it will invalidate it.","name":"destroyTexture"}],"name":"destroy","longname":"Phaser.Image#destroy","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Destroy#destroy","inherited":true,"___s":true},{"meta":{"range":[2104,2515],"filename":"FixedToCamera.js","lineno":56,"path":"src\\gameobjects\\components"},"description":"A Game Object that is \"fixed\" to the camera uses its x/y coordinates as offsets from the top left of the camera during rendering.\r\rThe values are adjusted at the rendering stage, overriding the Game Objects actual world position.\r\rThe end result is that the Game Object will appear to be 'fixed' to the camera, regardless of where in the game world\rthe camera is viewing. This is useful if for example this Game Object is a UI item that you wish to be visible at all times \rregardless where in the world the camera is.\r\rThe offsets are stored in the `cameraOffset` property.\r\rNote that the `cameraOffset` values are in addition to any parent of this Game Object on the display list.\r\rBe careful not to set `fixedToCamera` on Game Objects which are in Groups that already have `fixedToCamera` enabled on them.","properties":[{"type":{"names":["boolean"]},"name":"fixedToCamera"}],"name":"fixedToCamera","longname":"Phaser.Image#fixedToCamera","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.FixedToCamera#fixedToCamera","inherited":true,"___s":true},{"meta":{"range":[2868,2900],"filename":"FixedToCamera.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"The x/y coordinate offset applied to the top-left of the camera that this Game Object will be drawn at if `fixedToCamera` is true.\r\rThe values are relative to the top-left of the camera view and in addition to any parent of the Game Object on the display list.","properties":[{"type":{"names":["Phaser.Point"]},"name":"cameraOffset"}],"name":"cameraOffset","longname":"Phaser.Image#cameraOffset","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.FixedToCamera#cameraOffset","inherited":true,"___s":true},{"meta":{"range":[805,816],"filename":"InputEnabled.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Input Handler for this Game Object.\r\rBy default it is disabled. If you wish this Game Object to process input events you should enable it with: `inputEnabled = true`.\r\rAfter you have done this, this property will be a reference to the Phaser InputHandler.","properties":[{"type":{"names":["Phaser.InputHandler","null"]},"name":"input"}],"name":"input","longname":"Phaser.Image#input","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.InputEnabled#input","inherited":true,"___s":true},{"meta":{"range":[1661,2398],"filename":"InputEnabled.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"By default a Game Object won't process any input events. By setting `inputEnabled` to true a Phaser.InputHandler is created\rfor this Game Object and it will then start to process click / touch events and more.\r\rYou can then access the Input Handler via `this.input`.\r\rNote that Input related events are dispatched from `this.events`, i.e.: `events.onInputDown`.\r\rIf you set this property to false it will stop the Input Handler from processing any more input events.\r\rIf you want to _temporarily_ disable input for a Game Object, then it's better to set\r`input.enabled = false`, as it won't reset any of the Input Handlers internal properties.\rYou can then toggle this back on as needed.","properties":[{"type":{"names":["boolean"]},"name":"inputEnabled"}],"name":"inputEnabled","longname":"Phaser.Image#inputEnabled","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.InputEnabled#inputEnabled","inherited":true,"___s":true},{"meta":{"range":[1310,1321],"filename":"LifeSpan.js","lineno":50,"path":"src\\gameobjects\\components"},"description":"A useful flag to control if the Game Object is alive or dead.\r\rThis is set automatically by the Health components `damage` method should the object run out of health.\rOr you can toggle it via your game code.\r\rThis property is mostly just provided to be used by your game - it doesn't effect rendering or logic updates.\rHowever you can use `Group.getFirstAlive` in conjunction with this property for fast object pooling and recycling.","properties":[{"type":{"names":["boolean"]},"name":"alive"}],"defaultvalue":true,"name":"alive","longname":"Phaser.Image#alive","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.LifeSpan#alive","inherited":true,"___s":true},{"meta":{"range":[1843,1854],"filename":"LifeSpan.js","lineno":65,"path":"src\\gameobjects\\components"},"description":"The lifespan allows you to give a Game Object a lifespan in milliseconds.\r\rOnce the Game Object is 'born' you can set this to a positive value.\r\rIt is automatically decremented by the millisecond equivalent of `game.time.physicsElapsed` each frame.\rWhen it reaches zero it will call the `kill` method.\r\rVery handy for particles, bullets, collectibles, or any other short-lived entity.","properties":[{"type":{"names":["number"]},"name":"lifespan"}],"defaultvalue":0,"name":"lifespan","longname":"Phaser.Image#lifespan","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.LifeSpan#lifespan","inherited":true,"___s":true},{"meta":{"range":[2390,2807],"filename":"LifeSpan.js","lineno":78,"path":"src\\gameobjects\\components"},"description":"Brings a 'dead' Game Object back to life, optionally resetting its health value in the process.\r\rA resurrected Game Object has its `alive`, `exists` and `visible` properties all set to true.\r\rIt will dispatch the `onRevived` event. Listen to `events.onRevived` for the signal.","kind":"function","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"The health to give the Game Object. Only set if the GameObject has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"revive","longname":"Phaser.Image#revive","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.LifeSpan#revive","inherited":true,"___s":true},{"meta":{"range":[3390,3634],"filename":"LifeSpan.js","lineno":113,"path":"src\\gameobjects\\components"},"description":"Kills a Game Object. A killed Game Object has its `alive`, `exists` and `visible` properties all set to false.\r\rIt will dispatch the `onKilled` event. You can listen to `events.onKilled` for the signal.\r\rNote that killing a Game Object is a way for you to quickly recycle it in an object pool,\rit doesn't destroy the object or free it up from memory.\r\rIf you don't need this Game Object any more you should call `destroy` instead.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"kill","longname":"Phaser.Image#kill","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.LifeSpan#kill","inherited":true,"___s":true},{"meta":{"range":[2545,5312],"filename":"LoadTexture.js","lineno":51,"path":"src\\gameobjects\\components"},"description":"Changes the base texture the Game Object is using. The old texture is removed and the new one is referenced or fetched from the Cache.\r\rIf your Game Object is using a frame from a texture atlas and you just wish to change to another frame, then see the `frame` or `frameName` properties instead.\r\rYou should only use `loadTexture` if you want to replace the base texture entirely.\r\rCalling this method causes a WebGL texture update, so use sparingly or in low-intensity portions of your game, or if you know the new texture is already on the GPU.\r\rYou can use the new const `Phaser.PENDING_ATLAS` as the texture key for any sprite. \rDoing this then sets the key to be the `frame` argument (the frame is set to zero). \r\rThis allows you to create sprites using `load.image` during development, and then change them \rto use a Texture Atlas later in development by simply searching your code for 'PENDING_ATLAS' \rand swapping it to be the key of the atlas data.\r\rNote: You cannot use a RenderTexture as a texture for a TileSprite.","kind":"function","params":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If an animation is already playing on this Sprite you can choose to stop it or let it carry on playing.","name":"stopAnimation"}],"name":"loadTexture","longname":"Phaser.Image#loadTexture","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.LoadTexture#loadTexture","inherited":true,"___s":true},{"meta":{"range":[5633,7262],"filename":"LoadTexture.js","lineno":155,"path":"src\\gameobjects\\components"},"description":"Sets the texture frame the Game Object uses for rendering.\r\rThis is primarily an internal method used by `loadTexture`, but is exposed for the use of plugins and custom classes.","kind":"function","params":[{"type":{"names":["Phaser.Frame"]},"description":"The Frame to be used by the texture.","name":"frame"}],"name":"setFrame","longname":"Phaser.Image#setFrame","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.LoadTexture#setFrame","inherited":true,"___s":true},{"meta":{"range":[7825,7986],"filename":"LoadTexture.js","lineno":220,"path":"src\\gameobjects\\components"},"description":"Resizes the Frame dimensions that the Game Object uses for rendering.\r\rYou shouldn't normally need to ever call this, but in the case of special texture types such as Video or BitmapData\rit can be useful to adjust the dimensions directly in this way.","kind":"function","params":[{"type":{"names":["object"]},"description":"The parent texture object that caused the resize, i.e. a Phaser.Video object.","name":"parent"},{"type":{"names":["integer"]},"description":"The new width of the texture.","name":"width"},{"type":{"names":["integer"]},"description":"The new height of the texture.","name":"height"}],"name":"resizeFrame","longname":"Phaser.Image#resizeFrame","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.LoadTexture#resizeFrame","inherited":true,"___s":true},{"meta":{"range":[8118,8243],"filename":"LoadTexture.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"Resets the texture frame dimensions that the Game Object uses for rendering.","kind":"function","name":"resetFrame","longname":"Phaser.Image#resetFrame","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.LoadTexture#resetFrame","inherited":true,"___s":true},{"meta":{"range":[8868,9060],"filename":"LoadTexture.js","lineno":254,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame index of the texture being used to render this Game Object.\r\rTo change the frame set `frame` to the index of the new frame in the sprite sheet you wish this Game Object to use,\rfor example: `player.frame = 4`.\r\rIf the frame index given doesn't exist it will revert to the first frame found in the texture.\r\rIf you are using a texture atlas then you should use the `frameName` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["integer"]},"name":"frame"}],"name":"frame","longname":"Phaser.Image#frame","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.LoadTexture#frame","inherited":true,"___s":true},{"meta":{"range":[9723,9927],"filename":"LoadTexture.js","lineno":279,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame name of the texture being used to render this Game Object.\r\rTo change the frame set `frameName` to the name of the new frame in the texture atlas you wish this Game Object to use, \rfor example: `player.frameName = \"idle\"`.\r\rIf the frame name given doesn't exist it will revert to the first frame found in the texture and throw a console warning.\r\rIf you are using a sprite sheet then you should use the `frame` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["string"]},"name":"frameName"}],"name":"frameName","longname":"Phaser.Image#frameName","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.LoadTexture#frameName","inherited":true,"___s":true},{"meta":{"range":[1339,1475],"filename":"Overlap.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"Checks to see if the bounds of this Game Object overlaps with the bounds of the given Display Object, \rwhich can be a Sprite, Image, TileSprite or anything that extends those such as Button or provides a `getBounds` method and result.\r\rThis check ignores the `hitArea` property if set and runs a `getBounds` comparison on both objects to determine the result.\r\rTherefore it's relatively expensive to use in large quantities, i.e. with lots of Sprites at a high frequency.\rIt should be fine for low-volume testing where physics isn't required.","kind":"function","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.TileSprite","Phaser.Button","PIXI.DisplayObject"]},"description":"The display object to check against.","name":"displayObject"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the bounds of this Game Object intersects at any point with the bounds of the given display object."}],"name":"overlap","longname":"Phaser.Image#overlap","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Overlap#overlap","inherited":true,"___s":true},{"meta":{"range":[1061,1717],"filename":"Reset.js","lineno":30,"path":"src\\gameobjects\\components"},"description":"Resets the Game Object.\r\rThis moves the Game Object to the given x/y world coordinates and sets `fresh`, `exists`, \r`visible` and `renderable` to true.\r\rIf this Game Object has the LifeSpan component it will also set `alive` to true and `health` to the given value.\r\rIf this Game Object has a Physics Body it will reset the Body.","kind":"function","params":[{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the Game Object at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the Game Object at.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The health to give the Game Object if it has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"reset","longname":"Phaser.Image#reset","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Reset#reset","inherited":true,"___s":true},{"meta":{"range":[566,589],"filename":"ScaleMinMax.js","lineno":20,"path":"src\\gameobjects\\components"},"description":"The callback that will apply any scale limiting to the worldTransform.","properties":[{"type":{"names":["function"]},"name":"transformCallback"}],"name":"transformCallback","longname":"Phaser.Image#transformCallback","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#transformCallback","inherited":true,"___s":true},{"meta":{"range":[728,758],"filename":"ScaleMinMax.js","lineno":26,"path":"src\\gameobjects\\components"},"description":"The context under which `transformCallback` is called.","properties":[{"type":{"names":["object"]},"name":"transformCallbackContext"}],"name":"transformCallbackContext","longname":"Phaser.Image#transformCallbackContext","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#transformCallbackContext","inherited":true,"___s":true},{"meta":{"range":[1047,1061],"filename":"ScaleMinMax.js","lineno":36,"path":"src\\gameobjects\\components"},"description":"The minimum scale this Game Object will scale down to.\r\rIt allows you to prevent a parent from scaling this Game Object lower than the given value.\r\rSet it to `null` to remove the limit.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleMin"}],"name":"scaleMin","longname":"Phaser.Image#scaleMin","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#scaleMin","inherited":true,"___s":true},{"meta":{"range":[1350,1364],"filename":"ScaleMinMax.js","lineno":46,"path":"src\\gameobjects\\components"},"description":"The maximum scale this Game Object will scale up to. \r\rIt allows you to prevent a parent from scaling this Game Object higher than the given value.\r\rSet it to `null` to remove the limit.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleMax"}],"name":"scaleMax","longname":"Phaser.Image#scaleMax","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#scaleMax","inherited":true,"___s":true},{"meta":{"range":[3832,5155],"filename":"ScaleMinMax.js","lineno":110,"path":"src\\gameobjects\\components"},"description":"Sets the scaleMin and scaleMax values. These values are used to limit how far this Game Object will scale based on its parent.\r\rFor example if this Game Object has a `minScale` value of 1 and its parent has a `scale` value of 0.5, the 0.5 will be ignored \rand the scale value of 1 will be used, as the parents scale is lower than the minimum scale this Game Object should adhere to.\r\rBy setting these values you can carefully control how Game Objects deal with responsive scaling.\r\rIf only one parameter is given then that value will be used for both scaleMin and scaleMax:\r`setScaleMinMax(1)` = scaleMin.x, scaleMin.y, scaleMax.x and scaleMax.y all = 1\r\rIf only two parameters are given the first is set as scaleMin.x and y and the second as scaleMax.x and y:\r`setScaleMinMax(0.5, 2)` = scaleMin.x and y = 0.5 and scaleMax.x and y = 2\r\rIf you wish to set `scaleMin` with different values for x and y then either modify Game Object.scaleMin directly, \ror pass `null` for the `maxX` and `maxY` parameters.\r\rCall `setScaleMinMax(null)` to clear all previously set values.","kind":"function","params":[{"type":{"names":["number","null"]},"description":"The minimum horizontal scale value this Game Object can scale down to.","name":"minX"},{"type":{"names":["number","null"]},"description":"The minimum vertical scale value this Game Object can scale down to.","name":"minY"},{"type":{"names":["number","null"]},"description":"The maximum horizontal scale value this Game Object can scale up to.","name":"maxX"},{"type":{"names":["number","null"]},"description":"The maximum vertical scale value this Game Object can scale up to.","name":"maxY"}],"name":"setScaleMinMax","longname":"Phaser.Image#setScaleMinMax","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#setScaleMinMax","inherited":true,"___s":true},{"meta":{"range":[680,1221],"filename":"Smoothed.js","lineno":25,"path":"src\\gameobjects\\components"},"description":"Enable or disable texture smoothing for this Game Object.\r\rIt only takes effect if the Game Object is using an image based texture.\r\rSmoothing is enabled by default.","properties":[{"type":{"names":["boolean"]},"name":"smoothed"}],"name":"smoothed","longname":"Phaser.Image#smoothed","kind":"member","memberof":"Phaser.Image","scope":"instance","inherits":"Phaser.Component.Smoothed#smoothed","inherited":true,"___s":true},{"meta":{"range":[2912,3026],"filename":"Image.js","lineno":79,"path":"src\\gameobjects"},"description":"Automatically called by World.preUpdate.","kind":"function","name":"preUpdate","memberof":"Phaser.Button","longname":"Phaser.Button#preUpdate","scope":"instance","inherits":"Phaser.Image#preUpdate","inherited":true,"___s":true},{"meta":{"range":[774,804],"filename":"Sprite.js","lineno":26,"path":"src\\pixi\\display"},"description":"The anchor sets the origin point of the texture.\rThe default is 0,0 this means the texture's origin is the top left\rSetting than anchor to 0.5,0.5 means the textures origin is centered\rSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner","properties":[{"name":"anchor"}],"type":{"names":["Point"]},"name":"anchor","longname":"Phaser.Button#anchor","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"PIXI.Sprite#anchor","inherited":true,"___s":true},{"meta":{"range":[932,983],"filename":"Sprite.js","lineno":34,"path":"src\\pixi\\display"},"description":"The texture that the sprite is using","properties":[{"name":"texture"}],"type":{"names":["Texture"]},"name":"texture","longname":"Phaser.Button#texture","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"PIXI.Sprite#texture","inherited":true,"___s":true},{"meta":{"range":[1569,1589],"filename":"Sprite.js","lineno":61,"path":"src\\pixi\\display"},"description":"The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.","properties":[{"name":"tint"}],"type":{"names":["Number"]},"defaultvalue":"0xFFFFFF","name":"tint","longname":"Phaser.Button#tint","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"PIXI.Sprite#tint","inherited":true,"___s":true},{"meta":{"range":[2061,2086],"filename":"Sprite.js","lineno":80,"path":"src\\pixi\\display"},"description":"A canvas that contains the tinted version of the Sprite (in Canvas mode, WebGL doesn't populate this)","properties":[{"name":"tintedTexture"}],"type":{"names":["Canvas"]},"defaultvalue":"null","name":"tintedTexture","longname":"Phaser.Button#tintedTexture","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"PIXI.Sprite#tintedTexture","inherited":true,"___s":true},{"meta":{"range":[2456,2495],"filename":"Sprite.js","lineno":91,"path":"src\\pixi\\display"},"description":"The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode.\r\rWarning: You cannot have a blend mode and a filter active on the same Sprite. Doing so will render the sprite invisible.","properties":[{"name":"blendMode"}],"type":{"names":["Number"]},"defaultvalue":"PIXI.blendModes.NORMAL;","name":"blendMode","longname":"Phaser.Button#blendMode","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"PIXI.Sprite#blendMode","inherited":true,"___s":true},{"meta":{"range":[2714,2732],"filename":"Sprite.js","lineno":101,"path":"src\\pixi\\display"},"description":"The shader that will be used to render this Sprite.\rSet to null to remove a current shader.","properties":[{"name":"shader"}],"type":{"names":["AbstractFilter"]},"defaultvalue":"null","name":"shader","longname":"Phaser.Button#shader","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"PIXI.Sprite#shader","inherited":true,"___s":true},{"meta":{"range":[2922,2940],"filename":"Sprite.js","lineno":110,"path":"src\\pixi\\display"},"description":"Controls if this Sprite is processed by the core Phaser game loops and Group loops.","properties":[{"name":"exists"}],"type":{"names":["Boolean"]},"defaultvalue":"true","name":"exists","longname":"Phaser.Button#exists","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"PIXI.Sprite#exists","inherited":true,"___s":true},{"meta":{"range":[3048,3058],"filename":"Core.js","lineno":142,"path":"src\\gameobjects\\components"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"name":"game","longname":"Phaser.Button#game","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Core#game","inherited":true,"___s":true},{"meta":{"range":[3279,3287],"filename":"Core.js","lineno":150,"path":"src\\gameobjects\\components"},"description":"A user defined name given to this Game Object.\rThis value isn't ever used internally by Phaser, it is meant as a game level property.","properties":[{"type":{"names":["string"]},"name":"name"}],"defaultvalue":"","name":"name","longname":"Phaser.Button#name","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Core#name","inherited":true,"___s":true},{"meta":{"range":[3651,3659],"filename":"Core.js","lineno":160,"path":"src\\gameobjects\\components"},"description":"An empty Object that belongs to this Game Object.\rThis value isn't ever used internally by Phaser, but may be used by your own code, or\rby Phaser Plugins, to store data that needs to be associated with the Game Object,\rwithout polluting the Game Object directly.","properties":[{"type":{"names":["Object"]},"name":"data"}],"defaultvalue":"{}","defaultvaluetype":"object","name":"data","longname":"Phaser.Button#data","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Core#data","inherited":true,"___s":true},{"meta":{"range":[3794,3808],"filename":"Core.js","lineno":167,"path":"src\\gameobjects\\components"},"description":"The components this Game Object has installed.","properties":[{"type":{"names":["object"]},"name":"components"}],"access":"protected","name":"components","longname":"Phaser.Button#components","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Core#components","inherited":true,"___s":true},{"meta":{"range":[4202,4206],"filename":"Core.js","lineno":177,"path":"src\\gameobjects\\components"},"description":"The z depth of this Game Object within its parent Group.\rNo two objects in a Group can have the same z value.\rThis value is adjusted automatically whenever the Group hierarchy changes.\rIf you wish to re-order the layering of a Game Object then see methods like Group.moveUp or Group.bringToTop.","properties":[{"type":{"names":["number"]},"name":"z"}],"readonly":true,"name":"z","longname":"Phaser.Button#z","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Core#z","inherited":true,"___s":true},{"meta":{"range":[4484,4501],"filename":"Core.js","lineno":185,"path":"src\\gameobjects\\components"},"description":"All Phaser Game Objects have an Events class which contains all of the events that are dispatched when certain things happen to this\rGame Object, or any of its components.","see":["Phaser.Events"],"properties":[{"type":{"names":["Phaser.Events"]},"name":"events"}],"name":"events","longname":"Phaser.Button#events","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Core#events","inherited":true,"___s":true},{"meta":{"range":[4815,4836],"filename":"Core.js","lineno":193,"path":"src\\gameobjects\\components"},"description":"If the Game Object is enabled for animation (such as a Phaser.Sprite) this is a reference to its AnimationManager instance.\rThrough it you can create, play, pause and stop animations.","see":["Phaser.AnimationManager"],"properties":[{"type":{"names":["Phaser.AnimationManager"]},"name":"animations"}],"name":"animations","longname":"Phaser.Button#animations","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Core#animations","inherited":true,"___s":true},{"meta":{"range":[5559,5566],"filename":"Core.js","lineno":203,"path":"src\\gameobjects\\components"},"description":"The key of the image or texture used by this Game Object during rendering.\rIf it is a string it's the string used to retrieve the texture from the Phaser Image Cache.\rIt can also be an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.\rIf a Game Object is created without a key it is automatically assigned the key `__default` which is a 32x32 transparent PNG stored within the Cache.\rIf a Game Object is given a key which doesn't exist in the Image Cache it is re-assigned the key `__missing` which is a 32x32 PNG of a green box with a line through it.","properties":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"name":"key"}],"name":"key","longname":"Phaser.Button#key","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Core#key","inherited":true,"___s":true},{"meta":{"range":[5882,5893],"filename":"Core.js","lineno":211,"path":"src\\gameobjects\\components"},"description":"The world coordinates of this Game Object in pixels.\rDepending on where in the display list this Game Object is placed this value can differ from `position`, \rwhich contains the x/y coordinates relative to the Game Objects parent.","properties":[{"type":{"names":["Phaser.Point"]},"name":"world"}],"name":"world","longname":"Phaser.Button#world","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Core#world","inherited":true,"___s":true},{"meta":{"range":[6029,6041],"filename":"Core.js","lineno":218,"path":"src\\gameobjects\\components"},"description":"A debug flag designed for use with `Game.enableStep`.","properties":[{"type":{"names":["boolean"]},"name":"debug"}],"defaultvalue":false,"name":"debug","longname":"Phaser.Button#debug","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Core#debug","inherited":true,"___s":true},{"meta":{"range":[6204,6226],"filename":"Core.js","lineno":225,"path":"src\\gameobjects\\components"},"description":"The position the Game Object was located in the previous frame.","properties":[{"type":{"names":["Phaser.Point"]},"name":"previousPosition"}],"readonly":true,"name":"previousPosition","longname":"Phaser.Button#previousPosition","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Core#previousPosition","inherited":true,"___s":true},{"meta":{"range":[6406,6425],"filename":"Core.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"The rotation the Game Object was in set to in the previous frame. Value is in radians.","properties":[{"type":{"names":["number"]},"name":"previousRotation"}],"readonly":true,"name":"previousRotation","longname":"Phaser.Button#previousRotation","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Core#previousRotation","inherited":true,"___s":true},{"meta":{"range":[6720,6736],"filename":"Core.js","lineno":240,"path":"src\\gameobjects\\components"},"description":"The render order ID is used internally by the renderer and Input Manager and should not be modified.\rThis property is mostly used internally by the renderers, but is exposed for the use of plugins.","properties":[{"type":{"names":["number"]},"name":"renderOrderID"}],"readonly":true,"name":"renderOrderID","longname":"Phaser.Button#renderOrderID","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Core#renderOrderID","inherited":true,"___s":true},{"meta":{"range":[7053,7064],"filename":"Core.js","lineno":248,"path":"src\\gameobjects\\components"},"description":"A Game Object is considered `fresh` if it has just been created or reset and is yet to receive a renderer transform update.\rThis property is mostly used internally by the physics systems, but is exposed for the use of plugins.","properties":[{"type":{"names":["boolean"]},"name":"fresh"}],"readonly":true,"name":"fresh","longname":"Phaser.Button#fresh","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Core#fresh","inherited":true,"___s":true},{"meta":{"range":[7518,7539],"filename":"Core.js","lineno":259,"path":"src\\gameobjects\\components"},"description":"A Game Object is that is pendingDestroy is flagged to have its destroy method called on the next logic update.\rYou can set it directly to allow you to flag an object to be destroyed on its next update.\r\rThis is extremely useful if you wish to destroy an object from within one of its own callbacks \rsuch as with Buttons or other Input events.","properties":[{"type":{"names":["boolean"]},"name":"pendingDestroy"}],"name":"pendingDestroy","longname":"Phaser.Button#pendingDestroy","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Core#pendingDestroy","inherited":true,"___s":true},{"meta":{"range":[9388,9417],"filename":"Core.js","lineno":328,"path":"src\\gameobjects\\components"},"description":"Override this method in your own custom objects to handle any update requirements.\rIt is called immediately after `preUpdate` and before `postUpdate`.\rRemember if this Game Object has any children you should call update on those too.","kind":"function","name":"update","longname":"Phaser.Button#update","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Core#update","inherited":true,"___s":true},{"meta":{"range":[9544,10055],"filename":"Core.js","lineno":338,"path":"src\\gameobjects\\components"},"description":"Internal method called by the World postUpdate cycle.","kind":"function","access":"protected","name":"postUpdate","longname":"Phaser.Button#postUpdate","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Core#postUpdate","inherited":true,"___s":true},{"meta":{"range":[1110,1382],"filename":"Angle.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"The angle property is the rotation of the Game Object in *degrees* from its original orientation.\r\rValues from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\r\rValues outside this range are added to or subtracted from 360 to obtain a value within the range. \rFor example, the statement player.angle = 450 is the same as player.angle = 90.\r\rIf you wish to work in radians instead of degrees you can use the property `rotation` instead. \rWorking in radians is slightly faster as it doesn't have to perform any calculations.","properties":[{"type":{"names":["number"]},"name":"angle"}],"name":"angle","longname":"Phaser.Button#angle","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Angle#angle","inherited":true,"___s":true},{"meta":{"range":[1545,1745],"filename":"Animation.js","lineno":31,"path":"src\\gameobjects\\components"},"description":"Plays an Animation.\r\rThe animation should have previously been created via `animations.add`.\r\rIf the animation is already playing calling this again won't do anything.\rIf you need to reset an already running animation do so directly on the Animation object itself or via `AnimationManager.stop`.","kind":"function","params":[{"type":{"names":["string"]},"description":"The name of the animation to be played, e.g. \"fire\", \"walk\", \"jump\". Must have been previously created via 'AnimationManager.add'.","name":"name"},{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"The framerate to play the animation at. The speed is given in frames per second. If not provided the previously set frameRate of the Animation is used.","name":"frameRate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the animation be looped after playback. If not provided the previously set loop value of the Animation is used.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set to true when the animation completes (only happens if loop=false) the parent Sprite will be killed.","name":"killOnComplete"}],"returns":[{"type":{"names":["Phaser.Animation"]},"description":"A reference to playing Animation."}],"name":"play","longname":"Phaser.Button#play","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Animation#play","inherited":true,"___s":true},{"meta":{"range":[1129,1144],"filename":"AutoCull.js","lineno":28,"path":"src\\gameobjects\\components"},"description":"A Game Object with `autoCull` set to true will check its bounds against the World Camera every frame.\rIf it is not intersecting the Camera bounds at any point then it has its `renderable` property set to `false`.\rThis keeps the Game Object alive and still processing updates, but forces it to skip the render step entirely.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"autoCull"}],"defaultvalue":false,"name":"autoCull","longname":"Phaser.Button#autoCull","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.AutoCull#autoCull","inherited":true,"___s":true},{"meta":{"range":[1402,1809],"filename":"AutoCull.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds intersect with the Game Camera bounds.\rReturns `true` if they do, otherwise `false` if fully outside of the Cameras bounds.","properties":[{"type":{"names":["boolean"]},"name":"inCamera"}],"readonly":true,"name":"inCamera","longname":"Phaser.Button#inCamera","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.AutoCull#inCamera","inherited":true,"___s":true},{"meta":{"range":[661,773],"filename":"Bounds.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its x coordinate.\rThis is the same as `width * anchor.x`.\rIt will only be > 0 if anchor.x is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetX"}],"readonly":true,"name":"offsetX","longname":"Phaser.Button#offsetX","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Bounds#offsetX","inherited":true,"___s":true},{"meta":{"range":[1042,1155],"filename":"Bounds.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its y coordinate.\rThis is the same as `height * anchor.y`.\rIt will only be > 0 if anchor.y is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetY"}],"readonly":true,"name":"offsetY","longname":"Phaser.Button#offsetY","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Bounds#offsetY","inherited":true,"___s":true},{"meta":{"range":[1331,1579],"filename":"Bounds.js","lineno":58,"path":"src\\gameobjects\\components"},"description":"The center x coordinate of the Game Object.\rThis is the same as `(x - offsetX) + (width / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerX"}],"name":"centerX","longname":"Phaser.Button#centerX","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Bounds#centerX","inherited":true,"___s":true},{"meta":{"range":[1756,2006],"filename":"Bounds.js","lineno":80,"path":"src\\gameobjects\\components"},"description":"The center y coordinate of the Game Object.\rThis is the same as `(y - offsetY) + (height / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerY"}],"name":"centerY","longname":"Phaser.Button#centerY","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Bounds#centerY","inherited":true,"___s":true},{"meta":{"range":[2159,2358],"filename":"Bounds.js","lineno":102,"path":"src\\gameobjects\\components"},"description":"The left coordinate of the Game Object.\rThis is the same as `x - offsetX`.","properties":[{"type":{"names":["number"]},"name":"left"}],"name":"left","longname":"Phaser.Button#left","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Bounds#left","inherited":true,"___s":true},{"meta":{"range":[2521,2751],"filename":"Bounds.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The right coordinate of the Game Object.\rThis is the same as `x + width - offsetX`.","properties":[{"type":{"names":["number"]},"name":"right"}],"name":"right","longname":"Phaser.Button#right","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Bounds#right","inherited":true,"___s":true},{"meta":{"range":[2900,3098],"filename":"Bounds.js","lineno":146,"path":"src\\gameobjects\\components"},"description":"The y coordinate of the Game Object.\rThis is the same as `y - offsetY`.","properties":[{"type":{"names":["number"]},"name":"top"}],"name":"top","longname":"Phaser.Button#top","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Bounds#top","inherited":true,"___s":true},{"meta":{"range":[3262,3495],"filename":"Bounds.js","lineno":168,"path":"src\\gameobjects\\components"},"description":"The sum of the y and height properties.\rThis is the same as `y + height - offsetY`.","properties":[{"type":{"names":["number"]},"name":"bottom"}],"name":"bottom","longname":"Phaser.Button#bottom","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Bounds#bottom","inherited":true,"___s":true},{"meta":{"range":[6346,8224],"filename":"Bounds.js","lineno":223,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object within another Game Object, or Rectangle, known as the\r'container', to one of 9 possible positions.\r\rThe container must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe container. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, \r`Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, \r`Phaser.BOTTOM_CENTER` and `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rcontainer, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignIn(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the containers bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the container bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"container"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignIn","longname":"Phaser.Button#alignIn","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Bounds#alignIn","inherited":true,"___s":true},{"meta":{"range":[11205,13527],"filename":"Bounds.js","lineno":321,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object to the side of another Game Object, or Rectangle, known as the\r'parent', in one of 11 possible positions.\r\rThe parent must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe parent. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, \r`Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, \r`Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` \rand `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rparent, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignTo(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the parents bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the parent bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"parent"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, `Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, `Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignTo","longname":"Phaser.Button#alignTo","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Bounds#alignTo","inherited":true,"___s":true},{"meta":{"range":[784,949],"filename":"BringToTop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"Brings this Game Object to the top of its parents display list.\rVisually this means it will render over the top of any old child in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will bring it to the top of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"bringToTop","longname":"Phaser.Button#bringToTop","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.BringToTop#bringToTop","inherited":true,"___s":true},{"meta":{"range":[1378,1543],"filename":"BringToTop.js","lineno":45,"path":"src\\gameobjects\\components"},"description":"Sends this Game Object to the bottom of its parents display list.\rVisually this means it will render below all other children in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will send it to the bottom of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"sendToBack","longname":"Phaser.Button#sendToBack","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.BringToTop#sendToBack","inherited":true,"___s":true},{"meta":{"range":[1982,2140],"filename":"BringToTop.js","lineno":66,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object up one place in its parents display list.\rThis call has no effect if the Game Object is already at the top of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object up within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveUp","longname":"Phaser.Button#moveUp","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.BringToTop#moveUp","inherited":true,"___s":true},{"meta":{"range":[2586,2748],"filename":"BringToTop.js","lineno":87,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object down one place in its parents display list.\rThis call has no effect if the Game Object is already at the bottom of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object down within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveDown","longname":"Phaser.Button#moveDown","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.BringToTop#moveDown","inherited":true,"___s":true},{"meta":{"range":[751,765],"filename":"Crop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Rectangle used to crop the texture this Game Object uses.\rSet this property via `crop`. \rIf you modify this property directly you must call `updateCrop` in order to have the change take effect.","properties":[{"type":{"names":["Phaser.Rectangle"]},"name":"cropRect"}],"defaultvalue":null,"name":"cropRect","longname":"Phaser.Button#cropRect","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Crop#cropRect","inherited":true,"___s":true},{"meta":{"range":[2112,2842],"filename":"Crop.js","lineno":49,"path":"src\\gameobjects\\components"},"description":"Crop allows you to crop the texture being used to display this Game Object.\rSetting a crop rectangle modifies the core texture frame. The Game Object width and height properties will be adjusted accordingly.\r\rCropping takes place from the top-left and can be modified in real-time either by providing an updated rectangle object to this method,\ror by modifying `cropRect` property directly and then calling `updateCrop`.\r\rThe rectangle object given to this method can be either a `Phaser.Rectangle` or any other object \rso long as it has public `x`, `y`, `width`, `height`, `right` and `bottom` properties.\r\rA reference to the rectangle is stored in `cropRect` unless the `copy` parameter is `true`, \rin which case the values are duplicated to a local object.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle used during cropping. Pass null or no parameters to clear a previously set crop rectangle.","name":"rect"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If false `cropRect` will be stored as a reference to the given rect. If true it will copy the rect values into a local Phaser Rectangle object stored in cropRect.","name":"copy"}],"name":"crop","longname":"Phaser.Button#crop","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Crop#crop","inherited":true,"___s":true},{"meta":{"range":[3107,4426],"filename":"Crop.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"If you have set a crop rectangle on this Game Object via `crop` and since modified the `cropRect` property,\ror the rectangle it references, then you need to update the crop frame by calling this method.","kind":"function","name":"updateCrop","longname":"Phaser.Button#updateCrop","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Crop#updateCrop","inherited":true,"___s":true},{"meta":{"range":[629,648],"filename":"Destroy.js","lineno":22,"path":"src\\gameobjects\\components"},"description":"As a Game Object runs through its destroy method this flag is set to true, \rand can be checked in any sub-systems or plugins it is being destroyed from.","properties":[{"type":{"names":["boolean"]},"name":"destroyPhase"}],"readonly":true,"name":"destroyPhase","longname":"Phaser.Button#destroyPhase","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Destroy#destroyPhase","inherited":true,"___s":true},{"meta":{"range":[1497,4401],"filename":"Destroy.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Destroys the Game Object. This removes it from its parent group, destroys the input, event and animation handlers if present\rand nulls its reference to `game`, freeing it up for garbage collection.\r\rIf this Game Object has the Events component it will also dispatch the `onDestroy` event.\r\rYou can optionally also destroy the BaseTexture this Game Object is using. Be careful if you've\rmore than one Game Object sharing the same BaseTexture.","kind":"function","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should every child of this object have its destroy method called as well?","name":"destroyChildren"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Destroy the BaseTexture this Game Object is using? Note that if another Game Object is sharing the same BaseTexture it will invalidate it.","name":"destroyTexture"}],"name":"destroy","longname":"Phaser.Button#destroy","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Destroy#destroy","inherited":true,"___s":true},{"meta":{"range":[2104,2515],"filename":"FixedToCamera.js","lineno":56,"path":"src\\gameobjects\\components"},"description":"A Game Object that is \"fixed\" to the camera uses its x/y coordinates as offsets from the top left of the camera during rendering.\r\rThe values are adjusted at the rendering stage, overriding the Game Objects actual world position.\r\rThe end result is that the Game Object will appear to be 'fixed' to the camera, regardless of where in the game world\rthe camera is viewing. This is useful if for example this Game Object is a UI item that you wish to be visible at all times \rregardless where in the world the camera is.\r\rThe offsets are stored in the `cameraOffset` property.\r\rNote that the `cameraOffset` values are in addition to any parent of this Game Object on the display list.\r\rBe careful not to set `fixedToCamera` on Game Objects which are in Groups that already have `fixedToCamera` enabled on them.","properties":[{"type":{"names":["boolean"]},"name":"fixedToCamera"}],"name":"fixedToCamera","longname":"Phaser.Button#fixedToCamera","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.FixedToCamera#fixedToCamera","inherited":true,"___s":true},{"meta":{"range":[2868,2900],"filename":"FixedToCamera.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"The x/y coordinate offset applied to the top-left of the camera that this Game Object will be drawn at if `fixedToCamera` is true.\r\rThe values are relative to the top-left of the camera view and in addition to any parent of the Game Object on the display list.","properties":[{"type":{"names":["Phaser.Point"]},"name":"cameraOffset"}],"name":"cameraOffset","longname":"Phaser.Button#cameraOffset","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.FixedToCamera#cameraOffset","inherited":true,"___s":true},{"meta":{"range":[805,816],"filename":"InputEnabled.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Input Handler for this Game Object.\r\rBy default it is disabled. If you wish this Game Object to process input events you should enable it with: `inputEnabled = true`.\r\rAfter you have done this, this property will be a reference to the Phaser InputHandler.","properties":[{"type":{"names":["Phaser.InputHandler","null"]},"name":"input"}],"name":"input","longname":"Phaser.Button#input","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.InputEnabled#input","inherited":true,"___s":true},{"meta":{"range":[1661,2398],"filename":"InputEnabled.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"By default a Game Object won't process any input events. By setting `inputEnabled` to true a Phaser.InputHandler is created\rfor this Game Object and it will then start to process click / touch events and more.\r\rYou can then access the Input Handler via `this.input`.\r\rNote that Input related events are dispatched from `this.events`, i.e.: `events.onInputDown`.\r\rIf you set this property to false it will stop the Input Handler from processing any more input events.\r\rIf you want to _temporarily_ disable input for a Game Object, then it's better to set\r`input.enabled = false`, as it won't reset any of the Input Handlers internal properties.\rYou can then toggle this back on as needed.","properties":[{"type":{"names":["boolean"]},"name":"inputEnabled"}],"name":"inputEnabled","longname":"Phaser.Button#inputEnabled","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.InputEnabled#inputEnabled","inherited":true,"overrides":"Phaser.Image#inputEnabled","___s":true},{"meta":{"range":[1310,1321],"filename":"LifeSpan.js","lineno":50,"path":"src\\gameobjects\\components"},"description":"A useful flag to control if the Game Object is alive or dead.\r\rThis is set automatically by the Health components `damage` method should the object run out of health.\rOr you can toggle it via your game code.\r\rThis property is mostly just provided to be used by your game - it doesn't effect rendering or logic updates.\rHowever you can use `Group.getFirstAlive` in conjunction with this property for fast object pooling and recycling.","properties":[{"type":{"names":["boolean"]},"name":"alive"}],"defaultvalue":true,"name":"alive","longname":"Phaser.Button#alive","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.LifeSpan#alive","inherited":true,"___s":true},{"meta":{"range":[1843,1854],"filename":"LifeSpan.js","lineno":65,"path":"src\\gameobjects\\components"},"description":"The lifespan allows you to give a Game Object a lifespan in milliseconds.\r\rOnce the Game Object is 'born' you can set this to a positive value.\r\rIt is automatically decremented by the millisecond equivalent of `game.time.physicsElapsed` each frame.\rWhen it reaches zero it will call the `kill` method.\r\rVery handy for particles, bullets, collectibles, or any other short-lived entity.","properties":[{"type":{"names":["number"]},"name":"lifespan"}],"defaultvalue":0,"name":"lifespan","longname":"Phaser.Button#lifespan","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.LifeSpan#lifespan","inherited":true,"___s":true},{"meta":{"range":[2390,2807],"filename":"LifeSpan.js","lineno":78,"path":"src\\gameobjects\\components"},"description":"Brings a 'dead' Game Object back to life, optionally resetting its health value in the process.\r\rA resurrected Game Object has its `alive`, `exists` and `visible` properties all set to true.\r\rIt will dispatch the `onRevived` event. Listen to `events.onRevived` for the signal.","kind":"function","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"The health to give the Game Object. Only set if the GameObject has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"revive","longname":"Phaser.Button#revive","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.LifeSpan#revive","inherited":true,"___s":true},{"meta":{"range":[3390,3634],"filename":"LifeSpan.js","lineno":113,"path":"src\\gameobjects\\components"},"description":"Kills a Game Object. A killed Game Object has its `alive`, `exists` and `visible` properties all set to false.\r\rIt will dispatch the `onKilled` event. You can listen to `events.onKilled` for the signal.\r\rNote that killing a Game Object is a way for you to quickly recycle it in an object pool,\rit doesn't destroy the object or free it up from memory.\r\rIf you don't need this Game Object any more you should call `destroy` instead.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"kill","longname":"Phaser.Button#kill","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.LifeSpan#kill","inherited":true,"___s":true},{"meta":{"range":[2545,5312],"filename":"LoadTexture.js","lineno":51,"path":"src\\gameobjects\\components"},"description":"Changes the base texture the Game Object is using. The old texture is removed and the new one is referenced or fetched from the Cache.\r\rIf your Game Object is using a frame from a texture atlas and you just wish to change to another frame, then see the `frame` or `frameName` properties instead.\r\rYou should only use `loadTexture` if you want to replace the base texture entirely.\r\rCalling this method causes a WebGL texture update, so use sparingly or in low-intensity portions of your game, or if you know the new texture is already on the GPU.\r\rYou can use the new const `Phaser.PENDING_ATLAS` as the texture key for any sprite. \rDoing this then sets the key to be the `frame` argument (the frame is set to zero). \r\rThis allows you to create sprites using `load.image` during development, and then change them \rto use a Texture Atlas later in development by simply searching your code for 'PENDING_ATLAS' \rand swapping it to be the key of the atlas data.\r\rNote: You cannot use a RenderTexture as a texture for a TileSprite.","kind":"function","params":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If an animation is already playing on this Sprite you can choose to stop it or let it carry on playing.","name":"stopAnimation"}],"name":"loadTexture","longname":"Phaser.Button#loadTexture","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.LoadTexture#loadTexture","inherited":true,"___s":true},{"meta":{"range":[5633,7262],"filename":"LoadTexture.js","lineno":155,"path":"src\\gameobjects\\components"},"description":"Sets the texture frame the Game Object uses for rendering.\r\rThis is primarily an internal method used by `loadTexture`, but is exposed for the use of plugins and custom classes.","kind":"function","params":[{"type":{"names":["Phaser.Frame"]},"description":"The Frame to be used by the texture.","name":"frame"}],"name":"setFrame","longname":"Phaser.Button#setFrame","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.LoadTexture#setFrame","inherited":true,"___s":true},{"meta":{"range":[7825,7986],"filename":"LoadTexture.js","lineno":220,"path":"src\\gameobjects\\components"},"description":"Resizes the Frame dimensions that the Game Object uses for rendering.\r\rYou shouldn't normally need to ever call this, but in the case of special texture types such as Video or BitmapData\rit can be useful to adjust the dimensions directly in this way.","kind":"function","params":[{"type":{"names":["object"]},"description":"The parent texture object that caused the resize, i.e. a Phaser.Video object.","name":"parent"},{"type":{"names":["integer"]},"description":"The new width of the texture.","name":"width"},{"type":{"names":["integer"]},"description":"The new height of the texture.","name":"height"}],"name":"resizeFrame","longname":"Phaser.Button#resizeFrame","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.LoadTexture#resizeFrame","inherited":true,"___s":true},{"meta":{"range":[8118,8243],"filename":"LoadTexture.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"Resets the texture frame dimensions that the Game Object uses for rendering.","kind":"function","name":"resetFrame","longname":"Phaser.Button#resetFrame","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.LoadTexture#resetFrame","inherited":true,"___s":true},{"meta":{"range":[8868,9060],"filename":"LoadTexture.js","lineno":254,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame index of the texture being used to render this Game Object.\r\rTo change the frame set `frame` to the index of the new frame in the sprite sheet you wish this Game Object to use,\rfor example: `player.frame = 4`.\r\rIf the frame index given doesn't exist it will revert to the first frame found in the texture.\r\rIf you are using a texture atlas then you should use the `frameName` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["integer"]},"name":"frame"}],"name":"frame","longname":"Phaser.Button#frame","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.LoadTexture#frame","inherited":true,"overrides":"Phaser.Image#frame","___s":true},{"meta":{"range":[9723,9927],"filename":"LoadTexture.js","lineno":279,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame name of the texture being used to render this Game Object.\r\rTo change the frame set `frameName` to the name of the new frame in the texture atlas you wish this Game Object to use, \rfor example: `player.frameName = \"idle\"`.\r\rIf the frame name given doesn't exist it will revert to the first frame found in the texture and throw a console warning.\r\rIf you are using a sprite sheet then you should use the `frame` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["string"]},"name":"frameName"}],"name":"frameName","longname":"Phaser.Button#frameName","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.LoadTexture#frameName","inherited":true,"overrides":"Phaser.Image#frameName","___s":true},{"meta":{"range":[1339,1475],"filename":"Overlap.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"Checks to see if the bounds of this Game Object overlaps with the bounds of the given Display Object, \rwhich can be a Sprite, Image, TileSprite or anything that extends those such as Button or provides a `getBounds` method and result.\r\rThis check ignores the `hitArea` property if set and runs a `getBounds` comparison on both objects to determine the result.\r\rTherefore it's relatively expensive to use in large quantities, i.e. with lots of Sprites at a high frequency.\rIt should be fine for low-volume testing where physics isn't required.","kind":"function","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.TileSprite","Phaser.Button","PIXI.DisplayObject"]},"description":"The display object to check against.","name":"displayObject"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the bounds of this Game Object intersects at any point with the bounds of the given display object."}],"name":"overlap","longname":"Phaser.Button#overlap","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Overlap#overlap","inherited":true,"___s":true},{"meta":{"range":[1061,1717],"filename":"Reset.js","lineno":30,"path":"src\\gameobjects\\components"},"description":"Resets the Game Object.\r\rThis moves the Game Object to the given x/y world coordinates and sets `fresh`, `exists`, \r`visible` and `renderable` to true.\r\rIf this Game Object has the LifeSpan component it will also set `alive` to true and `health` to the given value.\r\rIf this Game Object has a Physics Body it will reset the Body.","kind":"function","params":[{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the Game Object at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the Game Object at.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The health to give the Game Object if it has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"reset","longname":"Phaser.Button#reset","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Reset#reset","inherited":true,"___s":true},{"meta":{"range":[566,589],"filename":"ScaleMinMax.js","lineno":20,"path":"src\\gameobjects\\components"},"description":"The callback that will apply any scale limiting to the worldTransform.","properties":[{"type":{"names":["function"]},"name":"transformCallback"}],"name":"transformCallback","longname":"Phaser.Button#transformCallback","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#transformCallback","inherited":true,"___s":true},{"meta":{"range":[728,758],"filename":"ScaleMinMax.js","lineno":26,"path":"src\\gameobjects\\components"},"description":"The context under which `transformCallback` is called.","properties":[{"type":{"names":["object"]},"name":"transformCallbackContext"}],"name":"transformCallbackContext","longname":"Phaser.Button#transformCallbackContext","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#transformCallbackContext","inherited":true,"___s":true},{"meta":{"range":[1047,1061],"filename":"ScaleMinMax.js","lineno":36,"path":"src\\gameobjects\\components"},"description":"The minimum scale this Game Object will scale down to.\r\rIt allows you to prevent a parent from scaling this Game Object lower than the given value.\r\rSet it to `null` to remove the limit.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleMin"}],"name":"scaleMin","longname":"Phaser.Button#scaleMin","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#scaleMin","inherited":true,"___s":true},{"meta":{"range":[1350,1364],"filename":"ScaleMinMax.js","lineno":46,"path":"src\\gameobjects\\components"},"description":"The maximum scale this Game Object will scale up to. \r\rIt allows you to prevent a parent from scaling this Game Object higher than the given value.\r\rSet it to `null` to remove the limit.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleMax"}],"name":"scaleMax","longname":"Phaser.Button#scaleMax","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#scaleMax","inherited":true,"___s":true},{"meta":{"range":[3832,5155],"filename":"ScaleMinMax.js","lineno":110,"path":"src\\gameobjects\\components"},"description":"Sets the scaleMin and scaleMax values. These values are used to limit how far this Game Object will scale based on its parent.\r\rFor example if this Game Object has a `minScale` value of 1 and its parent has a `scale` value of 0.5, the 0.5 will be ignored \rand the scale value of 1 will be used, as the parents scale is lower than the minimum scale this Game Object should adhere to.\r\rBy setting these values you can carefully control how Game Objects deal with responsive scaling.\r\rIf only one parameter is given then that value will be used for both scaleMin and scaleMax:\r`setScaleMinMax(1)` = scaleMin.x, scaleMin.y, scaleMax.x and scaleMax.y all = 1\r\rIf only two parameters are given the first is set as scaleMin.x and y and the second as scaleMax.x and y:\r`setScaleMinMax(0.5, 2)` = scaleMin.x and y = 0.5 and scaleMax.x and y = 2\r\rIf you wish to set `scaleMin` with different values for x and y then either modify Game Object.scaleMin directly, \ror pass `null` for the `maxX` and `maxY` parameters.\r\rCall `setScaleMinMax(null)` to clear all previously set values.","kind":"function","params":[{"type":{"names":["number","null"]},"description":"The minimum horizontal scale value this Game Object can scale down to.","name":"minX"},{"type":{"names":["number","null"]},"description":"The minimum vertical scale value this Game Object can scale down to.","name":"minY"},{"type":{"names":["number","null"]},"description":"The maximum horizontal scale value this Game Object can scale up to.","name":"maxX"},{"type":{"names":["number","null"]},"description":"The maximum vertical scale value this Game Object can scale up to.","name":"maxY"}],"name":"setScaleMinMax","longname":"Phaser.Button#setScaleMinMax","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#setScaleMinMax","inherited":true,"___s":true},{"meta":{"range":[680,1221],"filename":"Smoothed.js","lineno":25,"path":"src\\gameobjects\\components"},"description":"Enable or disable texture smoothing for this Game Object.\r\rIt only takes effect if the Game Object is using an image based texture.\r\rSmoothing is enabled by default.","properties":[{"type":{"names":["boolean"]},"name":"smoothed"}],"name":"smoothed","longname":"Phaser.Button#smoothed","kind":"member","memberof":"Phaser.Button","scope":"instance","inherits":"Phaser.Component.Smoothed#smoothed","inherited":true,"___s":true},{"meta":{"range":[580,598],"filename":"DisplayObjectContainer.js","lineno":24,"path":"src\\pixi\\display"},"description":"[read-only] The array of children of this container.","properties":[{"name":"children"}],"type":{"names":["Array(DisplayObject)"]},"readonly":true,"name":"children","longname":"Phaser.Creature#children","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"PIXI.DisplayObjectContainer#children","inherited":true,"___s":true},{"meta":{"range":[1045,1074],"filename":"DisplayObjectContainer.js","lineno":35,"path":"src\\pixi\\display"},"description":"If `ignoreChildInput`  is `false` it will allow this objects _children_ to be considered as valid for Input events.\r\rIf this property is `true` then the children will _not_ be considered as valid for Input events.\r\rNote that this property isn't recursive: only immediate children are influenced, it doesn't scan further down.","properties":[{"type":{"names":["boolean"]},"name":"ignoreChildInput"}],"defaultvalue":false,"name":"ignoreChildInput","longname":"Phaser.Creature#ignoreChildInput","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"PIXI.DisplayObjectContainer#ignoreChildInput","inherited":true,"___s":true},{"meta":{"range":[3048,3058],"filename":"Core.js","lineno":142,"path":"src\\gameobjects\\components"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"name":"game","longname":"Phaser.Creature#game","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Core#game","inherited":true,"___s":true},{"meta":{"range":[3279,3287],"filename":"Core.js","lineno":150,"path":"src\\gameobjects\\components"},"description":"A user defined name given to this Game Object.\rThis value isn't ever used internally by Phaser, it is meant as a game level property.","properties":[{"type":{"names":["string"]},"name":"name"}],"defaultvalue":"","name":"name","longname":"Phaser.Creature#name","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Core#name","inherited":true,"___s":true},{"meta":{"range":[3651,3659],"filename":"Core.js","lineno":160,"path":"src\\gameobjects\\components"},"description":"An empty Object that belongs to this Game Object.\rThis value isn't ever used internally by Phaser, but may be used by your own code, or\rby Phaser Plugins, to store data that needs to be associated with the Game Object,\rwithout polluting the Game Object directly.","properties":[{"type":{"names":["Object"]},"name":"data"}],"defaultvalue":"{}","defaultvaluetype":"object","name":"data","longname":"Phaser.Creature#data","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Core#data","inherited":true,"___s":true},{"meta":{"range":[3794,3808],"filename":"Core.js","lineno":167,"path":"src\\gameobjects\\components"},"description":"The components this Game Object has installed.","properties":[{"type":{"names":["object"]},"name":"components"}],"access":"protected","name":"components","longname":"Phaser.Creature#components","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Core#components","inherited":true,"___s":true},{"meta":{"range":[4202,4206],"filename":"Core.js","lineno":177,"path":"src\\gameobjects\\components"},"description":"The z depth of this Game Object within its parent Group.\rNo two objects in a Group can have the same z value.\rThis value is adjusted automatically whenever the Group hierarchy changes.\rIf you wish to re-order the layering of a Game Object then see methods like Group.moveUp or Group.bringToTop.","properties":[{"type":{"names":["number"]},"name":"z"}],"readonly":true,"name":"z","longname":"Phaser.Creature#z","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Core#z","inherited":true,"___s":true},{"meta":{"range":[4484,4501],"filename":"Core.js","lineno":185,"path":"src\\gameobjects\\components"},"description":"All Phaser Game Objects have an Events class which contains all of the events that are dispatched when certain things happen to this\rGame Object, or any of its components.","see":["Phaser.Events"],"properties":[{"type":{"names":["Phaser.Events"]},"name":"events"}],"name":"events","longname":"Phaser.Creature#events","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Core#events","inherited":true,"___s":true},{"meta":{"range":[4815,4836],"filename":"Core.js","lineno":193,"path":"src\\gameobjects\\components"},"description":"If the Game Object is enabled for animation (such as a Phaser.Sprite) this is a reference to its AnimationManager instance.\rThrough it you can create, play, pause and stop animations.","see":["Phaser.AnimationManager"],"properties":[{"type":{"names":["Phaser.AnimationManager"]},"name":"animations"}],"name":"animations","longname":"Phaser.Creature#animations","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Core#animations","inherited":true,"___s":true},{"meta":{"range":[5559,5566],"filename":"Core.js","lineno":203,"path":"src\\gameobjects\\components"},"description":"The key of the image or texture used by this Game Object during rendering.\rIf it is a string it's the string used to retrieve the texture from the Phaser Image Cache.\rIt can also be an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.\rIf a Game Object is created without a key it is automatically assigned the key `__default` which is a 32x32 transparent PNG stored within the Cache.\rIf a Game Object is given a key which doesn't exist in the Image Cache it is re-assigned the key `__missing` which is a 32x32 PNG of a green box with a line through it.","properties":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"name":"key"}],"name":"key","longname":"Phaser.Creature#key","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Core#key","inherited":true,"___s":true},{"meta":{"range":[5882,5893],"filename":"Core.js","lineno":211,"path":"src\\gameobjects\\components"},"description":"The world coordinates of this Game Object in pixels.\rDepending on where in the display list this Game Object is placed this value can differ from `position`, \rwhich contains the x/y coordinates relative to the Game Objects parent.","properties":[{"type":{"names":["Phaser.Point"]},"name":"world"}],"name":"world","longname":"Phaser.Creature#world","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Core#world","inherited":true,"___s":true},{"meta":{"range":[6029,6041],"filename":"Core.js","lineno":218,"path":"src\\gameobjects\\components"},"description":"A debug flag designed for use with `Game.enableStep`.","properties":[{"type":{"names":["boolean"]},"name":"debug"}],"defaultvalue":false,"name":"debug","longname":"Phaser.Creature#debug","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Core#debug","inherited":true,"___s":true},{"meta":{"range":[6204,6226],"filename":"Core.js","lineno":225,"path":"src\\gameobjects\\components"},"description":"The position the Game Object was located in the previous frame.","properties":[{"type":{"names":["Phaser.Point"]},"name":"previousPosition"}],"readonly":true,"name":"previousPosition","longname":"Phaser.Creature#previousPosition","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Core#previousPosition","inherited":true,"___s":true},{"meta":{"range":[6406,6425],"filename":"Core.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"The rotation the Game Object was in set to in the previous frame. Value is in radians.","properties":[{"type":{"names":["number"]},"name":"previousRotation"}],"readonly":true,"name":"previousRotation","longname":"Phaser.Creature#previousRotation","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Core#previousRotation","inherited":true,"___s":true},{"meta":{"range":[6720,6736],"filename":"Core.js","lineno":240,"path":"src\\gameobjects\\components"},"description":"The render order ID is used internally by the renderer and Input Manager and should not be modified.\rThis property is mostly used internally by the renderers, but is exposed for the use of plugins.","properties":[{"type":{"names":["number"]},"name":"renderOrderID"}],"readonly":true,"name":"renderOrderID","longname":"Phaser.Creature#renderOrderID","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Core#renderOrderID","inherited":true,"___s":true},{"meta":{"range":[7053,7064],"filename":"Core.js","lineno":248,"path":"src\\gameobjects\\components"},"description":"A Game Object is considered `fresh` if it has just been created or reset and is yet to receive a renderer transform update.\rThis property is mostly used internally by the physics systems, but is exposed for the use of plugins.","properties":[{"type":{"names":["boolean"]},"name":"fresh"}],"readonly":true,"name":"fresh","longname":"Phaser.Creature#fresh","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Core#fresh","inherited":true,"___s":true},{"meta":{"range":[7518,7539],"filename":"Core.js","lineno":259,"path":"src\\gameobjects\\components"},"description":"A Game Object is that is pendingDestroy is flagged to have its destroy method called on the next logic update.\rYou can set it directly to allow you to flag an object to be destroyed on its next update.\r\rThis is extremely useful if you wish to destroy an object from within one of its own callbacks \rsuch as with Buttons or other Input events.","properties":[{"type":{"names":["boolean"]},"name":"pendingDestroy"}],"name":"pendingDestroy","longname":"Phaser.Creature#pendingDestroy","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Core#pendingDestroy","inherited":true,"___s":true},{"meta":{"range":[8354,9085],"filename":"Core.js","lineno":284,"path":"src\\gameobjects\\components"},"description":"Controls if this Game Object is processed by the core game loop.\rIf this Game Object has a physics body it also controls if its physics body is updated or not.\rWhen `exists` is set to `false` it will remove its physics body from the physics world if it has one.\rIt also toggles the `visible` property to false as well.\r\rSetting `exists` to true will add its physics body back in to the physics world, if it has one.\rIt will also set the `visible` property to `true`.","properties":[{"type":{"names":["boolean"]},"name":"exists"}],"name":"exists","longname":"Phaser.Creature#exists","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Core#exists","inherited":true,"___s":true},{"meta":{"range":[9388,9417],"filename":"Core.js","lineno":328,"path":"src\\gameobjects\\components"},"description":"Override this method in your own custom objects to handle any update requirements.\rIt is called immediately after `preUpdate` and before `postUpdate`.\rRemember if this Game Object has any children you should call update on those too.","kind":"function","name":"update","longname":"Phaser.Creature#update","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Core#update","inherited":true,"___s":true},{"meta":{"range":[9544,10055],"filename":"Core.js","lineno":338,"path":"src\\gameobjects\\components"},"description":"Internal method called by the World postUpdate cycle.","kind":"function","access":"protected","name":"postUpdate","longname":"Phaser.Creature#postUpdate","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Core#postUpdate","inherited":true,"___s":true},{"meta":{"range":[1110,1382],"filename":"Angle.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"The angle property is the rotation of the Game Object in *degrees* from its original orientation.\r\rValues from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\r\rValues outside this range are added to or subtracted from 360 to obtain a value within the range. \rFor example, the statement player.angle = 450 is the same as player.angle = 90.\r\rIf you wish to work in radians instead of degrees you can use the property `rotation` instead. \rWorking in radians is slightly faster as it doesn't have to perform any calculations.","properties":[{"type":{"names":["number"]},"name":"angle"}],"name":"angle","longname":"Phaser.Creature#angle","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Angle#angle","inherited":true,"___s":true},{"meta":{"range":[1129,1144],"filename":"AutoCull.js","lineno":28,"path":"src\\gameobjects\\components"},"description":"A Game Object with `autoCull` set to true will check its bounds against the World Camera every frame.\rIf it is not intersecting the Camera bounds at any point then it has its `renderable` property set to `false`.\rThis keeps the Game Object alive and still processing updates, but forces it to skip the render step entirely.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"autoCull"}],"defaultvalue":false,"name":"autoCull","longname":"Phaser.Creature#autoCull","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.AutoCull#autoCull","inherited":true,"___s":true},{"meta":{"range":[1402,1809],"filename":"AutoCull.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds intersect with the Game Camera bounds.\rReturns `true` if they do, otherwise `false` if fully outside of the Cameras bounds.","properties":[{"type":{"names":["boolean"]},"name":"inCamera"}],"readonly":true,"name":"inCamera","longname":"Phaser.Creature#inCamera","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.AutoCull#inCamera","inherited":true,"___s":true},{"meta":{"range":[784,949],"filename":"BringToTop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"Brings this Game Object to the top of its parents display list.\rVisually this means it will render over the top of any old child in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will bring it to the top of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"bringToTop","longname":"Phaser.Creature#bringToTop","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.BringToTop#bringToTop","inherited":true,"___s":true},{"meta":{"range":[1378,1543],"filename":"BringToTop.js","lineno":45,"path":"src\\gameobjects\\components"},"description":"Sends this Game Object to the bottom of its parents display list.\rVisually this means it will render below all other children in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will send it to the bottom of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"sendToBack","longname":"Phaser.Creature#sendToBack","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.BringToTop#sendToBack","inherited":true,"___s":true},{"meta":{"range":[1982,2140],"filename":"BringToTop.js","lineno":66,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object up one place in its parents display list.\rThis call has no effect if the Game Object is already at the top of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object up within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveUp","longname":"Phaser.Creature#moveUp","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.BringToTop#moveUp","inherited":true,"___s":true},{"meta":{"range":[2586,2748],"filename":"BringToTop.js","lineno":87,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object down one place in its parents display list.\rThis call has no effect if the Game Object is already at the bottom of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object down within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveDown","longname":"Phaser.Creature#moveDown","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.BringToTop#moveDown","inherited":true,"___s":true},{"meta":{"range":[629,648],"filename":"Destroy.js","lineno":22,"path":"src\\gameobjects\\components"},"description":"As a Game Object runs through its destroy method this flag is set to true, \rand can be checked in any sub-systems or plugins it is being destroyed from.","properties":[{"type":{"names":["boolean"]},"name":"destroyPhase"}],"readonly":true,"name":"destroyPhase","longname":"Phaser.Creature#destroyPhase","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Destroy#destroyPhase","inherited":true,"___s":true},{"meta":{"range":[1497,4401],"filename":"Destroy.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Destroys the Game Object. This removes it from its parent group, destroys the input, event and animation handlers if present\rand nulls its reference to `game`, freeing it up for garbage collection.\r\rIf this Game Object has the Events component it will also dispatch the `onDestroy` event.\r\rYou can optionally also destroy the BaseTexture this Game Object is using. Be careful if you've\rmore than one Game Object sharing the same BaseTexture.","kind":"function","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should every child of this object have its destroy method called as well?","name":"destroyChildren"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Destroy the BaseTexture this Game Object is using? Note that if another Game Object is sharing the same BaseTexture it will invalidate it.","name":"destroyTexture"}],"name":"destroy","longname":"Phaser.Creature#destroy","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Destroy#destroy","inherited":true,"___s":true},{"meta":{"range":[2104,2515],"filename":"FixedToCamera.js","lineno":56,"path":"src\\gameobjects\\components"},"description":"A Game Object that is \"fixed\" to the camera uses its x/y coordinates as offsets from the top left of the camera during rendering.\r\rThe values are adjusted at the rendering stage, overriding the Game Objects actual world position.\r\rThe end result is that the Game Object will appear to be 'fixed' to the camera, regardless of where in the game world\rthe camera is viewing. This is useful if for example this Game Object is a UI item that you wish to be visible at all times \rregardless where in the world the camera is.\r\rThe offsets are stored in the `cameraOffset` property.\r\rNote that the `cameraOffset` values are in addition to any parent of this Game Object on the display list.\r\rBe careful not to set `fixedToCamera` on Game Objects which are in Groups that already have `fixedToCamera` enabled on them.","properties":[{"type":{"names":["boolean"]},"name":"fixedToCamera"}],"name":"fixedToCamera","longname":"Phaser.Creature#fixedToCamera","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.FixedToCamera#fixedToCamera","inherited":true,"___s":true},{"meta":{"range":[2868,2900],"filename":"FixedToCamera.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"The x/y coordinate offset applied to the top-left of the camera that this Game Object will be drawn at if `fixedToCamera` is true.\r\rThe values are relative to the top-left of the camera view and in addition to any parent of the Game Object on the display list.","properties":[{"type":{"names":["Phaser.Point"]},"name":"cameraOffset"}],"name":"cameraOffset","longname":"Phaser.Creature#cameraOffset","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.FixedToCamera#cameraOffset","inherited":true,"___s":true},{"meta":{"range":[1310,1321],"filename":"LifeSpan.js","lineno":50,"path":"src\\gameobjects\\components"},"description":"A useful flag to control if the Game Object is alive or dead.\r\rThis is set automatically by the Health components `damage` method should the object run out of health.\rOr you can toggle it via your game code.\r\rThis property is mostly just provided to be used by your game - it doesn't effect rendering or logic updates.\rHowever you can use `Group.getFirstAlive` in conjunction with this property for fast object pooling and recycling.","properties":[{"type":{"names":["boolean"]},"name":"alive"}],"defaultvalue":true,"name":"alive","longname":"Phaser.Creature#alive","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.LifeSpan#alive","inherited":true,"___s":true},{"meta":{"range":[1843,1854],"filename":"LifeSpan.js","lineno":65,"path":"src\\gameobjects\\components"},"description":"The lifespan allows you to give a Game Object a lifespan in milliseconds.\r\rOnce the Game Object is 'born' you can set this to a positive value.\r\rIt is automatically decremented by the millisecond equivalent of `game.time.physicsElapsed` each frame.\rWhen it reaches zero it will call the `kill` method.\r\rVery handy for particles, bullets, collectibles, or any other short-lived entity.","properties":[{"type":{"names":["number"]},"name":"lifespan"}],"defaultvalue":0,"name":"lifespan","longname":"Phaser.Creature#lifespan","kind":"member","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.LifeSpan#lifespan","inherited":true,"___s":true},{"meta":{"range":[2390,2807],"filename":"LifeSpan.js","lineno":78,"path":"src\\gameobjects\\components"},"description":"Brings a 'dead' Game Object back to life, optionally resetting its health value in the process.\r\rA resurrected Game Object has its `alive`, `exists` and `visible` properties all set to true.\r\rIt will dispatch the `onRevived` event. Listen to `events.onRevived` for the signal.","kind":"function","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"The health to give the Game Object. Only set if the GameObject has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"revive","longname":"Phaser.Creature#revive","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.LifeSpan#revive","inherited":true,"___s":true},{"meta":{"range":[3390,3634],"filename":"LifeSpan.js","lineno":113,"path":"src\\gameobjects\\components"},"description":"Kills a Game Object. A killed Game Object has its `alive`, `exists` and `visible` properties all set to false.\r\rIt will dispatch the `onKilled` event. You can listen to `events.onKilled` for the signal.\r\rNote that killing a Game Object is a way for you to quickly recycle it in an object pool,\rit doesn't destroy the object or free it up from memory.\r\rIf you don't need this Game Object any more you should call `destroy` instead.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"kill","longname":"Phaser.Creature#kill","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.LifeSpan#kill","inherited":true,"___s":true},{"meta":{"range":[1061,1717],"filename":"Reset.js","lineno":30,"path":"src\\gameobjects\\components"},"description":"Resets the Game Object.\r\rThis moves the Game Object to the given x/y world coordinates and sets `fresh`, `exists`, \r`visible` and `renderable` to true.\r\rIf this Game Object has the LifeSpan component it will also set `alive` to true and `health` to the given value.\r\rIf this Game Object has a Physics Body it will reset the Body.","kind":"function","params":[{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the Game Object at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the Game Object at.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The health to give the Game Object if it has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"reset","longname":"Phaser.Creature#reset","memberof":"Phaser.Creature","scope":"instance","inherits":"Phaser.Component.Reset#reset","inherited":true,"___s":true},{"meta":{"range":[3048,3058],"filename":"Core.js","lineno":142,"path":"src\\gameobjects\\components"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"name":"game","longname":"Phaser.Graphics#game","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Core#game","inherited":true,"___s":true},{"meta":{"range":[3279,3287],"filename":"Core.js","lineno":150,"path":"src\\gameobjects\\components"},"description":"A user defined name given to this Game Object.\rThis value isn't ever used internally by Phaser, it is meant as a game level property.","properties":[{"type":{"names":["string"]},"name":"name"}],"defaultvalue":"","name":"name","longname":"Phaser.Graphics#name","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Core#name","inherited":true,"___s":true},{"meta":{"range":[3651,3659],"filename":"Core.js","lineno":160,"path":"src\\gameobjects\\components"},"description":"An empty Object that belongs to this Game Object.\rThis value isn't ever used internally by Phaser, but may be used by your own code, or\rby Phaser Plugins, to store data that needs to be associated with the Game Object,\rwithout polluting the Game Object directly.","properties":[{"type":{"names":["Object"]},"name":"data"}],"defaultvalue":"{}","defaultvaluetype":"object","name":"data","longname":"Phaser.Graphics#data","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Core#data","inherited":true,"___s":true},{"meta":{"range":[3794,3808],"filename":"Core.js","lineno":167,"path":"src\\gameobjects\\components"},"description":"The components this Game Object has installed.","properties":[{"type":{"names":["object"]},"name":"components"}],"access":"protected","name":"components","longname":"Phaser.Graphics#components","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Core#components","inherited":true,"___s":true},{"meta":{"range":[4202,4206],"filename":"Core.js","lineno":177,"path":"src\\gameobjects\\components"},"description":"The z depth of this Game Object within its parent Group.\rNo two objects in a Group can have the same z value.\rThis value is adjusted automatically whenever the Group hierarchy changes.\rIf you wish to re-order the layering of a Game Object then see methods like Group.moveUp or Group.bringToTop.","properties":[{"type":{"names":["number"]},"name":"z"}],"readonly":true,"name":"z","longname":"Phaser.Graphics#z","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Core#z","inherited":true,"___s":true},{"meta":{"range":[4484,4501],"filename":"Core.js","lineno":185,"path":"src\\gameobjects\\components"},"description":"All Phaser Game Objects have an Events class which contains all of the events that are dispatched when certain things happen to this\rGame Object, or any of its components.","see":["Phaser.Events"],"properties":[{"type":{"names":["Phaser.Events"]},"name":"events"}],"name":"events","longname":"Phaser.Graphics#events","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Core#events","inherited":true,"___s":true},{"meta":{"range":[4815,4836],"filename":"Core.js","lineno":193,"path":"src\\gameobjects\\components"},"description":"If the Game Object is enabled for animation (such as a Phaser.Sprite) this is a reference to its AnimationManager instance.\rThrough it you can create, play, pause and stop animations.","see":["Phaser.AnimationManager"],"properties":[{"type":{"names":["Phaser.AnimationManager"]},"name":"animations"}],"name":"animations","longname":"Phaser.Graphics#animations","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Core#animations","inherited":true,"___s":true},{"meta":{"range":[5559,5566],"filename":"Core.js","lineno":203,"path":"src\\gameobjects\\components"},"description":"The key of the image or texture used by this Game Object during rendering.\rIf it is a string it's the string used to retrieve the texture from the Phaser Image Cache.\rIt can also be an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.\rIf a Game Object is created without a key it is automatically assigned the key `__default` which is a 32x32 transparent PNG stored within the Cache.\rIf a Game Object is given a key which doesn't exist in the Image Cache it is re-assigned the key `__missing` which is a 32x32 PNG of a green box with a line through it.","properties":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"name":"key"}],"name":"key","longname":"Phaser.Graphics#key","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Core#key","inherited":true,"___s":true},{"meta":{"range":[5882,5893],"filename":"Core.js","lineno":211,"path":"src\\gameobjects\\components"},"description":"The world coordinates of this Game Object in pixels.\rDepending on where in the display list this Game Object is placed this value can differ from `position`, \rwhich contains the x/y coordinates relative to the Game Objects parent.","properties":[{"type":{"names":["Phaser.Point"]},"name":"world"}],"name":"world","longname":"Phaser.Graphics#world","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Core#world","inherited":true,"___s":true},{"meta":{"range":[6029,6041],"filename":"Core.js","lineno":218,"path":"src\\gameobjects\\components"},"description":"A debug flag designed for use with `Game.enableStep`.","properties":[{"type":{"names":["boolean"]},"name":"debug"}],"defaultvalue":false,"name":"debug","longname":"Phaser.Graphics#debug","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Core#debug","inherited":true,"___s":true},{"meta":{"range":[6204,6226],"filename":"Core.js","lineno":225,"path":"src\\gameobjects\\components"},"description":"The position the Game Object was located in the previous frame.","properties":[{"type":{"names":["Phaser.Point"]},"name":"previousPosition"}],"readonly":true,"name":"previousPosition","longname":"Phaser.Graphics#previousPosition","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Core#previousPosition","inherited":true,"___s":true},{"meta":{"range":[6406,6425],"filename":"Core.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"The rotation the Game Object was in set to in the previous frame. Value is in radians.","properties":[{"type":{"names":["number"]},"name":"previousRotation"}],"readonly":true,"name":"previousRotation","longname":"Phaser.Graphics#previousRotation","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Core#previousRotation","inherited":true,"___s":true},{"meta":{"range":[6720,6736],"filename":"Core.js","lineno":240,"path":"src\\gameobjects\\components"},"description":"The render order ID is used internally by the renderer and Input Manager and should not be modified.\rThis property is mostly used internally by the renderers, but is exposed for the use of plugins.","properties":[{"type":{"names":["number"]},"name":"renderOrderID"}],"readonly":true,"name":"renderOrderID","longname":"Phaser.Graphics#renderOrderID","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Core#renderOrderID","inherited":true,"___s":true},{"meta":{"range":[7053,7064],"filename":"Core.js","lineno":248,"path":"src\\gameobjects\\components"},"description":"A Game Object is considered `fresh` if it has just been created or reset and is yet to receive a renderer transform update.\rThis property is mostly used internally by the physics systems, but is exposed for the use of plugins.","properties":[{"type":{"names":["boolean"]},"name":"fresh"}],"readonly":true,"name":"fresh","longname":"Phaser.Graphics#fresh","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Core#fresh","inherited":true,"___s":true},{"meta":{"range":[7518,7539],"filename":"Core.js","lineno":259,"path":"src\\gameobjects\\components"},"description":"A Game Object is that is pendingDestroy is flagged to have its destroy method called on the next logic update.\rYou can set it directly to allow you to flag an object to be destroyed on its next update.\r\rThis is extremely useful if you wish to destroy an object from within one of its own callbacks \rsuch as with Buttons or other Input events.","properties":[{"type":{"names":["boolean"]},"name":"pendingDestroy"}],"name":"pendingDestroy","longname":"Phaser.Graphics#pendingDestroy","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Core#pendingDestroy","inherited":true,"___s":true},{"meta":{"range":[8354,9085],"filename":"Core.js","lineno":284,"path":"src\\gameobjects\\components"},"description":"Controls if this Game Object is processed by the core game loop.\rIf this Game Object has a physics body it also controls if its physics body is updated or not.\rWhen `exists` is set to `false` it will remove its physics body from the physics world if it has one.\rIt also toggles the `visible` property to false as well.\r\rSetting `exists` to true will add its physics body back in to the physics world, if it has one.\rIt will also set the `visible` property to `true`.","properties":[{"type":{"names":["boolean"]},"name":"exists"}],"name":"exists","longname":"Phaser.Graphics#exists","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Core#exists","inherited":true,"___s":true},{"meta":{"range":[9388,9417],"filename":"Core.js","lineno":328,"path":"src\\gameobjects\\components"},"description":"Override this method in your own custom objects to handle any update requirements.\rIt is called immediately after `preUpdate` and before `postUpdate`.\rRemember if this Game Object has any children you should call update on those too.","kind":"function","name":"update","longname":"Phaser.Graphics#update","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Core#update","inherited":true,"___s":true},{"meta":{"range":[1110,1382],"filename":"Angle.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"The angle property is the rotation of the Game Object in *degrees* from its original orientation.\r\rValues from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\r\rValues outside this range are added to or subtracted from 360 to obtain a value within the range. \rFor example, the statement player.angle = 450 is the same as player.angle = 90.\r\rIf you wish to work in radians instead of degrees you can use the property `rotation` instead. \rWorking in radians is slightly faster as it doesn't have to perform any calculations.","properties":[{"type":{"names":["number"]},"name":"angle"}],"name":"angle","longname":"Phaser.Graphics#angle","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Angle#angle","inherited":true,"___s":true},{"meta":{"range":[1129,1144],"filename":"AutoCull.js","lineno":28,"path":"src\\gameobjects\\components"},"description":"A Game Object with `autoCull` set to true will check its bounds against the World Camera every frame.\rIf it is not intersecting the Camera bounds at any point then it has its `renderable` property set to `false`.\rThis keeps the Game Object alive and still processing updates, but forces it to skip the render step entirely.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"autoCull"}],"defaultvalue":false,"name":"autoCull","longname":"Phaser.Graphics#autoCull","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.AutoCull#autoCull","inherited":true,"___s":true},{"meta":{"range":[1402,1809],"filename":"AutoCull.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds intersect with the Game Camera bounds.\rReturns `true` if they do, otherwise `false` if fully outside of the Cameras bounds.","properties":[{"type":{"names":["boolean"]},"name":"inCamera"}],"readonly":true,"name":"inCamera","longname":"Phaser.Graphics#inCamera","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.AutoCull#inCamera","inherited":true,"___s":true},{"meta":{"range":[661,773],"filename":"Bounds.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its x coordinate.\rThis is the same as `width * anchor.x`.\rIt will only be > 0 if anchor.x is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetX"}],"readonly":true,"name":"offsetX","longname":"Phaser.Graphics#offsetX","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Bounds#offsetX","inherited":true,"___s":true},{"meta":{"range":[1042,1155],"filename":"Bounds.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its y coordinate.\rThis is the same as `height * anchor.y`.\rIt will only be > 0 if anchor.y is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetY"}],"readonly":true,"name":"offsetY","longname":"Phaser.Graphics#offsetY","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Bounds#offsetY","inherited":true,"___s":true},{"meta":{"range":[1331,1579],"filename":"Bounds.js","lineno":58,"path":"src\\gameobjects\\components"},"description":"The center x coordinate of the Game Object.\rThis is the same as `(x - offsetX) + (width / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerX"}],"name":"centerX","longname":"Phaser.Graphics#centerX","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Bounds#centerX","inherited":true,"___s":true},{"meta":{"range":[1756,2006],"filename":"Bounds.js","lineno":80,"path":"src\\gameobjects\\components"},"description":"The center y coordinate of the Game Object.\rThis is the same as `(y - offsetY) + (height / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerY"}],"name":"centerY","longname":"Phaser.Graphics#centerY","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Bounds#centerY","inherited":true,"___s":true},{"meta":{"range":[2159,2358],"filename":"Bounds.js","lineno":102,"path":"src\\gameobjects\\components"},"description":"The left coordinate of the Game Object.\rThis is the same as `x - offsetX`.","properties":[{"type":{"names":["number"]},"name":"left"}],"name":"left","longname":"Phaser.Graphics#left","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Bounds#left","inherited":true,"___s":true},{"meta":{"range":[2521,2751],"filename":"Bounds.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The right coordinate of the Game Object.\rThis is the same as `x + width - offsetX`.","properties":[{"type":{"names":["number"]},"name":"right"}],"name":"right","longname":"Phaser.Graphics#right","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Bounds#right","inherited":true,"___s":true},{"meta":{"range":[2900,3098],"filename":"Bounds.js","lineno":146,"path":"src\\gameobjects\\components"},"description":"The y coordinate of the Game Object.\rThis is the same as `y - offsetY`.","properties":[{"type":{"names":["number"]},"name":"top"}],"name":"top","longname":"Phaser.Graphics#top","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Bounds#top","inherited":true,"___s":true},{"meta":{"range":[3262,3495],"filename":"Bounds.js","lineno":168,"path":"src\\gameobjects\\components"},"description":"The sum of the y and height properties.\rThis is the same as `y + height - offsetY`.","properties":[{"type":{"names":["number"]},"name":"bottom"}],"name":"bottom","longname":"Phaser.Graphics#bottom","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Bounds#bottom","inherited":true,"___s":true},{"meta":{"range":[6346,8224],"filename":"Bounds.js","lineno":223,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object within another Game Object, or Rectangle, known as the\r'container', to one of 9 possible positions.\r\rThe container must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe container. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, \r`Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, \r`Phaser.BOTTOM_CENTER` and `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rcontainer, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignIn(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the containers bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the container bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"container"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignIn","longname":"Phaser.Graphics#alignIn","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Bounds#alignIn","inherited":true,"___s":true},{"meta":{"range":[11205,13527],"filename":"Bounds.js","lineno":321,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object to the side of another Game Object, or Rectangle, known as the\r'parent', in one of 11 possible positions.\r\rThe parent must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe parent. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, \r`Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, \r`Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` \rand `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rparent, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignTo(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the parents bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the parent bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"parent"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, `Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, `Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignTo","longname":"Phaser.Graphics#alignTo","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Bounds#alignTo","inherited":true,"___s":true},{"meta":{"range":[629,648],"filename":"Destroy.js","lineno":22,"path":"src\\gameobjects\\components"},"description":"As a Game Object runs through its destroy method this flag is set to true, \rand can be checked in any sub-systems or plugins it is being destroyed from.","properties":[{"type":{"names":["boolean"]},"name":"destroyPhase"}],"readonly":true,"name":"destroyPhase","longname":"Phaser.Graphics#destroyPhase","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Destroy#destroyPhase","inherited":true,"___s":true},{"meta":{"range":[2104,2515],"filename":"FixedToCamera.js","lineno":56,"path":"src\\gameobjects\\components"},"description":"A Game Object that is \"fixed\" to the camera uses its x/y coordinates as offsets from the top left of the camera during rendering.\r\rThe values are adjusted at the rendering stage, overriding the Game Objects actual world position.\r\rThe end result is that the Game Object will appear to be 'fixed' to the camera, regardless of where in the game world\rthe camera is viewing. This is useful if for example this Game Object is a UI item that you wish to be visible at all times \rregardless where in the world the camera is.\r\rThe offsets are stored in the `cameraOffset` property.\r\rNote that the `cameraOffset` values are in addition to any parent of this Game Object on the display list.\r\rBe careful not to set `fixedToCamera` on Game Objects which are in Groups that already have `fixedToCamera` enabled on them.","properties":[{"type":{"names":["boolean"]},"name":"fixedToCamera"}],"name":"fixedToCamera","longname":"Phaser.Graphics#fixedToCamera","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.FixedToCamera#fixedToCamera","inherited":true,"___s":true},{"meta":{"range":[2868,2900],"filename":"FixedToCamera.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"The x/y coordinate offset applied to the top-left of the camera that this Game Object will be drawn at if `fixedToCamera` is true.\r\rThe values are relative to the top-left of the camera view and in addition to any parent of the Game Object on the display list.","properties":[{"type":{"names":["Phaser.Point"]},"name":"cameraOffset"}],"name":"cameraOffset","longname":"Phaser.Graphics#cameraOffset","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.FixedToCamera#cameraOffset","inherited":true,"___s":true},{"meta":{"range":[805,816],"filename":"InputEnabled.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Input Handler for this Game Object.\r\rBy default it is disabled. If you wish this Game Object to process input events you should enable it with: `inputEnabled = true`.\r\rAfter you have done this, this property will be a reference to the Phaser InputHandler.","properties":[{"type":{"names":["Phaser.InputHandler","null"]},"name":"input"}],"name":"input","longname":"Phaser.Graphics#input","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.InputEnabled#input","inherited":true,"___s":true},{"meta":{"range":[1661,2398],"filename":"InputEnabled.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"By default a Game Object won't process any input events. By setting `inputEnabled` to true a Phaser.InputHandler is created\rfor this Game Object and it will then start to process click / touch events and more.\r\rYou can then access the Input Handler via `this.input`.\r\rNote that Input related events are dispatched from `this.events`, i.e.: `events.onInputDown`.\r\rIf you set this property to false it will stop the Input Handler from processing any more input events.\r\rIf you want to _temporarily_ disable input for a Game Object, then it's better to set\r`input.enabled = false`, as it won't reset any of the Input Handlers internal properties.\rYou can then toggle this back on as needed.","properties":[{"type":{"names":["boolean"]},"name":"inputEnabled"}],"name":"inputEnabled","longname":"Phaser.Graphics#inputEnabled","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.InputEnabled#inputEnabled","inherited":true,"___s":true},{"meta":{"range":[3394,3417],"filename":"InWorld.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"If this is set to `true` the Game Object checks if it is within the World bounds each frame. \r\rWhen it is no longer intersecting the world bounds it dispatches the `onOutOfBounds` event.\r\rIf it was *previously* out of bounds but is now intersecting the world bounds again it dispatches the `onEnterBounds` event.\r\rIt also optionally kills the Game Object if `outOfBoundsKill` is `true`.\r\rWhen `checkWorldBounds` is enabled it forces the Game Object to calculate its full bounds every frame.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"checkWorldBounds"}],"defaultvalue":false,"name":"checkWorldBounds","longname":"Phaser.Graphics#checkWorldBounds","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.InWorld#checkWorldBounds","inherited":true,"___s":true},{"meta":{"range":[3653,3675],"filename":"InWorld.js","lineno":106,"path":"src\\gameobjects\\components"},"description":"If this and the `checkWorldBounds` property are both set to `true` then the `kill` method is called as soon as `inWorld` returns false.","properties":[{"type":{"names":["boolean"]},"name":"outOfBoundsKill"}],"defaultvalue":false,"name":"outOfBoundsKill","longname":"Phaser.Graphics#outOfBoundsKill","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.InWorld#outOfBoundsKill","inherited":true,"___s":true},{"meta":{"range":[3939,3967],"filename":"InWorld.js","lineno":115,"path":"src\\gameobjects\\components"},"description":"If this and the `autoCull` property are both set to `true`, then the `kill` method\ris called as soon as the Game Object leaves the camera bounds.","properties":[{"type":{"names":["boolean"]},"name":"outOfCameraBoundsKill"}],"defaultvalue":false,"name":"outOfCameraBoundsKill","longname":"Phaser.Graphics#outOfCameraBoundsKill","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.InWorld#outOfCameraBoundsKill","inherited":true,"___s":true},{"meta":{"range":[4292,4429],"filename":"InWorld.js","lineno":129,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds are within, or intersect at any point with the Game World bounds.","properties":[{"type":{"names":["boolean"]},"name":"inWorld"}],"readonly":true,"name":"inWorld","longname":"Phaser.Graphics#inWorld","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.InWorld#inWorld","inherited":true,"___s":true},{"meta":{"range":[1310,1321],"filename":"LifeSpan.js","lineno":50,"path":"src\\gameobjects\\components"},"description":"A useful flag to control if the Game Object is alive or dead.\r\rThis is set automatically by the Health components `damage` method should the object run out of health.\rOr you can toggle it via your game code.\r\rThis property is mostly just provided to be used by your game - it doesn't effect rendering or logic updates.\rHowever you can use `Group.getFirstAlive` in conjunction with this property for fast object pooling and recycling.","properties":[{"type":{"names":["boolean"]},"name":"alive"}],"defaultvalue":true,"name":"alive","longname":"Phaser.Graphics#alive","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.LifeSpan#alive","inherited":true,"___s":true},{"meta":{"range":[1843,1854],"filename":"LifeSpan.js","lineno":65,"path":"src\\gameobjects\\components"},"description":"The lifespan allows you to give a Game Object a lifespan in milliseconds.\r\rOnce the Game Object is 'born' you can set this to a positive value.\r\rIt is automatically decremented by the millisecond equivalent of `game.time.physicsElapsed` each frame.\rWhen it reaches zero it will call the `kill` method.\r\rVery handy for particles, bullets, collectibles, or any other short-lived entity.","properties":[{"type":{"names":["number"]},"name":"lifespan"}],"defaultvalue":0,"name":"lifespan","longname":"Phaser.Graphics#lifespan","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.LifeSpan#lifespan","inherited":true,"___s":true},{"meta":{"range":[2390,2807],"filename":"LifeSpan.js","lineno":78,"path":"src\\gameobjects\\components"},"description":"Brings a 'dead' Game Object back to life, optionally resetting its health value in the process.\r\rA resurrected Game Object has its `alive`, `exists` and `visible` properties all set to true.\r\rIt will dispatch the `onRevived` event. Listen to `events.onRevived` for the signal.","kind":"function","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"The health to give the Game Object. Only set if the GameObject has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"revive","longname":"Phaser.Graphics#revive","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.LifeSpan#revive","inherited":true,"___s":true},{"meta":{"range":[3390,3634],"filename":"LifeSpan.js","lineno":113,"path":"src\\gameobjects\\components"},"description":"Kills a Game Object. A killed Game Object has its `alive`, `exists` and `visible` properties all set to false.\r\rIt will dispatch the `onKilled` event. You can listen to `events.onKilled` for the signal.\r\rNote that killing a Game Object is a way for you to quickly recycle it in an object pool,\rit doesn't destroy the object or free it up from memory.\r\rIf you don't need this Game Object any more you should call `destroy` instead.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"kill","longname":"Phaser.Graphics#kill","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.LifeSpan#kill","inherited":true,"___s":true},{"meta":{"range":[2899,2909],"filename":"PhysicsBody.js","lineno":91,"path":"src\\gameobjects\\components"},"description":"`body` is the Game Objects physics body. Once a Game Object is enabled for physics you access all associated \rproperties and methods via it.\r\rBy default Game Objects won't add themselves to any physics system and their `body` property will be `null`.\r\rTo enable this Game Object for physics you need to call `game.physics.enable(object, system)` where `object` is this object\rand `system` is the Physics system you are using. If none is given it defaults to `Phaser.Physics.Arcade`.\r\rYou can alternatively call `game.physics.arcade.enable(object)`, or add this Game Object to a physics enabled Group.\r\rImportant: Enabling a Game Object for P2 or Ninja physics will automatically set its `anchor` property to 0.5, \rso the physics body is centered on the Game Object.\r\rIf you need a different result then adjust or re-create the Body shape offsets manually or reset the anchor after enabling physics.","properties":[{"type":{"names":["Phaser.Physics.Arcade.Body","Phaser.Physics.P2.Body","Phaser.Physics.Ninja.Body","null"]},"name":"body"}],"defaultvalue":null,"name":"body","longname":"Phaser.Graphics#body","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.PhysicsBody#body","inherited":true,"___s":true},{"meta":{"range":[3072,3378],"filename":"PhysicsBody.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the x axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"x"}],"name":"x","longname":"Phaser.Graphics#x","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.PhysicsBody#x","inherited":true,"___s":true},{"meta":{"range":[3541,3847],"filename":"PhysicsBody.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the y axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"y"}],"name":"y","longname":"Phaser.Graphics#y","kind":"member","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.PhysicsBody#y","inherited":true,"___s":true},{"meta":{"range":[1061,1717],"filename":"Reset.js","lineno":30,"path":"src\\gameobjects\\components"},"description":"Resets the Game Object.\r\rThis moves the Game Object to the given x/y world coordinates and sets `fresh`, `exists`, \r`visible` and `renderable` to true.\r\rIf this Game Object has the LifeSpan component it will also set `alive` to true and `health` to the given value.\r\rIf this Game Object has a Physics Body it will reset the Body.","kind":"function","params":[{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the Game Object at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the Game Object at.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The health to give the Game Object if it has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"reset","longname":"Phaser.Graphics#reset","memberof":"Phaser.Graphics","scope":"instance","inherits":"Phaser.Component.Reset#reset","inherited":true,"___s":true},{"meta":{"range":[774,804],"filename":"Sprite.js","lineno":26,"path":"src\\pixi\\display"},"description":"The anchor sets the origin point of the texture.\rThe default is 0,0 this means the texture's origin is the top left\rSetting than anchor to 0.5,0.5 means the textures origin is centered\rSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner","properties":[{"name":"anchor"}],"type":{"names":["Point"]},"name":"anchor","longname":"Phaser.Sprite#anchor","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"PIXI.Sprite#anchor","inherited":true,"___s":true},{"meta":{"range":[932,983],"filename":"Sprite.js","lineno":34,"path":"src\\pixi\\display"},"description":"The texture that the sprite is using","properties":[{"name":"texture"}],"type":{"names":["Texture"]},"name":"texture","longname":"Phaser.Sprite#texture","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"PIXI.Sprite#texture","inherited":true,"___s":true},{"meta":{"range":[1569,1589],"filename":"Sprite.js","lineno":61,"path":"src\\pixi\\display"},"description":"The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.","properties":[{"name":"tint"}],"type":{"names":["Number"]},"defaultvalue":"0xFFFFFF","name":"tint","longname":"Phaser.Sprite#tint","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"PIXI.Sprite#tint","inherited":true,"___s":true},{"meta":{"range":[2061,2086],"filename":"Sprite.js","lineno":80,"path":"src\\pixi\\display"},"description":"A canvas that contains the tinted version of the Sprite (in Canvas mode, WebGL doesn't populate this)","properties":[{"name":"tintedTexture"}],"type":{"names":["Canvas"]},"defaultvalue":"null","name":"tintedTexture","longname":"Phaser.Sprite#tintedTexture","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"PIXI.Sprite#tintedTexture","inherited":true,"___s":true},{"meta":{"range":[2456,2495],"filename":"Sprite.js","lineno":91,"path":"src\\pixi\\display"},"description":"The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode.\r\rWarning: You cannot have a blend mode and a filter active on the same Sprite. Doing so will render the sprite invisible.","properties":[{"name":"blendMode"}],"type":{"names":["Number"]},"defaultvalue":"PIXI.blendModes.NORMAL;","name":"blendMode","longname":"Phaser.Sprite#blendMode","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"PIXI.Sprite#blendMode","inherited":true,"___s":true},{"meta":{"range":[2714,2732],"filename":"Sprite.js","lineno":101,"path":"src\\pixi\\display"},"description":"The shader that will be used to render this Sprite.\rSet to null to remove a current shader.","properties":[{"name":"shader"}],"type":{"names":["AbstractFilter"]},"defaultvalue":"null","name":"shader","longname":"Phaser.Sprite#shader","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"PIXI.Sprite#shader","inherited":true,"___s":true},{"meta":{"range":[2922,2940],"filename":"Sprite.js","lineno":110,"path":"src\\pixi\\display"},"description":"Controls if this Sprite is processed by the core Phaser game loops and Group loops.","properties":[{"name":"exists"}],"type":{"names":["Boolean"]},"defaultvalue":"true","name":"exists","longname":"Phaser.Sprite#exists","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"PIXI.Sprite#exists","inherited":true,"overrides":"Phaser.Component.Core#exists","___s":true},{"meta":{"range":[3048,3058],"filename":"Core.js","lineno":142,"path":"src\\gameobjects\\components"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"name":"game","longname":"Phaser.Sprite#game","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Core#game","inherited":true,"___s":true},{"meta":{"range":[3279,3287],"filename":"Core.js","lineno":150,"path":"src\\gameobjects\\components"},"description":"A user defined name given to this Game Object.\rThis value isn't ever used internally by Phaser, it is meant as a game level property.","properties":[{"type":{"names":["string"]},"name":"name"}],"defaultvalue":"","name":"name","longname":"Phaser.Sprite#name","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Core#name","inherited":true,"___s":true},{"meta":{"range":[3651,3659],"filename":"Core.js","lineno":160,"path":"src\\gameobjects\\components"},"description":"An empty Object that belongs to this Game Object.\rThis value isn't ever used internally by Phaser, but may be used by your own code, or\rby Phaser Plugins, to store data that needs to be associated with the Game Object,\rwithout polluting the Game Object directly.","properties":[{"type":{"names":["Object"]},"name":"data"}],"defaultvalue":"{}","defaultvaluetype":"object","name":"data","longname":"Phaser.Sprite#data","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Core#data","inherited":true,"___s":true},{"meta":{"range":[3794,3808],"filename":"Core.js","lineno":167,"path":"src\\gameobjects\\components"},"description":"The components this Game Object has installed.","properties":[{"type":{"names":["object"]},"name":"components"}],"access":"protected","name":"components","longname":"Phaser.Sprite#components","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Core#components","inherited":true,"___s":true},{"meta":{"range":[4202,4206],"filename":"Core.js","lineno":177,"path":"src\\gameobjects\\components"},"description":"The z depth of this Game Object within its parent Group.\rNo two objects in a Group can have the same z value.\rThis value is adjusted automatically whenever the Group hierarchy changes.\rIf you wish to re-order the layering of a Game Object then see methods like Group.moveUp or Group.bringToTop.","properties":[{"type":{"names":["number"]},"name":"z"}],"readonly":true,"name":"z","longname":"Phaser.Sprite#z","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Core#z","inherited":true,"___s":true},{"meta":{"range":[4484,4501],"filename":"Core.js","lineno":185,"path":"src\\gameobjects\\components"},"description":"All Phaser Game Objects have an Events class which contains all of the events that are dispatched when certain things happen to this\rGame Object, or any of its components.","see":["Phaser.Events"],"properties":[{"type":{"names":["Phaser.Events"]},"name":"events"}],"name":"events","longname":"Phaser.Sprite#events","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Core#events","inherited":true,"___s":true},{"meta":{"range":[4815,4836],"filename":"Core.js","lineno":193,"path":"src\\gameobjects\\components"},"description":"If the Game Object is enabled for animation (such as a Phaser.Sprite) this is a reference to its AnimationManager instance.\rThrough it you can create, play, pause and stop animations.","see":["Phaser.AnimationManager"],"properties":[{"type":{"names":["Phaser.AnimationManager"]},"name":"animations"}],"name":"animations","longname":"Phaser.Sprite#animations","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Core#animations","inherited":true,"___s":true},{"meta":{"range":[5559,5566],"filename":"Core.js","lineno":203,"path":"src\\gameobjects\\components"},"description":"The key of the image or texture used by this Game Object during rendering.\rIf it is a string it's the string used to retrieve the texture from the Phaser Image Cache.\rIt can also be an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.\rIf a Game Object is created without a key it is automatically assigned the key `__default` which is a 32x32 transparent PNG stored within the Cache.\rIf a Game Object is given a key which doesn't exist in the Image Cache it is re-assigned the key `__missing` which is a 32x32 PNG of a green box with a line through it.","properties":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"name":"key"}],"name":"key","longname":"Phaser.Sprite#key","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Core#key","inherited":true,"___s":true},{"meta":{"range":[5882,5893],"filename":"Core.js","lineno":211,"path":"src\\gameobjects\\components"},"description":"The world coordinates of this Game Object in pixels.\rDepending on where in the display list this Game Object is placed this value can differ from `position`, \rwhich contains the x/y coordinates relative to the Game Objects parent.","properties":[{"type":{"names":["Phaser.Point"]},"name":"world"}],"name":"world","longname":"Phaser.Sprite#world","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Core#world","inherited":true,"___s":true},{"meta":{"range":[6029,6041],"filename":"Core.js","lineno":218,"path":"src\\gameobjects\\components"},"description":"A debug flag designed for use with `Game.enableStep`.","properties":[{"type":{"names":["boolean"]},"name":"debug"}],"defaultvalue":false,"name":"debug","longname":"Phaser.Sprite#debug","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Core#debug","inherited":true,"___s":true},{"meta":{"range":[6204,6226],"filename":"Core.js","lineno":225,"path":"src\\gameobjects\\components"},"description":"The position the Game Object was located in the previous frame.","properties":[{"type":{"names":["Phaser.Point"]},"name":"previousPosition"}],"readonly":true,"name":"previousPosition","longname":"Phaser.Sprite#previousPosition","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Core#previousPosition","inherited":true,"___s":true},{"meta":{"range":[6406,6425],"filename":"Core.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"The rotation the Game Object was in set to in the previous frame. Value is in radians.","properties":[{"type":{"names":["number"]},"name":"previousRotation"}],"readonly":true,"name":"previousRotation","longname":"Phaser.Sprite#previousRotation","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Core#previousRotation","inherited":true,"___s":true},{"meta":{"range":[6720,6736],"filename":"Core.js","lineno":240,"path":"src\\gameobjects\\components"},"description":"The render order ID is used internally by the renderer and Input Manager and should not be modified.\rThis property is mostly used internally by the renderers, but is exposed for the use of plugins.","properties":[{"type":{"names":["number"]},"name":"renderOrderID"}],"readonly":true,"name":"renderOrderID","longname":"Phaser.Sprite#renderOrderID","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Core#renderOrderID","inherited":true,"___s":true},{"meta":{"range":[7053,7064],"filename":"Core.js","lineno":248,"path":"src\\gameobjects\\components"},"description":"A Game Object is considered `fresh` if it has just been created or reset and is yet to receive a renderer transform update.\rThis property is mostly used internally by the physics systems, but is exposed for the use of plugins.","properties":[{"type":{"names":["boolean"]},"name":"fresh"}],"readonly":true,"name":"fresh","longname":"Phaser.Sprite#fresh","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Core#fresh","inherited":true,"___s":true},{"meta":{"range":[7518,7539],"filename":"Core.js","lineno":259,"path":"src\\gameobjects\\components"},"description":"A Game Object is that is pendingDestroy is flagged to have its destroy method called on the next logic update.\rYou can set it directly to allow you to flag an object to be destroyed on its next update.\r\rThis is extremely useful if you wish to destroy an object from within one of its own callbacks \rsuch as with Buttons or other Input events.","properties":[{"type":{"names":["boolean"]},"name":"pendingDestroy"}],"name":"pendingDestroy","longname":"Phaser.Sprite#pendingDestroy","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Core#pendingDestroy","inherited":true,"___s":true},{"meta":{"range":[9388,9417],"filename":"Core.js","lineno":328,"path":"src\\gameobjects\\components"},"description":"Override this method in your own custom objects to handle any update requirements.\rIt is called immediately after `preUpdate` and before `postUpdate`.\rRemember if this Game Object has any children you should call update on those too.","kind":"function","name":"update","longname":"Phaser.Sprite#update","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Core#update","inherited":true,"___s":true},{"meta":{"range":[9544,10055],"filename":"Core.js","lineno":338,"path":"src\\gameobjects\\components"},"description":"Internal method called by the World postUpdate cycle.","kind":"function","access":"protected","name":"postUpdate","longname":"Phaser.Sprite#postUpdate","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Core#postUpdate","inherited":true,"___s":true},{"meta":{"range":[1110,1382],"filename":"Angle.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"The angle property is the rotation of the Game Object in *degrees* from its original orientation.\r\rValues from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\r\rValues outside this range are added to or subtracted from 360 to obtain a value within the range. \rFor example, the statement player.angle = 450 is the same as player.angle = 90.\r\rIf you wish to work in radians instead of degrees you can use the property `rotation` instead. \rWorking in radians is slightly faster as it doesn't have to perform any calculations.","properties":[{"type":{"names":["number"]},"name":"angle"}],"name":"angle","longname":"Phaser.Sprite#angle","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Angle#angle","inherited":true,"___s":true},{"meta":{"range":[1545,1745],"filename":"Animation.js","lineno":31,"path":"src\\gameobjects\\components"},"description":"Plays an Animation.\r\rThe animation should have previously been created via `animations.add`.\r\rIf the animation is already playing calling this again won't do anything.\rIf you need to reset an already running animation do so directly on the Animation object itself or via `AnimationManager.stop`.","kind":"function","params":[{"type":{"names":["string"]},"description":"The name of the animation to be played, e.g. \"fire\", \"walk\", \"jump\". Must have been previously created via 'AnimationManager.add'.","name":"name"},{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"The framerate to play the animation at. The speed is given in frames per second. If not provided the previously set frameRate of the Animation is used.","name":"frameRate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the animation be looped after playback. If not provided the previously set loop value of the Animation is used.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set to true when the animation completes (only happens if loop=false) the parent Sprite will be killed.","name":"killOnComplete"}],"returns":[{"type":{"names":["Phaser.Animation"]},"description":"A reference to playing Animation."}],"name":"play","longname":"Phaser.Sprite#play","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Animation#play","inherited":true,"___s":true},{"meta":{"range":[1129,1144],"filename":"AutoCull.js","lineno":28,"path":"src\\gameobjects\\components"},"description":"A Game Object with `autoCull` set to true will check its bounds against the World Camera every frame.\rIf it is not intersecting the Camera bounds at any point then it has its `renderable` property set to `false`.\rThis keeps the Game Object alive and still processing updates, but forces it to skip the render step entirely.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"autoCull"}],"defaultvalue":false,"name":"autoCull","longname":"Phaser.Sprite#autoCull","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.AutoCull#autoCull","inherited":true,"___s":true},{"meta":{"range":[1402,1809],"filename":"AutoCull.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds intersect with the Game Camera bounds.\rReturns `true` if they do, otherwise `false` if fully outside of the Cameras bounds.","properties":[{"type":{"names":["boolean"]},"name":"inCamera"}],"readonly":true,"name":"inCamera","longname":"Phaser.Sprite#inCamera","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.AutoCull#inCamera","inherited":true,"overrides":"Phaser.Component.InCamera#inCamera","___s":true},{"meta":{"range":[661,773],"filename":"Bounds.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its x coordinate.\rThis is the same as `width * anchor.x`.\rIt will only be > 0 if anchor.x is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetX"}],"readonly":true,"name":"offsetX","longname":"Phaser.Sprite#offsetX","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Bounds#offsetX","inherited":true,"___s":true},{"meta":{"range":[1042,1155],"filename":"Bounds.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its y coordinate.\rThis is the same as `height * anchor.y`.\rIt will only be > 0 if anchor.y is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetY"}],"readonly":true,"name":"offsetY","longname":"Phaser.Sprite#offsetY","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Bounds#offsetY","inherited":true,"___s":true},{"meta":{"range":[1331,1579],"filename":"Bounds.js","lineno":58,"path":"src\\gameobjects\\components"},"description":"The center x coordinate of the Game Object.\rThis is the same as `(x - offsetX) + (width / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerX"}],"name":"centerX","longname":"Phaser.Sprite#centerX","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Bounds#centerX","inherited":true,"___s":true},{"meta":{"range":[1756,2006],"filename":"Bounds.js","lineno":80,"path":"src\\gameobjects\\components"},"description":"The center y coordinate of the Game Object.\rThis is the same as `(y - offsetY) + (height / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerY"}],"name":"centerY","longname":"Phaser.Sprite#centerY","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Bounds#centerY","inherited":true,"___s":true},{"meta":{"range":[2159,2358],"filename":"Bounds.js","lineno":102,"path":"src\\gameobjects\\components"},"description":"The left coordinate of the Game Object.\rThis is the same as `x - offsetX`.","properties":[{"type":{"names":["number"]},"name":"left"}],"name":"left","longname":"Phaser.Sprite#left","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Bounds#left","inherited":true,"___s":true},{"meta":{"range":[2521,2751],"filename":"Bounds.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The right coordinate of the Game Object.\rThis is the same as `x + width - offsetX`.","properties":[{"type":{"names":["number"]},"name":"right"}],"name":"right","longname":"Phaser.Sprite#right","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Bounds#right","inherited":true,"___s":true},{"meta":{"range":[2900,3098],"filename":"Bounds.js","lineno":146,"path":"src\\gameobjects\\components"},"description":"The y coordinate of the Game Object.\rThis is the same as `y - offsetY`.","properties":[{"type":{"names":["number"]},"name":"top"}],"name":"top","longname":"Phaser.Sprite#top","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Bounds#top","inherited":true,"___s":true},{"meta":{"range":[3262,3495],"filename":"Bounds.js","lineno":168,"path":"src\\gameobjects\\components"},"description":"The sum of the y and height properties.\rThis is the same as `y + height - offsetY`.","properties":[{"type":{"names":["number"]},"name":"bottom"}],"name":"bottom","longname":"Phaser.Sprite#bottom","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Bounds#bottom","inherited":true,"___s":true},{"meta":{"range":[6346,8224],"filename":"Bounds.js","lineno":223,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object within another Game Object, or Rectangle, known as the\r'container', to one of 9 possible positions.\r\rThe container must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe container. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, \r`Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, \r`Phaser.BOTTOM_CENTER` and `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rcontainer, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignIn(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the containers bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the container bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"container"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignIn","longname":"Phaser.Sprite#alignIn","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Bounds#alignIn","inherited":true,"___s":true},{"meta":{"range":[11205,13527],"filename":"Bounds.js","lineno":321,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object to the side of another Game Object, or Rectangle, known as the\r'parent', in one of 11 possible positions.\r\rThe parent must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe parent. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, \r`Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, \r`Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` \rand `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rparent, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignTo(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the parents bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the parent bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"parent"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, `Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, `Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignTo","longname":"Phaser.Sprite#alignTo","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Bounds#alignTo","inherited":true,"___s":true},{"meta":{"range":[784,949],"filename":"BringToTop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"Brings this Game Object to the top of its parents display list.\rVisually this means it will render over the top of any old child in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will bring it to the top of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"bringToTop","longname":"Phaser.Sprite#bringToTop","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.BringToTop#bringToTop","inherited":true,"___s":true},{"meta":{"range":[1378,1543],"filename":"BringToTop.js","lineno":45,"path":"src\\gameobjects\\components"},"description":"Sends this Game Object to the bottom of its parents display list.\rVisually this means it will render below all other children in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will send it to the bottom of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"sendToBack","longname":"Phaser.Sprite#sendToBack","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.BringToTop#sendToBack","inherited":true,"___s":true},{"meta":{"range":[1982,2140],"filename":"BringToTop.js","lineno":66,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object up one place in its parents display list.\rThis call has no effect if the Game Object is already at the top of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object up within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveUp","longname":"Phaser.Sprite#moveUp","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.BringToTop#moveUp","inherited":true,"___s":true},{"meta":{"range":[2586,2748],"filename":"BringToTop.js","lineno":87,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object down one place in its parents display list.\rThis call has no effect if the Game Object is already at the bottom of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object down within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveDown","longname":"Phaser.Sprite#moveDown","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.BringToTop#moveDown","inherited":true,"___s":true},{"meta":{"range":[751,765],"filename":"Crop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Rectangle used to crop the texture this Game Object uses.\rSet this property via `crop`. \rIf you modify this property directly you must call `updateCrop` in order to have the change take effect.","properties":[{"type":{"names":["Phaser.Rectangle"]},"name":"cropRect"}],"defaultvalue":null,"name":"cropRect","longname":"Phaser.Sprite#cropRect","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Crop#cropRect","inherited":true,"___s":true},{"meta":{"range":[2112,2842],"filename":"Crop.js","lineno":49,"path":"src\\gameobjects\\components"},"description":"Crop allows you to crop the texture being used to display this Game Object.\rSetting a crop rectangle modifies the core texture frame. The Game Object width and height properties will be adjusted accordingly.\r\rCropping takes place from the top-left and can be modified in real-time either by providing an updated rectangle object to this method,\ror by modifying `cropRect` property directly and then calling `updateCrop`.\r\rThe rectangle object given to this method can be either a `Phaser.Rectangle` or any other object \rso long as it has public `x`, `y`, `width`, `height`, `right` and `bottom` properties.\r\rA reference to the rectangle is stored in `cropRect` unless the `copy` parameter is `true`, \rin which case the values are duplicated to a local object.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle used during cropping. Pass null or no parameters to clear a previously set crop rectangle.","name":"rect"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If false `cropRect` will be stored as a reference to the given rect. If true it will copy the rect values into a local Phaser Rectangle object stored in cropRect.","name":"copy"}],"name":"crop","longname":"Phaser.Sprite#crop","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Crop#crop","inherited":true,"___s":true},{"meta":{"range":[3107,4426],"filename":"Crop.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"If you have set a crop rectangle on this Game Object via `crop` and since modified the `cropRect` property,\ror the rectangle it references, then you need to update the crop frame by calling this method.","kind":"function","name":"updateCrop","longname":"Phaser.Sprite#updateCrop","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Crop#updateCrop","inherited":true,"___s":true},{"meta":{"range":[707,829],"filename":"Delta.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"Returns the delta x value. The difference between world.x now and in the previous frame.\r\rThe value will be positive if the Game Object has moved to the right or negative if to the left.","properties":[{"type":{"names":["number"]},"name":"deltaX"}],"readonly":true,"name":"deltaX","longname":"Phaser.Sprite#deltaX","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Delta#deltaX","inherited":true,"___s":true},{"meta":{"range":[1103,1225],"filename":"Delta.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"Returns the delta y value. The difference between world.y now and in the previous frame.\r\rThe value will be positive if the Game Object has moved down or negative if up.","properties":[{"type":{"names":["number"]},"name":"deltaY"}],"readonly":true,"name":"deltaY","longname":"Phaser.Sprite#deltaY","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Delta#deltaY","inherited":true,"___s":true},{"meta":{"range":[1424,1545],"filename":"Delta.js","lineno":58,"path":"src\\gameobjects\\components"},"description":"Returns the delta z value. The difference between rotation now and in the previous frame.","properties":[{"type":{"names":["number"]},"description":"The delta value.","name":"deltaZ"}],"readonly":true,"name":"deltaZ","longname":"Phaser.Sprite#deltaZ","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Delta#deltaZ","inherited":true,"___s":true},{"meta":{"range":[629,648],"filename":"Destroy.js","lineno":22,"path":"src\\gameobjects\\components"},"description":"As a Game Object runs through its destroy method this flag is set to true, \rand can be checked in any sub-systems or plugins it is being destroyed from.","properties":[{"type":{"names":["boolean"]},"name":"destroyPhase"}],"readonly":true,"name":"destroyPhase","longname":"Phaser.Sprite#destroyPhase","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Destroy#destroyPhase","inherited":true,"___s":true},{"meta":{"range":[1497,4401],"filename":"Destroy.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Destroys the Game Object. This removes it from its parent group, destroys the input, event and animation handlers if present\rand nulls its reference to `game`, freeing it up for garbage collection.\r\rIf this Game Object has the Events component it will also dispatch the `onDestroy` event.\r\rYou can optionally also destroy the BaseTexture this Game Object is using. Be careful if you've\rmore than one Game Object sharing the same BaseTexture.","kind":"function","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should every child of this object have its destroy method called as well?","name":"destroyChildren"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Destroy the BaseTexture this Game Object is using? Note that if another Game Object is sharing the same BaseTexture it will invalidate it.","name":"destroyTexture"}],"name":"destroy","longname":"Phaser.Sprite#destroy","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Destroy#destroy","inherited":true,"___s":true},{"meta":{"range":[2104,2515],"filename":"FixedToCamera.js","lineno":56,"path":"src\\gameobjects\\components"},"description":"A Game Object that is \"fixed\" to the camera uses its x/y coordinates as offsets from the top left of the camera during rendering.\r\rThe values are adjusted at the rendering stage, overriding the Game Objects actual world position.\r\rThe end result is that the Game Object will appear to be 'fixed' to the camera, regardless of where in the game world\rthe camera is viewing. This is useful if for example this Game Object is a UI item that you wish to be visible at all times \rregardless where in the world the camera is.\r\rThe offsets are stored in the `cameraOffset` property.\r\rNote that the `cameraOffset` values are in addition to any parent of this Game Object on the display list.\r\rBe careful not to set `fixedToCamera` on Game Objects which are in Groups that already have `fixedToCamera` enabled on them.","properties":[{"type":{"names":["boolean"]},"name":"fixedToCamera"}],"name":"fixedToCamera","longname":"Phaser.Sprite#fixedToCamera","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.FixedToCamera#fixedToCamera","inherited":true,"___s":true},{"meta":{"range":[2868,2900],"filename":"FixedToCamera.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"The x/y coordinate offset applied to the top-left of the camera that this Game Object will be drawn at if `fixedToCamera` is true.\r\rThe values are relative to the top-left of the camera view and in addition to any parent of the Game Object on the display list.","properties":[{"type":{"names":["Phaser.Point"]},"name":"cameraOffset"}],"name":"cameraOffset","longname":"Phaser.Sprite#cameraOffset","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.FixedToCamera#cameraOffset","inherited":true,"___s":true},{"meta":{"range":[778,787],"filename":"Health.js","lineno":26,"path":"src\\gameobjects\\components"},"description":"The Game Objects health value. This is a handy property for setting and manipulating health on a Game Object.\r\rIt can be used in combination with the `damage` method or modified directly.","properties":[{"type":{"names":["number"]},"name":"health"}],"defaultvalue":1,"name":"health","longname":"Phaser.Sprite#health","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Health#health","inherited":true,"___s":true},{"meta":{"range":[1029,1043],"filename":"Health.js","lineno":35,"path":"src\\gameobjects\\components"},"description":"The Game Objects maximum health value. This works in combination with the `heal` method to ensure\rthe health value never exceeds the maximum.","properties":[{"type":{"names":["number"]},"name":"maxHealth"}],"defaultvalue":100,"name":"maxHealth","longname":"Phaser.Sprite#maxHealth","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Health#maxHealth","inherited":true,"___s":true},{"meta":{"range":[1419,1661],"filename":"Health.js","lineno":46,"path":"src\\gameobjects\\components"},"description":"Damages the Game Object. This removes the given amount of health from the `health` property.\r\rIf health is taken below or is equal to zero then the `kill` method is called.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to subtract from the current `health` value.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"damage","longname":"Phaser.Sprite#damage","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Health#damage","inherited":true,"___s":true},{"meta":{"range":[1989,2195],"filename":"Health.js","lineno":70,"path":"src\\gameobjects\\components"},"description":"Sets the health property of the Game Object to the given amount.\rWill never exceed the `maxHealth` value.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to set the `health` value to. The total will never exceed `maxHealth`.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"setHealth","longname":"Phaser.Sprite#setHealth","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Health#setHealth","inherited":true,"___s":true},{"meta":{"range":[2503,2772],"filename":"Health.js","lineno":90,"path":"src\\gameobjects\\components"},"description":"Heal the Game Object. This adds the given amount of health to the `health` property.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to add to the current `health` value. The total will never exceed `maxHealth`.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"heal","longname":"Phaser.Sprite#heal","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Health#heal","inherited":true,"___s":true},{"meta":{"range":[805,816],"filename":"InputEnabled.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Input Handler for this Game Object.\r\rBy default it is disabled. If you wish this Game Object to process input events you should enable it with: `inputEnabled = true`.\r\rAfter you have done this, this property will be a reference to the Phaser InputHandler.","properties":[{"type":{"names":["Phaser.InputHandler","null"]},"name":"input"}],"name":"input","longname":"Phaser.Sprite#input","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.InputEnabled#input","inherited":true,"___s":true},{"meta":{"range":[1661,2398],"filename":"InputEnabled.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"By default a Game Object won't process any input events. By setting `inputEnabled` to true a Phaser.InputHandler is created\rfor this Game Object and it will then start to process click / touch events and more.\r\rYou can then access the Input Handler via `this.input`.\r\rNote that Input related events are dispatched from `this.events`, i.e.: `events.onInputDown`.\r\rIf you set this property to false it will stop the Input Handler from processing any more input events.\r\rIf you want to _temporarily_ disable input for a Game Object, then it's better to set\r`input.enabled = false`, as it won't reset any of the Input Handlers internal properties.\rYou can then toggle this back on as needed.","properties":[{"type":{"names":["boolean"]},"name":"inputEnabled"}],"name":"inputEnabled","longname":"Phaser.Sprite#inputEnabled","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.InputEnabled#inputEnabled","inherited":true,"___s":true},{"meta":{"range":[3394,3417],"filename":"InWorld.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"If this is set to `true` the Game Object checks if it is within the World bounds each frame. \r\rWhen it is no longer intersecting the world bounds it dispatches the `onOutOfBounds` event.\r\rIf it was *previously* out of bounds but is now intersecting the world bounds again it dispatches the `onEnterBounds` event.\r\rIt also optionally kills the Game Object if `outOfBoundsKill` is `true`.\r\rWhen `checkWorldBounds` is enabled it forces the Game Object to calculate its full bounds every frame.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"checkWorldBounds"}],"defaultvalue":false,"name":"checkWorldBounds","longname":"Phaser.Sprite#checkWorldBounds","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.InWorld#checkWorldBounds","inherited":true,"___s":true},{"meta":{"range":[3653,3675],"filename":"InWorld.js","lineno":106,"path":"src\\gameobjects\\components"},"description":"If this and the `checkWorldBounds` property are both set to `true` then the `kill` method is called as soon as `inWorld` returns false.","properties":[{"type":{"names":["boolean"]},"name":"outOfBoundsKill"}],"defaultvalue":false,"name":"outOfBoundsKill","longname":"Phaser.Sprite#outOfBoundsKill","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.InWorld#outOfBoundsKill","inherited":true,"___s":true},{"meta":{"range":[3939,3967],"filename":"InWorld.js","lineno":115,"path":"src\\gameobjects\\components"},"description":"If this and the `autoCull` property are both set to `true`, then the `kill` method\ris called as soon as the Game Object leaves the camera bounds.","properties":[{"type":{"names":["boolean"]},"name":"outOfCameraBoundsKill"}],"defaultvalue":false,"name":"outOfCameraBoundsKill","longname":"Phaser.Sprite#outOfCameraBoundsKill","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.InWorld#outOfCameraBoundsKill","inherited":true,"___s":true},{"meta":{"range":[4292,4429],"filename":"InWorld.js","lineno":129,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds are within, or intersect at any point with the Game World bounds.","properties":[{"type":{"names":["boolean"]},"name":"inWorld"}],"readonly":true,"name":"inWorld","longname":"Phaser.Sprite#inWorld","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.InWorld#inWorld","inherited":true,"___s":true},{"meta":{"range":[1310,1321],"filename":"LifeSpan.js","lineno":50,"path":"src\\gameobjects\\components"},"description":"A useful flag to control if the Game Object is alive or dead.\r\rThis is set automatically by the Health components `damage` method should the object run out of health.\rOr you can toggle it via your game code.\r\rThis property is mostly just provided to be used by your game - it doesn't effect rendering or logic updates.\rHowever you can use `Group.getFirstAlive` in conjunction with this property for fast object pooling and recycling.","properties":[{"type":{"names":["boolean"]},"name":"alive"}],"defaultvalue":true,"name":"alive","longname":"Phaser.Sprite#alive","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.LifeSpan#alive","inherited":true,"___s":true},{"meta":{"range":[1843,1854],"filename":"LifeSpan.js","lineno":65,"path":"src\\gameobjects\\components"},"description":"The lifespan allows you to give a Game Object a lifespan in milliseconds.\r\rOnce the Game Object is 'born' you can set this to a positive value.\r\rIt is automatically decremented by the millisecond equivalent of `game.time.physicsElapsed` each frame.\rWhen it reaches zero it will call the `kill` method.\r\rVery handy for particles, bullets, collectibles, or any other short-lived entity.","properties":[{"type":{"names":["number"]},"name":"lifespan"}],"defaultvalue":0,"name":"lifespan","longname":"Phaser.Sprite#lifespan","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.LifeSpan#lifespan","inherited":true,"___s":true},{"meta":{"range":[2390,2807],"filename":"LifeSpan.js","lineno":78,"path":"src\\gameobjects\\components"},"description":"Brings a 'dead' Game Object back to life, optionally resetting its health value in the process.\r\rA resurrected Game Object has its `alive`, `exists` and `visible` properties all set to true.\r\rIt will dispatch the `onRevived` event. Listen to `events.onRevived` for the signal.","kind":"function","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"The health to give the Game Object. Only set if the GameObject has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"revive","longname":"Phaser.Sprite#revive","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.LifeSpan#revive","inherited":true,"___s":true},{"meta":{"range":[3390,3634],"filename":"LifeSpan.js","lineno":113,"path":"src\\gameobjects\\components"},"description":"Kills a Game Object. A killed Game Object has its `alive`, `exists` and `visible` properties all set to false.\r\rIt will dispatch the `onKilled` event. You can listen to `events.onKilled` for the signal.\r\rNote that killing a Game Object is a way for you to quickly recycle it in an object pool,\rit doesn't destroy the object or free it up from memory.\r\rIf you don't need this Game Object any more you should call `destroy` instead.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"kill","longname":"Phaser.Sprite#kill","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.LifeSpan#kill","inherited":true,"___s":true},{"meta":{"range":[2545,5312],"filename":"LoadTexture.js","lineno":51,"path":"src\\gameobjects\\components"},"description":"Changes the base texture the Game Object is using. The old texture is removed and the new one is referenced or fetched from the Cache.\r\rIf your Game Object is using a frame from a texture atlas and you just wish to change to another frame, then see the `frame` or `frameName` properties instead.\r\rYou should only use `loadTexture` if you want to replace the base texture entirely.\r\rCalling this method causes a WebGL texture update, so use sparingly or in low-intensity portions of your game, or if you know the new texture is already on the GPU.\r\rYou can use the new const `Phaser.PENDING_ATLAS` as the texture key for any sprite. \rDoing this then sets the key to be the `frame` argument (the frame is set to zero). \r\rThis allows you to create sprites using `load.image` during development, and then change them \rto use a Texture Atlas later in development by simply searching your code for 'PENDING_ATLAS' \rand swapping it to be the key of the atlas data.\r\rNote: You cannot use a RenderTexture as a texture for a TileSprite.","kind":"function","params":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If an animation is already playing on this Sprite you can choose to stop it or let it carry on playing.","name":"stopAnimation"}],"name":"loadTexture","longname":"Phaser.Sprite#loadTexture","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.LoadTexture#loadTexture","inherited":true,"___s":true},{"meta":{"range":[5633,7262],"filename":"LoadTexture.js","lineno":155,"path":"src\\gameobjects\\components"},"description":"Sets the texture frame the Game Object uses for rendering.\r\rThis is primarily an internal method used by `loadTexture`, but is exposed for the use of plugins and custom classes.","kind":"function","params":[{"type":{"names":["Phaser.Frame"]},"description":"The Frame to be used by the texture.","name":"frame"}],"name":"setFrame","longname":"Phaser.Sprite#setFrame","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.LoadTexture#setFrame","inherited":true,"___s":true},{"meta":{"range":[7825,7986],"filename":"LoadTexture.js","lineno":220,"path":"src\\gameobjects\\components"},"description":"Resizes the Frame dimensions that the Game Object uses for rendering.\r\rYou shouldn't normally need to ever call this, but in the case of special texture types such as Video or BitmapData\rit can be useful to adjust the dimensions directly in this way.","kind":"function","params":[{"type":{"names":["object"]},"description":"The parent texture object that caused the resize, i.e. a Phaser.Video object.","name":"parent"},{"type":{"names":["integer"]},"description":"The new width of the texture.","name":"width"},{"type":{"names":["integer"]},"description":"The new height of the texture.","name":"height"}],"name":"resizeFrame","longname":"Phaser.Sprite#resizeFrame","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.LoadTexture#resizeFrame","inherited":true,"___s":true},{"meta":{"range":[8118,8243],"filename":"LoadTexture.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"Resets the texture frame dimensions that the Game Object uses for rendering.","kind":"function","name":"resetFrame","longname":"Phaser.Sprite#resetFrame","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.LoadTexture#resetFrame","inherited":true,"___s":true},{"meta":{"range":[8868,9060],"filename":"LoadTexture.js","lineno":254,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame index of the texture being used to render this Game Object.\r\rTo change the frame set `frame` to the index of the new frame in the sprite sheet you wish this Game Object to use,\rfor example: `player.frame = 4`.\r\rIf the frame index given doesn't exist it will revert to the first frame found in the texture.\r\rIf you are using a texture atlas then you should use the `frameName` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["integer"]},"name":"frame"}],"name":"frame","longname":"Phaser.Sprite#frame","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.LoadTexture#frame","inherited":true,"___s":true},{"meta":{"range":[9723,9927],"filename":"LoadTexture.js","lineno":279,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame name of the texture being used to render this Game Object.\r\rTo change the frame set `frameName` to the name of the new frame in the texture atlas you wish this Game Object to use, \rfor example: `player.frameName = \"idle\"`.\r\rIf the frame name given doesn't exist it will revert to the first frame found in the texture and throw a console warning.\r\rIf you are using a sprite sheet then you should use the `frame` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["string"]},"name":"frameName"}],"name":"frameName","longname":"Phaser.Sprite#frameName","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.LoadTexture#frameName","inherited":true,"___s":true},{"meta":{"range":[1339,1475],"filename":"Overlap.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"Checks to see if the bounds of this Game Object overlaps with the bounds of the given Display Object, \rwhich can be a Sprite, Image, TileSprite or anything that extends those such as Button or provides a `getBounds` method and result.\r\rThis check ignores the `hitArea` property if set and runs a `getBounds` comparison on both objects to determine the result.\r\rTherefore it's relatively expensive to use in large quantities, i.e. with lots of Sprites at a high frequency.\rIt should be fine for low-volume testing where physics isn't required.","kind":"function","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.TileSprite","Phaser.Button","PIXI.DisplayObject"]},"description":"The display object to check against.","name":"displayObject"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the bounds of this Game Object intersects at any point with the bounds of the given display object."}],"name":"overlap","longname":"Phaser.Sprite#overlap","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Overlap#overlap","inherited":true,"___s":true},{"meta":{"range":[2899,2909],"filename":"PhysicsBody.js","lineno":91,"path":"src\\gameobjects\\components"},"description":"`body` is the Game Objects physics body. Once a Game Object is enabled for physics you access all associated \rproperties and methods via it.\r\rBy default Game Objects won't add themselves to any physics system and their `body` property will be `null`.\r\rTo enable this Game Object for physics you need to call `game.physics.enable(object, system)` where `object` is this object\rand `system` is the Physics system you are using. If none is given it defaults to `Phaser.Physics.Arcade`.\r\rYou can alternatively call `game.physics.arcade.enable(object)`, or add this Game Object to a physics enabled Group.\r\rImportant: Enabling a Game Object for P2 or Ninja physics will automatically set its `anchor` property to 0.5, \rso the physics body is centered on the Game Object.\r\rIf you need a different result then adjust or re-create the Body shape offsets manually or reset the anchor after enabling physics.","properties":[{"type":{"names":["Phaser.Physics.Arcade.Body","Phaser.Physics.P2.Body","Phaser.Physics.Ninja.Body","null"]},"name":"body"}],"defaultvalue":null,"name":"body","longname":"Phaser.Sprite#body","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.PhysicsBody#body","inherited":true,"___s":true},{"meta":{"range":[3072,3378],"filename":"PhysicsBody.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the x axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"x"}],"name":"x","longname":"Phaser.Sprite#x","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.PhysicsBody#x","inherited":true,"___s":true},{"meta":{"range":[3541,3847],"filename":"PhysicsBody.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the y axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"y"}],"name":"y","longname":"Phaser.Sprite#y","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.PhysicsBody#y","inherited":true,"___s":true},{"meta":{"range":[1061,1717],"filename":"Reset.js","lineno":30,"path":"src\\gameobjects\\components"},"description":"Resets the Game Object.\r\rThis moves the Game Object to the given x/y world coordinates and sets `fresh`, `exists`, \r`visible` and `renderable` to true.\r\rIf this Game Object has the LifeSpan component it will also set `alive` to true and `health` to the given value.\r\rIf this Game Object has a Physics Body it will reset the Body.","kind":"function","params":[{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the Game Object at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the Game Object at.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The health to give the Game Object if it has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"reset","longname":"Phaser.Sprite#reset","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Reset#reset","inherited":true,"___s":true},{"meta":{"range":[566,589],"filename":"ScaleMinMax.js","lineno":20,"path":"src\\gameobjects\\components"},"description":"The callback that will apply any scale limiting to the worldTransform.","properties":[{"type":{"names":["function"]},"name":"transformCallback"}],"name":"transformCallback","longname":"Phaser.Sprite#transformCallback","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#transformCallback","inherited":true,"___s":true},{"meta":{"range":[728,758],"filename":"ScaleMinMax.js","lineno":26,"path":"src\\gameobjects\\components"},"description":"The context under which `transformCallback` is called.","properties":[{"type":{"names":["object"]},"name":"transformCallbackContext"}],"name":"transformCallbackContext","longname":"Phaser.Sprite#transformCallbackContext","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#transformCallbackContext","inherited":true,"___s":true},{"meta":{"range":[1047,1061],"filename":"ScaleMinMax.js","lineno":36,"path":"src\\gameobjects\\components"},"description":"The minimum scale this Game Object will scale down to.\r\rIt allows you to prevent a parent from scaling this Game Object lower than the given value.\r\rSet it to `null` to remove the limit.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleMin"}],"name":"scaleMin","longname":"Phaser.Sprite#scaleMin","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#scaleMin","inherited":true,"___s":true},{"meta":{"range":[1350,1364],"filename":"ScaleMinMax.js","lineno":46,"path":"src\\gameobjects\\components"},"description":"The maximum scale this Game Object will scale up to. \r\rIt allows you to prevent a parent from scaling this Game Object higher than the given value.\r\rSet it to `null` to remove the limit.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleMax"}],"name":"scaleMax","longname":"Phaser.Sprite#scaleMax","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#scaleMax","inherited":true,"___s":true},{"meta":{"range":[3832,5155],"filename":"ScaleMinMax.js","lineno":110,"path":"src\\gameobjects\\components"},"description":"Sets the scaleMin and scaleMax values. These values are used to limit how far this Game Object will scale based on its parent.\r\rFor example if this Game Object has a `minScale` value of 1 and its parent has a `scale` value of 0.5, the 0.5 will be ignored \rand the scale value of 1 will be used, as the parents scale is lower than the minimum scale this Game Object should adhere to.\r\rBy setting these values you can carefully control how Game Objects deal with responsive scaling.\r\rIf only one parameter is given then that value will be used for both scaleMin and scaleMax:\r`setScaleMinMax(1)` = scaleMin.x, scaleMin.y, scaleMax.x and scaleMax.y all = 1\r\rIf only two parameters are given the first is set as scaleMin.x and y and the second as scaleMax.x and y:\r`setScaleMinMax(0.5, 2)` = scaleMin.x and y = 0.5 and scaleMax.x and y = 2\r\rIf you wish to set `scaleMin` with different values for x and y then either modify Game Object.scaleMin directly, \ror pass `null` for the `maxX` and `maxY` parameters.\r\rCall `setScaleMinMax(null)` to clear all previously set values.","kind":"function","params":[{"type":{"names":["number","null"]},"description":"The minimum horizontal scale value this Game Object can scale down to.","name":"minX"},{"type":{"names":["number","null"]},"description":"The minimum vertical scale value this Game Object can scale down to.","name":"minY"},{"type":{"names":["number","null"]},"description":"The maximum horizontal scale value this Game Object can scale up to.","name":"maxX"},{"type":{"names":["number","null"]},"description":"The maximum vertical scale value this Game Object can scale up to.","name":"maxY"}],"name":"setScaleMinMax","longname":"Phaser.Sprite#setScaleMinMax","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#setScaleMinMax","inherited":true,"___s":true},{"meta":{"range":[680,1221],"filename":"Smoothed.js","lineno":25,"path":"src\\gameobjects\\components"},"description":"Enable or disable texture smoothing for this Game Object.\r\rIt only takes effect if the Game Object is using an image based texture.\r\rSmoothing is enabled by default.","properties":[{"type":{"names":["boolean"]},"name":"smoothed"}],"name":"smoothed","longname":"Phaser.Sprite#smoothed","kind":"member","memberof":"Phaser.Sprite","scope":"instance","inherits":"Phaser.Component.Smoothed#smoothed","inherited":true,"___s":true},{"meta":{"range":[2435,2460],"filename":"Sprite.js","lineno":55,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"readonly":true,"name":"type","longname":"Phaser.Particle#type","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Sprite#type","inherited":true,"___s":true},{"meta":{"range":[2587,2619],"filename":"Sprite.js","lineno":61,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const physics body type of this object.","name":"physicsType"}],"readonly":true,"name":"physicsType","longname":"Phaser.Particle#physicsType","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Sprite#physicsType","inherited":true,"___s":true},{"meta":{"range":[3771,3991],"filename":"Sprite.js","lineno":107,"path":"src\\gameobjects"},"description":"Automatically called by World.preUpdate.","kind":"function","memberof":"Phaser.Particle","returns":[{"type":{"names":["boolean"]},"description":"True if the Sprite was rendered, otherwise false."}],"name":"preUpdate","longname":"Phaser.Particle#preUpdate","scope":"instance","inherits":"Phaser.Sprite#preUpdate","inherited":true,"___s":true},{"meta":{"range":[774,804],"filename":"Sprite.js","lineno":26,"path":"src\\pixi\\display"},"description":"The anchor sets the origin point of the texture.\rThe default is 0,0 this means the texture's origin is the top left\rSetting than anchor to 0.5,0.5 means the textures origin is centered\rSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner","properties":[{"name":"anchor"}],"type":{"names":["Point"]},"name":"anchor","longname":"Phaser.Particle#anchor","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"PIXI.Sprite#anchor","inherited":true,"___s":true},{"meta":{"range":[932,983],"filename":"Sprite.js","lineno":34,"path":"src\\pixi\\display"},"description":"The texture that the sprite is using","properties":[{"name":"texture"}],"type":{"names":["Texture"]},"name":"texture","longname":"Phaser.Particle#texture","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"PIXI.Sprite#texture","inherited":true,"___s":true},{"meta":{"range":[1569,1589],"filename":"Sprite.js","lineno":61,"path":"src\\pixi\\display"},"description":"The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.","properties":[{"name":"tint"}],"type":{"names":["Number"]},"defaultvalue":"0xFFFFFF","name":"tint","longname":"Phaser.Particle#tint","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"PIXI.Sprite#tint","inherited":true,"___s":true},{"meta":{"range":[2061,2086],"filename":"Sprite.js","lineno":80,"path":"src\\pixi\\display"},"description":"A canvas that contains the tinted version of the Sprite (in Canvas mode, WebGL doesn't populate this)","properties":[{"name":"tintedTexture"}],"type":{"names":["Canvas"]},"defaultvalue":"null","name":"tintedTexture","longname":"Phaser.Particle#tintedTexture","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"PIXI.Sprite#tintedTexture","inherited":true,"___s":true},{"meta":{"range":[2456,2495],"filename":"Sprite.js","lineno":91,"path":"src\\pixi\\display"},"description":"The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode.\r\rWarning: You cannot have a blend mode and a filter active on the same Sprite. Doing so will render the sprite invisible.","properties":[{"name":"blendMode"}],"type":{"names":["Number"]},"defaultvalue":"PIXI.blendModes.NORMAL;","name":"blendMode","longname":"Phaser.Particle#blendMode","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"PIXI.Sprite#blendMode","inherited":true,"___s":true},{"meta":{"range":[2714,2732],"filename":"Sprite.js","lineno":101,"path":"src\\pixi\\display"},"description":"The shader that will be used to render this Sprite.\rSet to null to remove a current shader.","properties":[{"name":"shader"}],"type":{"names":["AbstractFilter"]},"defaultvalue":"null","name":"shader","longname":"Phaser.Particle#shader","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"PIXI.Sprite#shader","inherited":true,"___s":true},{"meta":{"range":[2922,2940],"filename":"Sprite.js","lineno":110,"path":"src\\pixi\\display"},"description":"Controls if this Sprite is processed by the core Phaser game loops and Group loops.","properties":[{"name":"exists"}],"type":{"names":["Boolean"]},"defaultvalue":"true","name":"exists","longname":"Phaser.Particle#exists","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"PIXI.Sprite#exists","inherited":true,"___s":true},{"meta":{"range":[3048,3058],"filename":"Core.js","lineno":142,"path":"src\\gameobjects\\components"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"name":"game","longname":"Phaser.Particle#game","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Core#game","inherited":true,"___s":true},{"meta":{"range":[3279,3287],"filename":"Core.js","lineno":150,"path":"src\\gameobjects\\components"},"description":"A user defined name given to this Game Object.\rThis value isn't ever used internally by Phaser, it is meant as a game level property.","properties":[{"type":{"names":["string"]},"name":"name"}],"defaultvalue":"","name":"name","longname":"Phaser.Particle#name","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Core#name","inherited":true,"___s":true},{"meta":{"range":[3651,3659],"filename":"Core.js","lineno":160,"path":"src\\gameobjects\\components"},"description":"An empty Object that belongs to this Game Object.\rThis value isn't ever used internally by Phaser, but may be used by your own code, or\rby Phaser Plugins, to store data that needs to be associated with the Game Object,\rwithout polluting the Game Object directly.","properties":[{"type":{"names":["Object"]},"name":"data"}],"defaultvalue":"{}","defaultvaluetype":"object","name":"data","longname":"Phaser.Particle#data","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Core#data","inherited":true,"___s":true},{"meta":{"range":[3794,3808],"filename":"Core.js","lineno":167,"path":"src\\gameobjects\\components"},"description":"The components this Game Object has installed.","properties":[{"type":{"names":["object"]},"name":"components"}],"access":"protected","name":"components","longname":"Phaser.Particle#components","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Core#components","inherited":true,"___s":true},{"meta":{"range":[4202,4206],"filename":"Core.js","lineno":177,"path":"src\\gameobjects\\components"},"description":"The z depth of this Game Object within its parent Group.\rNo two objects in a Group can have the same z value.\rThis value is adjusted automatically whenever the Group hierarchy changes.\rIf you wish to re-order the layering of a Game Object then see methods like Group.moveUp or Group.bringToTop.","properties":[{"type":{"names":["number"]},"name":"z"}],"readonly":true,"name":"z","longname":"Phaser.Particle#z","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Core#z","inherited":true,"___s":true},{"meta":{"range":[4484,4501],"filename":"Core.js","lineno":185,"path":"src\\gameobjects\\components"},"description":"All Phaser Game Objects have an Events class which contains all of the events that are dispatched when certain things happen to this\rGame Object, or any of its components.","see":["Phaser.Events"],"properties":[{"type":{"names":["Phaser.Events"]},"name":"events"}],"name":"events","longname":"Phaser.Particle#events","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Core#events","inherited":true,"___s":true},{"meta":{"range":[4815,4836],"filename":"Core.js","lineno":193,"path":"src\\gameobjects\\components"},"description":"If the Game Object is enabled for animation (such as a Phaser.Sprite) this is a reference to its AnimationManager instance.\rThrough it you can create, play, pause and stop animations.","see":["Phaser.AnimationManager"],"properties":[{"type":{"names":["Phaser.AnimationManager"]},"name":"animations"}],"name":"animations","longname":"Phaser.Particle#animations","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Core#animations","inherited":true,"___s":true},{"meta":{"range":[5559,5566],"filename":"Core.js","lineno":203,"path":"src\\gameobjects\\components"},"description":"The key of the image or texture used by this Game Object during rendering.\rIf it is a string it's the string used to retrieve the texture from the Phaser Image Cache.\rIt can also be an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.\rIf a Game Object is created without a key it is automatically assigned the key `__default` which is a 32x32 transparent PNG stored within the Cache.\rIf a Game Object is given a key which doesn't exist in the Image Cache it is re-assigned the key `__missing` which is a 32x32 PNG of a green box with a line through it.","properties":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"name":"key"}],"name":"key","longname":"Phaser.Particle#key","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Core#key","inherited":true,"___s":true},{"meta":{"range":[5882,5893],"filename":"Core.js","lineno":211,"path":"src\\gameobjects\\components"},"description":"The world coordinates of this Game Object in pixels.\rDepending on where in the display list this Game Object is placed this value can differ from `position`, \rwhich contains the x/y coordinates relative to the Game Objects parent.","properties":[{"type":{"names":["Phaser.Point"]},"name":"world"}],"name":"world","longname":"Phaser.Particle#world","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Core#world","inherited":true,"___s":true},{"meta":{"range":[6029,6041],"filename":"Core.js","lineno":218,"path":"src\\gameobjects\\components"},"description":"A debug flag designed for use with `Game.enableStep`.","properties":[{"type":{"names":["boolean"]},"name":"debug"}],"defaultvalue":false,"name":"debug","longname":"Phaser.Particle#debug","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Core#debug","inherited":true,"___s":true},{"meta":{"range":[6204,6226],"filename":"Core.js","lineno":225,"path":"src\\gameobjects\\components"},"description":"The position the Game Object was located in the previous frame.","properties":[{"type":{"names":["Phaser.Point"]},"name":"previousPosition"}],"readonly":true,"name":"previousPosition","longname":"Phaser.Particle#previousPosition","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Core#previousPosition","inherited":true,"___s":true},{"meta":{"range":[6406,6425],"filename":"Core.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"The rotation the Game Object was in set to in the previous frame. Value is in radians.","properties":[{"type":{"names":["number"]},"name":"previousRotation"}],"readonly":true,"name":"previousRotation","longname":"Phaser.Particle#previousRotation","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Core#previousRotation","inherited":true,"___s":true},{"meta":{"range":[6720,6736],"filename":"Core.js","lineno":240,"path":"src\\gameobjects\\components"},"description":"The render order ID is used internally by the renderer and Input Manager and should not be modified.\rThis property is mostly used internally by the renderers, but is exposed for the use of plugins.","properties":[{"type":{"names":["number"]},"name":"renderOrderID"}],"readonly":true,"name":"renderOrderID","longname":"Phaser.Particle#renderOrderID","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Core#renderOrderID","inherited":true,"___s":true},{"meta":{"range":[7053,7064],"filename":"Core.js","lineno":248,"path":"src\\gameobjects\\components"},"description":"A Game Object is considered `fresh` if it has just been created or reset and is yet to receive a renderer transform update.\rThis property is mostly used internally by the physics systems, but is exposed for the use of plugins.","properties":[{"type":{"names":["boolean"]},"name":"fresh"}],"readonly":true,"name":"fresh","longname":"Phaser.Particle#fresh","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Core#fresh","inherited":true,"___s":true},{"meta":{"range":[7518,7539],"filename":"Core.js","lineno":259,"path":"src\\gameobjects\\components"},"description":"A Game Object is that is pendingDestroy is flagged to have its destroy method called on the next logic update.\rYou can set it directly to allow you to flag an object to be destroyed on its next update.\r\rThis is extremely useful if you wish to destroy an object from within one of its own callbacks \rsuch as with Buttons or other Input events.","properties":[{"type":{"names":["boolean"]},"name":"pendingDestroy"}],"name":"pendingDestroy","longname":"Phaser.Particle#pendingDestroy","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Core#pendingDestroy","inherited":true,"___s":true},{"meta":{"range":[9544,10055],"filename":"Core.js","lineno":338,"path":"src\\gameobjects\\components"},"description":"Internal method called by the World postUpdate cycle.","kind":"function","access":"protected","name":"postUpdate","longname":"Phaser.Particle#postUpdate","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Core#postUpdate","inherited":true,"___s":true},{"meta":{"range":[1110,1382],"filename":"Angle.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"The angle property is the rotation of the Game Object in *degrees* from its original orientation.\r\rValues from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\r\rValues outside this range are added to or subtracted from 360 to obtain a value within the range. \rFor example, the statement player.angle = 450 is the same as player.angle = 90.\r\rIf you wish to work in radians instead of degrees you can use the property `rotation` instead. \rWorking in radians is slightly faster as it doesn't have to perform any calculations.","properties":[{"type":{"names":["number"]},"name":"angle"}],"name":"angle","longname":"Phaser.Particle#angle","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Angle#angle","inherited":true,"___s":true},{"meta":{"range":[1545,1745],"filename":"Animation.js","lineno":31,"path":"src\\gameobjects\\components"},"description":"Plays an Animation.\r\rThe animation should have previously been created via `animations.add`.\r\rIf the animation is already playing calling this again won't do anything.\rIf you need to reset an already running animation do so directly on the Animation object itself or via `AnimationManager.stop`.","kind":"function","params":[{"type":{"names":["string"]},"description":"The name of the animation to be played, e.g. \"fire\", \"walk\", \"jump\". Must have been previously created via 'AnimationManager.add'.","name":"name"},{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"The framerate to play the animation at. The speed is given in frames per second. If not provided the previously set frameRate of the Animation is used.","name":"frameRate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the animation be looped after playback. If not provided the previously set loop value of the Animation is used.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set to true when the animation completes (only happens if loop=false) the parent Sprite will be killed.","name":"killOnComplete"}],"returns":[{"type":{"names":["Phaser.Animation"]},"description":"A reference to playing Animation."}],"name":"play","longname":"Phaser.Particle#play","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Animation#play","inherited":true,"___s":true},{"meta":{"range":[1129,1144],"filename":"AutoCull.js","lineno":28,"path":"src\\gameobjects\\components"},"description":"A Game Object with `autoCull` set to true will check its bounds against the World Camera every frame.\rIf it is not intersecting the Camera bounds at any point then it has its `renderable` property set to `false`.\rThis keeps the Game Object alive and still processing updates, but forces it to skip the render step entirely.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"autoCull"}],"defaultvalue":false,"name":"autoCull","longname":"Phaser.Particle#autoCull","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.AutoCull#autoCull","inherited":true,"___s":true},{"meta":{"range":[1402,1809],"filename":"AutoCull.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds intersect with the Game Camera bounds.\rReturns `true` if they do, otherwise `false` if fully outside of the Cameras bounds.","properties":[{"type":{"names":["boolean"]},"name":"inCamera"}],"readonly":true,"name":"inCamera","longname":"Phaser.Particle#inCamera","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.AutoCull#inCamera","inherited":true,"___s":true},{"meta":{"range":[661,773],"filename":"Bounds.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its x coordinate.\rThis is the same as `width * anchor.x`.\rIt will only be > 0 if anchor.x is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetX"}],"readonly":true,"name":"offsetX","longname":"Phaser.Particle#offsetX","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Bounds#offsetX","inherited":true,"___s":true},{"meta":{"range":[1042,1155],"filename":"Bounds.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its y coordinate.\rThis is the same as `height * anchor.y`.\rIt will only be > 0 if anchor.y is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetY"}],"readonly":true,"name":"offsetY","longname":"Phaser.Particle#offsetY","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Bounds#offsetY","inherited":true,"___s":true},{"meta":{"range":[1331,1579],"filename":"Bounds.js","lineno":58,"path":"src\\gameobjects\\components"},"description":"The center x coordinate of the Game Object.\rThis is the same as `(x - offsetX) + (width / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerX"}],"name":"centerX","longname":"Phaser.Particle#centerX","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Bounds#centerX","inherited":true,"___s":true},{"meta":{"range":[1756,2006],"filename":"Bounds.js","lineno":80,"path":"src\\gameobjects\\components"},"description":"The center y coordinate of the Game Object.\rThis is the same as `(y - offsetY) + (height / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerY"}],"name":"centerY","longname":"Phaser.Particle#centerY","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Bounds#centerY","inherited":true,"___s":true},{"meta":{"range":[2159,2358],"filename":"Bounds.js","lineno":102,"path":"src\\gameobjects\\components"},"description":"The left coordinate of the Game Object.\rThis is the same as `x - offsetX`.","properties":[{"type":{"names":["number"]},"name":"left"}],"name":"left","longname":"Phaser.Particle#left","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Bounds#left","inherited":true,"___s":true},{"meta":{"range":[2521,2751],"filename":"Bounds.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The right coordinate of the Game Object.\rThis is the same as `x + width - offsetX`.","properties":[{"type":{"names":["number"]},"name":"right"}],"name":"right","longname":"Phaser.Particle#right","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Bounds#right","inherited":true,"___s":true},{"meta":{"range":[2900,3098],"filename":"Bounds.js","lineno":146,"path":"src\\gameobjects\\components"},"description":"The y coordinate of the Game Object.\rThis is the same as `y - offsetY`.","properties":[{"type":{"names":["number"]},"name":"top"}],"name":"top","longname":"Phaser.Particle#top","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Bounds#top","inherited":true,"___s":true},{"meta":{"range":[3262,3495],"filename":"Bounds.js","lineno":168,"path":"src\\gameobjects\\components"},"description":"The sum of the y and height properties.\rThis is the same as `y + height - offsetY`.","properties":[{"type":{"names":["number"]},"name":"bottom"}],"name":"bottom","longname":"Phaser.Particle#bottom","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Bounds#bottom","inherited":true,"___s":true},{"meta":{"range":[6346,8224],"filename":"Bounds.js","lineno":223,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object within another Game Object, or Rectangle, known as the\r'container', to one of 9 possible positions.\r\rThe container must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe container. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, \r`Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, \r`Phaser.BOTTOM_CENTER` and `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rcontainer, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignIn(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the containers bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the container bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"container"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignIn","longname":"Phaser.Particle#alignIn","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Bounds#alignIn","inherited":true,"___s":true},{"meta":{"range":[11205,13527],"filename":"Bounds.js","lineno":321,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object to the side of another Game Object, or Rectangle, known as the\r'parent', in one of 11 possible positions.\r\rThe parent must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe parent. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, \r`Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, \r`Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` \rand `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rparent, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignTo(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the parents bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the parent bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"parent"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, `Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, `Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignTo","longname":"Phaser.Particle#alignTo","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Bounds#alignTo","inherited":true,"___s":true},{"meta":{"range":[784,949],"filename":"BringToTop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"Brings this Game Object to the top of its parents display list.\rVisually this means it will render over the top of any old child in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will bring it to the top of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"bringToTop","longname":"Phaser.Particle#bringToTop","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.BringToTop#bringToTop","inherited":true,"___s":true},{"meta":{"range":[1378,1543],"filename":"BringToTop.js","lineno":45,"path":"src\\gameobjects\\components"},"description":"Sends this Game Object to the bottom of its parents display list.\rVisually this means it will render below all other children in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will send it to the bottom of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"sendToBack","longname":"Phaser.Particle#sendToBack","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.BringToTop#sendToBack","inherited":true,"___s":true},{"meta":{"range":[1982,2140],"filename":"BringToTop.js","lineno":66,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object up one place in its parents display list.\rThis call has no effect if the Game Object is already at the top of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object up within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveUp","longname":"Phaser.Particle#moveUp","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.BringToTop#moveUp","inherited":true,"___s":true},{"meta":{"range":[2586,2748],"filename":"BringToTop.js","lineno":87,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object down one place in its parents display list.\rThis call has no effect if the Game Object is already at the bottom of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object down within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveDown","longname":"Phaser.Particle#moveDown","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.BringToTop#moveDown","inherited":true,"___s":true},{"meta":{"range":[751,765],"filename":"Crop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Rectangle used to crop the texture this Game Object uses.\rSet this property via `crop`. \rIf you modify this property directly you must call `updateCrop` in order to have the change take effect.","properties":[{"type":{"names":["Phaser.Rectangle"]},"name":"cropRect"}],"defaultvalue":null,"name":"cropRect","longname":"Phaser.Particle#cropRect","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Crop#cropRect","inherited":true,"___s":true},{"meta":{"range":[2112,2842],"filename":"Crop.js","lineno":49,"path":"src\\gameobjects\\components"},"description":"Crop allows you to crop the texture being used to display this Game Object.\rSetting a crop rectangle modifies the core texture frame. The Game Object width and height properties will be adjusted accordingly.\r\rCropping takes place from the top-left and can be modified in real-time either by providing an updated rectangle object to this method,\ror by modifying `cropRect` property directly and then calling `updateCrop`.\r\rThe rectangle object given to this method can be either a `Phaser.Rectangle` or any other object \rso long as it has public `x`, `y`, `width`, `height`, `right` and `bottom` properties.\r\rA reference to the rectangle is stored in `cropRect` unless the `copy` parameter is `true`, \rin which case the values are duplicated to a local object.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle used during cropping. Pass null or no parameters to clear a previously set crop rectangle.","name":"rect"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If false `cropRect` will be stored as a reference to the given rect. If true it will copy the rect values into a local Phaser Rectangle object stored in cropRect.","name":"copy"}],"name":"crop","longname":"Phaser.Particle#crop","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Crop#crop","inherited":true,"___s":true},{"meta":{"range":[3107,4426],"filename":"Crop.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"If you have set a crop rectangle on this Game Object via `crop` and since modified the `cropRect` property,\ror the rectangle it references, then you need to update the crop frame by calling this method.","kind":"function","name":"updateCrop","longname":"Phaser.Particle#updateCrop","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Crop#updateCrop","inherited":true,"___s":true},{"meta":{"range":[707,829],"filename":"Delta.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"Returns the delta x value. The difference between world.x now and in the previous frame.\r\rThe value will be positive if the Game Object has moved to the right or negative if to the left.","properties":[{"type":{"names":["number"]},"name":"deltaX"}],"readonly":true,"name":"deltaX","longname":"Phaser.Particle#deltaX","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Delta#deltaX","inherited":true,"___s":true},{"meta":{"range":[1103,1225],"filename":"Delta.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"Returns the delta y value. The difference between world.y now and in the previous frame.\r\rThe value will be positive if the Game Object has moved down or negative if up.","properties":[{"type":{"names":["number"]},"name":"deltaY"}],"readonly":true,"name":"deltaY","longname":"Phaser.Particle#deltaY","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Delta#deltaY","inherited":true,"___s":true},{"meta":{"range":[1424,1545],"filename":"Delta.js","lineno":58,"path":"src\\gameobjects\\components"},"description":"Returns the delta z value. The difference between rotation now and in the previous frame.","properties":[{"type":{"names":["number"]},"description":"The delta value.","name":"deltaZ"}],"readonly":true,"name":"deltaZ","longname":"Phaser.Particle#deltaZ","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Delta#deltaZ","inherited":true,"___s":true},{"meta":{"range":[629,648],"filename":"Destroy.js","lineno":22,"path":"src\\gameobjects\\components"},"description":"As a Game Object runs through its destroy method this flag is set to true, \rand can be checked in any sub-systems or plugins it is being destroyed from.","properties":[{"type":{"names":["boolean"]},"name":"destroyPhase"}],"readonly":true,"name":"destroyPhase","longname":"Phaser.Particle#destroyPhase","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Destroy#destroyPhase","inherited":true,"___s":true},{"meta":{"range":[1497,4401],"filename":"Destroy.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Destroys the Game Object. This removes it from its parent group, destroys the input, event and animation handlers if present\rand nulls its reference to `game`, freeing it up for garbage collection.\r\rIf this Game Object has the Events component it will also dispatch the `onDestroy` event.\r\rYou can optionally also destroy the BaseTexture this Game Object is using. Be careful if you've\rmore than one Game Object sharing the same BaseTexture.","kind":"function","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should every child of this object have its destroy method called as well?","name":"destroyChildren"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Destroy the BaseTexture this Game Object is using? Note that if another Game Object is sharing the same BaseTexture it will invalidate it.","name":"destroyTexture"}],"name":"destroy","longname":"Phaser.Particle#destroy","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Destroy#destroy","inherited":true,"___s":true},{"meta":{"range":[2104,2515],"filename":"FixedToCamera.js","lineno":56,"path":"src\\gameobjects\\components"},"description":"A Game Object that is \"fixed\" to the camera uses its x/y coordinates as offsets from the top left of the camera during rendering.\r\rThe values are adjusted at the rendering stage, overriding the Game Objects actual world position.\r\rThe end result is that the Game Object will appear to be 'fixed' to the camera, regardless of where in the game world\rthe camera is viewing. This is useful if for example this Game Object is a UI item that you wish to be visible at all times \rregardless where in the world the camera is.\r\rThe offsets are stored in the `cameraOffset` property.\r\rNote that the `cameraOffset` values are in addition to any parent of this Game Object on the display list.\r\rBe careful not to set `fixedToCamera` on Game Objects which are in Groups that already have `fixedToCamera` enabled on them.","properties":[{"type":{"names":["boolean"]},"name":"fixedToCamera"}],"name":"fixedToCamera","longname":"Phaser.Particle#fixedToCamera","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.FixedToCamera#fixedToCamera","inherited":true,"___s":true},{"meta":{"range":[2868,2900],"filename":"FixedToCamera.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"The x/y coordinate offset applied to the top-left of the camera that this Game Object will be drawn at if `fixedToCamera` is true.\r\rThe values are relative to the top-left of the camera view and in addition to any parent of the Game Object on the display list.","properties":[{"type":{"names":["Phaser.Point"]},"name":"cameraOffset"}],"name":"cameraOffset","longname":"Phaser.Particle#cameraOffset","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.FixedToCamera#cameraOffset","inherited":true,"___s":true},{"meta":{"range":[778,787],"filename":"Health.js","lineno":26,"path":"src\\gameobjects\\components"},"description":"The Game Objects health value. This is a handy property for setting and manipulating health on a Game Object.\r\rIt can be used in combination with the `damage` method or modified directly.","properties":[{"type":{"names":["number"]},"name":"health"}],"defaultvalue":1,"name":"health","longname":"Phaser.Particle#health","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Health#health","inherited":true,"___s":true},{"meta":{"range":[1029,1043],"filename":"Health.js","lineno":35,"path":"src\\gameobjects\\components"},"description":"The Game Objects maximum health value. This works in combination with the `heal` method to ensure\rthe health value never exceeds the maximum.","properties":[{"type":{"names":["number"]},"name":"maxHealth"}],"defaultvalue":100,"name":"maxHealth","longname":"Phaser.Particle#maxHealth","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Health#maxHealth","inherited":true,"___s":true},{"meta":{"range":[1419,1661],"filename":"Health.js","lineno":46,"path":"src\\gameobjects\\components"},"description":"Damages the Game Object. This removes the given amount of health from the `health` property.\r\rIf health is taken below or is equal to zero then the `kill` method is called.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to subtract from the current `health` value.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"damage","longname":"Phaser.Particle#damage","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Health#damage","inherited":true,"___s":true},{"meta":{"range":[1989,2195],"filename":"Health.js","lineno":70,"path":"src\\gameobjects\\components"},"description":"Sets the health property of the Game Object to the given amount.\rWill never exceed the `maxHealth` value.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to set the `health` value to. The total will never exceed `maxHealth`.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"setHealth","longname":"Phaser.Particle#setHealth","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Health#setHealth","inherited":true,"___s":true},{"meta":{"range":[2503,2772],"filename":"Health.js","lineno":90,"path":"src\\gameobjects\\components"},"description":"Heal the Game Object. This adds the given amount of health to the `health` property.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to add to the current `health` value. The total will never exceed `maxHealth`.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"heal","longname":"Phaser.Particle#heal","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Health#heal","inherited":true,"___s":true},{"meta":{"range":[805,816],"filename":"InputEnabled.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Input Handler for this Game Object.\r\rBy default it is disabled. If you wish this Game Object to process input events you should enable it with: `inputEnabled = true`.\r\rAfter you have done this, this property will be a reference to the Phaser InputHandler.","properties":[{"type":{"names":["Phaser.InputHandler","null"]},"name":"input"}],"name":"input","longname":"Phaser.Particle#input","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.InputEnabled#input","inherited":true,"___s":true},{"meta":{"range":[1661,2398],"filename":"InputEnabled.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"By default a Game Object won't process any input events. By setting `inputEnabled` to true a Phaser.InputHandler is created\rfor this Game Object and it will then start to process click / touch events and more.\r\rYou can then access the Input Handler via `this.input`.\r\rNote that Input related events are dispatched from `this.events`, i.e.: `events.onInputDown`.\r\rIf you set this property to false it will stop the Input Handler from processing any more input events.\r\rIf you want to _temporarily_ disable input for a Game Object, then it's better to set\r`input.enabled = false`, as it won't reset any of the Input Handlers internal properties.\rYou can then toggle this back on as needed.","properties":[{"type":{"names":["boolean"]},"name":"inputEnabled"}],"name":"inputEnabled","longname":"Phaser.Particle#inputEnabled","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.InputEnabled#inputEnabled","inherited":true,"___s":true},{"meta":{"range":[3394,3417],"filename":"InWorld.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"If this is set to `true` the Game Object checks if it is within the World bounds each frame. \r\rWhen it is no longer intersecting the world bounds it dispatches the `onOutOfBounds` event.\r\rIf it was *previously* out of bounds but is now intersecting the world bounds again it dispatches the `onEnterBounds` event.\r\rIt also optionally kills the Game Object if `outOfBoundsKill` is `true`.\r\rWhen `checkWorldBounds` is enabled it forces the Game Object to calculate its full bounds every frame.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"checkWorldBounds"}],"defaultvalue":false,"name":"checkWorldBounds","longname":"Phaser.Particle#checkWorldBounds","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.InWorld#checkWorldBounds","inherited":true,"___s":true},{"meta":{"range":[3653,3675],"filename":"InWorld.js","lineno":106,"path":"src\\gameobjects\\components"},"description":"If this and the `checkWorldBounds` property are both set to `true` then the `kill` method is called as soon as `inWorld` returns false.","properties":[{"type":{"names":["boolean"]},"name":"outOfBoundsKill"}],"defaultvalue":false,"name":"outOfBoundsKill","longname":"Phaser.Particle#outOfBoundsKill","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.InWorld#outOfBoundsKill","inherited":true,"___s":true},{"meta":{"range":[3939,3967],"filename":"InWorld.js","lineno":115,"path":"src\\gameobjects\\components"},"description":"If this and the `autoCull` property are both set to `true`, then the `kill` method\ris called as soon as the Game Object leaves the camera bounds.","properties":[{"type":{"names":["boolean"]},"name":"outOfCameraBoundsKill"}],"defaultvalue":false,"name":"outOfCameraBoundsKill","longname":"Phaser.Particle#outOfCameraBoundsKill","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.InWorld#outOfCameraBoundsKill","inherited":true,"___s":true},{"meta":{"range":[4292,4429],"filename":"InWorld.js","lineno":129,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds are within, or intersect at any point with the Game World bounds.","properties":[{"type":{"names":["boolean"]},"name":"inWorld"}],"readonly":true,"name":"inWorld","longname":"Phaser.Particle#inWorld","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.InWorld#inWorld","inherited":true,"___s":true},{"meta":{"range":[1310,1321],"filename":"LifeSpan.js","lineno":50,"path":"src\\gameobjects\\components"},"description":"A useful flag to control if the Game Object is alive or dead.\r\rThis is set automatically by the Health components `damage` method should the object run out of health.\rOr you can toggle it via your game code.\r\rThis property is mostly just provided to be used by your game - it doesn't effect rendering or logic updates.\rHowever you can use `Group.getFirstAlive` in conjunction with this property for fast object pooling and recycling.","properties":[{"type":{"names":["boolean"]},"name":"alive"}],"defaultvalue":true,"name":"alive","longname":"Phaser.Particle#alive","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.LifeSpan#alive","inherited":true,"___s":true},{"meta":{"range":[1843,1854],"filename":"LifeSpan.js","lineno":65,"path":"src\\gameobjects\\components"},"description":"The lifespan allows you to give a Game Object a lifespan in milliseconds.\r\rOnce the Game Object is 'born' you can set this to a positive value.\r\rIt is automatically decremented by the millisecond equivalent of `game.time.physicsElapsed` each frame.\rWhen it reaches zero it will call the `kill` method.\r\rVery handy for particles, bullets, collectibles, or any other short-lived entity.","properties":[{"type":{"names":["number"]},"name":"lifespan"}],"defaultvalue":0,"name":"lifespan","longname":"Phaser.Particle#lifespan","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.LifeSpan#lifespan","inherited":true,"___s":true},{"meta":{"range":[2390,2807],"filename":"LifeSpan.js","lineno":78,"path":"src\\gameobjects\\components"},"description":"Brings a 'dead' Game Object back to life, optionally resetting its health value in the process.\r\rA resurrected Game Object has its `alive`, `exists` and `visible` properties all set to true.\r\rIt will dispatch the `onRevived` event. Listen to `events.onRevived` for the signal.","kind":"function","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"The health to give the Game Object. Only set if the GameObject has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"revive","longname":"Phaser.Particle#revive","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.LifeSpan#revive","inherited":true,"___s":true},{"meta":{"range":[3390,3634],"filename":"LifeSpan.js","lineno":113,"path":"src\\gameobjects\\components"},"description":"Kills a Game Object. A killed Game Object has its `alive`, `exists` and `visible` properties all set to false.\r\rIt will dispatch the `onKilled` event. You can listen to `events.onKilled` for the signal.\r\rNote that killing a Game Object is a way for you to quickly recycle it in an object pool,\rit doesn't destroy the object or free it up from memory.\r\rIf you don't need this Game Object any more you should call `destroy` instead.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"kill","longname":"Phaser.Particle#kill","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.LifeSpan#kill","inherited":true,"___s":true},{"meta":{"range":[2545,5312],"filename":"LoadTexture.js","lineno":51,"path":"src\\gameobjects\\components"},"description":"Changes the base texture the Game Object is using. The old texture is removed and the new one is referenced or fetched from the Cache.\r\rIf your Game Object is using a frame from a texture atlas and you just wish to change to another frame, then see the `frame` or `frameName` properties instead.\r\rYou should only use `loadTexture` if you want to replace the base texture entirely.\r\rCalling this method causes a WebGL texture update, so use sparingly or in low-intensity portions of your game, or if you know the new texture is already on the GPU.\r\rYou can use the new const `Phaser.PENDING_ATLAS` as the texture key for any sprite. \rDoing this then sets the key to be the `frame` argument (the frame is set to zero). \r\rThis allows you to create sprites using `load.image` during development, and then change them \rto use a Texture Atlas later in development by simply searching your code for 'PENDING_ATLAS' \rand swapping it to be the key of the atlas data.\r\rNote: You cannot use a RenderTexture as a texture for a TileSprite.","kind":"function","params":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If an animation is already playing on this Sprite you can choose to stop it or let it carry on playing.","name":"stopAnimation"}],"name":"loadTexture","longname":"Phaser.Particle#loadTexture","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.LoadTexture#loadTexture","inherited":true,"___s":true},{"meta":{"range":[5633,7262],"filename":"LoadTexture.js","lineno":155,"path":"src\\gameobjects\\components"},"description":"Sets the texture frame the Game Object uses for rendering.\r\rThis is primarily an internal method used by `loadTexture`, but is exposed for the use of plugins and custom classes.","kind":"function","params":[{"type":{"names":["Phaser.Frame"]},"description":"The Frame to be used by the texture.","name":"frame"}],"name":"setFrame","longname":"Phaser.Particle#setFrame","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.LoadTexture#setFrame","inherited":true,"___s":true},{"meta":{"range":[7825,7986],"filename":"LoadTexture.js","lineno":220,"path":"src\\gameobjects\\components"},"description":"Resizes the Frame dimensions that the Game Object uses for rendering.\r\rYou shouldn't normally need to ever call this, but in the case of special texture types such as Video or BitmapData\rit can be useful to adjust the dimensions directly in this way.","kind":"function","params":[{"type":{"names":["object"]},"description":"The parent texture object that caused the resize, i.e. a Phaser.Video object.","name":"parent"},{"type":{"names":["integer"]},"description":"The new width of the texture.","name":"width"},{"type":{"names":["integer"]},"description":"The new height of the texture.","name":"height"}],"name":"resizeFrame","longname":"Phaser.Particle#resizeFrame","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.LoadTexture#resizeFrame","inherited":true,"___s":true},{"meta":{"range":[8118,8243],"filename":"LoadTexture.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"Resets the texture frame dimensions that the Game Object uses for rendering.","kind":"function","name":"resetFrame","longname":"Phaser.Particle#resetFrame","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.LoadTexture#resetFrame","inherited":true,"___s":true},{"meta":{"range":[8868,9060],"filename":"LoadTexture.js","lineno":254,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame index of the texture being used to render this Game Object.\r\rTo change the frame set `frame` to the index of the new frame in the sprite sheet you wish this Game Object to use,\rfor example: `player.frame = 4`.\r\rIf the frame index given doesn't exist it will revert to the first frame found in the texture.\r\rIf you are using a texture atlas then you should use the `frameName` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["integer"]},"name":"frame"}],"name":"frame","longname":"Phaser.Particle#frame","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.LoadTexture#frame","inherited":true,"___s":true},{"meta":{"range":[9723,9927],"filename":"LoadTexture.js","lineno":279,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame name of the texture being used to render this Game Object.\r\rTo change the frame set `frameName` to the name of the new frame in the texture atlas you wish this Game Object to use, \rfor example: `player.frameName = \"idle\"`.\r\rIf the frame name given doesn't exist it will revert to the first frame found in the texture and throw a console warning.\r\rIf you are using a sprite sheet then you should use the `frame` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["string"]},"name":"frameName"}],"name":"frameName","longname":"Phaser.Particle#frameName","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.LoadTexture#frameName","inherited":true,"___s":true},{"meta":{"range":[1339,1475],"filename":"Overlap.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"Checks to see if the bounds of this Game Object overlaps with the bounds of the given Display Object, \rwhich can be a Sprite, Image, TileSprite or anything that extends those such as Button or provides a `getBounds` method and result.\r\rThis check ignores the `hitArea` property if set and runs a `getBounds` comparison on both objects to determine the result.\r\rTherefore it's relatively expensive to use in large quantities, i.e. with lots of Sprites at a high frequency.\rIt should be fine for low-volume testing where physics isn't required.","kind":"function","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.TileSprite","Phaser.Button","PIXI.DisplayObject"]},"description":"The display object to check against.","name":"displayObject"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the bounds of this Game Object intersects at any point with the bounds of the given display object."}],"name":"overlap","longname":"Phaser.Particle#overlap","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Overlap#overlap","inherited":true,"___s":true},{"meta":{"range":[2899,2909],"filename":"PhysicsBody.js","lineno":91,"path":"src\\gameobjects\\components"},"description":"`body` is the Game Objects physics body. Once a Game Object is enabled for physics you access all associated \rproperties and methods via it.\r\rBy default Game Objects won't add themselves to any physics system and their `body` property will be `null`.\r\rTo enable this Game Object for physics you need to call `game.physics.enable(object, system)` where `object` is this object\rand `system` is the Physics system you are using. If none is given it defaults to `Phaser.Physics.Arcade`.\r\rYou can alternatively call `game.physics.arcade.enable(object)`, or add this Game Object to a physics enabled Group.\r\rImportant: Enabling a Game Object for P2 or Ninja physics will automatically set its `anchor` property to 0.5, \rso the physics body is centered on the Game Object.\r\rIf you need a different result then adjust or re-create the Body shape offsets manually or reset the anchor after enabling physics.","properties":[{"type":{"names":["Phaser.Physics.Arcade.Body","Phaser.Physics.P2.Body","Phaser.Physics.Ninja.Body","null"]},"name":"body"}],"defaultvalue":null,"name":"body","longname":"Phaser.Particle#body","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.PhysicsBody#body","inherited":true,"___s":true},{"meta":{"range":[3072,3378],"filename":"PhysicsBody.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the x axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"x"}],"name":"x","longname":"Phaser.Particle#x","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.PhysicsBody#x","inherited":true,"___s":true},{"meta":{"range":[3541,3847],"filename":"PhysicsBody.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the y axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"y"}],"name":"y","longname":"Phaser.Particle#y","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.PhysicsBody#y","inherited":true,"___s":true},{"meta":{"range":[566,589],"filename":"ScaleMinMax.js","lineno":20,"path":"src\\gameobjects\\components"},"description":"The callback that will apply any scale limiting to the worldTransform.","properties":[{"type":{"names":["function"]},"name":"transformCallback"}],"name":"transformCallback","longname":"Phaser.Particle#transformCallback","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#transformCallback","inherited":true,"___s":true},{"meta":{"range":[728,758],"filename":"ScaleMinMax.js","lineno":26,"path":"src\\gameobjects\\components"},"description":"The context under which `transformCallback` is called.","properties":[{"type":{"names":["object"]},"name":"transformCallbackContext"}],"name":"transformCallbackContext","longname":"Phaser.Particle#transformCallbackContext","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#transformCallbackContext","inherited":true,"___s":true},{"meta":{"range":[1047,1061],"filename":"ScaleMinMax.js","lineno":36,"path":"src\\gameobjects\\components"},"description":"The minimum scale this Game Object will scale down to.\r\rIt allows you to prevent a parent from scaling this Game Object lower than the given value.\r\rSet it to `null` to remove the limit.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleMin"}],"name":"scaleMin","longname":"Phaser.Particle#scaleMin","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#scaleMin","inherited":true,"___s":true},{"meta":{"range":[1350,1364],"filename":"ScaleMinMax.js","lineno":46,"path":"src\\gameobjects\\components"},"description":"The maximum scale this Game Object will scale up to. \r\rIt allows you to prevent a parent from scaling this Game Object higher than the given value.\r\rSet it to `null` to remove the limit.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleMax"}],"name":"scaleMax","longname":"Phaser.Particle#scaleMax","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#scaleMax","inherited":true,"___s":true},{"meta":{"range":[3832,5155],"filename":"ScaleMinMax.js","lineno":110,"path":"src\\gameobjects\\components"},"description":"Sets the scaleMin and scaleMax values. These values are used to limit how far this Game Object will scale based on its parent.\r\rFor example if this Game Object has a `minScale` value of 1 and its parent has a `scale` value of 0.5, the 0.5 will be ignored \rand the scale value of 1 will be used, as the parents scale is lower than the minimum scale this Game Object should adhere to.\r\rBy setting these values you can carefully control how Game Objects deal with responsive scaling.\r\rIf only one parameter is given then that value will be used for both scaleMin and scaleMax:\r`setScaleMinMax(1)` = scaleMin.x, scaleMin.y, scaleMax.x and scaleMax.y all = 1\r\rIf only two parameters are given the first is set as scaleMin.x and y and the second as scaleMax.x and y:\r`setScaleMinMax(0.5, 2)` = scaleMin.x and y = 0.5 and scaleMax.x and y = 2\r\rIf you wish to set `scaleMin` with different values for x and y then either modify Game Object.scaleMin directly, \ror pass `null` for the `maxX` and `maxY` parameters.\r\rCall `setScaleMinMax(null)` to clear all previously set values.","kind":"function","params":[{"type":{"names":["number","null"]},"description":"The minimum horizontal scale value this Game Object can scale down to.","name":"minX"},{"type":{"names":["number","null"]},"description":"The minimum vertical scale value this Game Object can scale down to.","name":"minY"},{"type":{"names":["number","null"]},"description":"The maximum horizontal scale value this Game Object can scale up to.","name":"maxX"},{"type":{"names":["number","null"]},"description":"The maximum vertical scale value this Game Object can scale up to.","name":"maxY"}],"name":"setScaleMinMax","longname":"Phaser.Particle#setScaleMinMax","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#setScaleMinMax","inherited":true,"___s":true},{"meta":{"range":[680,1221],"filename":"Smoothed.js","lineno":25,"path":"src\\gameobjects\\components"},"description":"Enable or disable texture smoothing for this Game Object.\r\rIt only takes effect if the Game Object is using an image based texture.\r\rSmoothing is enabled by default.","properties":[{"type":{"names":["boolean"]},"name":"smoothed"}],"name":"smoothed","longname":"Phaser.Particle#smoothed","kind":"member","memberof":"Phaser.Particle","scope":"instance","inherits":"Phaser.Component.Smoothed#smoothed","inherited":true,"___s":true},{"meta":{"range":[1410,1426],"filename":"RenderTexture.js","lineno":30,"path":"src\\gameobjects"},"properties":[{"type":{"names":["Phaser.Game"]},"description":"A reference to the currently running game.","name":"game"}],"name":"game","longname":"Phaser.RetroFont#game","kind":"member","memberof":"Phaser.RetroFont","scope":"instance","inherits":"Phaser.RenderTexture#game","inherited":true,"___s":true},{"meta":{"range":[1544,1558],"filename":"RenderTexture.js","lineno":35,"path":"src\\gameobjects"},"properties":[{"type":{"names":["string"]},"description":"The key of the RenderTexture in the Cache, if stored there.","name":"key"}],"name":"key","longname":"Phaser.RetroFont#key","kind":"member","memberof":"Phaser.RetroFont","scope":"instance","inherits":"Phaser.RenderTexture#key","inherited":true,"___s":true},{"meta":{"range":[2197,2884],"filename":"RenderTexture.js","lineno":57,"path":"src\\gameobjects"},"description":"This function will draw the display object to the RenderTexture at the given coordinates.\r\rWhen the display object is drawn it takes into account scale and rotation.\r\rIf you don't want those then use RenderTexture.renderRawXY instead.","kind":"function","name":"renderXY","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Group"]},"description":"The display object to render to this texture.","name":"displayObject"},{"type":{"names":["number"]},"description":"The x position to render the object at.","name":"x"},{"type":{"names":["number"]},"description":"The y position to render the object at.","name":"y"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the texture will be cleared before the display object is drawn.","name":"clear"}],"memberof":"Phaser.RetroFont","longname":"Phaser.RetroFont#renderXY","scope":"instance","inherits":"Phaser.RenderTexture#renderXY","inherited":true,"___s":true},{"meta":{"range":[3369,4069],"filename":"RenderTexture.js","lineno":89,"path":"src\\gameobjects"},"description":"This function will draw the display object to the RenderTexture at the given coordinates.\r\rWhen the display object is drawn it doesn't take into account scale, rotation or translation.\r\rIf you need those then use RenderTexture.renderXY instead.","kind":"function","name":"renderRawXY","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Group"]},"description":"The display object to render to this texture.","name":"displayObject"},{"type":{"names":["number"]},"description":"The x position to render the object at.","name":"x"},{"type":{"names":["number"]},"description":"The y position to render the object at.","name":"y"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the texture will be cleared before the display object is drawn.","name":"clear"}],"memberof":"Phaser.RetroFont","longname":"Phaser.RetroFont#renderRawXY","scope":"instance","inherits":"Phaser.RenderTexture#renderRawXY","inherited":true,"___s":true},{"meta":{"range":[4445,5527],"filename":"RenderTexture.js","lineno":117,"path":"src\\gameobjects"},"description":"This function will draw the display object to the RenderTexture.\r\rIn versions of Phaser prior to 2.4.0 the second parameter was a Phaser.Point object. \rThis is now a Matrix allowing you much more control over how the Display Object is rendered.\rIf you need to replicate the earlier behavior please use Phaser.RenderTexture.renderXY instead.\r\rIf you wish for the displayObject to be rendered taking its current scale, rotation and translation into account then either\rpass `null`, leave it undefined or pass `displayObject.worldTransform` as the matrix value.","kind":"function","name":"render","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Group"]},"description":"The display object to render to this texture.","name":"displayObject"},{"type":{"names":["Phaser.Matrix"]},"optional":true,"description":"Optional matrix to apply to the display object before rendering. If null or undefined it will use the worldTransform matrix of the given display object.","name":"matrix"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the texture will be cleared before the display object is drawn.","name":"clear"}],"memberof":"Phaser.RetroFont","longname":"Phaser.RetroFont#render","scope":"instance","inherits":"Phaser.RenderTexture#render","inherited":true,"___s":true},{"meta":{"range":[3048,3058],"filename":"Core.js","lineno":142,"path":"src\\gameobjects\\components"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"name":"game","longname":"Phaser.Rope#game","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Core#game","inherited":true,"___s":true},{"meta":{"range":[3279,3287],"filename":"Core.js","lineno":150,"path":"src\\gameobjects\\components"},"description":"A user defined name given to this Game Object.\rThis value isn't ever used internally by Phaser, it is meant as a game level property.","properties":[{"type":{"names":["string"]},"name":"name"}],"defaultvalue":"","name":"name","longname":"Phaser.Rope#name","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Core#name","inherited":true,"___s":true},{"meta":{"range":[3651,3659],"filename":"Core.js","lineno":160,"path":"src\\gameobjects\\components"},"description":"An empty Object that belongs to this Game Object.\rThis value isn't ever used internally by Phaser, but may be used by your own code, or\rby Phaser Plugins, to store data that needs to be associated with the Game Object,\rwithout polluting the Game Object directly.","properties":[{"type":{"names":["Object"]},"name":"data"}],"defaultvalue":"{}","defaultvaluetype":"object","name":"data","longname":"Phaser.Rope#data","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Core#data","inherited":true,"___s":true},{"meta":{"range":[3794,3808],"filename":"Core.js","lineno":167,"path":"src\\gameobjects\\components"},"description":"The components this Game Object has installed.","properties":[{"type":{"names":["object"]},"name":"components"}],"access":"protected","name":"components","longname":"Phaser.Rope#components","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Core#components","inherited":true,"___s":true},{"meta":{"range":[4202,4206],"filename":"Core.js","lineno":177,"path":"src\\gameobjects\\components"},"description":"The z depth of this Game Object within its parent Group.\rNo two objects in a Group can have the same z value.\rThis value is adjusted automatically whenever the Group hierarchy changes.\rIf you wish to re-order the layering of a Game Object then see methods like Group.moveUp or Group.bringToTop.","properties":[{"type":{"names":["number"]},"name":"z"}],"readonly":true,"name":"z","longname":"Phaser.Rope#z","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Core#z","inherited":true,"___s":true},{"meta":{"range":[4484,4501],"filename":"Core.js","lineno":185,"path":"src\\gameobjects\\components"},"description":"All Phaser Game Objects have an Events class which contains all of the events that are dispatched when certain things happen to this\rGame Object, or any of its components.","see":["Phaser.Events"],"properties":[{"type":{"names":["Phaser.Events"]},"name":"events"}],"name":"events","longname":"Phaser.Rope#events","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Core#events","inherited":true,"___s":true},{"meta":{"range":[4815,4836],"filename":"Core.js","lineno":193,"path":"src\\gameobjects\\components"},"description":"If the Game Object is enabled for animation (such as a Phaser.Sprite) this is a reference to its AnimationManager instance.\rThrough it you can create, play, pause and stop animations.","see":["Phaser.AnimationManager"],"properties":[{"type":{"names":["Phaser.AnimationManager"]},"name":"animations"}],"name":"animations","longname":"Phaser.Rope#animations","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Core#animations","inherited":true,"___s":true},{"meta":{"range":[5559,5566],"filename":"Core.js","lineno":203,"path":"src\\gameobjects\\components"},"description":"The key of the image or texture used by this Game Object during rendering.\rIf it is a string it's the string used to retrieve the texture from the Phaser Image Cache.\rIt can also be an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.\rIf a Game Object is created without a key it is automatically assigned the key `__default` which is a 32x32 transparent PNG stored within the Cache.\rIf a Game Object is given a key which doesn't exist in the Image Cache it is re-assigned the key `__missing` which is a 32x32 PNG of a green box with a line through it.","properties":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"name":"key"}],"name":"key","longname":"Phaser.Rope#key","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Core#key","inherited":true,"___s":true},{"meta":{"range":[5882,5893],"filename":"Core.js","lineno":211,"path":"src\\gameobjects\\components"},"description":"The world coordinates of this Game Object in pixels.\rDepending on where in the display list this Game Object is placed this value can differ from `position`, \rwhich contains the x/y coordinates relative to the Game Objects parent.","properties":[{"type":{"names":["Phaser.Point"]},"name":"world"}],"name":"world","longname":"Phaser.Rope#world","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Core#world","inherited":true,"___s":true},{"meta":{"range":[6029,6041],"filename":"Core.js","lineno":218,"path":"src\\gameobjects\\components"},"description":"A debug flag designed for use with `Game.enableStep`.","properties":[{"type":{"names":["boolean"]},"name":"debug"}],"defaultvalue":false,"name":"debug","longname":"Phaser.Rope#debug","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Core#debug","inherited":true,"___s":true},{"meta":{"range":[6204,6226],"filename":"Core.js","lineno":225,"path":"src\\gameobjects\\components"},"description":"The position the Game Object was located in the previous frame.","properties":[{"type":{"names":["Phaser.Point"]},"name":"previousPosition"}],"readonly":true,"name":"previousPosition","longname":"Phaser.Rope#previousPosition","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Core#previousPosition","inherited":true,"___s":true},{"meta":{"range":[6406,6425],"filename":"Core.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"The rotation the Game Object was in set to in the previous frame. Value is in radians.","properties":[{"type":{"names":["number"]},"name":"previousRotation"}],"readonly":true,"name":"previousRotation","longname":"Phaser.Rope#previousRotation","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Core#previousRotation","inherited":true,"___s":true},{"meta":{"range":[6720,6736],"filename":"Core.js","lineno":240,"path":"src\\gameobjects\\components"},"description":"The render order ID is used internally by the renderer and Input Manager and should not be modified.\rThis property is mostly used internally by the renderers, but is exposed for the use of plugins.","properties":[{"type":{"names":["number"]},"name":"renderOrderID"}],"readonly":true,"name":"renderOrderID","longname":"Phaser.Rope#renderOrderID","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Core#renderOrderID","inherited":true,"___s":true},{"meta":{"range":[7053,7064],"filename":"Core.js","lineno":248,"path":"src\\gameobjects\\components"},"description":"A Game Object is considered `fresh` if it has just been created or reset and is yet to receive a renderer transform update.\rThis property is mostly used internally by the physics systems, but is exposed for the use of plugins.","properties":[{"type":{"names":["boolean"]},"name":"fresh"}],"readonly":true,"name":"fresh","longname":"Phaser.Rope#fresh","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Core#fresh","inherited":true,"___s":true},{"meta":{"range":[7518,7539],"filename":"Core.js","lineno":259,"path":"src\\gameobjects\\components"},"description":"A Game Object is that is pendingDestroy is flagged to have its destroy method called on the next logic update.\rYou can set it directly to allow you to flag an object to be destroyed on its next update.\r\rThis is extremely useful if you wish to destroy an object from within one of its own callbacks \rsuch as with Buttons or other Input events.","properties":[{"type":{"names":["boolean"]},"name":"pendingDestroy"}],"name":"pendingDestroy","longname":"Phaser.Rope#pendingDestroy","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Core#pendingDestroy","inherited":true,"___s":true},{"meta":{"range":[8354,9085],"filename":"Core.js","lineno":284,"path":"src\\gameobjects\\components"},"description":"Controls if this Game Object is processed by the core game loop.\rIf this Game Object has a physics body it also controls if its physics body is updated or not.\rWhen `exists` is set to `false` it will remove its physics body from the physics world if it has one.\rIt also toggles the `visible` property to false as well.\r\rSetting `exists` to true will add its physics body back in to the physics world, if it has one.\rIt will also set the `visible` property to `true`.","properties":[{"type":{"names":["boolean"]},"name":"exists"}],"name":"exists","longname":"Phaser.Rope#exists","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Core#exists","inherited":true,"___s":true},{"meta":{"range":[9544,10055],"filename":"Core.js","lineno":338,"path":"src\\gameobjects\\components"},"description":"Internal method called by the World postUpdate cycle.","kind":"function","access":"protected","name":"postUpdate","longname":"Phaser.Rope#postUpdate","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Core#postUpdate","inherited":true,"___s":true},{"meta":{"range":[1110,1382],"filename":"Angle.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"The angle property is the rotation of the Game Object in *degrees* from its original orientation.\r\rValues from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\r\rValues outside this range are added to or subtracted from 360 to obtain a value within the range. \rFor example, the statement player.angle = 450 is the same as player.angle = 90.\r\rIf you wish to work in radians instead of degrees you can use the property `rotation` instead. \rWorking in radians is slightly faster as it doesn't have to perform any calculations.","properties":[{"type":{"names":["number"]},"name":"angle"}],"name":"angle","longname":"Phaser.Rope#angle","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Angle#angle","inherited":true,"___s":true},{"meta":{"range":[1545,1745],"filename":"Animation.js","lineno":31,"path":"src\\gameobjects\\components"},"description":"Plays an Animation.\r\rThe animation should have previously been created via `animations.add`.\r\rIf the animation is already playing calling this again won't do anything.\rIf you need to reset an already running animation do so directly on the Animation object itself or via `AnimationManager.stop`.","kind":"function","params":[{"type":{"names":["string"]},"description":"The name of the animation to be played, e.g. \"fire\", \"walk\", \"jump\". Must have been previously created via 'AnimationManager.add'.","name":"name"},{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"The framerate to play the animation at. The speed is given in frames per second. If not provided the previously set frameRate of the Animation is used.","name":"frameRate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the animation be looped after playback. If not provided the previously set loop value of the Animation is used.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set to true when the animation completes (only happens if loop=false) the parent Sprite will be killed.","name":"killOnComplete"}],"returns":[{"type":{"names":["Phaser.Animation"]},"description":"A reference to playing Animation."}],"name":"play","longname":"Phaser.Rope#play","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Animation#play","inherited":true,"___s":true},{"meta":{"range":[1129,1144],"filename":"AutoCull.js","lineno":28,"path":"src\\gameobjects\\components"},"description":"A Game Object with `autoCull` set to true will check its bounds against the World Camera every frame.\rIf it is not intersecting the Camera bounds at any point then it has its `renderable` property set to `false`.\rThis keeps the Game Object alive and still processing updates, but forces it to skip the render step entirely.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"autoCull"}],"defaultvalue":false,"name":"autoCull","longname":"Phaser.Rope#autoCull","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.AutoCull#autoCull","inherited":true,"___s":true},{"meta":{"range":[1402,1809],"filename":"AutoCull.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds intersect with the Game Camera bounds.\rReturns `true` if they do, otherwise `false` if fully outside of the Cameras bounds.","properties":[{"type":{"names":["boolean"]},"name":"inCamera"}],"readonly":true,"name":"inCamera","longname":"Phaser.Rope#inCamera","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.AutoCull#inCamera","inherited":true,"___s":true},{"meta":{"range":[661,773],"filename":"Bounds.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its x coordinate.\rThis is the same as `width * anchor.x`.\rIt will only be > 0 if anchor.x is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetX"}],"readonly":true,"name":"offsetX","longname":"Phaser.Rope#offsetX","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Bounds#offsetX","inherited":true,"___s":true},{"meta":{"range":[1042,1155],"filename":"Bounds.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its y coordinate.\rThis is the same as `height * anchor.y`.\rIt will only be > 0 if anchor.y is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetY"}],"readonly":true,"name":"offsetY","longname":"Phaser.Rope#offsetY","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Bounds#offsetY","inherited":true,"___s":true},{"meta":{"range":[1331,1579],"filename":"Bounds.js","lineno":58,"path":"src\\gameobjects\\components"},"description":"The center x coordinate of the Game Object.\rThis is the same as `(x - offsetX) + (width / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerX"}],"name":"centerX","longname":"Phaser.Rope#centerX","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Bounds#centerX","inherited":true,"___s":true},{"meta":{"range":[1756,2006],"filename":"Bounds.js","lineno":80,"path":"src\\gameobjects\\components"},"description":"The center y coordinate of the Game Object.\rThis is the same as `(y - offsetY) + (height / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerY"}],"name":"centerY","longname":"Phaser.Rope#centerY","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Bounds#centerY","inherited":true,"___s":true},{"meta":{"range":[2159,2358],"filename":"Bounds.js","lineno":102,"path":"src\\gameobjects\\components"},"description":"The left coordinate of the Game Object.\rThis is the same as `x - offsetX`.","properties":[{"type":{"names":["number"]},"name":"left"}],"name":"left","longname":"Phaser.Rope#left","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Bounds#left","inherited":true,"___s":true},{"meta":{"range":[2521,2751],"filename":"Bounds.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The right coordinate of the Game Object.\rThis is the same as `x + width - offsetX`.","properties":[{"type":{"names":["number"]},"name":"right"}],"name":"right","longname":"Phaser.Rope#right","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Bounds#right","inherited":true,"___s":true},{"meta":{"range":[2900,3098],"filename":"Bounds.js","lineno":146,"path":"src\\gameobjects\\components"},"description":"The y coordinate of the Game Object.\rThis is the same as `y - offsetY`.","properties":[{"type":{"names":["number"]},"name":"top"}],"name":"top","longname":"Phaser.Rope#top","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Bounds#top","inherited":true,"___s":true},{"meta":{"range":[3262,3495],"filename":"Bounds.js","lineno":168,"path":"src\\gameobjects\\components"},"description":"The sum of the y and height properties.\rThis is the same as `y + height - offsetY`.","properties":[{"type":{"names":["number"]},"name":"bottom"}],"name":"bottom","longname":"Phaser.Rope#bottom","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Bounds#bottom","inherited":true,"___s":true},{"meta":{"range":[6346,8224],"filename":"Bounds.js","lineno":223,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object within another Game Object, or Rectangle, known as the\r'container', to one of 9 possible positions.\r\rThe container must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe container. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, \r`Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, \r`Phaser.BOTTOM_CENTER` and `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rcontainer, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignIn(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the containers bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the container bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"container"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignIn","longname":"Phaser.Rope#alignIn","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Bounds#alignIn","inherited":true,"___s":true},{"meta":{"range":[11205,13527],"filename":"Bounds.js","lineno":321,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object to the side of another Game Object, or Rectangle, known as the\r'parent', in one of 11 possible positions.\r\rThe parent must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe parent. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, \r`Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, \r`Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` \rand `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rparent, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignTo(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the parents bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the parent bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"parent"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, `Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, `Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignTo","longname":"Phaser.Rope#alignTo","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Bounds#alignTo","inherited":true,"___s":true},{"meta":{"range":[784,949],"filename":"BringToTop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"Brings this Game Object to the top of its parents display list.\rVisually this means it will render over the top of any old child in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will bring it to the top of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"bringToTop","longname":"Phaser.Rope#bringToTop","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.BringToTop#bringToTop","inherited":true,"___s":true},{"meta":{"range":[1378,1543],"filename":"BringToTop.js","lineno":45,"path":"src\\gameobjects\\components"},"description":"Sends this Game Object to the bottom of its parents display list.\rVisually this means it will render below all other children in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will send it to the bottom of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"sendToBack","longname":"Phaser.Rope#sendToBack","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.BringToTop#sendToBack","inherited":true,"___s":true},{"meta":{"range":[1982,2140],"filename":"BringToTop.js","lineno":66,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object up one place in its parents display list.\rThis call has no effect if the Game Object is already at the top of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object up within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveUp","longname":"Phaser.Rope#moveUp","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.BringToTop#moveUp","inherited":true,"___s":true},{"meta":{"range":[2586,2748],"filename":"BringToTop.js","lineno":87,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object down one place in its parents display list.\rThis call has no effect if the Game Object is already at the bottom of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object down within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveDown","longname":"Phaser.Rope#moveDown","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.BringToTop#moveDown","inherited":true,"___s":true},{"meta":{"range":[751,765],"filename":"Crop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Rectangle used to crop the texture this Game Object uses.\rSet this property via `crop`. \rIf you modify this property directly you must call `updateCrop` in order to have the change take effect.","properties":[{"type":{"names":["Phaser.Rectangle"]},"name":"cropRect"}],"defaultvalue":null,"name":"cropRect","longname":"Phaser.Rope#cropRect","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Crop#cropRect","inherited":true,"___s":true},{"meta":{"range":[2112,2842],"filename":"Crop.js","lineno":49,"path":"src\\gameobjects\\components"},"description":"Crop allows you to crop the texture being used to display this Game Object.\rSetting a crop rectangle modifies the core texture frame. The Game Object width and height properties will be adjusted accordingly.\r\rCropping takes place from the top-left and can be modified in real-time either by providing an updated rectangle object to this method,\ror by modifying `cropRect` property directly and then calling `updateCrop`.\r\rThe rectangle object given to this method can be either a `Phaser.Rectangle` or any other object \rso long as it has public `x`, `y`, `width`, `height`, `right` and `bottom` properties.\r\rA reference to the rectangle is stored in `cropRect` unless the `copy` parameter is `true`, \rin which case the values are duplicated to a local object.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle used during cropping. Pass null or no parameters to clear a previously set crop rectangle.","name":"rect"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If false `cropRect` will be stored as a reference to the given rect. If true it will copy the rect values into a local Phaser Rectangle object stored in cropRect.","name":"copy"}],"name":"crop","longname":"Phaser.Rope#crop","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Crop#crop","inherited":true,"___s":true},{"meta":{"range":[3107,4426],"filename":"Crop.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"If you have set a crop rectangle on this Game Object via `crop` and since modified the `cropRect` property,\ror the rectangle it references, then you need to update the crop frame by calling this method.","kind":"function","name":"updateCrop","longname":"Phaser.Rope#updateCrop","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Crop#updateCrop","inherited":true,"___s":true},{"meta":{"range":[707,829],"filename":"Delta.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"Returns the delta x value. The difference between world.x now and in the previous frame.\r\rThe value will be positive if the Game Object has moved to the right or negative if to the left.","properties":[{"type":{"names":["number"]},"name":"deltaX"}],"readonly":true,"name":"deltaX","longname":"Phaser.Rope#deltaX","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Delta#deltaX","inherited":true,"___s":true},{"meta":{"range":[1103,1225],"filename":"Delta.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"Returns the delta y value. The difference between world.y now and in the previous frame.\r\rThe value will be positive if the Game Object has moved down or negative if up.","properties":[{"type":{"names":["number"]},"name":"deltaY"}],"readonly":true,"name":"deltaY","longname":"Phaser.Rope#deltaY","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Delta#deltaY","inherited":true,"___s":true},{"meta":{"range":[1424,1545],"filename":"Delta.js","lineno":58,"path":"src\\gameobjects\\components"},"description":"Returns the delta z value. The difference between rotation now and in the previous frame.","properties":[{"type":{"names":["number"]},"description":"The delta value.","name":"deltaZ"}],"readonly":true,"name":"deltaZ","longname":"Phaser.Rope#deltaZ","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Delta#deltaZ","inherited":true,"___s":true},{"meta":{"range":[629,648],"filename":"Destroy.js","lineno":22,"path":"src\\gameobjects\\components"},"description":"As a Game Object runs through its destroy method this flag is set to true, \rand can be checked in any sub-systems or plugins it is being destroyed from.","properties":[{"type":{"names":["boolean"]},"name":"destroyPhase"}],"readonly":true,"name":"destroyPhase","longname":"Phaser.Rope#destroyPhase","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Destroy#destroyPhase","inherited":true,"___s":true},{"meta":{"range":[1497,4401],"filename":"Destroy.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Destroys the Game Object. This removes it from its parent group, destroys the input, event and animation handlers if present\rand nulls its reference to `game`, freeing it up for garbage collection.\r\rIf this Game Object has the Events component it will also dispatch the `onDestroy` event.\r\rYou can optionally also destroy the BaseTexture this Game Object is using. Be careful if you've\rmore than one Game Object sharing the same BaseTexture.","kind":"function","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should every child of this object have its destroy method called as well?","name":"destroyChildren"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Destroy the BaseTexture this Game Object is using? Note that if another Game Object is sharing the same BaseTexture it will invalidate it.","name":"destroyTexture"}],"name":"destroy","longname":"Phaser.Rope#destroy","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Destroy#destroy","inherited":true,"___s":true},{"meta":{"range":[2104,2515],"filename":"FixedToCamera.js","lineno":56,"path":"src\\gameobjects\\components"},"description":"A Game Object that is \"fixed\" to the camera uses its x/y coordinates as offsets from the top left of the camera during rendering.\r\rThe values are adjusted at the rendering stage, overriding the Game Objects actual world position.\r\rThe end result is that the Game Object will appear to be 'fixed' to the camera, regardless of where in the game world\rthe camera is viewing. This is useful if for example this Game Object is a UI item that you wish to be visible at all times \rregardless where in the world the camera is.\r\rThe offsets are stored in the `cameraOffset` property.\r\rNote that the `cameraOffset` values are in addition to any parent of this Game Object on the display list.\r\rBe careful not to set `fixedToCamera` on Game Objects which are in Groups that already have `fixedToCamera` enabled on them.","properties":[{"type":{"names":["boolean"]},"name":"fixedToCamera"}],"name":"fixedToCamera","longname":"Phaser.Rope#fixedToCamera","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.FixedToCamera#fixedToCamera","inherited":true,"___s":true},{"meta":{"range":[2868,2900],"filename":"FixedToCamera.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"The x/y coordinate offset applied to the top-left of the camera that this Game Object will be drawn at if `fixedToCamera` is true.\r\rThe values are relative to the top-left of the camera view and in addition to any parent of the Game Object on the display list.","properties":[{"type":{"names":["Phaser.Point"]},"name":"cameraOffset"}],"name":"cameraOffset","longname":"Phaser.Rope#cameraOffset","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.FixedToCamera#cameraOffset","inherited":true,"___s":true},{"meta":{"range":[3394,3417],"filename":"InWorld.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"If this is set to `true` the Game Object checks if it is within the World bounds each frame. \r\rWhen it is no longer intersecting the world bounds it dispatches the `onOutOfBounds` event.\r\rIf it was *previously* out of bounds but is now intersecting the world bounds again it dispatches the `onEnterBounds` event.\r\rIt also optionally kills the Game Object if `outOfBoundsKill` is `true`.\r\rWhen `checkWorldBounds` is enabled it forces the Game Object to calculate its full bounds every frame.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"checkWorldBounds"}],"defaultvalue":false,"name":"checkWorldBounds","longname":"Phaser.Rope#checkWorldBounds","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.InWorld#checkWorldBounds","inherited":true,"___s":true},{"meta":{"range":[3653,3675],"filename":"InWorld.js","lineno":106,"path":"src\\gameobjects\\components"},"description":"If this and the `checkWorldBounds` property are both set to `true` then the `kill` method is called as soon as `inWorld` returns false.","properties":[{"type":{"names":["boolean"]},"name":"outOfBoundsKill"}],"defaultvalue":false,"name":"outOfBoundsKill","longname":"Phaser.Rope#outOfBoundsKill","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.InWorld#outOfBoundsKill","inherited":true,"___s":true},{"meta":{"range":[3939,3967],"filename":"InWorld.js","lineno":115,"path":"src\\gameobjects\\components"},"description":"If this and the `autoCull` property are both set to `true`, then the `kill` method\ris called as soon as the Game Object leaves the camera bounds.","properties":[{"type":{"names":["boolean"]},"name":"outOfCameraBoundsKill"}],"defaultvalue":false,"name":"outOfCameraBoundsKill","longname":"Phaser.Rope#outOfCameraBoundsKill","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.InWorld#outOfCameraBoundsKill","inherited":true,"___s":true},{"meta":{"range":[4292,4429],"filename":"InWorld.js","lineno":129,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds are within, or intersect at any point with the Game World bounds.","properties":[{"type":{"names":["boolean"]},"name":"inWorld"}],"readonly":true,"name":"inWorld","longname":"Phaser.Rope#inWorld","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.InWorld#inWorld","inherited":true,"___s":true},{"meta":{"range":[1310,1321],"filename":"LifeSpan.js","lineno":50,"path":"src\\gameobjects\\components"},"description":"A useful flag to control if the Game Object is alive or dead.\r\rThis is set automatically by the Health components `damage` method should the object run out of health.\rOr you can toggle it via your game code.\r\rThis property is mostly just provided to be used by your game - it doesn't effect rendering or logic updates.\rHowever you can use `Group.getFirstAlive` in conjunction with this property for fast object pooling and recycling.","properties":[{"type":{"names":["boolean"]},"name":"alive"}],"defaultvalue":true,"name":"alive","longname":"Phaser.Rope#alive","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.LifeSpan#alive","inherited":true,"___s":true},{"meta":{"range":[1843,1854],"filename":"LifeSpan.js","lineno":65,"path":"src\\gameobjects\\components"},"description":"The lifespan allows you to give a Game Object a lifespan in milliseconds.\r\rOnce the Game Object is 'born' you can set this to a positive value.\r\rIt is automatically decremented by the millisecond equivalent of `game.time.physicsElapsed` each frame.\rWhen it reaches zero it will call the `kill` method.\r\rVery handy for particles, bullets, collectibles, or any other short-lived entity.","properties":[{"type":{"names":["number"]},"name":"lifespan"}],"defaultvalue":0,"name":"lifespan","longname":"Phaser.Rope#lifespan","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.LifeSpan#lifespan","inherited":true,"___s":true},{"meta":{"range":[2390,2807],"filename":"LifeSpan.js","lineno":78,"path":"src\\gameobjects\\components"},"description":"Brings a 'dead' Game Object back to life, optionally resetting its health value in the process.\r\rA resurrected Game Object has its `alive`, `exists` and `visible` properties all set to true.\r\rIt will dispatch the `onRevived` event. Listen to `events.onRevived` for the signal.","kind":"function","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"The health to give the Game Object. Only set if the GameObject has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"revive","longname":"Phaser.Rope#revive","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.LifeSpan#revive","inherited":true,"___s":true},{"meta":{"range":[3390,3634],"filename":"LifeSpan.js","lineno":113,"path":"src\\gameobjects\\components"},"description":"Kills a Game Object. A killed Game Object has its `alive`, `exists` and `visible` properties all set to false.\r\rIt will dispatch the `onKilled` event. You can listen to `events.onKilled` for the signal.\r\rNote that killing a Game Object is a way for you to quickly recycle it in an object pool,\rit doesn't destroy the object or free it up from memory.\r\rIf you don't need this Game Object any more you should call `destroy` instead.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"kill","longname":"Phaser.Rope#kill","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.LifeSpan#kill","inherited":true,"___s":true},{"meta":{"range":[2545,5312],"filename":"LoadTexture.js","lineno":51,"path":"src\\gameobjects\\components"},"description":"Changes the base texture the Game Object is using. The old texture is removed and the new one is referenced or fetched from the Cache.\r\rIf your Game Object is using a frame from a texture atlas and you just wish to change to another frame, then see the `frame` or `frameName` properties instead.\r\rYou should only use `loadTexture` if you want to replace the base texture entirely.\r\rCalling this method causes a WebGL texture update, so use sparingly or in low-intensity portions of your game, or if you know the new texture is already on the GPU.\r\rYou can use the new const `Phaser.PENDING_ATLAS` as the texture key for any sprite. \rDoing this then sets the key to be the `frame` argument (the frame is set to zero). \r\rThis allows you to create sprites using `load.image` during development, and then change them \rto use a Texture Atlas later in development by simply searching your code for 'PENDING_ATLAS' \rand swapping it to be the key of the atlas data.\r\rNote: You cannot use a RenderTexture as a texture for a TileSprite.","kind":"function","params":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If an animation is already playing on this Sprite you can choose to stop it or let it carry on playing.","name":"stopAnimation"}],"name":"loadTexture","longname":"Phaser.Rope#loadTexture","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.LoadTexture#loadTexture","inherited":true,"___s":true},{"meta":{"range":[5633,7262],"filename":"LoadTexture.js","lineno":155,"path":"src\\gameobjects\\components"},"description":"Sets the texture frame the Game Object uses for rendering.\r\rThis is primarily an internal method used by `loadTexture`, but is exposed for the use of plugins and custom classes.","kind":"function","params":[{"type":{"names":["Phaser.Frame"]},"description":"The Frame to be used by the texture.","name":"frame"}],"name":"setFrame","longname":"Phaser.Rope#setFrame","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.LoadTexture#setFrame","inherited":true,"___s":true},{"meta":{"range":[7825,7986],"filename":"LoadTexture.js","lineno":220,"path":"src\\gameobjects\\components"},"description":"Resizes the Frame dimensions that the Game Object uses for rendering.\r\rYou shouldn't normally need to ever call this, but in the case of special texture types such as Video or BitmapData\rit can be useful to adjust the dimensions directly in this way.","kind":"function","params":[{"type":{"names":["object"]},"description":"The parent texture object that caused the resize, i.e. a Phaser.Video object.","name":"parent"},{"type":{"names":["integer"]},"description":"The new width of the texture.","name":"width"},{"type":{"names":["integer"]},"description":"The new height of the texture.","name":"height"}],"name":"resizeFrame","longname":"Phaser.Rope#resizeFrame","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.LoadTexture#resizeFrame","inherited":true,"___s":true},{"meta":{"range":[8118,8243],"filename":"LoadTexture.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"Resets the texture frame dimensions that the Game Object uses for rendering.","kind":"function","name":"resetFrame","longname":"Phaser.Rope#resetFrame","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.LoadTexture#resetFrame","inherited":true,"___s":true},{"meta":{"range":[8868,9060],"filename":"LoadTexture.js","lineno":254,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame index of the texture being used to render this Game Object.\r\rTo change the frame set `frame` to the index of the new frame in the sprite sheet you wish this Game Object to use,\rfor example: `player.frame = 4`.\r\rIf the frame index given doesn't exist it will revert to the first frame found in the texture.\r\rIf you are using a texture atlas then you should use the `frameName` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["integer"]},"name":"frame"}],"name":"frame","longname":"Phaser.Rope#frame","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.LoadTexture#frame","inherited":true,"___s":true},{"meta":{"range":[9723,9927],"filename":"LoadTexture.js","lineno":279,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame name of the texture being used to render this Game Object.\r\rTo change the frame set `frameName` to the name of the new frame in the texture atlas you wish this Game Object to use, \rfor example: `player.frameName = \"idle\"`.\r\rIf the frame name given doesn't exist it will revert to the first frame found in the texture and throw a console warning.\r\rIf you are using a sprite sheet then you should use the `frame` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["string"]},"name":"frameName"}],"name":"frameName","longname":"Phaser.Rope#frameName","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.LoadTexture#frameName","inherited":true,"___s":true},{"meta":{"range":[1339,1475],"filename":"Overlap.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"Checks to see if the bounds of this Game Object overlaps with the bounds of the given Display Object, \rwhich can be a Sprite, Image, TileSprite or anything that extends those such as Button or provides a `getBounds` method and result.\r\rThis check ignores the `hitArea` property if set and runs a `getBounds` comparison on both objects to determine the result.\r\rTherefore it's relatively expensive to use in large quantities, i.e. with lots of Sprites at a high frequency.\rIt should be fine for low-volume testing where physics isn't required.","kind":"function","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.TileSprite","Phaser.Button","PIXI.DisplayObject"]},"description":"The display object to check against.","name":"displayObject"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the bounds of this Game Object intersects at any point with the bounds of the given display object."}],"name":"overlap","longname":"Phaser.Rope#overlap","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Overlap#overlap","inherited":true,"___s":true},{"meta":{"range":[2899,2909],"filename":"PhysicsBody.js","lineno":91,"path":"src\\gameobjects\\components"},"description":"`body` is the Game Objects physics body. Once a Game Object is enabled for physics you access all associated \rproperties and methods via it.\r\rBy default Game Objects won't add themselves to any physics system and their `body` property will be `null`.\r\rTo enable this Game Object for physics you need to call `game.physics.enable(object, system)` where `object` is this object\rand `system` is the Physics system you are using. If none is given it defaults to `Phaser.Physics.Arcade`.\r\rYou can alternatively call `game.physics.arcade.enable(object)`, or add this Game Object to a physics enabled Group.\r\rImportant: Enabling a Game Object for P2 or Ninja physics will automatically set its `anchor` property to 0.5, \rso the physics body is centered on the Game Object.\r\rIf you need a different result then adjust or re-create the Body shape offsets manually or reset the anchor after enabling physics.","properties":[{"type":{"names":["Phaser.Physics.Arcade.Body","Phaser.Physics.P2.Body","Phaser.Physics.Ninja.Body","null"]},"name":"body"}],"defaultvalue":null,"name":"body","longname":"Phaser.Rope#body","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.PhysicsBody#body","inherited":true,"___s":true},{"meta":{"range":[3072,3378],"filename":"PhysicsBody.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the x axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"x"}],"name":"x","longname":"Phaser.Rope#x","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.PhysicsBody#x","inherited":true,"___s":true},{"meta":{"range":[3541,3847],"filename":"PhysicsBody.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the y axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"y"}],"name":"y","longname":"Phaser.Rope#y","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.PhysicsBody#y","inherited":true,"___s":true},{"meta":{"range":[566,589],"filename":"ScaleMinMax.js","lineno":20,"path":"src\\gameobjects\\components"},"description":"The callback that will apply any scale limiting to the worldTransform.","properties":[{"type":{"names":["function"]},"name":"transformCallback"}],"name":"transformCallback","longname":"Phaser.Rope#transformCallback","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#transformCallback","inherited":true,"___s":true},{"meta":{"range":[728,758],"filename":"ScaleMinMax.js","lineno":26,"path":"src\\gameobjects\\components"},"description":"The context under which `transformCallback` is called.","properties":[{"type":{"names":["object"]},"name":"transformCallbackContext"}],"name":"transformCallbackContext","longname":"Phaser.Rope#transformCallbackContext","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#transformCallbackContext","inherited":true,"___s":true},{"meta":{"range":[1047,1061],"filename":"ScaleMinMax.js","lineno":36,"path":"src\\gameobjects\\components"},"description":"The minimum scale this Game Object will scale down to.\r\rIt allows you to prevent a parent from scaling this Game Object lower than the given value.\r\rSet it to `null` to remove the limit.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleMin"}],"name":"scaleMin","longname":"Phaser.Rope#scaleMin","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#scaleMin","inherited":true,"___s":true},{"meta":{"range":[1350,1364],"filename":"ScaleMinMax.js","lineno":46,"path":"src\\gameobjects\\components"},"description":"The maximum scale this Game Object will scale up to. \r\rIt allows you to prevent a parent from scaling this Game Object higher than the given value.\r\rSet it to `null` to remove the limit.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleMax"}],"name":"scaleMax","longname":"Phaser.Rope#scaleMax","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#scaleMax","inherited":true,"___s":true},{"meta":{"range":[3832,5155],"filename":"ScaleMinMax.js","lineno":110,"path":"src\\gameobjects\\components"},"description":"Sets the scaleMin and scaleMax values. These values are used to limit how far this Game Object will scale based on its parent.\r\rFor example if this Game Object has a `minScale` value of 1 and its parent has a `scale` value of 0.5, the 0.5 will be ignored \rand the scale value of 1 will be used, as the parents scale is lower than the minimum scale this Game Object should adhere to.\r\rBy setting these values you can carefully control how Game Objects deal with responsive scaling.\r\rIf only one parameter is given then that value will be used for both scaleMin and scaleMax:\r`setScaleMinMax(1)` = scaleMin.x, scaleMin.y, scaleMax.x and scaleMax.y all = 1\r\rIf only two parameters are given the first is set as scaleMin.x and y and the second as scaleMax.x and y:\r`setScaleMinMax(0.5, 2)` = scaleMin.x and y = 0.5 and scaleMax.x and y = 2\r\rIf you wish to set `scaleMin` with different values for x and y then either modify Game Object.scaleMin directly, \ror pass `null` for the `maxX` and `maxY` parameters.\r\rCall `setScaleMinMax(null)` to clear all previously set values.","kind":"function","params":[{"type":{"names":["number","null"]},"description":"The minimum horizontal scale value this Game Object can scale down to.","name":"minX"},{"type":{"names":["number","null"]},"description":"The minimum vertical scale value this Game Object can scale down to.","name":"minY"},{"type":{"names":["number","null"]},"description":"The maximum horizontal scale value this Game Object can scale up to.","name":"maxX"},{"type":{"names":["number","null"]},"description":"The maximum vertical scale value this Game Object can scale up to.","name":"maxY"}],"name":"setScaleMinMax","longname":"Phaser.Rope#setScaleMinMax","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#setScaleMinMax","inherited":true,"___s":true},{"meta":{"range":[680,1221],"filename":"Smoothed.js","lineno":25,"path":"src\\gameobjects\\components"},"description":"Enable or disable texture smoothing for this Game Object.\r\rIt only takes effect if the Game Object is using an image based texture.\r\rSmoothing is enabled by default.","properties":[{"type":{"names":["boolean"]},"name":"smoothed"}],"name":"smoothed","longname":"Phaser.Rope#smoothed","kind":"member","memberof":"Phaser.Rope","scope":"instance","inherits":"Phaser.Component.Smoothed#smoothed","inherited":true,"___s":true},{"meta":{"range":[2199,2215],"filename":"Group.js","lineno":38,"path":"src\\core"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"access":"protected","name":"game","longname":"Phaser.SpriteBatch#game","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#game","inherited":true,"___s":true},{"meta":{"range":[2425,2452],"filename":"Group.js","lineno":49,"path":"src\\core"},"description":"A name for this group. Not used internally but useful for debugging.","properties":[{"type":{"names":["string"]},"name":"name"}],"name":"name","longname":"Phaser.SpriteBatch#name","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#name","inherited":true,"___s":true},{"meta":{"range":[2690,2700],"filename":"Group.js","lineno":57,"path":"src\\core"},"description":"The z-depth value of this object within its parent container/Group - the World is a Group as well.\rThis value must be unique for each child in a Group.","properties":[{"type":{"names":["integer"]},"name":"z"}],"readonly":true,"name":"z","longname":"Phaser.SpriteBatch#z","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#z","inherited":true,"___s":true},{"meta":{"range":[3287,3318],"filename":"Group.js","lineno":86,"path":"src\\core"},"properties":[{"type":{"names":["number"]},"description":"The const physics body type of this object.","name":"physicsType"}],"readonly":true,"name":"physicsType","longname":"Phaser.SpriteBatch#physicsType","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#physicsType","inherited":true,"___s":true},{"meta":{"range":[3536,3553],"filename":"Group.js","lineno":93,"path":"src\\core"},"description":"The alive property is useful for Groups that are children of other Groups and need to be included/excluded in checks like forEachAlive.","properties":[{"type":{"names":["boolean"]},"name":"alive"}],"defaultvalue":true,"name":"alive","longname":"Phaser.SpriteBatch#alive","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#alive","inherited":true,"___s":true},{"meta":{"range":[3701,3719],"filename":"Group.js","lineno":100,"path":"src\\core"},"description":"If exists is true the group is updated, otherwise it is skipped.","properties":[{"type":{"names":["boolean"]},"name":"exists"}],"defaultvalue":true,"name":"exists","longname":"Phaser.SpriteBatch#exists","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#exists","inherited":true,"___s":true},{"meta":{"range":[3895,3921],"filename":"Group.js","lineno":107,"path":"src\\core"},"description":"A group with `ignoreDestroy` set to `true` ignores all calls to its `destroy` method.","properties":[{"type":{"names":["boolean"]},"name":"ignoreDestroy"}],"defaultvalue":false,"name":"ignoreDestroy","longname":"Phaser.SpriteBatch#ignoreDestroy","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#ignoreDestroy","inherited":true,"___s":true},{"meta":{"range":[4369,4396],"filename":"Group.js","lineno":119,"path":"src\\core"},"description":"A Group is that has `pendingDestroy` set to `true` is flagged to have its destroy method\rcalled on the next logic update.\rYou can set it directly to flag the Group to be destroyed on its next update.\r\rThis is extremely useful if you wish to destroy a Group from within one of its own callbacks\ror a callback of one of its children.","properties":[{"type":{"names":["boolean"]},"name":"pendingDestroy"}],"name":"pendingDestroy","longname":"Phaser.SpriteBatch#pendingDestroy","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#pendingDestroy","inherited":true,"___s":true},{"meta":{"range":[4852,4882],"filename":"Group.js","lineno":130,"path":"src\\core"},"description":"The type of objects that will be created when using {@link #create} or {@link #createMultiple}.\r\rAny object may be used but it should extend either Sprite or Image and accept the same constructor arguments:\rwhen a new object is created it is passed the following parameters to its constructor: `(game, x, y, key, frame)`.","properties":[{"type":{"names":["object"]},"name":"classType"}],"defaultvalue":"{@link Phaser.Sprite}","name":"classType","longname":"Phaser.SpriteBatch#classType","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#classType","inherited":true,"___s":true},{"meta":{"range":[5172,5190],"filename":"Group.js","lineno":138,"path":"src\\core"},"description":"The current display object that the group cursor is pointing to, if any. (Can be set manually.)\r\rThe cursor is a way to iterate through the children in a Group using {@link #next} and {@link #previous}.","properties":[{"type":{"names":["DisplayObject"]},"nullable":true,"name":"cursor"}],"name":"cursor","longname":"Phaser.SpriteBatch#cursor","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#cursor","inherited":true,"___s":true},{"meta":{"range":[5569,5601],"filename":"Group.js","lineno":149,"path":"src\\core"},"description":"A Group with `inputEnableChildren` set to `true` will automatically call `inputEnabled = true` \ron any children _added_ to, or _created by_, this Group.\r\rIf there are children already in the Group at the time you set this property, they are not changed.","properties":[{"type":{"names":["boolean"]},"name":"inputEnableChildren"}],"defaultvalue":false,"name":"inputEnableChildren","longname":"Phaser.SpriteBatch#inputEnableChildren","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#inputEnableChildren","inherited":true,"___s":true},{"meta":{"range":[6075,6118],"filename":"Group.js","lineno":161,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputDown signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 2 arguments: A reference to the Sprite that triggered the signal, and\ra reference to the Pointer that caused it.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputDown"}],"name":"onChildInputDown","longname":"Phaser.SpriteBatch#onChildInputDown","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#onChildInputDown","inherited":true,"___s":true},{"meta":{"range":[6684,6725],"filename":"Group.js","lineno":174,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputUp signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 3 arguments: A reference to the Sprite that triggered the signal, \ra reference to the Pointer that caused it, and a boolean value `isOver` that tells you if the Pointer\ris still over the Sprite or not.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputUp"}],"name":"onChildInputUp","longname":"Phaser.SpriteBatch#onChildInputUp","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#onChildInputUp","inherited":true,"___s":true},{"meta":{"range":[7199,7242],"filename":"Group.js","lineno":186,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputOver signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 2 arguments: A reference to the Sprite that triggered the signal, and\ra reference to the Pointer that caused it.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputOver"}],"name":"onChildInputOver","longname":"Phaser.SpriteBatch#onChildInputOver","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#onChildInputOver","inherited":true,"___s":true},{"meta":{"range":[7714,7756],"filename":"Group.js","lineno":198,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputOut signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 2 arguments: A reference to the Sprite that triggered the signal, and\ra reference to the Pointer that caused it.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputOut"}],"name":"onChildInputOut","longname":"Phaser.SpriteBatch#onChildInputOut","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#onChildInputOut","inherited":true,"___s":true},{"meta":{"range":[8120,8148],"filename":"Group.js","lineno":208,"path":"src\\core"},"description":"If true all Sprites created by, or added to this group, will have a physics body enabled on them.\r\rIf there are children already in the Group at the time you set this property, they are not changed.\r\rThe default body type is controlled with {@link #physicsBodyType}.","properties":[{"type":{"names":["boolean"]},"name":"enableBody"}],"name":"enableBody","longname":"Phaser.SpriteBatch#enableBody","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#enableBody","inherited":true,"___s":true},{"meta":{"range":[8397,8425],"filename":"Group.js","lineno":217,"path":"src\\core"},"description":"If true when a physics body is created (via {@link #enableBody}) it will create a physics debug object as well.\r\rThis only works for P2 bodies.","properties":[{"type":{"names":["boolean"]},"name":"enableBodyDebug"}],"defaultvalue":false,"name":"enableBodyDebug","longname":"Phaser.SpriteBatch#enableBodyDebug","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#enableBodyDebug","inherited":true,"___s":true},{"meta":{"range":[8727,8765],"filename":"Group.js","lineno":225,"path":"src\\core"},"description":"If {@link #enableBody} is true this is the type of physics body that is created on new Sprites.\r\rThe valid values are {@link Phaser.Physics.ARCADE}, {@link Phaser.Physics.P2JS}, {@link Phaser.Physics.NINJA}, etc.","properties":[{"type":{"names":["integer"]},"name":"physicsBodyType"}],"name":"physicsBodyType","longname":"Phaser.SpriteBatch#physicsBodyType","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#physicsBodyType","inherited":true,"___s":true},{"meta":{"range":[9408,9440],"filename":"Group.js","lineno":243,"path":"src\\core"},"description":"If this Group contains Arcade Physics Sprites you can set a custom sort direction via this property.\r\rIt should be set to one of the Phaser.Physics.Arcade sort direction constants: \r\rPhaser.Physics.Arcade.SORT_NONE\rPhaser.Physics.Arcade.LEFT_RIGHT\rPhaser.Physics.Arcade.RIGHT_LEFT\rPhaser.Physics.Arcade.TOP_BOTTOM\rPhaser.Physics.Arcade.BOTTOM_TOP\r\rIf set to `null` the Group will use whatever Phaser.Physics.Arcade.sortDirection is set to. This is the default behavior.","properties":[{"type":{"names":["integer"]},"name":"physicsSortDirection"}],"defaultvalue":null,"name":"physicsSortDirection","longname":"Phaser.SpriteBatch#physicsSortDirection","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#physicsSortDirection","inherited":true,"___s":true},{"meta":{"range":[9571,9607],"filename":"Group.js","lineno":249,"path":"src\\core"},"description":"This signal is dispatched when the group is destroyed.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onDestroy"}],"name":"onDestroy","longname":"Phaser.SpriteBatch#onDestroy","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#onDestroy","inherited":true,"___s":true},{"meta":{"range":[9758,9778],"filename":"Group.js","lineno":255,"path":"src\\core"},"properties":[{"type":{"names":["integer"]},"description":"The current index of the Group cursor. Advance it with Group.next.","name":"cursorIndex"}],"readonly":true,"name":"cursorIndex","longname":"Phaser.SpriteBatch#cursorIndex","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#cursorIndex","inherited":true,"___s":true},{"meta":{"range":[10207,10233],"filename":"Group.js","lineno":265,"path":"src\\core"},"description":"A Group that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in Group.cameraOffset.\r\rNote that the cameraOffset values are in addition to any parent in the display list.\rSo if this Group was in a Group that has x: 200, then this will be added to the cameraOffset.x","properties":[{"type":{"names":["boolean"]},"name":"fixedToCamera"}],"name":"fixedToCamera","longname":"Phaser.SpriteBatch#fixedToCamera","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#fixedToCamera","inherited":true,"___s":true},{"meta":{"range":[10575,10613],"filename":"Group.js","lineno":272,"path":"src\\core"},"description":"If this object is {@link #fixedToCamera} then this stores the x/y position offset relative to the top-left of the camera view.\rIf the parent of this Group is also `fixedToCamera` then the offset here is in addition to that and should typically be disabled.","properties":[{"type":{"names":["Phaser.Point"]},"name":"cameraOffset"}],"name":"cameraOffset","longname":"Phaser.SpriteBatch#cameraOffset","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#cameraOffset","inherited":true,"___s":true},{"meta":{"range":[11287,11301],"filename":"Group.js","lineno":285,"path":"src\\core"},"description":"The hash array is an array belonging to this Group into which you can add any of its children via Group.addToHash and Group.removeFromHash.\r\rOnly children of this Group can be added to and removed from the hash.\r\rThis hash is used automatically by Phaser Arcade Physics in order to perform non z-index based destructive sorting.\rHowever if you don't use Arcade Physics, or this isn't a physics enabled Group, then you can use the hash to perform your own\rsorting and filtering of Group children without touching their z-index (and therefore display draw order)","properties":[{"type":{"names":["array"]},"name":"hash"}],"name":"hash","longname":"Phaser.SpriteBatch#hash","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"Phaser.Group#hash","inherited":true,"___s":true},{"meta":{"range":[12415,13611],"filename":"Group.js","lineno":341,"path":"src\\core"},"description":"Adds an existing object as the top child in this group.\r\rThe child is automatically added to the top of the group, and is displayed above every previous child.\r\rOr if the _optional_ index is specified, the child is added at the location specified by the index value, \rthis allows you to control child ordering.\r\rIf the child was already in this Group, it is simply returned, and nothing else happens to it.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.\r\rUse {@link #addAt} to control where a child is added. Use {@link #create} to create and add a new child.","kind":"function","name":"add","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to add as a child.","name":"child"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the child will not dispatch the `onAddedToGroup` event.","name":"silent"},{"type":{"names":["integer"]},"optional":true,"description":"The index within the group to insert the child to. Where 0 is the bottom of the Group.","name":"index"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was added to the group."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#add","scope":"instance","inherits":"Phaser.Group#add","inherited":true,"___s":true},{"meta":{"range":[14707,15502],"filename":"Group.js","lineno":418,"path":"src\\core"},"description":"Adds an existing object to this group.\r\rThe child is added to the group at the location specified by the index value, this allows you to control child ordering.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.","kind":"function","name":"addAt","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to add as a child.","name":"child"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The index within the group to insert the child to.","name":"index"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the child will not dispatch the `onAddedToGroup` event.","name":"silent"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was added to the group."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#addAt","scope":"instance","inherits":"Phaser.Group#addAt","inherited":true,"___s":true},{"meta":{"range":[15617,16054],"filename":"Group.js","lineno":439,"path":"src\\core"},"description":"Adds a child of this Group into the hash array.\rThis call will return false if the child is not a child of this Group, or is already in the hash.","kind":"function","name":"addToHash","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to add to this Groups hash. Must be a member of this Group already and not present in the hash.","name":"child"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the child was successfully added to the hash, otherwise false."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#addToHash","scope":"instance","inherits":"Phaser.Group#addToHash","inherited":true,"___s":true},{"meta":{"range":[16348,16745],"filename":"Group.js","lineno":464,"path":"src\\core"},"description":"Removes a child of this Group from the hash array.\rThis call will return false if the child is not in the hash.","kind":"function","name":"removeFromHash","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to remove from this Groups hash. Must be a member of this Group and in the hash.","name":"child"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the child was successfully removed from the hash, otherwise false."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#removeFromHash","scope":"instance","inherits":"Phaser.Group#removeFromHash","inherited":true,"___s":true},{"meta":{"range":[17033,18107],"filename":"Group.js","lineno":489,"path":"src\\core"},"description":"Adds an array of existing Display Objects to this Group.\r\rThe Display Objects are automatically added to the top of this Group, and will render on-top of everything already in this Group.\r\rAs well as an array you can also pass another Group as the first argument. In this case all of the children from that\rGroup will be removed from it and added into this Group.\r\rIf `Group.enableBody` is set, then a physics body will be created on the objects, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the objects, so long as one does not already exist.","kind":"function","name":"addMultiple","params":[{"type":{"names":["Array.<DisplayObject>","Phaser.Group"]},"description":"An array of display objects or a Phaser.Group. If a Group is given then *all* children will be moved from it.","name":"children"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch the `onAddedToGroup` event.","name":"silent"}],"returns":[{"type":{"names":["Array.<DisplayObject>","Phaser.Group"]},"description":"The array of children or Group of children that were added to this Group."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#addMultiple","scope":"instance","inherits":"Phaser.Group#addMultiple","inherited":true,"___s":true},{"meta":{"range":[18479,18756],"filename":"Group.js","lineno":524,"path":"src\\core"},"description":"Returns the child found at the given index within this group.","kind":"function","name":"getAt","params":[{"type":{"names":["integer"]},"description":"The index to return the child from.","name":"index"}],"returns":[{"type":{"names":["DisplayObject","integer"]},"description":"The child that was found at the given index, or -1 for an invalid index."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#getAt","scope":"instance","inherits":"Phaser.Group#getAt","inherited":true,"___s":true},{"meta":{"range":[18970,20735],"filename":"Group.js","lineno":544,"path":"src\\core"},"description":"Creates a new Phaser.Sprite object and adds it to the top of this group.\r\rUse {@link #classType} to change the type of object created.\r\rThe child is automatically added to the top of the group, and is displayed above every previous child.\r\rOr if the _optional_ index is specified, the child is added at the location specified by the index value, \rthis allows you to control child ordering.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.","kind":"function","name":"create","params":[{"type":{"names":["number"]},"description":"The x coordinate to display the newly created Sprite at. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to display the newly created Sprite at. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"The default exists state of the Sprite.","name":"exists"},{"type":{"names":["integer"]},"optional":true,"description":"The index within the group to insert the child to. Where 0 is the bottom of the Group.","name":"index"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was created: will be a {@link Phaser.Sprite} unless {@link #classType} has been changed."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#create","scope":"instance","inherits":"Phaser.Group#create","inherited":true,"___s":true},{"meta":{"range":[21074,23649],"filename":"Group.js","lineno":581,"path":"src\\core"},"description":"Creates multiple Phaser.Sprite objects and adds them to the top of this Group.\r\rThis method is useful if you need to quickly generate a pool of sprites, such as bullets.\r\rUse {@link #classType} to change the type of object created.\r\rYou can provide an array as the `key` and / or `frame` arguments. When you do this\rit will create `quantity` Sprites for every key (and frame) in the arrays.\r\rFor example:\r\r`createMultiple(25, ['ball', 'carrot'])`\r\rIn the above code there are 2 keys (ball and carrot) which means that 50 sprites will be\rcreated in total, 25 of each. You can also have the `frame` as an array:\r\r`createMultiple(5, 'bricks', [0, 1, 2, 3])`\r\rIn the above there is one key (bricks), which is a sprite sheet. The frames array tells\rthis method to use frames 0, 1, 2 and 3. So in total it will create 20 sprites, because\rthe quantity was set to 5, so that is 5 brick sprites of frame 0, 5 brick sprites with\rframe 1, and so on.\r\rIf you set both the key and frame arguments to be arrays then understand it will create\ra total quantity of sprites equal to the size of both arrays times each other. I.e.:\r\r`createMultiple(20, ['diamonds', 'balls'], [0, 1, 2])`\r\rThe above will create 20 'diamonds' of frame 0, 20 with frame 1 and 20 with frame 2.\rIt will then create 20 'balls' of frame 0, 20 with frame 1 and 20 with frame 2.\rIn total it will have created 120 sprites.\r\rBy default the Sprites will have their `exists` property set to `false`, and they will be \rpositioned at 0x0, relative to the `Group.x / y` values.\r\rIf `Group.enableBody` is set, then a physics body will be created on the objects, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the objects, so long as one does not already exist.","kind":"function","name":"createMultiple","params":[{"type":{"names":["integer"]},"description":"The number of Sprites to create.","name":"quantity"},{"type":{"names":["string","array"]},"description":"The Cache key of the image that the Sprites will use. Or an Array of keys. See the description for details on how the quantity applies when arrays are used.","name":"key"},{"type":{"names":["integer","string","array"]},"optional":true,"defaultvalue":0,"description":"If the Sprite image contains multiple frames you can specify which one to use here. Or an Array of frames. See the description for details on how the quantity applies when arrays are used.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"The default exists state of the Sprite.","name":"exists"}],"returns":[{"type":{"names":["array"]},"description":"An array containing all of the Sprites that were created."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#createMultiple","scope":"instance","inherits":"Phaser.Group#createMultiple","inherited":true,"___s":true},{"meta":{"range":[24339,24575],"filename":"Group.js","lineno":663,"path":"src\\core"},"description":"Internal method that re-applies all of the children's Z values.\r\rThis must be called whenever children ordering is altered so that their `z` indices are correctly updated.","kind":"function","name":"updateZ","access":"protected","memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#updateZ","scope":"instance","inherits":"Phaser.Group#updateZ","inherited":true,"___s":true},{"meta":{"range":[24736,27678],"filename":"Group.js","lineno":682,"path":"src\\core"},"description":"This method iterates through all children in the Group (regardless if they are visible or exist)\rand then changes their position so they are arranged in a Grid formation. Children must have\rthe `alignTo` method in order to be positioned by this call. All default Phaser Game Objects have\rthis.\r\rThe grid dimensions are determined by the first four arguments. The `width` and `height` arguments\rrelate to the width and height of the grid respectively.\r\rFor example if the Group had 100 children in it:\r\r`Group.align(10, 10, 32, 32)`\r\rThis will align all of the children into a grid formation of 10x10, using 32 pixels per\rgrid cell. If you want a wider grid, you could do:\r\r`Group.align(25, 4, 32, 32)`\r\rThis will align the children into a grid of 25x4, again using 32 pixels per grid cell.\r\rYou can choose to set _either_ the `width` or `height` value to -1. Doing so tells the method\rto keep on aligning children until there are no children left. For example if this Group had\r48 children in it, the following:\r\r`Group.align(-1, 8, 32, 32)`\r\r... will align the children so that there are 8 children vertically (the second argument), \rand each row will contain 6 sprites, except the last one, which will contain 5 (totaling 48)\r\rYou can also do:\r\r`Group.align(10, -1, 32, 32)`\r\rIn this case it will create a grid 10 wide, and as tall as it needs to be in order to fit\rall of the children in.\r\rThe `position` property allows you to control where in each grid cell the child is positioned.\rThis is a constant and can be one of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, \r`Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, \r`Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.\r\rThe final argument; `offset` lets you start the alignment from a specific child index.","kind":"function","name":"align","params":[{"type":{"names":["integer"]},"description":"The width of the grid in items (not pixels). Set to -1 for a dynamic width. If -1 then you must set an explicit height value.","name":"width"},{"type":{"names":["integer"]},"description":"The height of the grid in items (not pixels). Set to -1 for a dynamic height. If -1 then you must set an explicit width value.","name":"height"},{"type":{"names":["integer"]},"description":"The width of each grid cell, in pixels.","name":"cellWidth"},{"type":{"names":["integer"]},"description":"The height of each grid cell, in pixels.","name":"cellHeight"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Optional index to start the alignment from. Defaults to zero, the first child in the Group, but can be set to any valid child index value.","name":"offset"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the Group children were aligned, otherwise false."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#align","scope":"instance","inherits":"Phaser.Group#align","inherited":true,"___s":true},{"meta":{"range":[29501,29838],"filename":"Group.js","lineno":806,"path":"src\\core"},"description":"Sets the group cursor to the first child in the group.\r\rIf the optional index parameter is given it sets the cursor to the object at that index instead.","kind":"function","name":"resetCursor","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Set the cursor to point to a specific index.","name":"index"}],"returns":[{"type":{"names":["any"]},"description":"The child the cursor now points to."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#resetCursor","scope":"instance","inherits":"Phaser.Group#resetCursor","inherited":true,"___s":true},{"meta":{"range":[30189,30462],"filename":"Group.js","lineno":833,"path":"src\\core"},"description":"Advances the group cursor to the next (higher) object in the group.\r\rIf the cursor is at the end of the group (top child) it is moved the start of the group (bottom child).","kind":"function","name":"next","returns":[{"type":{"names":["any"]},"description":"The child the cursor now points to."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#next","scope":"instance","inherits":"Phaser.Group#next","inherited":true,"___s":true},{"meta":{"range":[30859,31125],"filename":"Group.js","lineno":862,"path":"src\\core"},"description":"Moves the group cursor to the previous (lower) child in the group.\r\rIf the cursor is at the start of the group (bottom child) it is moved to the end (top child).","kind":"function","name":"previous","returns":[{"type":{"names":["any"]},"description":"The child the cursor now points to."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#previous","scope":"instance","inherits":"Phaser.Group#previous","inherited":true,"___s":true},{"meta":{"range":[31527,31845],"filename":"Group.js","lineno":891,"path":"src\\core"},"description":"Swaps the position of two children in this group.\r\rBoth children must be in this group, a child cannot be swapped with itself, and unparented children cannot be swapped.","kind":"function","name":"swap","params":[{"type":{"names":["any"]},"description":"The first child to swap.","name":"child1"},{"type":{"names":["any"]},"description":"The second child to swap.","name":"child2"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#swap","scope":"instance","inherits":"Phaser.Group#swap","inherited":true,"___s":true},{"meta":{"range":[31977,32225],"filename":"Group.js","lineno":907,"path":"src\\core"},"description":"Brings the given child to the top of this group so it renders above all other children.","kind":"function","name":"bringToTop","params":[{"type":{"names":["any"]},"description":"The child to bring to the top of this group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#bringToTop","scope":"instance","inherits":"Phaser.Group#bringToTop","inherited":true,"___s":true},{"meta":{"range":[32481,32733],"filename":"Group.js","lineno":926,"path":"src\\core"},"description":"Sends the given child to the bottom of this group so it renders below all other children.","kind":"function","name":"sendToBack","params":[{"type":{"names":["any"]},"description":"The child to send to the bottom of this group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#sendToBack","scope":"instance","inherits":"Phaser.Group#sendToBack","inherited":true,"___s":true},{"meta":{"range":[32975,33202],"filename":"Group.js","lineno":945,"path":"src\\core"},"description":"Moves the given child up one place in this group unless it's already at the top.","kind":"function","name":"moveUp","params":[{"type":{"names":["any"]},"description":"The child to move up in the group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#moveUp","scope":"instance","inherits":"Phaser.Group#moveUp","inherited":true,"___s":true},{"meta":{"range":[33533,33769],"filename":"Group.js","lineno":969,"path":"src\\core"},"description":"Moves the given child down one place in this group unless it's already at the bottom.","kind":"function","name":"moveDown","params":[{"type":{"names":["any"]},"description":"The child to move down in the group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#moveDown","scope":"instance","inherits":"Phaser.Group#moveDown","inherited":true,"___s":true},{"meta":{"range":[34079,34416],"filename":"Group.js","lineno":993,"path":"src\\core"},"description":"Positions the child found at the given index within this group to the given x and y coordinates.","kind":"function","name":"xy","params":[{"type":{"names":["integer"]},"description":"The index of the child in the group to set the position of.","name":"index"},{"type":{"names":["number"]},"description":"The new x position of the child.","name":"x"},{"type":{"names":["number"]},"description":"The new y position of the child.","name":"y"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#xy","scope":"instance","inherits":"Phaser.Group#xy","inherited":true,"___s":true},{"meta":{"range":[34670,34845],"filename":"Group.js","lineno":1015,"path":"src\\core"},"description":"Reverses all children in this group.\r\rThis operation applies only to immediate children and does not propagate to subgroups.","kind":"function","name":"reverse","memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#reverse","scope":"instance","inherits":"Phaser.Group#reverse","inherited":true,"___s":true},{"meta":{"range":[34956,35246],"filename":"Group.js","lineno":1029,"path":"src\\core"},"description":"Get the index position of the given child in this group, which should match the child's `z` property.","kind":"function","name":"getIndex","params":[{"type":{"names":["any"]},"description":"The child to get the index for.","name":"child"}],"returns":[{"type":{"names":["integer"]},"description":"The index of the child or -1 if it's not a member of this group."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#getIndex","scope":"instance","inherits":"Phaser.Group#getIndex","inherited":true,"___s":true},{"meta":{"range":[35354,35730],"filename":"Group.js","lineno":1042,"path":"src\\core"},"description":"Searches the Group for the first instance of a child with the `name`\rproperty matching the given argument. Should more than one child have\rthe same name only the first instance is returned.","kind":"function","name":"getByName","params":[{"type":{"names":["string"]},"description":"The name to search for.","name":"name"}],"returns":[{"type":{"names":["any"]},"description":"The first child with a matching name, or null if none were found."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#getByName","scope":"instance","inherits":"Phaser.Group#getByName","inherited":true,"___s":true},{"meta":{"range":[35987,36616],"filename":"Group.js","lineno":1065,"path":"src\\core"},"description":"Replaces a child of this Group with the given newChild. The newChild cannot be a member of this Group.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.","kind":"function","name":"replace","params":[{"type":{"names":["any"]},"description":"The child in this group that will be replaced.","name":"oldChild"},{"type":{"names":["any"]},"description":"The child to be inserted into this group.","name":"newChild"}],"returns":[{"type":{"names":["any"]},"description":"Returns the oldChild that was replaced within this group."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#replace","scope":"instance","inherits":"Phaser.Group#replace","inherited":true,"___s":true},{"meta":{"range":[37172,37536],"filename":"Group.js","lineno":1104,"path":"src\\core"},"description":"Checks if the child has the given property.\r\rWill scan up to 4 levels deep only.","kind":"function","name":"hasProperty","params":[{"type":{"names":["any"]},"description":"The child to check for the existence of the property on.","name":"child"},{"type":{"names":["Array.<string>"]},"description":"An array of strings that make up the property.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the child has the property, otherwise false."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#hasProperty","scope":"instance","inherits":"Phaser.Group#hasProperty","inherited":true,"___s":true},{"meta":{"range":[38169,39389],"filename":"Group.js","lineno":1139,"path":"src\\core"},"description":"Sets a property to the given value on the child. The operation parameter controls how the value is set.\r\rThe operations are:\r- 0: set the existing value to the given value; if force is `true` a new property will be created if needed\r- 1: will add the given value to the value already present.\r- 2: will subtract the given value from the value already present.\r- 3: will multiply the value already present by the given value.\r- 4: will divide the value already present by the given value.","kind":"function","name":"setProperty","params":[{"type":{"names":["any"]},"description":"The child to set the property value on.","name":"child"},{"type":{"names":["array"]},"description":"An array of strings that make up the property that will be set.","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the property was set, false if not."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#setProperty","scope":"instance","inherits":"Phaser.Group#setProperty","inherited":true,"___s":true},{"meta":{"range":[41812,42411],"filename":"Group.js","lineno":1217,"path":"src\\core"},"description":"Checks a property for the given value on the child.","kind":"function","name":"checkProperty","params":[{"type":{"names":["any"]},"description":"The child to check the property value on.","name":"child"},{"type":{"names":["array"]},"description":"An array of strings that make up the property that will be set.","name":"key"},{"type":{"names":["any"]},"description":"The value that will be checked.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the property was was equal to value, false if not."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#checkProperty","scope":"instance","inherits":"Phaser.Group#checkProperty","inherited":true,"___s":true},{"meta":{"range":[42841,43970],"filename":"Group.js","lineno":1246,"path":"src\\core"},"description":"Quickly set a property on a single child of this group to a new value.\r\rThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","kind":"function","name":"set","params":[{"type":{"names":["Phaser.Sprite"]},"description":"The child to set the property on.","name":"child"},{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then the child will only be updated if alive=true.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then the child will only be updated if visible=true.","name":"checkVisible"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the property was set, false if not."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#set","scope":"instance","inherits":"Phaser.Group#set","inherited":true,"___s":true},{"meta":{"range":[44503,45816],"filename":"Group.js","lineno":1277,"path":"src\\core"},"description":"Quickly set the same property across all children of this group to a new value.\r\rThis call doesn't descend down children, so if you have a Group inside of this group, the property will be set on the group but not its children.\rIf you need that ability please see `Group.setAllChildren`.\r\rThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","kind":"function","name":"setAll","params":[{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with alive=true will be updated. This includes any Groups that are children.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with visible=true will be updated. This includes any Groups that are children.","name":"checkVisible"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#setAll","scope":"instance","inherits":"Phaser.Group#setAll","inherited":true,"___s":true},{"meta":{"range":[46466,47814],"filename":"Group.js","lineno":1312,"path":"src\\core"},"description":"Quickly set the same property across all children of this group, and any child Groups, to a new value.\r\rIf this group contains other Groups then the same property is set across their children as well, iterating down until it reaches the bottom.\rUnlike with `setAll` the property is NOT set on child Groups itself.\r\rThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","kind":"function","name":"setAllChildren","params":[{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with alive=true will be updated. This includes any Groups that are children.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with visible=true will be updated. This includes any Groups that are children.","name":"checkVisible"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#setAllChildren","scope":"instance","inherits":"Phaser.Group#setAllChildren","inherited":true,"___s":true},{"meta":{"range":[48703,49653],"filename":"Group.js","lineno":1353,"path":"src\\core"},"description":"Quickly check that the same property across all children of this group is equal to the given value.\r\rThis call doesn't descend down children, so if you have a Group inside of this group, the property will be checked on the group but not its children.","kind":"function","name":"checkAll","params":[{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be checked.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with alive=true will be checked. This includes any Groups that are children.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with visible=true will be checked. This includes any Groups that are children.","name":"checkVisible"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned.","name":"force"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#checkAll","scope":"instance","inherits":"Phaser.Group#checkAll","inherited":true,"___s":true},{"meta":{"range":[50309,50931],"filename":"Group.js","lineno":1386,"path":"src\\core"},"description":"Adds the amount to the given property on all children in this group.\r\r`Group.addAll('x', 10)` will add 10 to the child.x value for each child.","kind":"function","name":"addAll","params":[{"type":{"names":["string"]},"description":"The property to increment, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to increment the property by. If child.x = 10 then addAll('x', 40) would make child.x = 50.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#addAll","scope":"instance","inherits":"Phaser.Group#addAll","inherited":true,"___s":true},{"meta":{"range":[51097,51731],"filename":"Group.js","lineno":1403,"path":"src\\core"},"description":"Subtracts the amount from the given property on all children in this group.\r\r`Group.subAll('x', 10)` will minus 10 from the child.x value for each child.","kind":"function","name":"subAll","params":[{"type":{"names":["string"]},"description":"The property to decrement, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to subtract from the property. If child.x = 50 then subAll('x', 40) would make child.x = 10.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#subAll","scope":"instance","inherits":"Phaser.Group#subAll","inherited":true,"___s":true},{"meta":{"range":[51897,52529],"filename":"Group.js","lineno":1420,"path":"src\\core"},"description":"Multiplies the given property by the amount on all children in this group.\r\r`Group.multiplyAll('x', 2)` will x2 the child.x value for each child.","kind":"function","name":"multiplyAll","params":[{"type":{"names":["string"]},"description":"The property to multiply, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to multiply the property by. If child.x = 10 then multiplyAll('x', 2) would make child.x = 20.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#multiplyAll","scope":"instance","inherits":"Phaser.Group#multiplyAll","inherited":true,"___s":true},{"meta":{"range":[52700,53322],"filename":"Group.js","lineno":1437,"path":"src\\core"},"description":"Divides the given property by the amount on all children in this group.\r\r`Group.divideAll('x', 2)` will half the child.x value for each child.","kind":"function","name":"divideAll","params":[{"type":{"names":["string"]},"description":"The property to divide, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to divide the property by. If child.x = 100 then divideAll('x', 2) would make child.x = 50.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#divideAll","scope":"instance","inherits":"Phaser.Group#divideAll","inherited":true,"___s":true},{"meta":{"range":[53491,54021],"filename":"Group.js","lineno":1454,"path":"src\\core"},"description":"Calls a function, specified by name, on all children in the group who exist (or do not exist).\r\rAfter the existsValue parameter you can add as many parameters as you like, which will all be passed to the child callback.","kind":"function","name":"callAllExists","params":[{"type":{"names":["string"]},"description":"Name of the function on the children to call.","name":"callback"},{"type":{"names":["boolean"]},"description":"Only children with exists=existsValue will be called.","name":"existsValue"},{"type":{"names":["any"]},"variable":true,"description":"Additional parameters that will be passed to the callback.","name":"parameter"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#callAllExists","scope":"instance","inherits":"Phaser.Group#callAllExists","inherited":true,"___s":true},{"meta":{"range":[54549,54911],"filename":"Group.js","lineno":1488,"path":"src\\core"},"description":"Returns a reference to a function that exists on a child of the group based on the given callback array.","kind":"function","name":"callbackFromArray","params":[{"type":{"names":["object"]},"description":"The object to inspect.","name":"child"},{"type":{"names":["array"]},"description":"The array of function names.","name":"callback"},{"type":{"names":["integer"]},"description":"The size of the array (pre-calculated in callAll).","name":"length"}],"access":"protected","memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#callbackFromArray","scope":"instance","inherits":"Phaser.Group#callbackFromArray","inherited":true,"___s":true},{"meta":{"range":[55847,56541],"filename":"Group.js","lineno":1538,"path":"src\\core"},"description":"Calls a function, specified by name, on all on children.\r\rThe function is called for all children regardless if they are dead or alive (see callAllExists for different options).\rAfter the method parameter and context you can add as many extra parameters as you like, which will all be passed to the child.","kind":"function","name":"callAll","params":[{"type":{"names":["string"]},"description":"Name of the function on the child to call. Deep property lookup is supported.","name":"method"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"A string containing the context under which the method will be executed. Set to null to default to the child.","name":"context"},{"type":{"names":["any"]},"variable":true,"description":"Additional parameters that will be passed to the method.","name":"args"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#callAll","scope":"instance","inherits":"Phaser.Group#callAll","inherited":true,"___s":true},{"meta":{"range":[57918,58017],"filename":"Group.js","lineno":1611,"path":"src\\core"},"description":"The core preUpdate - as called by World.","kind":"function","name":"preUpdate","access":"protected","memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#preUpdate","scope":"instance","inherits":"Phaser.Group#preUpdate","inherited":true,"___s":true},{"meta":{"range":[58417,58510],"filename":"Group.js","lineno":1639,"path":"src\\core"},"description":"The core update - as called by World.","kind":"function","name":"update","access":"protected","memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#update","scope":"instance","inherits":"Phaser.Group#update","inherited":true,"___s":true},{"meta":{"range":[58768,58869],"filename":"Group.js","lineno":1656,"path":"src\\core"},"description":"The core postUpdate - as called by World.","kind":"function","name":"postUpdate","access":"protected","memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#postUpdate","scope":"instance","inherits":"Phaser.Group#postUpdate","inherited":true,"___s":true},{"meta":{"range":[59239,60105],"filename":"Group.js","lineno":1677,"path":"src\\core"},"description":"Find children matching a certain predicate.\r\rFor example:\r\r    var healthyList = Group.filter(function(child, index, children) {\r        return child.health > 10 ? true : false;\r    }, true);\r    healthyList.callAll('attack');\r\rNote: Currently this will skip any children which are Groups themselves.","kind":"function","name":"filter","params":[{"type":{"names":["function"]},"description":"The function that each child will be evaluated against. Each child of the group will be passed to it as its first parameter, the index as the second, and the entire child array as the third","name":"predicate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true, only existing can be selected; otherwise all children can be selected and will be passed to the predicate.","name":"checkExists"}],"returns":[{"type":{"names":["Phaser.ArraySet"]},"description":"Returns an array list containing all the children that the predicate returned true for"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#filter","scope":"instance","inherits":"Phaser.Group#filter","inherited":true,"___s":true},{"meta":{"range":[60612,61562],"filename":"Group.js","lineno":1717,"path":"src\\core"},"description":"Call a function on each child in this group.\r\rAdditional arguments for the callback can be specified after the `checkExists` parameter. For example,\r\r    Group.forEach(awardBonusGold, this, true, 100, 500)\r\rwould invoke `awardBonusGold` function with the parameters `(child, 100, 500)`.\r\rNote: This check will skip any children which are Groups themselves.","kind":"function","name":"forEach","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set only children matching for which `exists` is true will be passed to the callback, otherwise all children will be passed.","name":"checkExists"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#forEach","scope":"instance","inherits":"Phaser.Group#forEach","inherited":true,"___s":true},{"meta":{"range":[62664,63187],"filename":"Group.js","lineno":1771,"path":"src\\core"},"description":"Call a function on each existing child in this group.\r\rSee {@link Phaser.Group#forEach forEach} for details.","kind":"function","name":"forEachExists","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#forEachExists","scope":"instance","inherits":"Phaser.Group#forEachExists","inherited":true,"___s":true},{"meta":{"range":[63575,64094],"filename":"Group.js","lineno":1799,"path":"src\\core"},"description":"Call a function on each alive child in this group.\r\rSee {@link Phaser.Group#forEach forEach} for details.","kind":"function","name":"forEachAlive","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#forEachAlive","scope":"instance","inherits":"Phaser.Group#forEachAlive","inherited":true,"___s":true},{"meta":{"range":[64480,64997],"filename":"Group.js","lineno":1827,"path":"src\\core"},"description":"Call a function on each dead child in this group.\r\rSee {@link Phaser.Group#forEach forEach} for details.","kind":"function","name":"forEachDead","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#forEachDead","scope":"instance","inherits":"Phaser.Group#forEachDead","inherited":true,"___s":true},{"meta":{"range":[65383,66281],"filename":"Group.js","lineno":1855,"path":"src\\core"},"description":"Sort the children in the group according to a particular key and ordering.\r\rCall this function to sort the group according to a particular key value and order.\r\rFor example to depth sort Sprites for Zelda-style game you might call `group.sort('y', Phaser.Group.SORT_ASCENDING)` at the bottom of your `State.update()`.\r\rInternally this uses a standard JavaScript Array sort, so everything that applies there also applies here, including\ralphabetical sorting, mixing strings and numbers, and Unicode sorting. See MDN for more details.","kind":"function","name":"sort","params":[{"type":{"names":["string"]},"optional":true,"defaultvalue":"'z'","description":"The name of the property to sort on. Defaults to the objects z-depth value.","name":"key"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"Phaser.Group.SORT_ASCENDING","description":"Order ascending ({@link Phaser.Group.SORT_ASCENDING SORT_ASCENDING}) or descending ({@link Phaser.Group.SORT_DESCENDING SORT_DESCENDING}).","name":"order"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#sort","scope":"instance","inherits":"Phaser.Group#sort","inherited":true,"___s":true},{"meta":{"range":[66838,67280],"filename":"Group.js","lineno":1895,"path":"src\\core"},"description":"Sort the children in the group according to custom sort function.\r\rThe `sortHandler` is provided the two parameters: the two children involved in the comparison (a and b).\rIt should return -1 if `a > b`, 1 if `a < b` or 0 if `a === b`.","kind":"function","name":"customSort","params":[{"type":{"names":["function"]},"description":"The custom sort function.","name":"sortHandler"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the sortHandler is called.","name":"context"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#customSort","scope":"instance","inherits":"Phaser.Group#customSort","inherited":true,"___s":true},{"meta":{"range":[67535,67766],"filename":"Group.js","lineno":1919,"path":"src\\core"},"description":"An internal helper function for the sort process.","kind":"function","name":"ascendingSortHandler","access":"protected","params":[{"type":{"names":["object"]},"description":"The first object being sorted.","name":"a"},{"type":{"names":["object"]},"description":"The second object being sorted.","name":"b"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#ascendingSortHandler","scope":"instance","inherits":"Phaser.Group#ascendingSortHandler","inherited":true,"___s":true},{"meta":{"range":[68180,68412],"filename":"Group.js","lineno":1951,"path":"src\\core"},"description":"An internal helper function for the sort process.","kind":"function","name":"descendingSortHandler","access":"protected","params":[{"type":{"names":["object"]},"description":"The first object being sorted.","name":"a"},{"type":{"names":["object"]},"description":"The second object being sorted.","name":"b"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#descendingSortHandler","scope":"instance","inherits":"Phaser.Group#descendingSortHandler","inherited":true,"___s":true},{"meta":{"range":[68717,70530],"filename":"Group.js","lineno":1976,"path":"src\\core"},"description":"Iterates over the children of the group performing one of several actions for matched children.\r\rA child is considered a match when it has a property, named `key`, whose value is equal to `value`\raccording to a strict equality comparison.\r\rThe result depends on the `returnType`:\r\r- {@link Phaser.Group.RETURN_TOTAL RETURN_TOTAL}:\r    The callback, if any, is applied to all matching children. The number of matched children is returned.\r- {@link Phaser.Group.RETURN_NONE RETURN_NONE}:\r    The callback, if any, is applied to all matching children. No value is returned.\r- {@link Phaser.Group.RETURN_CHILD RETURN_CHILD}:\r    The callback, if any, is applied to the *first* matching child and the *first* matched child is returned.\r    If there is no matching child then null is returned.\r\rIf `args` is specified it must be an array. The matched child will be assigned to the first\relement and the entire array will be applied to the callback function.","kind":"function","name":"iterate","params":[{"type":{"names":["string"]},"description":"The child property to check, i.e. 'exists', 'alive', 'health'","name":"key"},{"type":{"names":["any"]},"description":"A child matches if `child[key] === value` is true.","name":"value"},{"type":{"names":["integer"]},"description":"How to iterate the children and what to return.","name":"returnType"},{"type":{"names":["function"]},"optional":true,"defaultvalue":null,"description":"Optional function that will be called on each matching child. The matched child is supplied as the first argument.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["Array.<any>"]},"optional":true,"defaultvalue":"(none)","description":"The arguments supplied to to the callback; the first array index (argument) will be replaced with the matched child.","name":"args"}],"returns":[{"type":{"names":["any"]},"description":"Returns either an integer (for RETURN_TOTAL), the first matched child (for RETURN_CHILD), or null."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#iterate","scope":"instance","inherits":"Phaser.Group#iterate","inherited":true,"___s":true},{"meta":{"range":[72077,73685],"filename":"Group.js","lineno":2071,"path":"src\\core"},"description":"Get the first display object that exists, or doesn't exist.\r\rYou can use the optional argument `createIfNull` to create a new Game Object if none matching your exists argument were found in this Group.\r\rIt works by calling `Group.create` passing it the parameters given to this method, and returning the new child.\r\rIf a child *was* found , `createIfNull` is `false` and you provided the additional arguments then the child\rwill be reset and/or have a new texture loaded on it. This is handled by `Group.resetChild`.","kind":"function","name":"getFirstExists","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true, find the first existing child; otherwise find the first non-existing child.","name":"exists"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `true` and no alive children are found a new one is created.","name":"createIfNull"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The first child, or `null` if none found and `createIfNull` was false."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#getFirstExists","scope":"instance","inherits":"Phaser.Group#getFirstExists","inherited":true,"___s":true},{"meta":{"range":[74132,75655],"filename":"Group.js","lineno":2105,"path":"src\\core"},"description":"Get the first child that is alive (`child.alive === true`).\r\rThis is handy for choosing a squad leader, etc.\r\rYou can use the optional argument `createIfNull` to create a new Game Object if no alive ones were found in this Group.\r\rIt works by calling `Group.create` passing it the parameters given to this method, and returning the new child.\r\rIf a child *was* found , `createIfNull` is `false` and you provided the additional arguments then the child\rwill be reset and/or have a new texture loaded on it. This is handled by `Group.resetChild`.","kind":"function","name":"getFirstAlive","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `true` and no alive children are found a new one is created.","name":"createIfNull"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The alive dead child, or `null` if none found and `createIfNull` was false."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#getFirstAlive","scope":"instance","inherits":"Phaser.Group#getFirstAlive","inherited":true,"___s":true},{"meta":{"range":[76012,77578],"filename":"Group.js","lineno":2135,"path":"src\\core"},"description":"Get the first child that is dead (`child.alive === false`).\r\rThis is handy for checking if everything has been wiped out and adding to the pool as needed.\r\rYou can use the optional argument `createIfNull` to create a new Game Object if no dead ones were found in this Group.\r\rIt works by calling `Group.create` passing it the parameters given to this method, and returning the new child.\r\rIf a child *was* found , `createIfNull` is `false` and you provided the additional arguments then the child\rwill be reset and/or have a new texture loaded on it. This is handled by `Group.resetChild`.","kind":"function","name":"getFirstDead","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `true` and no dead children are found a new one is created.","name":"createIfNull"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The first dead child, or `null` if none found and `createIfNull` was false."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#getFirstDead","scope":"instance","inherits":"Phaser.Group#getFirstDead","inherited":true,"___s":true},{"meta":{"range":[77935,79182],"filename":"Group.js","lineno":2165,"path":"src\\core"},"description":"Takes a child and if the `x` and `y` arguments are given it calls `child.reset(x, y)` on it.\r\rIf the `key` and optionally the `frame` arguments are given, it calls `child.loadTexture(key, frame)` on it.\r\rThe two operations are separate. For example if you just wish to load a new texture then pass `null` as the x and y values.","kind":"function","name":"resetChild","params":[{"type":{"names":["DisplayObject"]},"description":"The child to reset and/or load the texture on.","name":"child"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was reset: usually a {@link Phaser.Sprite}."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#resetChild","scope":"instance","inherits":"Phaser.Group#resetChild","inherited":true,"___s":true},{"meta":{"range":[79595,79813],"filename":"Group.js","lineno":2204,"path":"src\\core"},"description":"Return the child at the top of this group.\r\rThe top child is the child displayed (rendered) above every other child.","kind":"function","name":"getTop","returns":[{"type":{"names":["any"]},"description":"The child at the top of the Group."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#getTop","scope":"instance","inherits":"Phaser.Group#getTop","inherited":true,"___s":true},{"meta":{"range":[79978,80212],"filename":"Group.js","lineno":2221,"path":"src\\core"},"description":"Returns the child at the bottom of this group.\r\rThe bottom child the child being displayed (rendered) below every other child.","kind":"function","name":"getBottom","returns":[{"type":{"names":["any"]},"description":"The child at the bottom of the Group."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#getBottom","scope":"instance","inherits":"Phaser.Group#getBottom","inherited":true,"___s":true},{"meta":{"range":[80357,81660],"filename":"Group.js","lineno":2238,"path":"src\\core"},"description":"Get the closest child to given Object, with optional callback to filter children.\r\rThis can be a Sprite, Group, Image or any object with public x and y properties.\r\r'close' is determined by the distance from the objects `x` and `y` properties compared to the childs `x` and `y` properties.\r\rYou can use the optional `callback` argument to apply your own filter to the distance checks.\rIf the child is closer then the previous child, it will be sent to `callback` as the first argument,\rwith the distance as the second. The callback should return `true` if it passes your \rfiltering criteria, otherwise it should return `false`.","kind":"function","name":"getClosestTo","params":[{"type":{"names":["any"]},"description":"The object used to determine the distance. This can be a Sprite, Group, Image or any object with public x and y properties.","name":"object"},{"type":{"names":["function"]},"optional":true,"description":"The function that each child will be evaluated against. Each child of the group will be passed to it as its first parameter, with the distance as the second. It should return `true` if the child passes the matching criteria.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"}],"returns":[{"type":{"names":["any"]},"description":"The child closest to given object, or `null` if no child was found."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#getClosestTo","scope":"instance","inherits":"Phaser.Group#getClosestTo","inherited":true,"___s":true},{"meta":{"range":[82322,83655],"filename":"Group.js","lineno":2282,"path":"src\\core"},"description":"Get the child furthest away from the given Object, with optional callback to filter children.\r\rThis can be a Sprite, Group, Image or any object with public x and y properties.\r\r'furthest away' is determined by the distance from the objects `x` and `y` properties compared to the childs `x` and `y` properties.\r\rYou can use the optional `callback` argument to apply your own filter to the distance checks.\rIf the child is closer then the previous child, it will be sent to `callback` as the first argument,\rwith the distance as the second. The callback should return `true` if it passes your \rfiltering criteria, otherwise it should return `false`.","kind":"function","name":"getFurthestFrom","params":[{"type":{"names":["any"]},"description":"The object used to determine the distance. This can be a Sprite, Group, Image or any object with public x and y properties.","name":"object"},{"type":{"names":["function"]},"optional":true,"description":"The function that each child will be evaluated against. Each child of the group will be passed to it as its first parameter, with the distance as the second. It should return `true` if the child passes the matching criteria.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"}],"returns":[{"type":{"names":["any"]},"description":"The child furthest from the given object, or `null` if no child was found."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#getFurthestFrom","scope":"instance","inherits":"Phaser.Group#getFurthestFrom","inherited":true,"___s":true},{"meta":{"range":[84305,84465],"filename":"Group.js","lineno":2326,"path":"src\\core"},"description":"Get the number of living children in this group.","kind":"function","name":"countLiving","returns":[{"type":{"names":["integer"]},"description":"The number of children flagged as alive."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#countLiving","scope":"instance","inherits":"Phaser.Group#countLiving","inherited":true,"___s":true},{"meta":{"range":[84597,84752],"filename":"Group.js","lineno":2338,"path":"src\\core"},"description":"Get the number of dead children in this group.","kind":"function","name":"countDead","returns":[{"type":{"names":["integer"]},"description":"The number of children flagged as dead."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#countDead","scope":"instance","inherits":"Phaser.Group#countDead","inherited":true,"___s":true},{"meta":{"range":[84883,85214],"filename":"Group.js","lineno":2350,"path":"src\\core"},"description":"Returns a random child from the group.","kind":"function","name":"getRandom","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Offset from the front of the group (lowest child).","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"(to top)","description":"Restriction on the number of values you want to randomly select from.","name":"length"}],"returns":[{"type":{"names":["any"]},"description":"A random child of this Group."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#getRandom","scope":"instance","inherits":"Phaser.Group#getRandom","inherited":true,"___s":true},{"meta":{"range":[85558,86132],"filename":"Group.js","lineno":2372,"path":"src\\core"},"description":"Returns a random child from the Group that has `exists` set to `true`.\r\rOptionally you can specify a start and end index. For example if this Group had 100 children,\rand you set `startIndex` to 0 and `endIndex` to 50, it would return a random child from only\rthe first 50 children in the Group.","kind":"function","name":"getRandomExists","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The first child index to start the search from.","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"description":"The last child index to search up to.","name":"endIndex"}],"returns":[{"type":{"names":["any"]},"description":"A random child of this Group that exists."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#getRandomExists","scope":"instance","inherits":"Phaser.Group#getRandomExists","inherited":true,"___s":true},{"meta":{"range":[86327,87278],"filename":"Group.js","lineno":2392,"path":"src\\core"},"description":"Returns all children in this Group.\r\rYou can optionally specify a matching criteria using the `property` and `value` arguments.\r\rFor example: `getAll('exists', true)` would return only children that have their exists property set.\r\rOptionally you can specify a start and end index. For example if this Group had 100 children,\rand you set `startIndex` to 0 and `endIndex` to 50, it would return a random child from only\rthe first 50 children in the Group.","kind":"function","name":"getAll","params":[{"type":{"names":["string"]},"optional":true,"description":"An optional property to test against the value argument.","name":"property"},{"type":{"names":["any"]},"optional":true,"description":"If property is set then Child.property must strictly equal this value to be included in the results.","name":"value"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The first child index to start the search from.","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"description":"The last child index to search up until.","name":"endIndex"}],"returns":[{"type":{"names":["any"]},"description":"A random existing child of this Group."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#getAll","scope":"instance","inherits":"Phaser.Group#getAll","inherited":true,"___s":true},{"meta":{"range":[87758,88400],"filename":"Group.js","lineno":2431,"path":"src\\core"},"description":"Removes the given child from this group.\r\rThis will dispatch an `onRemovedFromGroup` event from the child (if it has one), and optionally destroy the child.\r\rIf the group cursor was referring to the removed child it is updated to refer to the next child.","kind":"function","name":"remove","params":[{"type":{"names":["any"]},"description":"The child to remove.","name":"child"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true `destroy` will be invoked on the removed child.","name":"destroy"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the the child will not dispatch the `onRemovedFromGroup` event.","name":"silent"}],"returns":[{"type":{"names":["boolean"]},"description":"true if the child was removed from this group, otherwise false."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#remove","scope":"instance","inherits":"Phaser.Group#remove","inherited":true,"___s":true},{"meta":{"range":[89108,89491],"filename":"Group.js","lineno":2479,"path":"src\\core"},"description":"Moves all children from this Group to the Group given.","kind":"function","name":"moveAll","params":[{"type":{"names":["Phaser.Group"]},"description":"The new Group to which the children will be moved to.","name":"group"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch the `onAddedToGroup` event for the new Group.","name":"silent"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"The Group to which all the children were moved."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#moveAll","scope":"instance","inherits":"Phaser.Group#moveAll","inherited":true,"___s":true},{"meta":{"range":[89905,90715],"filename":"Group.js","lineno":2508,"path":"src\\core"},"description":"Removes all children from this Group, but does not remove the group from its parent.\r\rThe children can be optionally destroyed as they are removed.\r\rYou can also optionally also destroy the BaseTexture the Child is using. Be careful if you've\rmore than one Game Object sharing the same BaseTexture.","kind":"function","name":"removeAll","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true `destroy` will be invoked on each removed child.","name":"destroy"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch their `onRemovedFromGroup` events.","name":"silent"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true, and if the `destroy` argument is also true, the BaseTexture belonging to the Child is also destroyed. Note that if another Game Object is sharing the same BaseTexture it will invalidate it.","name":"destroyTexture"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#removeAll","scope":"instance","inherits":"Phaser.Group#removeAll","inherited":true,"___s":true},{"meta":{"range":[91534,92171],"filename":"Group.js","lineno":2556,"path":"src\\core"},"description":"Removes all children from this group whose index falls beteen the given startIndex and endIndex values.","kind":"function","name":"removeBetween","params":[{"type":{"names":["integer"]},"description":"The index to start removing children from.","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"description":"The index to stop removing children at. Must be higher than startIndex. If undefined this method will remove all children between startIndex and the end of the group.","name":"endIndex"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true `destroy` will be invoked on each removed child.","name":"destroy"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch their `onRemovedFromGroup` events.","name":"silent"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#removeBetween","scope":"instance","inherits":"Phaser.Group#removeBetween","inherited":true,"___s":true},{"meta":{"range":[93215,93635],"filename":"Group.js","lineno":2611,"path":"src\\core"},"description":"Destroys this group.\r\rRemoves all children, then removes this group from its parent and nulls references.","kind":"function","name":"destroy","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true `destroy` will be invoked on each removed child.","name":"destroyChildren"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"A 'soft destroy' (set to true) doesn't remove this group from its parent or null the game reference. Set to false and it does.","name":"soft"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#destroy","scope":"instance","inherits":"Phaser.Group#destroy","inherited":true,"___s":true},{"meta":{"range":[94267,94398],"filename":"Group.js","lineno":2648,"path":"src\\core"},"description":"Total number of existing children in the group.","name":"total","properties":[{"type":{"names":["integer"]},"name":"total"}],"readonly":true,"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#total","scope":"instance","kind":"member","inherits":"Phaser.Group#total","inherited":true,"___s":true},{"meta":{"range":[94577,94738],"filename":"Group.js","lineno":2665,"path":"src\\core"},"description":"Total number of children in this group, regardless of exists/alive status.","name":"length","properties":[{"type":{"names":["integer"]},"name":"length"}],"readonly":true,"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#length","scope":"instance","kind":"member","inherits":"Phaser.Group#length","inherited":true,"___s":true},{"meta":{"range":[94883,95247],"filename":"Group.js","lineno":2682,"path":"src\\core"},"description":"The angle of rotation of the group container, in degrees.\r\rThis adjusts the group itself by modifying its local rotation transform.\r\rThis has no impact on the rotation/angle properties of the children, but it will update their worldTransform\rand on-screen orientation and position.","name":"angle","properties":[{"type":{"names":["number"]},"name":"angle"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#angle","scope":"instance","kind":"member","inherits":"Phaser.Group#angle","inherited":true,"___s":true},{"meta":{"range":[95493,95718],"filename":"Group.js","lineno":2705,"path":"src\\core"},"description":"The center x coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"centerX","properties":[{"type":{"names":["number"]},"name":"centerX"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#centerX","scope":"instance","kind":"member","inherits":"Phaser.Group#centerX","inherited":true,"___s":true},{"meta":{"range":[96056,96281],"filename":"Group.js","lineno":2733,"path":"src\\core"},"description":"The center y coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"centerY","properties":[{"type":{"names":["number"]},"name":"centerY"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#centerY","scope":"instance","kind":"member","inherits":"Phaser.Group#centerY","inherited":true,"___s":true},{"meta":{"range":[96620,96835],"filename":"Group.js","lineno":2761,"path":"src\\core"},"description":"The left coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"left","properties":[{"type":{"names":["number"]},"name":"left"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#left","scope":"instance","kind":"member","inherits":"Phaser.Group#left","inherited":true,"___s":true},{"meta":{"range":[97151,97368],"filename":"Group.js","lineno":2789,"path":"src\\core"},"description":"The right coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"right","properties":[{"type":{"names":["number"]},"name":"right"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#right","scope":"instance","kind":"member","inherits":"Phaser.Group#right","inherited":true,"___s":true},{"meta":{"range":[97698,97909],"filename":"Group.js","lineno":2817,"path":"src\\core"},"description":"The top coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"top","properties":[{"type":{"names":["number"]},"name":"top"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#top","scope":"instance","kind":"member","inherits":"Phaser.Group#top","inherited":true,"___s":true},{"meta":{"range":[98225,98446],"filename":"Group.js","lineno":2845,"path":"src\\core"},"description":"The bottom coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"bottom","properties":[{"type":{"names":["number"]},"name":"bottom"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#bottom","scope":"instance","kind":"member","inherits":"Phaser.Group#bottom","inherited":true,"___s":true},{"meta":{"range":[98779,101436],"filename":"Group.js","lineno":2873,"path":"src\\core"},"description":"Aligns this Group within another Game Object, or Rectangle, known as the\r'container', to one of 9 possible positions.\r\rThe container must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Groups within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Group to another Game Object does **not** make it a child of\rthe container. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, \r`Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, \r`Phaser.BOTTOM_CENTER` and `Phaser.BOTTOM_RIGHT`.\r\rGroups are placed in such a way that their _bounds_ align with the\rcontainer, taking into consideration rotation and scale of its children.\rThis allows you to neatly align Groups, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Group. For example:\r\r`group.alignIn(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `group` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the containers bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the container bounds by that amount, and providing a positive\rone expands it.","kind":"function","name":"alignIn","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Group to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"container"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"This Group."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#alignIn","scope":"instance","inherits":"Phaser.Group#alignIn","inherited":true,"___s":true},{"meta":{"range":[101522,104305],"filename":"Group.js","lineno":2915,"path":"src\\core"},"description":"Aligns this Group to the side of another Game Object, or Rectangle, known as the\r'parent', in one of 11 possible positions.\r\rThe parent must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Groups within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Group to another Game Object does **not** make it a child of\rthe parent. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, \r`Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, \r`Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` \rand `Phaser.BOTTOM_RIGHT`.\r\rGroups are placed in such a way that their _bounds_ align with the\rparent, taking into consideration rotation and scale of the children.\rThis allows you to neatly align Groups, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Group. For example:\r\r`group.alignTo(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `group` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the parents bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the parent bounds by that amount, and providing a positive\rone expands it.","kind":"function","name":"alignTo","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Group to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"parent"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, `Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, `Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"This Group."}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#alignTo","scope":"instance","inherits":"Phaser.Group#alignTo","inherited":true,"___s":true},{"meta":{"range":[104771,105080],"filename":"Group.js","lineno":2969,"path":"src\\core"},"description":"The x coordinate of the group container.\r\rYou can adjust the group container itself by modifying its coordinates.\rThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position.","name":"x","properties":[{"type":{"names":["number"]},"name":"x"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#x","scope":"instance","kind":"member","inherits":"Phaser.Group#x","inherited":true,"___s":true},{"meta":{"range":[105084,105393],"filename":"Group.js","lineno":2978,"path":"src\\core"},"description":"The y coordinate of the group container.\r\rYou can adjust the group container itself by modifying its coordinates.\rThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position.","name":"y","properties":[{"type":{"names":["number"]},"name":"y"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#y","scope":"instance","kind":"member","inherits":"Phaser.Group#y","inherited":true,"___s":true},{"meta":{"range":[105397,105735],"filename":"Group.js","lineno":2987,"path":"src\\core"},"description":"The angle of rotation of the group container, in radians.\r\rThis will adjust the group container itself by modifying its rotation.\rThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position.","name":"rotation","properties":[{"type":{"names":["number"]},"name":"rotation"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#rotation","scope":"instance","kind":"member","inherits":"Phaser.Group#rotation","inherited":true,"___s":true},{"meta":{"range":[105739,105908],"filename":"Group.js","lineno":2996,"path":"src\\core"},"description":"The visible state of the group. Non-visible Groups and all of their children are not rendered.","name":"visible","properties":[{"type":{"names":["boolean"]},"name":"visible"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#visible","scope":"instance","kind":"member","inherits":"Phaser.Group#visible","inherited":true,"___s":true},{"meta":{"range":[105912,106021],"filename":"Group.js","lineno":3003,"path":"src\\core"},"description":"The alpha value of the group container.","name":"alpha","properties":[{"type":{"names":["number"]},"name":"alpha"}],"memberof":"Phaser.SpriteBatch","longname":"Phaser.SpriteBatch#alpha","scope":"instance","kind":"member","inherits":"Phaser.Group#alpha","inherited":true,"___s":true},{"meta":{"range":[580,598],"filename":"DisplayObjectContainer.js","lineno":24,"path":"src\\pixi\\display"},"description":"[read-only] The array of children of this container.","properties":[{"name":"children"}],"type":{"names":["Array(DisplayObject)"]},"readonly":true,"name":"children","longname":"Phaser.SpriteBatch#children","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"PIXI.DisplayObjectContainer#children","inherited":true,"___s":true},{"meta":{"range":[1045,1074],"filename":"DisplayObjectContainer.js","lineno":35,"path":"src\\pixi\\display"},"description":"If `ignoreChildInput`  is `false` it will allow this objects _children_ to be considered as valid for Input events.\r\rIf this property is `true` then the children will _not_ be considered as valid for Input events.\r\rNote that this property isn't recursive: only immediate children are influenced, it doesn't scan further down.","properties":[{"type":{"names":["boolean"]},"name":"ignoreChildInput"}],"defaultvalue":false,"name":"ignoreChildInput","longname":"Phaser.SpriteBatch#ignoreChildInput","kind":"member","memberof":"Phaser.SpriteBatch","scope":"instance","inherits":"PIXI.DisplayObjectContainer#ignoreChildInput","inherited":true,"___s":true},{"meta":{"range":[774,804],"filename":"Sprite.js","lineno":26,"path":"src\\pixi\\display"},"description":"The anchor sets the origin point of the texture.\rThe default is 0,0 this means the texture's origin is the top left\rSetting than anchor to 0.5,0.5 means the textures origin is centered\rSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner","properties":[{"name":"anchor"}],"type":{"names":["Point"]},"name":"anchor","longname":"Phaser.Text#anchor","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"PIXI.Sprite#anchor","inherited":true,"___s":true},{"meta":{"range":[932,983],"filename":"Sprite.js","lineno":34,"path":"src\\pixi\\display"},"description":"The texture that the sprite is using","properties":[{"name":"texture"}],"type":{"names":["Texture"]},"name":"texture","longname":"Phaser.Text#texture","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"PIXI.Sprite#texture","inherited":true,"___s":true},{"meta":{"range":[1569,1589],"filename":"Sprite.js","lineno":61,"path":"src\\pixi\\display"},"description":"The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.","properties":[{"name":"tint"}],"type":{"names":["Number"]},"defaultvalue":"0xFFFFFF","name":"tint","longname":"Phaser.Text#tint","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"PIXI.Sprite#tint","inherited":true,"___s":true},{"meta":{"range":[2061,2086],"filename":"Sprite.js","lineno":80,"path":"src\\pixi\\display"},"description":"A canvas that contains the tinted version of the Sprite (in Canvas mode, WebGL doesn't populate this)","properties":[{"name":"tintedTexture"}],"type":{"names":["Canvas"]},"defaultvalue":"null","name":"tintedTexture","longname":"Phaser.Text#tintedTexture","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"PIXI.Sprite#tintedTexture","inherited":true,"___s":true},{"meta":{"range":[2456,2495],"filename":"Sprite.js","lineno":91,"path":"src\\pixi\\display"},"description":"The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode.\r\rWarning: You cannot have a blend mode and a filter active on the same Sprite. Doing so will render the sprite invisible.","properties":[{"name":"blendMode"}],"type":{"names":["Number"]},"defaultvalue":"PIXI.blendModes.NORMAL;","name":"blendMode","longname":"Phaser.Text#blendMode","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"PIXI.Sprite#blendMode","inherited":true,"___s":true},{"meta":{"range":[2714,2732],"filename":"Sprite.js","lineno":101,"path":"src\\pixi\\display"},"description":"The shader that will be used to render this Sprite.\rSet to null to remove a current shader.","properties":[{"name":"shader"}],"type":{"names":["AbstractFilter"]},"defaultvalue":"null","name":"shader","longname":"Phaser.Text#shader","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"PIXI.Sprite#shader","inherited":true,"___s":true},{"meta":{"range":[2922,2940],"filename":"Sprite.js","lineno":110,"path":"src\\pixi\\display"},"description":"Controls if this Sprite is processed by the core Phaser game loops and Group loops.","properties":[{"name":"exists"}],"type":{"names":["Boolean"]},"defaultvalue":"true","name":"exists","longname":"Phaser.Text#exists","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"PIXI.Sprite#exists","inherited":true,"___s":true},{"meta":{"range":[3048,3058],"filename":"Core.js","lineno":142,"path":"src\\gameobjects\\components"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"name":"game","longname":"Phaser.Text#game","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Core#game","inherited":true,"___s":true},{"meta":{"range":[3279,3287],"filename":"Core.js","lineno":150,"path":"src\\gameobjects\\components"},"description":"A user defined name given to this Game Object.\rThis value isn't ever used internally by Phaser, it is meant as a game level property.","properties":[{"type":{"names":["string"]},"name":"name"}],"defaultvalue":"","name":"name","longname":"Phaser.Text#name","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Core#name","inherited":true,"___s":true},{"meta":{"range":[3651,3659],"filename":"Core.js","lineno":160,"path":"src\\gameobjects\\components"},"description":"An empty Object that belongs to this Game Object.\rThis value isn't ever used internally by Phaser, but may be used by your own code, or\rby Phaser Plugins, to store data that needs to be associated with the Game Object,\rwithout polluting the Game Object directly.","properties":[{"type":{"names":["Object"]},"name":"data"}],"defaultvalue":"{}","defaultvaluetype":"object","name":"data","longname":"Phaser.Text#data","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Core#data","inherited":true,"___s":true},{"meta":{"range":[3794,3808],"filename":"Core.js","lineno":167,"path":"src\\gameobjects\\components"},"description":"The components this Game Object has installed.","properties":[{"type":{"names":["object"]},"name":"components"}],"access":"protected","name":"components","longname":"Phaser.Text#components","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Core#components","inherited":true,"___s":true},{"meta":{"range":[4202,4206],"filename":"Core.js","lineno":177,"path":"src\\gameobjects\\components"},"description":"The z depth of this Game Object within its parent Group.\rNo two objects in a Group can have the same z value.\rThis value is adjusted automatically whenever the Group hierarchy changes.\rIf you wish to re-order the layering of a Game Object then see methods like Group.moveUp or Group.bringToTop.","properties":[{"type":{"names":["number"]},"name":"z"}],"readonly":true,"name":"z","longname":"Phaser.Text#z","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Core#z","inherited":true,"___s":true},{"meta":{"range":[4484,4501],"filename":"Core.js","lineno":185,"path":"src\\gameobjects\\components"},"description":"All Phaser Game Objects have an Events class which contains all of the events that are dispatched when certain things happen to this\rGame Object, or any of its components.","see":["Phaser.Events"],"properties":[{"type":{"names":["Phaser.Events"]},"name":"events"}],"name":"events","longname":"Phaser.Text#events","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Core#events","inherited":true,"___s":true},{"meta":{"range":[4815,4836],"filename":"Core.js","lineno":193,"path":"src\\gameobjects\\components"},"description":"If the Game Object is enabled for animation (such as a Phaser.Sprite) this is a reference to its AnimationManager instance.\rThrough it you can create, play, pause and stop animations.","see":["Phaser.AnimationManager"],"properties":[{"type":{"names":["Phaser.AnimationManager"]},"name":"animations"}],"name":"animations","longname":"Phaser.Text#animations","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Core#animations","inherited":true,"___s":true},{"meta":{"range":[5559,5566],"filename":"Core.js","lineno":203,"path":"src\\gameobjects\\components"},"description":"The key of the image or texture used by this Game Object during rendering.\rIf it is a string it's the string used to retrieve the texture from the Phaser Image Cache.\rIt can also be an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.\rIf a Game Object is created without a key it is automatically assigned the key `__default` which is a 32x32 transparent PNG stored within the Cache.\rIf a Game Object is given a key which doesn't exist in the Image Cache it is re-assigned the key `__missing` which is a 32x32 PNG of a green box with a line through it.","properties":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"name":"key"}],"name":"key","longname":"Phaser.Text#key","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Core#key","inherited":true,"___s":true},{"meta":{"range":[5882,5893],"filename":"Core.js","lineno":211,"path":"src\\gameobjects\\components"},"description":"The world coordinates of this Game Object in pixels.\rDepending on where in the display list this Game Object is placed this value can differ from `position`, \rwhich contains the x/y coordinates relative to the Game Objects parent.","properties":[{"type":{"names":["Phaser.Point"]},"name":"world"}],"name":"world","longname":"Phaser.Text#world","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Core#world","inherited":true,"___s":true},{"meta":{"range":[6029,6041],"filename":"Core.js","lineno":218,"path":"src\\gameobjects\\components"},"description":"A debug flag designed for use with `Game.enableStep`.","properties":[{"type":{"names":["boolean"]},"name":"debug"}],"defaultvalue":false,"name":"debug","longname":"Phaser.Text#debug","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Core#debug","inherited":true,"___s":true},{"meta":{"range":[6204,6226],"filename":"Core.js","lineno":225,"path":"src\\gameobjects\\components"},"description":"The position the Game Object was located in the previous frame.","properties":[{"type":{"names":["Phaser.Point"]},"name":"previousPosition"}],"readonly":true,"name":"previousPosition","longname":"Phaser.Text#previousPosition","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Core#previousPosition","inherited":true,"___s":true},{"meta":{"range":[6406,6425],"filename":"Core.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"The rotation the Game Object was in set to in the previous frame. Value is in radians.","properties":[{"type":{"names":["number"]},"name":"previousRotation"}],"readonly":true,"name":"previousRotation","longname":"Phaser.Text#previousRotation","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Core#previousRotation","inherited":true,"___s":true},{"meta":{"range":[6720,6736],"filename":"Core.js","lineno":240,"path":"src\\gameobjects\\components"},"description":"The render order ID is used internally by the renderer and Input Manager and should not be modified.\rThis property is mostly used internally by the renderers, but is exposed for the use of plugins.","properties":[{"type":{"names":["number"]},"name":"renderOrderID"}],"readonly":true,"name":"renderOrderID","longname":"Phaser.Text#renderOrderID","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Core#renderOrderID","inherited":true,"___s":true},{"meta":{"range":[7053,7064],"filename":"Core.js","lineno":248,"path":"src\\gameobjects\\components"},"description":"A Game Object is considered `fresh` if it has just been created or reset and is yet to receive a renderer transform update.\rThis property is mostly used internally by the physics systems, but is exposed for the use of plugins.","properties":[{"type":{"names":["boolean"]},"name":"fresh"}],"readonly":true,"name":"fresh","longname":"Phaser.Text#fresh","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Core#fresh","inherited":true,"___s":true},{"meta":{"range":[7518,7539],"filename":"Core.js","lineno":259,"path":"src\\gameobjects\\components"},"description":"A Game Object is that is pendingDestroy is flagged to have its destroy method called on the next logic update.\rYou can set it directly to allow you to flag an object to be destroyed on its next update.\r\rThis is extremely useful if you wish to destroy an object from within one of its own callbacks \rsuch as with Buttons or other Input events.","properties":[{"type":{"names":["boolean"]},"name":"pendingDestroy"}],"name":"pendingDestroy","longname":"Phaser.Text#pendingDestroy","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Core#pendingDestroy","inherited":true,"___s":true},{"meta":{"range":[9544,10055],"filename":"Core.js","lineno":338,"path":"src\\gameobjects\\components"},"description":"Internal method called by the World postUpdate cycle.","kind":"function","access":"protected","name":"postUpdate","longname":"Phaser.Text#postUpdate","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Core#postUpdate","inherited":true,"___s":true},{"meta":{"range":[1110,1382],"filename":"Angle.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"The angle property is the rotation of the Game Object in *degrees* from its original orientation.\r\rValues from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\r\rValues outside this range are added to or subtracted from 360 to obtain a value within the range. \rFor example, the statement player.angle = 450 is the same as player.angle = 90.\r\rIf you wish to work in radians instead of degrees you can use the property `rotation` instead. \rWorking in radians is slightly faster as it doesn't have to perform any calculations.","properties":[{"type":{"names":["number"]},"name":"angle"}],"name":"angle","longname":"Phaser.Text#angle","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Angle#angle","inherited":true,"___s":true},{"meta":{"range":[1545,1745],"filename":"Animation.js","lineno":31,"path":"src\\gameobjects\\components"},"description":"Plays an Animation.\r\rThe animation should have previously been created via `animations.add`.\r\rIf the animation is already playing calling this again won't do anything.\rIf you need to reset an already running animation do so directly on the Animation object itself or via `AnimationManager.stop`.","kind":"function","params":[{"type":{"names":["string"]},"description":"The name of the animation to be played, e.g. \"fire\", \"walk\", \"jump\". Must have been previously created via 'AnimationManager.add'.","name":"name"},{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"The framerate to play the animation at. The speed is given in frames per second. If not provided the previously set frameRate of the Animation is used.","name":"frameRate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the animation be looped after playback. If not provided the previously set loop value of the Animation is used.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set to true when the animation completes (only happens if loop=false) the parent Sprite will be killed.","name":"killOnComplete"}],"returns":[{"type":{"names":["Phaser.Animation"]},"description":"A reference to playing Animation."}],"name":"play","longname":"Phaser.Text#play","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Animation#play","inherited":true,"___s":true},{"meta":{"range":[1129,1144],"filename":"AutoCull.js","lineno":28,"path":"src\\gameobjects\\components"},"description":"A Game Object with `autoCull` set to true will check its bounds against the World Camera every frame.\rIf it is not intersecting the Camera bounds at any point then it has its `renderable` property set to `false`.\rThis keeps the Game Object alive and still processing updates, but forces it to skip the render step entirely.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"autoCull"}],"defaultvalue":false,"name":"autoCull","longname":"Phaser.Text#autoCull","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.AutoCull#autoCull","inherited":true,"___s":true},{"meta":{"range":[1402,1809],"filename":"AutoCull.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds intersect with the Game Camera bounds.\rReturns `true` if they do, otherwise `false` if fully outside of the Cameras bounds.","properties":[{"type":{"names":["boolean"]},"name":"inCamera"}],"readonly":true,"name":"inCamera","longname":"Phaser.Text#inCamera","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.AutoCull#inCamera","inherited":true,"___s":true},{"meta":{"range":[661,773],"filename":"Bounds.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its x coordinate.\rThis is the same as `width * anchor.x`.\rIt will only be > 0 if anchor.x is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetX"}],"readonly":true,"name":"offsetX","longname":"Phaser.Text#offsetX","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Bounds#offsetX","inherited":true,"___s":true},{"meta":{"range":[1042,1155],"filename":"Bounds.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its y coordinate.\rThis is the same as `height * anchor.y`.\rIt will only be > 0 if anchor.y is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetY"}],"readonly":true,"name":"offsetY","longname":"Phaser.Text#offsetY","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Bounds#offsetY","inherited":true,"___s":true},{"meta":{"range":[1331,1579],"filename":"Bounds.js","lineno":58,"path":"src\\gameobjects\\components"},"description":"The center x coordinate of the Game Object.\rThis is the same as `(x - offsetX) + (width / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerX"}],"name":"centerX","longname":"Phaser.Text#centerX","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Bounds#centerX","inherited":true,"___s":true},{"meta":{"range":[1756,2006],"filename":"Bounds.js","lineno":80,"path":"src\\gameobjects\\components"},"description":"The center y coordinate of the Game Object.\rThis is the same as `(y - offsetY) + (height / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerY"}],"name":"centerY","longname":"Phaser.Text#centerY","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Bounds#centerY","inherited":true,"___s":true},{"meta":{"range":[2159,2358],"filename":"Bounds.js","lineno":102,"path":"src\\gameobjects\\components"},"description":"The left coordinate of the Game Object.\rThis is the same as `x - offsetX`.","properties":[{"type":{"names":["number"]},"name":"left"}],"name":"left","longname":"Phaser.Text#left","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Bounds#left","inherited":true,"___s":true},{"meta":{"range":[2521,2751],"filename":"Bounds.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The right coordinate of the Game Object.\rThis is the same as `x + width - offsetX`.","properties":[{"type":{"names":["number"]},"name":"right"}],"name":"right","longname":"Phaser.Text#right","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Bounds#right","inherited":true,"___s":true},{"meta":{"range":[2900,3098],"filename":"Bounds.js","lineno":146,"path":"src\\gameobjects\\components"},"description":"The y coordinate of the Game Object.\rThis is the same as `y - offsetY`.","properties":[{"type":{"names":["number"]},"name":"top"}],"name":"top","longname":"Phaser.Text#top","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Bounds#top","inherited":true,"___s":true},{"meta":{"range":[3262,3495],"filename":"Bounds.js","lineno":168,"path":"src\\gameobjects\\components"},"description":"The sum of the y and height properties.\rThis is the same as `y + height - offsetY`.","properties":[{"type":{"names":["number"]},"name":"bottom"}],"name":"bottom","longname":"Phaser.Text#bottom","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Bounds#bottom","inherited":true,"___s":true},{"meta":{"range":[6346,8224],"filename":"Bounds.js","lineno":223,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object within another Game Object, or Rectangle, known as the\r'container', to one of 9 possible positions.\r\rThe container must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe container. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, \r`Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, \r`Phaser.BOTTOM_CENTER` and `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rcontainer, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignIn(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the containers bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the container bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"container"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignIn","longname":"Phaser.Text#alignIn","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Bounds#alignIn","inherited":true,"___s":true},{"meta":{"range":[11205,13527],"filename":"Bounds.js","lineno":321,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object to the side of another Game Object, or Rectangle, known as the\r'parent', in one of 11 possible positions.\r\rThe parent must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe parent. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, \r`Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, \r`Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` \rand `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rparent, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignTo(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the parents bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the parent bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"parent"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, `Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, `Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignTo","longname":"Phaser.Text#alignTo","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Bounds#alignTo","inherited":true,"___s":true},{"meta":{"range":[784,949],"filename":"BringToTop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"Brings this Game Object to the top of its parents display list.\rVisually this means it will render over the top of any old child in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will bring it to the top of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"bringToTop","longname":"Phaser.Text#bringToTop","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.BringToTop#bringToTop","inherited":true,"___s":true},{"meta":{"range":[1378,1543],"filename":"BringToTop.js","lineno":45,"path":"src\\gameobjects\\components"},"description":"Sends this Game Object to the bottom of its parents display list.\rVisually this means it will render below all other children in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will send it to the bottom of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"sendToBack","longname":"Phaser.Text#sendToBack","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.BringToTop#sendToBack","inherited":true,"___s":true},{"meta":{"range":[1982,2140],"filename":"BringToTop.js","lineno":66,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object up one place in its parents display list.\rThis call has no effect if the Game Object is already at the top of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object up within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveUp","longname":"Phaser.Text#moveUp","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.BringToTop#moveUp","inherited":true,"___s":true},{"meta":{"range":[2586,2748],"filename":"BringToTop.js","lineno":87,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object down one place in its parents display list.\rThis call has no effect if the Game Object is already at the bottom of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object down within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveDown","longname":"Phaser.Text#moveDown","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.BringToTop#moveDown","inherited":true,"___s":true},{"meta":{"range":[751,765],"filename":"Crop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Rectangle used to crop the texture this Game Object uses.\rSet this property via `crop`. \rIf you modify this property directly you must call `updateCrop` in order to have the change take effect.","properties":[{"type":{"names":["Phaser.Rectangle"]},"name":"cropRect"}],"defaultvalue":null,"name":"cropRect","longname":"Phaser.Text#cropRect","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Crop#cropRect","inherited":true,"___s":true},{"meta":{"range":[2112,2842],"filename":"Crop.js","lineno":49,"path":"src\\gameobjects\\components"},"description":"Crop allows you to crop the texture being used to display this Game Object.\rSetting a crop rectangle modifies the core texture frame. The Game Object width and height properties will be adjusted accordingly.\r\rCropping takes place from the top-left and can be modified in real-time either by providing an updated rectangle object to this method,\ror by modifying `cropRect` property directly and then calling `updateCrop`.\r\rThe rectangle object given to this method can be either a `Phaser.Rectangle` or any other object \rso long as it has public `x`, `y`, `width`, `height`, `right` and `bottom` properties.\r\rA reference to the rectangle is stored in `cropRect` unless the `copy` parameter is `true`, \rin which case the values are duplicated to a local object.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle used during cropping. Pass null or no parameters to clear a previously set crop rectangle.","name":"rect"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If false `cropRect` will be stored as a reference to the given rect. If true it will copy the rect values into a local Phaser Rectangle object stored in cropRect.","name":"copy"}],"name":"crop","longname":"Phaser.Text#crop","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Crop#crop","inherited":true,"___s":true},{"meta":{"range":[3107,4426],"filename":"Crop.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"If you have set a crop rectangle on this Game Object via `crop` and since modified the `cropRect` property,\ror the rectangle it references, then you need to update the crop frame by calling this method.","kind":"function","name":"updateCrop","longname":"Phaser.Text#updateCrop","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Crop#updateCrop","inherited":true,"___s":true},{"meta":{"range":[707,829],"filename":"Delta.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"Returns the delta x value. The difference between world.x now and in the previous frame.\r\rThe value will be positive if the Game Object has moved to the right or negative if to the left.","properties":[{"type":{"names":["number"]},"name":"deltaX"}],"readonly":true,"name":"deltaX","longname":"Phaser.Text#deltaX","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Delta#deltaX","inherited":true,"___s":true},{"meta":{"range":[1103,1225],"filename":"Delta.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"Returns the delta y value. The difference between world.y now and in the previous frame.\r\rThe value will be positive if the Game Object has moved down or negative if up.","properties":[{"type":{"names":["number"]},"name":"deltaY"}],"readonly":true,"name":"deltaY","longname":"Phaser.Text#deltaY","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Delta#deltaY","inherited":true,"___s":true},{"meta":{"range":[1424,1545],"filename":"Delta.js","lineno":58,"path":"src\\gameobjects\\components"},"description":"Returns the delta z value. The difference between rotation now and in the previous frame.","properties":[{"type":{"names":["number"]},"description":"The delta value.","name":"deltaZ"}],"readonly":true,"name":"deltaZ","longname":"Phaser.Text#deltaZ","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Delta#deltaZ","inherited":true,"___s":true},{"meta":{"range":[629,648],"filename":"Destroy.js","lineno":22,"path":"src\\gameobjects\\components"},"description":"As a Game Object runs through its destroy method this flag is set to true, \rand can be checked in any sub-systems or plugins it is being destroyed from.","properties":[{"type":{"names":["boolean"]},"name":"destroyPhase"}],"readonly":true,"name":"destroyPhase","longname":"Phaser.Text#destroyPhase","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Destroy#destroyPhase","inherited":true,"___s":true},{"meta":{"range":[2104,2515],"filename":"FixedToCamera.js","lineno":56,"path":"src\\gameobjects\\components"},"description":"A Game Object that is \"fixed\" to the camera uses its x/y coordinates as offsets from the top left of the camera during rendering.\r\rThe values are adjusted at the rendering stage, overriding the Game Objects actual world position.\r\rThe end result is that the Game Object will appear to be 'fixed' to the camera, regardless of where in the game world\rthe camera is viewing. This is useful if for example this Game Object is a UI item that you wish to be visible at all times \rregardless where in the world the camera is.\r\rThe offsets are stored in the `cameraOffset` property.\r\rNote that the `cameraOffset` values are in addition to any parent of this Game Object on the display list.\r\rBe careful not to set `fixedToCamera` on Game Objects which are in Groups that already have `fixedToCamera` enabled on them.","properties":[{"type":{"names":["boolean"]},"name":"fixedToCamera"}],"name":"fixedToCamera","longname":"Phaser.Text#fixedToCamera","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.FixedToCamera#fixedToCamera","inherited":true,"___s":true},{"meta":{"range":[2868,2900],"filename":"FixedToCamera.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"The x/y coordinate offset applied to the top-left of the camera that this Game Object will be drawn at if `fixedToCamera` is true.\r\rThe values are relative to the top-left of the camera view and in addition to any parent of the Game Object on the display list.","properties":[{"type":{"names":["Phaser.Point"]},"name":"cameraOffset"}],"name":"cameraOffset","longname":"Phaser.Text#cameraOffset","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.FixedToCamera#cameraOffset","inherited":true,"___s":true},{"meta":{"range":[778,787],"filename":"Health.js","lineno":26,"path":"src\\gameobjects\\components"},"description":"The Game Objects health value. This is a handy property for setting and manipulating health on a Game Object.\r\rIt can be used in combination with the `damage` method or modified directly.","properties":[{"type":{"names":["number"]},"name":"health"}],"defaultvalue":1,"name":"health","longname":"Phaser.Text#health","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Health#health","inherited":true,"___s":true},{"meta":{"range":[1029,1043],"filename":"Health.js","lineno":35,"path":"src\\gameobjects\\components"},"description":"The Game Objects maximum health value. This works in combination with the `heal` method to ensure\rthe health value never exceeds the maximum.","properties":[{"type":{"names":["number"]},"name":"maxHealth"}],"defaultvalue":100,"name":"maxHealth","longname":"Phaser.Text#maxHealth","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Health#maxHealth","inherited":true,"___s":true},{"meta":{"range":[1419,1661],"filename":"Health.js","lineno":46,"path":"src\\gameobjects\\components"},"description":"Damages the Game Object. This removes the given amount of health from the `health` property.\r\rIf health is taken below or is equal to zero then the `kill` method is called.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to subtract from the current `health` value.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"damage","longname":"Phaser.Text#damage","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Health#damage","inherited":true,"___s":true},{"meta":{"range":[1989,2195],"filename":"Health.js","lineno":70,"path":"src\\gameobjects\\components"},"description":"Sets the health property of the Game Object to the given amount.\rWill never exceed the `maxHealth` value.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to set the `health` value to. The total will never exceed `maxHealth`.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"setHealth","longname":"Phaser.Text#setHealth","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Health#setHealth","inherited":true,"___s":true},{"meta":{"range":[2503,2772],"filename":"Health.js","lineno":90,"path":"src\\gameobjects\\components"},"description":"Heal the Game Object. This adds the given amount of health to the `health` property.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to add to the current `health` value. The total will never exceed `maxHealth`.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"heal","longname":"Phaser.Text#heal","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Health#heal","inherited":true,"___s":true},{"meta":{"range":[805,816],"filename":"InputEnabled.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Input Handler for this Game Object.\r\rBy default it is disabled. If you wish this Game Object to process input events you should enable it with: `inputEnabled = true`.\r\rAfter you have done this, this property will be a reference to the Phaser InputHandler.","properties":[{"type":{"names":["Phaser.InputHandler","null"]},"name":"input"}],"name":"input","longname":"Phaser.Text#input","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.InputEnabled#input","inherited":true,"___s":true},{"meta":{"range":[1661,2398],"filename":"InputEnabled.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"By default a Game Object won't process any input events. By setting `inputEnabled` to true a Phaser.InputHandler is created\rfor this Game Object and it will then start to process click / touch events and more.\r\rYou can then access the Input Handler via `this.input`.\r\rNote that Input related events are dispatched from `this.events`, i.e.: `events.onInputDown`.\r\rIf you set this property to false it will stop the Input Handler from processing any more input events.\r\rIf you want to _temporarily_ disable input for a Game Object, then it's better to set\r`input.enabled = false`, as it won't reset any of the Input Handlers internal properties.\rYou can then toggle this back on as needed.","properties":[{"type":{"names":["boolean"]},"name":"inputEnabled"}],"name":"inputEnabled","longname":"Phaser.Text#inputEnabled","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.InputEnabled#inputEnabled","inherited":true,"___s":true},{"meta":{"range":[3394,3417],"filename":"InWorld.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"If this is set to `true` the Game Object checks if it is within the World bounds each frame. \r\rWhen it is no longer intersecting the world bounds it dispatches the `onOutOfBounds` event.\r\rIf it was *previously* out of bounds but is now intersecting the world bounds again it dispatches the `onEnterBounds` event.\r\rIt also optionally kills the Game Object if `outOfBoundsKill` is `true`.\r\rWhen `checkWorldBounds` is enabled it forces the Game Object to calculate its full bounds every frame.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"checkWorldBounds"}],"defaultvalue":false,"name":"checkWorldBounds","longname":"Phaser.Text#checkWorldBounds","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.InWorld#checkWorldBounds","inherited":true,"___s":true},{"meta":{"range":[3653,3675],"filename":"InWorld.js","lineno":106,"path":"src\\gameobjects\\components"},"description":"If this and the `checkWorldBounds` property are both set to `true` then the `kill` method is called as soon as `inWorld` returns false.","properties":[{"type":{"names":["boolean"]},"name":"outOfBoundsKill"}],"defaultvalue":false,"name":"outOfBoundsKill","longname":"Phaser.Text#outOfBoundsKill","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.InWorld#outOfBoundsKill","inherited":true,"___s":true},{"meta":{"range":[3939,3967],"filename":"InWorld.js","lineno":115,"path":"src\\gameobjects\\components"},"description":"If this and the `autoCull` property are both set to `true`, then the `kill` method\ris called as soon as the Game Object leaves the camera bounds.","properties":[{"type":{"names":["boolean"]},"name":"outOfCameraBoundsKill"}],"defaultvalue":false,"name":"outOfCameraBoundsKill","longname":"Phaser.Text#outOfCameraBoundsKill","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.InWorld#outOfCameraBoundsKill","inherited":true,"___s":true},{"meta":{"range":[4292,4429],"filename":"InWorld.js","lineno":129,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds are within, or intersect at any point with the Game World bounds.","properties":[{"type":{"names":["boolean"]},"name":"inWorld"}],"readonly":true,"name":"inWorld","longname":"Phaser.Text#inWorld","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.InWorld#inWorld","inherited":true,"___s":true},{"meta":{"range":[1310,1321],"filename":"LifeSpan.js","lineno":50,"path":"src\\gameobjects\\components"},"description":"A useful flag to control if the Game Object is alive or dead.\r\rThis is set automatically by the Health components `damage` method should the object run out of health.\rOr you can toggle it via your game code.\r\rThis property is mostly just provided to be used by your game - it doesn't effect rendering or logic updates.\rHowever you can use `Group.getFirstAlive` in conjunction with this property for fast object pooling and recycling.","properties":[{"type":{"names":["boolean"]},"name":"alive"}],"defaultvalue":true,"name":"alive","longname":"Phaser.Text#alive","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.LifeSpan#alive","inherited":true,"___s":true},{"meta":{"range":[1843,1854],"filename":"LifeSpan.js","lineno":65,"path":"src\\gameobjects\\components"},"description":"The lifespan allows you to give a Game Object a lifespan in milliseconds.\r\rOnce the Game Object is 'born' you can set this to a positive value.\r\rIt is automatically decremented by the millisecond equivalent of `game.time.physicsElapsed` each frame.\rWhen it reaches zero it will call the `kill` method.\r\rVery handy for particles, bullets, collectibles, or any other short-lived entity.","properties":[{"type":{"names":["number"]},"name":"lifespan"}],"defaultvalue":0,"name":"lifespan","longname":"Phaser.Text#lifespan","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.LifeSpan#lifespan","inherited":true,"___s":true},{"meta":{"range":[2390,2807],"filename":"LifeSpan.js","lineno":78,"path":"src\\gameobjects\\components"},"description":"Brings a 'dead' Game Object back to life, optionally resetting its health value in the process.\r\rA resurrected Game Object has its `alive`, `exists` and `visible` properties all set to true.\r\rIt will dispatch the `onRevived` event. Listen to `events.onRevived` for the signal.","kind":"function","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"The health to give the Game Object. Only set if the GameObject has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"revive","longname":"Phaser.Text#revive","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.LifeSpan#revive","inherited":true,"___s":true},{"meta":{"range":[3390,3634],"filename":"LifeSpan.js","lineno":113,"path":"src\\gameobjects\\components"},"description":"Kills a Game Object. A killed Game Object has its `alive`, `exists` and `visible` properties all set to false.\r\rIt will dispatch the `onKilled` event. You can listen to `events.onKilled` for the signal.\r\rNote that killing a Game Object is a way for you to quickly recycle it in an object pool,\rit doesn't destroy the object or free it up from memory.\r\rIf you don't need this Game Object any more you should call `destroy` instead.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"kill","longname":"Phaser.Text#kill","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.LifeSpan#kill","inherited":true,"___s":true},{"meta":{"range":[2545,5312],"filename":"LoadTexture.js","lineno":51,"path":"src\\gameobjects\\components"},"description":"Changes the base texture the Game Object is using. The old texture is removed and the new one is referenced or fetched from the Cache.\r\rIf your Game Object is using a frame from a texture atlas and you just wish to change to another frame, then see the `frame` or `frameName` properties instead.\r\rYou should only use `loadTexture` if you want to replace the base texture entirely.\r\rCalling this method causes a WebGL texture update, so use sparingly or in low-intensity portions of your game, or if you know the new texture is already on the GPU.\r\rYou can use the new const `Phaser.PENDING_ATLAS` as the texture key for any sprite. \rDoing this then sets the key to be the `frame` argument (the frame is set to zero). \r\rThis allows you to create sprites using `load.image` during development, and then change them \rto use a Texture Atlas later in development by simply searching your code for 'PENDING_ATLAS' \rand swapping it to be the key of the atlas data.\r\rNote: You cannot use a RenderTexture as a texture for a TileSprite.","kind":"function","params":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If an animation is already playing on this Sprite you can choose to stop it or let it carry on playing.","name":"stopAnimation"}],"name":"loadTexture","longname":"Phaser.Text#loadTexture","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.LoadTexture#loadTexture","inherited":true,"___s":true},{"meta":{"range":[5633,7262],"filename":"LoadTexture.js","lineno":155,"path":"src\\gameobjects\\components"},"description":"Sets the texture frame the Game Object uses for rendering.\r\rThis is primarily an internal method used by `loadTexture`, but is exposed for the use of plugins and custom classes.","kind":"function","params":[{"type":{"names":["Phaser.Frame"]},"description":"The Frame to be used by the texture.","name":"frame"}],"name":"setFrame","longname":"Phaser.Text#setFrame","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.LoadTexture#setFrame","inherited":true,"___s":true},{"meta":{"range":[7825,7986],"filename":"LoadTexture.js","lineno":220,"path":"src\\gameobjects\\components"},"description":"Resizes the Frame dimensions that the Game Object uses for rendering.\r\rYou shouldn't normally need to ever call this, but in the case of special texture types such as Video or BitmapData\rit can be useful to adjust the dimensions directly in this way.","kind":"function","params":[{"type":{"names":["object"]},"description":"The parent texture object that caused the resize, i.e. a Phaser.Video object.","name":"parent"},{"type":{"names":["integer"]},"description":"The new width of the texture.","name":"width"},{"type":{"names":["integer"]},"description":"The new height of the texture.","name":"height"}],"name":"resizeFrame","longname":"Phaser.Text#resizeFrame","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.LoadTexture#resizeFrame","inherited":true,"___s":true},{"meta":{"range":[8118,8243],"filename":"LoadTexture.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"Resets the texture frame dimensions that the Game Object uses for rendering.","kind":"function","name":"resetFrame","longname":"Phaser.Text#resetFrame","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.LoadTexture#resetFrame","inherited":true,"___s":true},{"meta":{"range":[8868,9060],"filename":"LoadTexture.js","lineno":254,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame index of the texture being used to render this Game Object.\r\rTo change the frame set `frame` to the index of the new frame in the sprite sheet you wish this Game Object to use,\rfor example: `player.frame = 4`.\r\rIf the frame index given doesn't exist it will revert to the first frame found in the texture.\r\rIf you are using a texture atlas then you should use the `frameName` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["integer"]},"name":"frame"}],"name":"frame","longname":"Phaser.Text#frame","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.LoadTexture#frame","inherited":true,"___s":true},{"meta":{"range":[9723,9927],"filename":"LoadTexture.js","lineno":279,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame name of the texture being used to render this Game Object.\r\rTo change the frame set `frameName` to the name of the new frame in the texture atlas you wish this Game Object to use, \rfor example: `player.frameName = \"idle\"`.\r\rIf the frame name given doesn't exist it will revert to the first frame found in the texture and throw a console warning.\r\rIf you are using a sprite sheet then you should use the `frame` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["string"]},"name":"frameName"}],"name":"frameName","longname":"Phaser.Text#frameName","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.LoadTexture#frameName","inherited":true,"___s":true},{"meta":{"range":[1339,1475],"filename":"Overlap.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"Checks to see if the bounds of this Game Object overlaps with the bounds of the given Display Object, \rwhich can be a Sprite, Image, TileSprite or anything that extends those such as Button or provides a `getBounds` method and result.\r\rThis check ignores the `hitArea` property if set and runs a `getBounds` comparison on both objects to determine the result.\r\rTherefore it's relatively expensive to use in large quantities, i.e. with lots of Sprites at a high frequency.\rIt should be fine for low-volume testing where physics isn't required.","kind":"function","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.TileSprite","Phaser.Button","PIXI.DisplayObject"]},"description":"The display object to check against.","name":"displayObject"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the bounds of this Game Object intersects at any point with the bounds of the given display object."}],"name":"overlap","longname":"Phaser.Text#overlap","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Overlap#overlap","inherited":true,"___s":true},{"meta":{"range":[2899,2909],"filename":"PhysicsBody.js","lineno":91,"path":"src\\gameobjects\\components"},"description":"`body` is the Game Objects physics body. Once a Game Object is enabled for physics you access all associated \rproperties and methods via it.\r\rBy default Game Objects won't add themselves to any physics system and their `body` property will be `null`.\r\rTo enable this Game Object for physics you need to call `game.physics.enable(object, system)` where `object` is this object\rand `system` is the Physics system you are using. If none is given it defaults to `Phaser.Physics.Arcade`.\r\rYou can alternatively call `game.physics.arcade.enable(object)`, or add this Game Object to a physics enabled Group.\r\rImportant: Enabling a Game Object for P2 or Ninja physics will automatically set its `anchor` property to 0.5, \rso the physics body is centered on the Game Object.\r\rIf you need a different result then adjust or re-create the Body shape offsets manually or reset the anchor after enabling physics.","properties":[{"type":{"names":["Phaser.Physics.Arcade.Body","Phaser.Physics.P2.Body","Phaser.Physics.Ninja.Body","null"]},"name":"body"}],"defaultvalue":null,"name":"body","longname":"Phaser.Text#body","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.PhysicsBody#body","inherited":true,"___s":true},{"meta":{"range":[3072,3378],"filename":"PhysicsBody.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the x axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"x"}],"name":"x","longname":"Phaser.Text#x","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.PhysicsBody#x","inherited":true,"___s":true},{"meta":{"range":[3541,3847],"filename":"PhysicsBody.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the y axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"y"}],"name":"y","longname":"Phaser.Text#y","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.PhysicsBody#y","inherited":true,"___s":true},{"meta":{"range":[1061,1717],"filename":"Reset.js","lineno":30,"path":"src\\gameobjects\\components"},"description":"Resets the Game Object.\r\rThis moves the Game Object to the given x/y world coordinates and sets `fresh`, `exists`, \r`visible` and `renderable` to true.\r\rIf this Game Object has the LifeSpan component it will also set `alive` to true and `health` to the given value.\r\rIf this Game Object has a Physics Body it will reset the Body.","kind":"function","params":[{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the Game Object at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the Game Object at.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The health to give the Game Object if it has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"reset","longname":"Phaser.Text#reset","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Reset#reset","inherited":true,"___s":true},{"meta":{"range":[566,589],"filename":"ScaleMinMax.js","lineno":20,"path":"src\\gameobjects\\components"},"description":"The callback that will apply any scale limiting to the worldTransform.","properties":[{"type":{"names":["function"]},"name":"transformCallback"}],"name":"transformCallback","longname":"Phaser.Text#transformCallback","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#transformCallback","inherited":true,"___s":true},{"meta":{"range":[728,758],"filename":"ScaleMinMax.js","lineno":26,"path":"src\\gameobjects\\components"},"description":"The context under which `transformCallback` is called.","properties":[{"type":{"names":["object"]},"name":"transformCallbackContext"}],"name":"transformCallbackContext","longname":"Phaser.Text#transformCallbackContext","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#transformCallbackContext","inherited":true,"___s":true},{"meta":{"range":[1047,1061],"filename":"ScaleMinMax.js","lineno":36,"path":"src\\gameobjects\\components"},"description":"The minimum scale this Game Object will scale down to.\r\rIt allows you to prevent a parent from scaling this Game Object lower than the given value.\r\rSet it to `null` to remove the limit.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleMin"}],"name":"scaleMin","longname":"Phaser.Text#scaleMin","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#scaleMin","inherited":true,"___s":true},{"meta":{"range":[1350,1364],"filename":"ScaleMinMax.js","lineno":46,"path":"src\\gameobjects\\components"},"description":"The maximum scale this Game Object will scale up to. \r\rIt allows you to prevent a parent from scaling this Game Object higher than the given value.\r\rSet it to `null` to remove the limit.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleMax"}],"name":"scaleMax","longname":"Phaser.Text#scaleMax","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#scaleMax","inherited":true,"___s":true},{"meta":{"range":[3832,5155],"filename":"ScaleMinMax.js","lineno":110,"path":"src\\gameobjects\\components"},"description":"Sets the scaleMin and scaleMax values. These values are used to limit how far this Game Object will scale based on its parent.\r\rFor example if this Game Object has a `minScale` value of 1 and its parent has a `scale` value of 0.5, the 0.5 will be ignored \rand the scale value of 1 will be used, as the parents scale is lower than the minimum scale this Game Object should adhere to.\r\rBy setting these values you can carefully control how Game Objects deal with responsive scaling.\r\rIf only one parameter is given then that value will be used for both scaleMin and scaleMax:\r`setScaleMinMax(1)` = scaleMin.x, scaleMin.y, scaleMax.x and scaleMax.y all = 1\r\rIf only two parameters are given the first is set as scaleMin.x and y and the second as scaleMax.x and y:\r`setScaleMinMax(0.5, 2)` = scaleMin.x and y = 0.5 and scaleMax.x and y = 2\r\rIf you wish to set `scaleMin` with different values for x and y then either modify Game Object.scaleMin directly, \ror pass `null` for the `maxX` and `maxY` parameters.\r\rCall `setScaleMinMax(null)` to clear all previously set values.","kind":"function","params":[{"type":{"names":["number","null"]},"description":"The minimum horizontal scale value this Game Object can scale down to.","name":"minX"},{"type":{"names":["number","null"]},"description":"The minimum vertical scale value this Game Object can scale down to.","name":"minY"},{"type":{"names":["number","null"]},"description":"The maximum horizontal scale value this Game Object can scale up to.","name":"maxX"},{"type":{"names":["number","null"]},"description":"The maximum vertical scale value this Game Object can scale up to.","name":"maxY"}],"name":"setScaleMinMax","longname":"Phaser.Text#setScaleMinMax","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#setScaleMinMax","inherited":true,"___s":true},{"meta":{"range":[680,1221],"filename":"Smoothed.js","lineno":25,"path":"src\\gameobjects\\components"},"description":"Enable or disable texture smoothing for this Game Object.\r\rIt only takes effect if the Game Object is using an image based texture.\r\rSmoothing is enabled by default.","properties":[{"type":{"names":["boolean"]},"name":"smoothed"}],"name":"smoothed","longname":"Phaser.Text#smoothed","kind":"member","memberof":"Phaser.Text","scope":"instance","inherits":"Phaser.Component.Smoothed#smoothed","inherited":true,"___s":true},{"meta":{"range":[584,610],"filename":"TilingSprite.js","lineno":25,"path":"src\\pixi\\extras"},"description":"The width of the tiling sprite","properties":[{"name":"width"}],"type":{"names":["Number"]},"name":"_width","longname":"Phaser.TileSprite#_width","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"PIXI.TilingSprite#_width","inherited":true,"___s":true},{"meta":{"range":[731,759],"filename":"TilingSprite.js","lineno":33,"path":"src\\pixi\\extras"},"description":"The height of the tiling sprite","properties":[{"name":"height"}],"type":{"names":["Number"]},"name":"_height","longname":"Phaser.TileSprite#_height","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"PIXI.TilingSprite#_height","inherited":true,"___s":true},{"meta":{"range":[895,932],"filename":"TilingSprite.js","lineno":41,"path":"src\\pixi\\extras"},"description":"The scaling of the image that is being tiled","properties":[{"name":"tileScale"}],"type":{"names":["Point"]},"name":"tileScale","longname":"Phaser.TileSprite#tileScale","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"PIXI.TilingSprite#tileScale","inherited":true,"___s":true},{"meta":{"range":[1085,1128],"filename":"TilingSprite.js","lineno":49,"path":"src\\pixi\\extras"},"description":"A point that represents the scale of the texture object","properties":[{"name":"tileScaleOffset"}],"type":{"names":["Point"]},"name":"tileScaleOffset","longname":"Phaser.TileSprite#tileScaleOffset","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"PIXI.TilingSprite#tileScaleOffset","inherited":true,"___s":true},{"meta":{"range":[1279,1315],"filename":"TilingSprite.js","lineno":57,"path":"src\\pixi\\extras"},"description":"The offset position of the image that is being tiled","properties":[{"name":"tilePosition"}],"type":{"names":["Point"]},"name":"tilePosition","longname":"Phaser.TileSprite#tilePosition","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"PIXI.TilingSprite#tilePosition","inherited":true,"___s":true},{"meta":{"range":[1472,1494],"filename":"TilingSprite.js","lineno":66,"path":"src\\pixi\\extras"},"description":"Whether this sprite is renderable or not","properties":[{"name":"renderable"}],"type":{"names":["Boolean"]},"defaultvalue":"true","name":"renderable","longname":"Phaser.TileSprite#renderable","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"PIXI.TilingSprite#renderable","inherited":true,"___s":true},{"meta":{"range":[1659,1679],"filename":"TilingSprite.js","lineno":75,"path":"src\\pixi\\extras"},"description":"The tint applied to the sprite. This is a hex value","properties":[{"name":"tint"}],"type":{"names":["Number"]},"defaultvalue":"0xFFFFFF","name":"tint","longname":"Phaser.TileSprite#tint","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"PIXI.TilingSprite#tint","inherited":true,"___s":true},{"meta":{"range":[1918,1943],"filename":"TilingSprite.js","lineno":84,"path":"src\\pixi\\extras"},"description":"If enabled a green rectangle will be drawn behind the generated tiling texture, allowing you to visually\rdebug the texture being used.","properties":[{"name":"textureDebug"}],"type":{"names":["Boolean"]},"name":"textureDebug","longname":"Phaser.TileSprite#textureDebug","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"PIXI.TilingSprite#textureDebug","inherited":true,"___s":true},{"meta":{"range":[2123,2162],"filename":"TilingSprite.js","lineno":93,"path":"src\\pixi\\extras"},"description":"The blend mode to be applied to the sprite","properties":[{"name":"blendMode"}],"type":{"names":["Number"]},"defaultvalue":"PIXI.blendModes.NORMAL;","name":"blendMode","longname":"Phaser.TileSprite#blendMode","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"PIXI.TilingSprite#blendMode","inherited":true,"___s":true},{"meta":{"range":[2328,2352],"filename":"TilingSprite.js","lineno":101,"path":"src\\pixi\\extras"},"description":"The CanvasBuffer object that the tiled texture is drawn to.","properties":[{"name":"canvasBuffer"}],"type":{"names":["PIXI.CanvasBuffer"]},"name":"canvasBuffer","longname":"Phaser.TileSprite#canvasBuffer","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"PIXI.TilingSprite#canvasBuffer","inherited":true,"___s":true},{"meta":{"range":[2557,2582],"filename":"TilingSprite.js","lineno":109,"path":"src\\pixi\\extras"},"description":"An internal Texture object that holds the tiling texture that was generated from TilingSprite.texture.","properties":[{"name":"tilingTexture"}],"type":{"names":["PIXI.Texture"]},"name":"tilingTexture","longname":"Phaser.TileSprite#tilingTexture","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"PIXI.TilingSprite#tilingTexture","inherited":true,"___s":true},{"meta":{"range":[2790,2813],"filename":"TilingSprite.js","lineno":117,"path":"src\\pixi\\extras"},"description":"The Context fill pattern that is used to draw the TilingSprite in Canvas mode only (will be null in WebGL).","properties":[{"name":"tilePattern"}],"type":{"names":["PIXI.Texture"]},"name":"tilePattern","longname":"Phaser.TileSprite#tilePattern","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"PIXI.TilingSprite#tilePattern","inherited":true,"___s":true},{"meta":{"range":[3077,3103],"filename":"TilingSprite.js","lineno":127,"path":"src\\pixi\\extras"},"description":"If true the TilingSprite will run generateTexture on its **next** render pass.\rThis is set by the likes of Phaser.LoadTexture.setFrame.","properties":[{"name":"refreshTexture"}],"type":{"names":["Boolean"]},"defaultvalue":"true","name":"refreshTexture","longname":"Phaser.TileSprite#refreshTexture","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"PIXI.TilingSprite#refreshTexture","inherited":true,"___s":true},{"meta":{"range":[3048,3058],"filename":"Core.js","lineno":142,"path":"src\\gameobjects\\components"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"name":"game","longname":"Phaser.TileSprite#game","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Core#game","inherited":true,"___s":true},{"meta":{"range":[3279,3287],"filename":"Core.js","lineno":150,"path":"src\\gameobjects\\components"},"description":"A user defined name given to this Game Object.\rThis value isn't ever used internally by Phaser, it is meant as a game level property.","properties":[{"type":{"names":["string"]},"name":"name"}],"defaultvalue":"","name":"name","longname":"Phaser.TileSprite#name","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Core#name","inherited":true,"___s":true},{"meta":{"range":[3651,3659],"filename":"Core.js","lineno":160,"path":"src\\gameobjects\\components"},"description":"An empty Object that belongs to this Game Object.\rThis value isn't ever used internally by Phaser, but may be used by your own code, or\rby Phaser Plugins, to store data that needs to be associated with the Game Object,\rwithout polluting the Game Object directly.","properties":[{"type":{"names":["Object"]},"name":"data"}],"defaultvalue":"{}","defaultvaluetype":"object","name":"data","longname":"Phaser.TileSprite#data","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Core#data","inherited":true,"___s":true},{"meta":{"range":[3794,3808],"filename":"Core.js","lineno":167,"path":"src\\gameobjects\\components"},"description":"The components this Game Object has installed.","properties":[{"type":{"names":["object"]},"name":"components"}],"access":"protected","name":"components","longname":"Phaser.TileSprite#components","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Core#components","inherited":true,"___s":true},{"meta":{"range":[4202,4206],"filename":"Core.js","lineno":177,"path":"src\\gameobjects\\components"},"description":"The z depth of this Game Object within its parent Group.\rNo two objects in a Group can have the same z value.\rThis value is adjusted automatically whenever the Group hierarchy changes.\rIf you wish to re-order the layering of a Game Object then see methods like Group.moveUp or Group.bringToTop.","properties":[{"type":{"names":["number"]},"name":"z"}],"readonly":true,"name":"z","longname":"Phaser.TileSprite#z","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Core#z","inherited":true,"___s":true},{"meta":{"range":[4484,4501],"filename":"Core.js","lineno":185,"path":"src\\gameobjects\\components"},"description":"All Phaser Game Objects have an Events class which contains all of the events that are dispatched when certain things happen to this\rGame Object, or any of its components.","see":["Phaser.Events"],"properties":[{"type":{"names":["Phaser.Events"]},"name":"events"}],"name":"events","longname":"Phaser.TileSprite#events","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Core#events","inherited":true,"___s":true},{"meta":{"range":[4815,4836],"filename":"Core.js","lineno":193,"path":"src\\gameobjects\\components"},"description":"If the Game Object is enabled for animation (such as a Phaser.Sprite) this is a reference to its AnimationManager instance.\rThrough it you can create, play, pause and stop animations.","see":["Phaser.AnimationManager"],"properties":[{"type":{"names":["Phaser.AnimationManager"]},"name":"animations"}],"name":"animations","longname":"Phaser.TileSprite#animations","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Core#animations","inherited":true,"___s":true},{"meta":{"range":[5559,5566],"filename":"Core.js","lineno":203,"path":"src\\gameobjects\\components"},"description":"The key of the image or texture used by this Game Object during rendering.\rIf it is a string it's the string used to retrieve the texture from the Phaser Image Cache.\rIt can also be an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.\rIf a Game Object is created without a key it is automatically assigned the key `__default` which is a 32x32 transparent PNG stored within the Cache.\rIf a Game Object is given a key which doesn't exist in the Image Cache it is re-assigned the key `__missing` which is a 32x32 PNG of a green box with a line through it.","properties":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"name":"key"}],"name":"key","longname":"Phaser.TileSprite#key","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Core#key","inherited":true,"___s":true},{"meta":{"range":[5882,5893],"filename":"Core.js","lineno":211,"path":"src\\gameobjects\\components"},"description":"The world coordinates of this Game Object in pixels.\rDepending on where in the display list this Game Object is placed this value can differ from `position`, \rwhich contains the x/y coordinates relative to the Game Objects parent.","properties":[{"type":{"names":["Phaser.Point"]},"name":"world"}],"name":"world","longname":"Phaser.TileSprite#world","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Core#world","inherited":true,"___s":true},{"meta":{"range":[6029,6041],"filename":"Core.js","lineno":218,"path":"src\\gameobjects\\components"},"description":"A debug flag designed for use with `Game.enableStep`.","properties":[{"type":{"names":["boolean"]},"name":"debug"}],"defaultvalue":false,"name":"debug","longname":"Phaser.TileSprite#debug","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Core#debug","inherited":true,"___s":true},{"meta":{"range":[6204,6226],"filename":"Core.js","lineno":225,"path":"src\\gameobjects\\components"},"description":"The position the Game Object was located in the previous frame.","properties":[{"type":{"names":["Phaser.Point"]},"name":"previousPosition"}],"readonly":true,"name":"previousPosition","longname":"Phaser.TileSprite#previousPosition","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Core#previousPosition","inherited":true,"___s":true},{"meta":{"range":[6406,6425],"filename":"Core.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"The rotation the Game Object was in set to in the previous frame. Value is in radians.","properties":[{"type":{"names":["number"]},"name":"previousRotation"}],"readonly":true,"name":"previousRotation","longname":"Phaser.TileSprite#previousRotation","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Core#previousRotation","inherited":true,"___s":true},{"meta":{"range":[6720,6736],"filename":"Core.js","lineno":240,"path":"src\\gameobjects\\components"},"description":"The render order ID is used internally by the renderer and Input Manager and should not be modified.\rThis property is mostly used internally by the renderers, but is exposed for the use of plugins.","properties":[{"type":{"names":["number"]},"name":"renderOrderID"}],"readonly":true,"name":"renderOrderID","longname":"Phaser.TileSprite#renderOrderID","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Core#renderOrderID","inherited":true,"___s":true},{"meta":{"range":[7053,7064],"filename":"Core.js","lineno":248,"path":"src\\gameobjects\\components"},"description":"A Game Object is considered `fresh` if it has just been created or reset and is yet to receive a renderer transform update.\rThis property is mostly used internally by the physics systems, but is exposed for the use of plugins.","properties":[{"type":{"names":["boolean"]},"name":"fresh"}],"readonly":true,"name":"fresh","longname":"Phaser.TileSprite#fresh","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Core#fresh","inherited":true,"___s":true},{"meta":{"range":[7518,7539],"filename":"Core.js","lineno":259,"path":"src\\gameobjects\\components"},"description":"A Game Object is that is pendingDestroy is flagged to have its destroy method called on the next logic update.\rYou can set it directly to allow you to flag an object to be destroyed on its next update.\r\rThis is extremely useful if you wish to destroy an object from within one of its own callbacks \rsuch as with Buttons or other Input events.","properties":[{"type":{"names":["boolean"]},"name":"pendingDestroy"}],"name":"pendingDestroy","longname":"Phaser.TileSprite#pendingDestroy","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Core#pendingDestroy","inherited":true,"___s":true},{"meta":{"range":[8354,9085],"filename":"Core.js","lineno":284,"path":"src\\gameobjects\\components"},"description":"Controls if this Game Object is processed by the core game loop.\rIf this Game Object has a physics body it also controls if its physics body is updated or not.\rWhen `exists` is set to `false` it will remove its physics body from the physics world if it has one.\rIt also toggles the `visible` property to false as well.\r\rSetting `exists` to true will add its physics body back in to the physics world, if it has one.\rIt will also set the `visible` property to `true`.","properties":[{"type":{"names":["boolean"]},"name":"exists"}],"name":"exists","longname":"Phaser.TileSprite#exists","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Core#exists","inherited":true,"___s":true},{"meta":{"range":[9388,9417],"filename":"Core.js","lineno":328,"path":"src\\gameobjects\\components"},"description":"Override this method in your own custom objects to handle any update requirements.\rIt is called immediately after `preUpdate` and before `postUpdate`.\rRemember if this Game Object has any children you should call update on those too.","kind":"function","name":"update","longname":"Phaser.TileSprite#update","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Core#update","inherited":true,"___s":true},{"meta":{"range":[9544,10055],"filename":"Core.js","lineno":338,"path":"src\\gameobjects\\components"},"description":"Internal method called by the World postUpdate cycle.","kind":"function","access":"protected","name":"postUpdate","longname":"Phaser.TileSprite#postUpdate","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Core#postUpdate","inherited":true,"___s":true},{"meta":{"range":[1110,1382],"filename":"Angle.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"The angle property is the rotation of the Game Object in *degrees* from its original orientation.\r\rValues from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\r\rValues outside this range are added to or subtracted from 360 to obtain a value within the range. \rFor example, the statement player.angle = 450 is the same as player.angle = 90.\r\rIf you wish to work in radians instead of degrees you can use the property `rotation` instead. \rWorking in radians is slightly faster as it doesn't have to perform any calculations.","properties":[{"type":{"names":["number"]},"name":"angle"}],"name":"angle","longname":"Phaser.TileSprite#angle","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Angle#angle","inherited":true,"___s":true},{"meta":{"range":[1545,1745],"filename":"Animation.js","lineno":31,"path":"src\\gameobjects\\components"},"description":"Plays an Animation.\r\rThe animation should have previously been created via `animations.add`.\r\rIf the animation is already playing calling this again won't do anything.\rIf you need to reset an already running animation do so directly on the Animation object itself or via `AnimationManager.stop`.","kind":"function","params":[{"type":{"names":["string"]},"description":"The name of the animation to be played, e.g. \"fire\", \"walk\", \"jump\". Must have been previously created via 'AnimationManager.add'.","name":"name"},{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"The framerate to play the animation at. The speed is given in frames per second. If not provided the previously set frameRate of the Animation is used.","name":"frameRate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the animation be looped after playback. If not provided the previously set loop value of the Animation is used.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set to true when the animation completes (only happens if loop=false) the parent Sprite will be killed.","name":"killOnComplete"}],"returns":[{"type":{"names":["Phaser.Animation"]},"description":"A reference to playing Animation."}],"name":"play","longname":"Phaser.TileSprite#play","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Animation#play","inherited":true,"___s":true},{"meta":{"range":[1129,1144],"filename":"AutoCull.js","lineno":28,"path":"src\\gameobjects\\components"},"description":"A Game Object with `autoCull` set to true will check its bounds against the World Camera every frame.\rIf it is not intersecting the Camera bounds at any point then it has its `renderable` property set to `false`.\rThis keeps the Game Object alive and still processing updates, but forces it to skip the render step entirely.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"autoCull"}],"defaultvalue":false,"name":"autoCull","longname":"Phaser.TileSprite#autoCull","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.AutoCull#autoCull","inherited":true,"___s":true},{"meta":{"range":[1402,1809],"filename":"AutoCull.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds intersect with the Game Camera bounds.\rReturns `true` if they do, otherwise `false` if fully outside of the Cameras bounds.","properties":[{"type":{"names":["boolean"]},"name":"inCamera"}],"readonly":true,"name":"inCamera","longname":"Phaser.TileSprite#inCamera","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.AutoCull#inCamera","inherited":true,"overrides":"Phaser.Component.InCamera#inCamera","___s":true},{"meta":{"range":[661,773],"filename":"Bounds.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its x coordinate.\rThis is the same as `width * anchor.x`.\rIt will only be > 0 if anchor.x is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetX"}],"readonly":true,"name":"offsetX","longname":"Phaser.TileSprite#offsetX","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Bounds#offsetX","inherited":true,"___s":true},{"meta":{"range":[1042,1155],"filename":"Bounds.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its y coordinate.\rThis is the same as `height * anchor.y`.\rIt will only be > 0 if anchor.y is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetY"}],"readonly":true,"name":"offsetY","longname":"Phaser.TileSprite#offsetY","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Bounds#offsetY","inherited":true,"___s":true},{"meta":{"range":[1331,1579],"filename":"Bounds.js","lineno":58,"path":"src\\gameobjects\\components"},"description":"The center x coordinate of the Game Object.\rThis is the same as `(x - offsetX) + (width / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerX"}],"name":"centerX","longname":"Phaser.TileSprite#centerX","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Bounds#centerX","inherited":true,"___s":true},{"meta":{"range":[1756,2006],"filename":"Bounds.js","lineno":80,"path":"src\\gameobjects\\components"},"description":"The center y coordinate of the Game Object.\rThis is the same as `(y - offsetY) + (height / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerY"}],"name":"centerY","longname":"Phaser.TileSprite#centerY","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Bounds#centerY","inherited":true,"___s":true},{"meta":{"range":[2159,2358],"filename":"Bounds.js","lineno":102,"path":"src\\gameobjects\\components"},"description":"The left coordinate of the Game Object.\rThis is the same as `x - offsetX`.","properties":[{"type":{"names":["number"]},"name":"left"}],"name":"left","longname":"Phaser.TileSprite#left","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Bounds#left","inherited":true,"___s":true},{"meta":{"range":[2521,2751],"filename":"Bounds.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The right coordinate of the Game Object.\rThis is the same as `x + width - offsetX`.","properties":[{"type":{"names":["number"]},"name":"right"}],"name":"right","longname":"Phaser.TileSprite#right","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Bounds#right","inherited":true,"___s":true},{"meta":{"range":[2900,3098],"filename":"Bounds.js","lineno":146,"path":"src\\gameobjects\\components"},"description":"The y coordinate of the Game Object.\rThis is the same as `y - offsetY`.","properties":[{"type":{"names":["number"]},"name":"top"}],"name":"top","longname":"Phaser.TileSprite#top","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Bounds#top","inherited":true,"___s":true},{"meta":{"range":[3262,3495],"filename":"Bounds.js","lineno":168,"path":"src\\gameobjects\\components"},"description":"The sum of the y and height properties.\rThis is the same as `y + height - offsetY`.","properties":[{"type":{"names":["number"]},"name":"bottom"}],"name":"bottom","longname":"Phaser.TileSprite#bottom","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Bounds#bottom","inherited":true,"___s":true},{"meta":{"range":[6346,8224],"filename":"Bounds.js","lineno":223,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object within another Game Object, or Rectangle, known as the\r'container', to one of 9 possible positions.\r\rThe container must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe container. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, \r`Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, \r`Phaser.BOTTOM_CENTER` and `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rcontainer, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignIn(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the containers bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the container bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"container"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignIn","longname":"Phaser.TileSprite#alignIn","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Bounds#alignIn","inherited":true,"___s":true},{"meta":{"range":[11205,13527],"filename":"Bounds.js","lineno":321,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object to the side of another Game Object, or Rectangle, known as the\r'parent', in one of 11 possible positions.\r\rThe parent must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe parent. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, \r`Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, \r`Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` \rand `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rparent, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignTo(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the parents bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the parent bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"parent"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, `Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, `Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignTo","longname":"Phaser.TileSprite#alignTo","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Bounds#alignTo","inherited":true,"___s":true},{"meta":{"range":[784,949],"filename":"BringToTop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"Brings this Game Object to the top of its parents display list.\rVisually this means it will render over the top of any old child in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will bring it to the top of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"bringToTop","longname":"Phaser.TileSprite#bringToTop","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.BringToTop#bringToTop","inherited":true,"___s":true},{"meta":{"range":[1378,1543],"filename":"BringToTop.js","lineno":45,"path":"src\\gameobjects\\components"},"description":"Sends this Game Object to the bottom of its parents display list.\rVisually this means it will render below all other children in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will send it to the bottom of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"sendToBack","longname":"Phaser.TileSprite#sendToBack","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.BringToTop#sendToBack","inherited":true,"___s":true},{"meta":{"range":[1982,2140],"filename":"BringToTop.js","lineno":66,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object up one place in its parents display list.\rThis call has no effect if the Game Object is already at the top of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object up within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveUp","longname":"Phaser.TileSprite#moveUp","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.BringToTop#moveUp","inherited":true,"___s":true},{"meta":{"range":[2586,2748],"filename":"BringToTop.js","lineno":87,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object down one place in its parents display list.\rThis call has no effect if the Game Object is already at the bottom of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object down within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveDown","longname":"Phaser.TileSprite#moveDown","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.BringToTop#moveDown","inherited":true,"___s":true},{"meta":{"range":[629,648],"filename":"Destroy.js","lineno":22,"path":"src\\gameobjects\\components"},"description":"As a Game Object runs through its destroy method this flag is set to true, \rand can be checked in any sub-systems or plugins it is being destroyed from.","properties":[{"type":{"names":["boolean"]},"name":"destroyPhase"}],"readonly":true,"name":"destroyPhase","longname":"Phaser.TileSprite#destroyPhase","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Destroy#destroyPhase","inherited":true,"___s":true},{"meta":{"range":[2104,2515],"filename":"FixedToCamera.js","lineno":56,"path":"src\\gameobjects\\components"},"description":"A Game Object that is \"fixed\" to the camera uses its x/y coordinates as offsets from the top left of the camera during rendering.\r\rThe values are adjusted at the rendering stage, overriding the Game Objects actual world position.\r\rThe end result is that the Game Object will appear to be 'fixed' to the camera, regardless of where in the game world\rthe camera is viewing. This is useful if for example this Game Object is a UI item that you wish to be visible at all times \rregardless where in the world the camera is.\r\rThe offsets are stored in the `cameraOffset` property.\r\rNote that the `cameraOffset` values are in addition to any parent of this Game Object on the display list.\r\rBe careful not to set `fixedToCamera` on Game Objects which are in Groups that already have `fixedToCamera` enabled on them.","properties":[{"type":{"names":["boolean"]},"name":"fixedToCamera"}],"name":"fixedToCamera","longname":"Phaser.TileSprite#fixedToCamera","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.FixedToCamera#fixedToCamera","inherited":true,"___s":true},{"meta":{"range":[2868,2900],"filename":"FixedToCamera.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"The x/y coordinate offset applied to the top-left of the camera that this Game Object will be drawn at if `fixedToCamera` is true.\r\rThe values are relative to the top-left of the camera view and in addition to any parent of the Game Object on the display list.","properties":[{"type":{"names":["Phaser.Point"]},"name":"cameraOffset"}],"name":"cameraOffset","longname":"Phaser.TileSprite#cameraOffset","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.FixedToCamera#cameraOffset","inherited":true,"___s":true},{"meta":{"range":[778,787],"filename":"Health.js","lineno":26,"path":"src\\gameobjects\\components"},"description":"The Game Objects health value. This is a handy property for setting and manipulating health on a Game Object.\r\rIt can be used in combination with the `damage` method or modified directly.","properties":[{"type":{"names":["number"]},"name":"health"}],"defaultvalue":1,"name":"health","longname":"Phaser.TileSprite#health","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Health#health","inherited":true,"___s":true},{"meta":{"range":[1029,1043],"filename":"Health.js","lineno":35,"path":"src\\gameobjects\\components"},"description":"The Game Objects maximum health value. This works in combination with the `heal` method to ensure\rthe health value never exceeds the maximum.","properties":[{"type":{"names":["number"]},"name":"maxHealth"}],"defaultvalue":100,"name":"maxHealth","longname":"Phaser.TileSprite#maxHealth","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Health#maxHealth","inherited":true,"___s":true},{"meta":{"range":[1419,1661],"filename":"Health.js","lineno":46,"path":"src\\gameobjects\\components"},"description":"Damages the Game Object. This removes the given amount of health from the `health` property.\r\rIf health is taken below or is equal to zero then the `kill` method is called.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to subtract from the current `health` value.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"damage","longname":"Phaser.TileSprite#damage","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Health#damage","inherited":true,"___s":true},{"meta":{"range":[1989,2195],"filename":"Health.js","lineno":70,"path":"src\\gameobjects\\components"},"description":"Sets the health property of the Game Object to the given amount.\rWill never exceed the `maxHealth` value.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to set the `health` value to. The total will never exceed `maxHealth`.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"setHealth","longname":"Phaser.TileSprite#setHealth","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Health#setHealth","inherited":true,"___s":true},{"meta":{"range":[2503,2772],"filename":"Health.js","lineno":90,"path":"src\\gameobjects\\components"},"description":"Heal the Game Object. This adds the given amount of health to the `health` property.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to add to the current `health` value. The total will never exceed `maxHealth`.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"heal","longname":"Phaser.TileSprite#heal","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Health#heal","inherited":true,"___s":true},{"meta":{"range":[805,816],"filename":"InputEnabled.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Input Handler for this Game Object.\r\rBy default it is disabled. If you wish this Game Object to process input events you should enable it with: `inputEnabled = true`.\r\rAfter you have done this, this property will be a reference to the Phaser InputHandler.","properties":[{"type":{"names":["Phaser.InputHandler","null"]},"name":"input"}],"name":"input","longname":"Phaser.TileSprite#input","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.InputEnabled#input","inherited":true,"___s":true},{"meta":{"range":[1661,2398],"filename":"InputEnabled.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"By default a Game Object won't process any input events. By setting `inputEnabled` to true a Phaser.InputHandler is created\rfor this Game Object and it will then start to process click / touch events and more.\r\rYou can then access the Input Handler via `this.input`.\r\rNote that Input related events are dispatched from `this.events`, i.e.: `events.onInputDown`.\r\rIf you set this property to false it will stop the Input Handler from processing any more input events.\r\rIf you want to _temporarily_ disable input for a Game Object, then it's better to set\r`input.enabled = false`, as it won't reset any of the Input Handlers internal properties.\rYou can then toggle this back on as needed.","properties":[{"type":{"names":["boolean"]},"name":"inputEnabled"}],"name":"inputEnabled","longname":"Phaser.TileSprite#inputEnabled","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.InputEnabled#inputEnabled","inherited":true,"___s":true},{"meta":{"range":[3394,3417],"filename":"InWorld.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"If this is set to `true` the Game Object checks if it is within the World bounds each frame. \r\rWhen it is no longer intersecting the world bounds it dispatches the `onOutOfBounds` event.\r\rIf it was *previously* out of bounds but is now intersecting the world bounds again it dispatches the `onEnterBounds` event.\r\rIt also optionally kills the Game Object if `outOfBoundsKill` is `true`.\r\rWhen `checkWorldBounds` is enabled it forces the Game Object to calculate its full bounds every frame.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"checkWorldBounds"}],"defaultvalue":false,"name":"checkWorldBounds","longname":"Phaser.TileSprite#checkWorldBounds","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.InWorld#checkWorldBounds","inherited":true,"___s":true},{"meta":{"range":[3653,3675],"filename":"InWorld.js","lineno":106,"path":"src\\gameobjects\\components"},"description":"If this and the `checkWorldBounds` property are both set to `true` then the `kill` method is called as soon as `inWorld` returns false.","properties":[{"type":{"names":["boolean"]},"name":"outOfBoundsKill"}],"defaultvalue":false,"name":"outOfBoundsKill","longname":"Phaser.TileSprite#outOfBoundsKill","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.InWorld#outOfBoundsKill","inherited":true,"___s":true},{"meta":{"range":[3939,3967],"filename":"InWorld.js","lineno":115,"path":"src\\gameobjects\\components"},"description":"If this and the `autoCull` property are both set to `true`, then the `kill` method\ris called as soon as the Game Object leaves the camera bounds.","properties":[{"type":{"names":["boolean"]},"name":"outOfCameraBoundsKill"}],"defaultvalue":false,"name":"outOfCameraBoundsKill","longname":"Phaser.TileSprite#outOfCameraBoundsKill","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.InWorld#outOfCameraBoundsKill","inherited":true,"___s":true},{"meta":{"range":[4292,4429],"filename":"InWorld.js","lineno":129,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds are within, or intersect at any point with the Game World bounds.","properties":[{"type":{"names":["boolean"]},"name":"inWorld"}],"readonly":true,"name":"inWorld","longname":"Phaser.TileSprite#inWorld","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.InWorld#inWorld","inherited":true,"___s":true},{"meta":{"range":[1310,1321],"filename":"LifeSpan.js","lineno":50,"path":"src\\gameobjects\\components"},"description":"A useful flag to control if the Game Object is alive or dead.\r\rThis is set automatically by the Health components `damage` method should the object run out of health.\rOr you can toggle it via your game code.\r\rThis property is mostly just provided to be used by your game - it doesn't effect rendering or logic updates.\rHowever you can use `Group.getFirstAlive` in conjunction with this property for fast object pooling and recycling.","properties":[{"type":{"names":["boolean"]},"name":"alive"}],"defaultvalue":true,"name":"alive","longname":"Phaser.TileSprite#alive","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.LifeSpan#alive","inherited":true,"___s":true},{"meta":{"range":[1843,1854],"filename":"LifeSpan.js","lineno":65,"path":"src\\gameobjects\\components"},"description":"The lifespan allows you to give a Game Object a lifespan in milliseconds.\r\rOnce the Game Object is 'born' you can set this to a positive value.\r\rIt is automatically decremented by the millisecond equivalent of `game.time.physicsElapsed` each frame.\rWhen it reaches zero it will call the `kill` method.\r\rVery handy for particles, bullets, collectibles, or any other short-lived entity.","properties":[{"type":{"names":["number"]},"name":"lifespan"}],"defaultvalue":0,"name":"lifespan","longname":"Phaser.TileSprite#lifespan","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.LifeSpan#lifespan","inherited":true,"___s":true},{"meta":{"range":[2390,2807],"filename":"LifeSpan.js","lineno":78,"path":"src\\gameobjects\\components"},"description":"Brings a 'dead' Game Object back to life, optionally resetting its health value in the process.\r\rA resurrected Game Object has its `alive`, `exists` and `visible` properties all set to true.\r\rIt will dispatch the `onRevived` event. Listen to `events.onRevived` for the signal.","kind":"function","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"The health to give the Game Object. Only set if the GameObject has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"revive","longname":"Phaser.TileSprite#revive","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.LifeSpan#revive","inherited":true,"___s":true},{"meta":{"range":[3390,3634],"filename":"LifeSpan.js","lineno":113,"path":"src\\gameobjects\\components"},"description":"Kills a Game Object. A killed Game Object has its `alive`, `exists` and `visible` properties all set to false.\r\rIt will dispatch the `onKilled` event. You can listen to `events.onKilled` for the signal.\r\rNote that killing a Game Object is a way for you to quickly recycle it in an object pool,\rit doesn't destroy the object or free it up from memory.\r\rIf you don't need this Game Object any more you should call `destroy` instead.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"kill","longname":"Phaser.TileSprite#kill","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.LifeSpan#kill","inherited":true,"___s":true},{"meta":{"range":[2545,5312],"filename":"LoadTexture.js","lineno":51,"path":"src\\gameobjects\\components"},"description":"Changes the base texture the Game Object is using. The old texture is removed and the new one is referenced or fetched from the Cache.\r\rIf your Game Object is using a frame from a texture atlas and you just wish to change to another frame, then see the `frame` or `frameName` properties instead.\r\rYou should only use `loadTexture` if you want to replace the base texture entirely.\r\rCalling this method causes a WebGL texture update, so use sparingly or in low-intensity portions of your game, or if you know the new texture is already on the GPU.\r\rYou can use the new const `Phaser.PENDING_ATLAS` as the texture key for any sprite. \rDoing this then sets the key to be the `frame` argument (the frame is set to zero). \r\rThis allows you to create sprites using `load.image` during development, and then change them \rto use a Texture Atlas later in development by simply searching your code for 'PENDING_ATLAS' \rand swapping it to be the key of the atlas data.\r\rNote: You cannot use a RenderTexture as a texture for a TileSprite.","kind":"function","params":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If an animation is already playing on this Sprite you can choose to stop it or let it carry on playing.","name":"stopAnimation"}],"name":"loadTexture","longname":"Phaser.TileSprite#loadTexture","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.LoadTexture#loadTexture","inherited":true,"___s":true},{"meta":{"range":[5633,7262],"filename":"LoadTexture.js","lineno":155,"path":"src\\gameobjects\\components"},"description":"Sets the texture frame the Game Object uses for rendering.\r\rThis is primarily an internal method used by `loadTexture`, but is exposed for the use of plugins and custom classes.","kind":"function","params":[{"type":{"names":["Phaser.Frame"]},"description":"The Frame to be used by the texture.","name":"frame"}],"name":"setFrame","longname":"Phaser.TileSprite#setFrame","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.LoadTexture#setFrame","inherited":true,"___s":true},{"meta":{"range":[7825,7986],"filename":"LoadTexture.js","lineno":220,"path":"src\\gameobjects\\components"},"description":"Resizes the Frame dimensions that the Game Object uses for rendering.\r\rYou shouldn't normally need to ever call this, but in the case of special texture types such as Video or BitmapData\rit can be useful to adjust the dimensions directly in this way.","kind":"function","params":[{"type":{"names":["object"]},"description":"The parent texture object that caused the resize, i.e. a Phaser.Video object.","name":"parent"},{"type":{"names":["integer"]},"description":"The new width of the texture.","name":"width"},{"type":{"names":["integer"]},"description":"The new height of the texture.","name":"height"}],"name":"resizeFrame","longname":"Phaser.TileSprite#resizeFrame","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.LoadTexture#resizeFrame","inherited":true,"___s":true},{"meta":{"range":[8118,8243],"filename":"LoadTexture.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"Resets the texture frame dimensions that the Game Object uses for rendering.","kind":"function","name":"resetFrame","longname":"Phaser.TileSprite#resetFrame","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.LoadTexture#resetFrame","inherited":true,"___s":true},{"meta":{"range":[8868,9060],"filename":"LoadTexture.js","lineno":254,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame index of the texture being used to render this Game Object.\r\rTo change the frame set `frame` to the index of the new frame in the sprite sheet you wish this Game Object to use,\rfor example: `player.frame = 4`.\r\rIf the frame index given doesn't exist it will revert to the first frame found in the texture.\r\rIf you are using a texture atlas then you should use the `frameName` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["integer"]},"name":"frame"}],"name":"frame","longname":"Phaser.TileSprite#frame","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.LoadTexture#frame","inherited":true,"___s":true},{"meta":{"range":[9723,9927],"filename":"LoadTexture.js","lineno":279,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame name of the texture being used to render this Game Object.\r\rTo change the frame set `frameName` to the name of the new frame in the texture atlas you wish this Game Object to use, \rfor example: `player.frameName = \"idle\"`.\r\rIf the frame name given doesn't exist it will revert to the first frame found in the texture and throw a console warning.\r\rIf you are using a sprite sheet then you should use the `frame` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["string"]},"name":"frameName"}],"name":"frameName","longname":"Phaser.TileSprite#frameName","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.LoadTexture#frameName","inherited":true,"___s":true},{"meta":{"range":[1339,1475],"filename":"Overlap.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"Checks to see if the bounds of this Game Object overlaps with the bounds of the given Display Object, \rwhich can be a Sprite, Image, TileSprite or anything that extends those such as Button or provides a `getBounds` method and result.\r\rThis check ignores the `hitArea` property if set and runs a `getBounds` comparison on both objects to determine the result.\r\rTherefore it's relatively expensive to use in large quantities, i.e. with lots of Sprites at a high frequency.\rIt should be fine for low-volume testing where physics isn't required.","kind":"function","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.TileSprite","Phaser.Button","PIXI.DisplayObject"]},"description":"The display object to check against.","name":"displayObject"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the bounds of this Game Object intersects at any point with the bounds of the given display object."}],"name":"overlap","longname":"Phaser.TileSprite#overlap","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Overlap#overlap","inherited":true,"___s":true},{"meta":{"range":[2899,2909],"filename":"PhysicsBody.js","lineno":91,"path":"src\\gameobjects\\components"},"description":"`body` is the Game Objects physics body. Once a Game Object is enabled for physics you access all associated \rproperties and methods via it.\r\rBy default Game Objects won't add themselves to any physics system and their `body` property will be `null`.\r\rTo enable this Game Object for physics you need to call `game.physics.enable(object, system)` where `object` is this object\rand `system` is the Physics system you are using. If none is given it defaults to `Phaser.Physics.Arcade`.\r\rYou can alternatively call `game.physics.arcade.enable(object)`, or add this Game Object to a physics enabled Group.\r\rImportant: Enabling a Game Object for P2 or Ninja physics will automatically set its `anchor` property to 0.5, \rso the physics body is centered on the Game Object.\r\rIf you need a different result then adjust or re-create the Body shape offsets manually or reset the anchor after enabling physics.","properties":[{"type":{"names":["Phaser.Physics.Arcade.Body","Phaser.Physics.P2.Body","Phaser.Physics.Ninja.Body","null"]},"name":"body"}],"defaultvalue":null,"name":"body","longname":"Phaser.TileSprite#body","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.PhysicsBody#body","inherited":true,"___s":true},{"meta":{"range":[3072,3378],"filename":"PhysicsBody.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the x axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"x"}],"name":"x","longname":"Phaser.TileSprite#x","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.PhysicsBody#x","inherited":true,"___s":true},{"meta":{"range":[3541,3847],"filename":"PhysicsBody.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the y axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"y"}],"name":"y","longname":"Phaser.TileSprite#y","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.PhysicsBody#y","inherited":true,"___s":true},{"meta":{"range":[680,1221],"filename":"Smoothed.js","lineno":25,"path":"src\\gameobjects\\components"},"description":"Enable or disable texture smoothing for this Game Object.\r\rIt only takes effect if the Game Object is using an image based texture.\r\rSmoothing is enabled by default.","properties":[{"type":{"names":["boolean"]},"name":"smoothed"}],"name":"smoothed","longname":"Phaser.TileSprite#smoothed","kind":"member","memberof":"Phaser.TileSprite","scope":"instance","inherits":"Phaser.Component.Smoothed#smoothed","inherited":true,"___s":true},{"meta":{"range":[2199,2215],"filename":"Group.js","lineno":38,"path":"src\\core"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"access":"protected","name":"game","longname":"Phaser.Particles.Arcade.Emitter#game","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#game","inherited":true,"___s":true},{"meta":{"range":[2690,2700],"filename":"Group.js","lineno":57,"path":"src\\core"},"description":"The z-depth value of this object within its parent container/Group - the World is a Group as well.\rThis value must be unique for each child in a Group.","properties":[{"type":{"names":["integer"]},"name":"z"}],"readonly":true,"name":"z","longname":"Phaser.Particles.Arcade.Emitter#z","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#z","inherited":true,"___s":true},{"meta":{"range":[3536,3553],"filename":"Group.js","lineno":93,"path":"src\\core"},"description":"The alive property is useful for Groups that are children of other Groups and need to be included/excluded in checks like forEachAlive.","properties":[{"type":{"names":["boolean"]},"name":"alive"}],"defaultvalue":true,"name":"alive","longname":"Phaser.Particles.Arcade.Emitter#alive","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#alive","inherited":true,"overrides":"Phaser.Group#alive","___s":true},{"meta":{"range":[3701,3719],"filename":"Group.js","lineno":100,"path":"src\\core"},"description":"If exists is true the group is updated, otherwise it is skipped.","properties":[{"type":{"names":["boolean"]},"name":"exists"}],"defaultvalue":true,"name":"exists","longname":"Phaser.Particles.Arcade.Emitter#exists","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#exists","inherited":true,"overrides":"Phaser.Group#exists","___s":true},{"meta":{"range":[3895,3921],"filename":"Group.js","lineno":107,"path":"src\\core"},"description":"A group with `ignoreDestroy` set to `true` ignores all calls to its `destroy` method.","properties":[{"type":{"names":["boolean"]},"name":"ignoreDestroy"}],"defaultvalue":false,"name":"ignoreDestroy","longname":"Phaser.Particles.Arcade.Emitter#ignoreDestroy","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#ignoreDestroy","inherited":true,"___s":true},{"meta":{"range":[4369,4396],"filename":"Group.js","lineno":119,"path":"src\\core"},"description":"A Group is that has `pendingDestroy` set to `true` is flagged to have its destroy method\rcalled on the next logic update.\rYou can set it directly to flag the Group to be destroyed on its next update.\r\rThis is extremely useful if you wish to destroy a Group from within one of its own callbacks\ror a callback of one of its children.","properties":[{"type":{"names":["boolean"]},"name":"pendingDestroy"}],"name":"pendingDestroy","longname":"Phaser.Particles.Arcade.Emitter#pendingDestroy","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#pendingDestroy","inherited":true,"___s":true},{"meta":{"range":[4852,4882],"filename":"Group.js","lineno":130,"path":"src\\core"},"description":"The type of objects that will be created when using {@link #create} or {@link #createMultiple}.\r\rAny object may be used but it should extend either Sprite or Image and accept the same constructor arguments:\rwhen a new object is created it is passed the following parameters to its constructor: `(game, x, y, key, frame)`.","properties":[{"type":{"names":["object"]},"name":"classType"}],"defaultvalue":"{@link Phaser.Sprite}","name":"classType","longname":"Phaser.Particles.Arcade.Emitter#classType","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#classType","inherited":true,"___s":true},{"meta":{"range":[5172,5190],"filename":"Group.js","lineno":138,"path":"src\\core"},"description":"The current display object that the group cursor is pointing to, if any. (Can be set manually.)\r\rThe cursor is a way to iterate through the children in a Group using {@link #next} and {@link #previous}.","properties":[{"type":{"names":["DisplayObject"]},"nullable":true,"name":"cursor"}],"name":"cursor","longname":"Phaser.Particles.Arcade.Emitter#cursor","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#cursor","inherited":true,"___s":true},{"meta":{"range":[5569,5601],"filename":"Group.js","lineno":149,"path":"src\\core"},"description":"A Group with `inputEnableChildren` set to `true` will automatically call `inputEnabled = true` \ron any children _added_ to, or _created by_, this Group.\r\rIf there are children already in the Group at the time you set this property, they are not changed.","properties":[{"type":{"names":["boolean"]},"name":"inputEnableChildren"}],"defaultvalue":false,"name":"inputEnableChildren","longname":"Phaser.Particles.Arcade.Emitter#inputEnableChildren","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#inputEnableChildren","inherited":true,"___s":true},{"meta":{"range":[6075,6118],"filename":"Group.js","lineno":161,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputDown signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 2 arguments: A reference to the Sprite that triggered the signal, and\ra reference to the Pointer that caused it.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputDown"}],"name":"onChildInputDown","longname":"Phaser.Particles.Arcade.Emitter#onChildInputDown","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#onChildInputDown","inherited":true,"___s":true},{"meta":{"range":[6684,6725],"filename":"Group.js","lineno":174,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputUp signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 3 arguments: A reference to the Sprite that triggered the signal, \ra reference to the Pointer that caused it, and a boolean value `isOver` that tells you if the Pointer\ris still over the Sprite or not.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputUp"}],"name":"onChildInputUp","longname":"Phaser.Particles.Arcade.Emitter#onChildInputUp","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#onChildInputUp","inherited":true,"___s":true},{"meta":{"range":[7199,7242],"filename":"Group.js","lineno":186,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputOver signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 2 arguments: A reference to the Sprite that triggered the signal, and\ra reference to the Pointer that caused it.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputOver"}],"name":"onChildInputOver","longname":"Phaser.Particles.Arcade.Emitter#onChildInputOver","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#onChildInputOver","inherited":true,"___s":true},{"meta":{"range":[7714,7756],"filename":"Group.js","lineno":198,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputOut signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 2 arguments: A reference to the Sprite that triggered the signal, and\ra reference to the Pointer that caused it.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputOut"}],"name":"onChildInputOut","longname":"Phaser.Particles.Arcade.Emitter#onChildInputOut","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#onChildInputOut","inherited":true,"___s":true},{"meta":{"range":[8120,8148],"filename":"Group.js","lineno":208,"path":"src\\core"},"description":"If true all Sprites created by, or added to this group, will have a physics body enabled on them.\r\rIf there are children already in the Group at the time you set this property, they are not changed.\r\rThe default body type is controlled with {@link #physicsBodyType}.","properties":[{"type":{"names":["boolean"]},"name":"enableBody"}],"name":"enableBody","longname":"Phaser.Particles.Arcade.Emitter#enableBody","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#enableBody","inherited":true,"___s":true},{"meta":{"range":[8397,8425],"filename":"Group.js","lineno":217,"path":"src\\core"},"description":"If true when a physics body is created (via {@link #enableBody}) it will create a physics debug object as well.\r\rThis only works for P2 bodies.","properties":[{"type":{"names":["boolean"]},"name":"enableBodyDebug"}],"defaultvalue":false,"name":"enableBodyDebug","longname":"Phaser.Particles.Arcade.Emitter#enableBodyDebug","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#enableBodyDebug","inherited":true,"___s":true},{"meta":{"range":[8727,8765],"filename":"Group.js","lineno":225,"path":"src\\core"},"description":"If {@link #enableBody} is true this is the type of physics body that is created on new Sprites.\r\rThe valid values are {@link Phaser.Physics.ARCADE}, {@link Phaser.Physics.P2JS}, {@link Phaser.Physics.NINJA}, etc.","properties":[{"type":{"names":["integer"]},"name":"physicsBodyType"}],"name":"physicsBodyType","longname":"Phaser.Particles.Arcade.Emitter#physicsBodyType","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#physicsBodyType","inherited":true,"___s":true},{"meta":{"range":[9408,9440],"filename":"Group.js","lineno":243,"path":"src\\core"},"description":"If this Group contains Arcade Physics Sprites you can set a custom sort direction via this property.\r\rIt should be set to one of the Phaser.Physics.Arcade sort direction constants: \r\rPhaser.Physics.Arcade.SORT_NONE\rPhaser.Physics.Arcade.LEFT_RIGHT\rPhaser.Physics.Arcade.RIGHT_LEFT\rPhaser.Physics.Arcade.TOP_BOTTOM\rPhaser.Physics.Arcade.BOTTOM_TOP\r\rIf set to `null` the Group will use whatever Phaser.Physics.Arcade.sortDirection is set to. This is the default behavior.","properties":[{"type":{"names":["integer"]},"name":"physicsSortDirection"}],"defaultvalue":null,"name":"physicsSortDirection","longname":"Phaser.Particles.Arcade.Emitter#physicsSortDirection","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#physicsSortDirection","inherited":true,"___s":true},{"meta":{"range":[9571,9607],"filename":"Group.js","lineno":249,"path":"src\\core"},"description":"This signal is dispatched when the group is destroyed.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onDestroy"}],"name":"onDestroy","longname":"Phaser.Particles.Arcade.Emitter#onDestroy","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#onDestroy","inherited":true,"___s":true},{"meta":{"range":[9758,9778],"filename":"Group.js","lineno":255,"path":"src\\core"},"properties":[{"type":{"names":["integer"]},"description":"The current index of the Group cursor. Advance it with Group.next.","name":"cursorIndex"}],"readonly":true,"name":"cursorIndex","longname":"Phaser.Particles.Arcade.Emitter#cursorIndex","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#cursorIndex","inherited":true,"___s":true},{"meta":{"range":[10207,10233],"filename":"Group.js","lineno":265,"path":"src\\core"},"description":"A Group that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in Group.cameraOffset.\r\rNote that the cameraOffset values are in addition to any parent in the display list.\rSo if this Group was in a Group that has x: 200, then this will be added to the cameraOffset.x","properties":[{"type":{"names":["boolean"]},"name":"fixedToCamera"}],"name":"fixedToCamera","longname":"Phaser.Particles.Arcade.Emitter#fixedToCamera","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#fixedToCamera","inherited":true,"___s":true},{"meta":{"range":[10575,10613],"filename":"Group.js","lineno":272,"path":"src\\core"},"description":"If this object is {@link #fixedToCamera} then this stores the x/y position offset relative to the top-left of the camera view.\rIf the parent of this Group is also `fixedToCamera` then the offset here is in addition to that and should typically be disabled.","properties":[{"type":{"names":["Phaser.Point"]},"name":"cameraOffset"}],"name":"cameraOffset","longname":"Phaser.Particles.Arcade.Emitter#cameraOffset","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#cameraOffset","inherited":true,"___s":true},{"meta":{"range":[11287,11301],"filename":"Group.js","lineno":285,"path":"src\\core"},"description":"The hash array is an array belonging to this Group into which you can add any of its children via Group.addToHash and Group.removeFromHash.\r\rOnly children of this Group can be added to and removed from the hash.\r\rThis hash is used automatically by Phaser Arcade Physics in order to perform non z-index based destructive sorting.\rHowever if you don't use Arcade Physics, or this isn't a physics enabled Group, then you can use the hash to perform your own\rsorting and filtering of Group children without touching their z-index (and therefore display draw order)","properties":[{"type":{"names":["array"]},"name":"hash"}],"name":"hash","longname":"Phaser.Particles.Arcade.Emitter#hash","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"Phaser.Group#hash","inherited":true,"___s":true},{"meta":{"range":[12415,13611],"filename":"Group.js","lineno":341,"path":"src\\core"},"description":"Adds an existing object as the top child in this group.\r\rThe child is automatically added to the top of the group, and is displayed above every previous child.\r\rOr if the _optional_ index is specified, the child is added at the location specified by the index value, \rthis allows you to control child ordering.\r\rIf the child was already in this Group, it is simply returned, and nothing else happens to it.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.\r\rUse {@link #addAt} to control where a child is added. Use {@link #create} to create and add a new child.","kind":"function","name":"add","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to add as a child.","name":"child"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the child will not dispatch the `onAddedToGroup` event.","name":"silent"},{"type":{"names":["integer"]},"optional":true,"description":"The index within the group to insert the child to. Where 0 is the bottom of the Group.","name":"index"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was added to the group."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#add","scope":"instance","inherits":"Phaser.Group#add","inherited":true,"___s":true},{"meta":{"range":[14707,15502],"filename":"Group.js","lineno":418,"path":"src\\core"},"description":"Adds an existing object to this group.\r\rThe child is added to the group at the location specified by the index value, this allows you to control child ordering.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.","kind":"function","name":"addAt","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to add as a child.","name":"child"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The index within the group to insert the child to.","name":"index"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the child will not dispatch the `onAddedToGroup` event.","name":"silent"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was added to the group."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#addAt","scope":"instance","inherits":"Phaser.Group#addAt","inherited":true,"___s":true},{"meta":{"range":[15617,16054],"filename":"Group.js","lineno":439,"path":"src\\core"},"description":"Adds a child of this Group into the hash array.\rThis call will return false if the child is not a child of this Group, or is already in the hash.","kind":"function","name":"addToHash","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to add to this Groups hash. Must be a member of this Group already and not present in the hash.","name":"child"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the child was successfully added to the hash, otherwise false."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#addToHash","scope":"instance","inherits":"Phaser.Group#addToHash","inherited":true,"___s":true},{"meta":{"range":[16348,16745],"filename":"Group.js","lineno":464,"path":"src\\core"},"description":"Removes a child of this Group from the hash array.\rThis call will return false if the child is not in the hash.","kind":"function","name":"removeFromHash","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to remove from this Groups hash. Must be a member of this Group and in the hash.","name":"child"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the child was successfully removed from the hash, otherwise false."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#removeFromHash","scope":"instance","inherits":"Phaser.Group#removeFromHash","inherited":true,"___s":true},{"meta":{"range":[17033,18107],"filename":"Group.js","lineno":489,"path":"src\\core"},"description":"Adds an array of existing Display Objects to this Group.\r\rThe Display Objects are automatically added to the top of this Group, and will render on-top of everything already in this Group.\r\rAs well as an array you can also pass another Group as the first argument. In this case all of the children from that\rGroup will be removed from it and added into this Group.\r\rIf `Group.enableBody` is set, then a physics body will be created on the objects, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the objects, so long as one does not already exist.","kind":"function","name":"addMultiple","params":[{"type":{"names":["Array.<DisplayObject>","Phaser.Group"]},"description":"An array of display objects or a Phaser.Group. If a Group is given then *all* children will be moved from it.","name":"children"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch the `onAddedToGroup` event.","name":"silent"}],"returns":[{"type":{"names":["Array.<DisplayObject>","Phaser.Group"]},"description":"The array of children or Group of children that were added to this Group."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#addMultiple","scope":"instance","inherits":"Phaser.Group#addMultiple","inherited":true,"___s":true},{"meta":{"range":[18479,18756],"filename":"Group.js","lineno":524,"path":"src\\core"},"description":"Returns the child found at the given index within this group.","kind":"function","name":"getAt","params":[{"type":{"names":["integer"]},"description":"The index to return the child from.","name":"index"}],"returns":[{"type":{"names":["DisplayObject","integer"]},"description":"The child that was found at the given index, or -1 for an invalid index."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#getAt","scope":"instance","inherits":"Phaser.Group#getAt","inherited":true,"___s":true},{"meta":{"range":[18970,20735],"filename":"Group.js","lineno":544,"path":"src\\core"},"description":"Creates a new Phaser.Sprite object and adds it to the top of this group.\r\rUse {@link #classType} to change the type of object created.\r\rThe child is automatically added to the top of the group, and is displayed above every previous child.\r\rOr if the _optional_ index is specified, the child is added at the location specified by the index value, \rthis allows you to control child ordering.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.","kind":"function","name":"create","params":[{"type":{"names":["number"]},"description":"The x coordinate to display the newly created Sprite at. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to display the newly created Sprite at. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"The default exists state of the Sprite.","name":"exists"},{"type":{"names":["integer"]},"optional":true,"description":"The index within the group to insert the child to. Where 0 is the bottom of the Group.","name":"index"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was created: will be a {@link Phaser.Sprite} unless {@link #classType} has been changed."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#create","scope":"instance","inherits":"Phaser.Group#create","inherited":true,"___s":true},{"meta":{"range":[21074,23649],"filename":"Group.js","lineno":581,"path":"src\\core"},"description":"Creates multiple Phaser.Sprite objects and adds them to the top of this Group.\r\rThis method is useful if you need to quickly generate a pool of sprites, such as bullets.\r\rUse {@link #classType} to change the type of object created.\r\rYou can provide an array as the `key` and / or `frame` arguments. When you do this\rit will create `quantity` Sprites for every key (and frame) in the arrays.\r\rFor example:\r\r`createMultiple(25, ['ball', 'carrot'])`\r\rIn the above code there are 2 keys (ball and carrot) which means that 50 sprites will be\rcreated in total, 25 of each. You can also have the `frame` as an array:\r\r`createMultiple(5, 'bricks', [0, 1, 2, 3])`\r\rIn the above there is one key (bricks), which is a sprite sheet. The frames array tells\rthis method to use frames 0, 1, 2 and 3. So in total it will create 20 sprites, because\rthe quantity was set to 5, so that is 5 brick sprites of frame 0, 5 brick sprites with\rframe 1, and so on.\r\rIf you set both the key and frame arguments to be arrays then understand it will create\ra total quantity of sprites equal to the size of both arrays times each other. I.e.:\r\r`createMultiple(20, ['diamonds', 'balls'], [0, 1, 2])`\r\rThe above will create 20 'diamonds' of frame 0, 20 with frame 1 and 20 with frame 2.\rIt will then create 20 'balls' of frame 0, 20 with frame 1 and 20 with frame 2.\rIn total it will have created 120 sprites.\r\rBy default the Sprites will have their `exists` property set to `false`, and they will be \rpositioned at 0x0, relative to the `Group.x / y` values.\r\rIf `Group.enableBody` is set, then a physics body will be created on the objects, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the objects, so long as one does not already exist.","kind":"function","name":"createMultiple","params":[{"type":{"names":["integer"]},"description":"The number of Sprites to create.","name":"quantity"},{"type":{"names":["string","array"]},"description":"The Cache key of the image that the Sprites will use. Or an Array of keys. See the description for details on how the quantity applies when arrays are used.","name":"key"},{"type":{"names":["integer","string","array"]},"optional":true,"defaultvalue":0,"description":"If the Sprite image contains multiple frames you can specify which one to use here. Or an Array of frames. See the description for details on how the quantity applies when arrays are used.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"The default exists state of the Sprite.","name":"exists"}],"returns":[{"type":{"names":["array"]},"description":"An array containing all of the Sprites that were created."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#createMultiple","scope":"instance","inherits":"Phaser.Group#createMultiple","inherited":true,"___s":true},{"meta":{"range":[24339,24575],"filename":"Group.js","lineno":663,"path":"src\\core"},"description":"Internal method that re-applies all of the children's Z values.\r\rThis must be called whenever children ordering is altered so that their `z` indices are correctly updated.","kind":"function","name":"updateZ","access":"protected","memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#updateZ","scope":"instance","inherits":"Phaser.Group#updateZ","inherited":true,"___s":true},{"meta":{"range":[24736,27678],"filename":"Group.js","lineno":682,"path":"src\\core"},"description":"This method iterates through all children in the Group (regardless if they are visible or exist)\rand then changes their position so they are arranged in a Grid formation. Children must have\rthe `alignTo` method in order to be positioned by this call. All default Phaser Game Objects have\rthis.\r\rThe grid dimensions are determined by the first four arguments. The `width` and `height` arguments\rrelate to the width and height of the grid respectively.\r\rFor example if the Group had 100 children in it:\r\r`Group.align(10, 10, 32, 32)`\r\rThis will align all of the children into a grid formation of 10x10, using 32 pixels per\rgrid cell. If you want a wider grid, you could do:\r\r`Group.align(25, 4, 32, 32)`\r\rThis will align the children into a grid of 25x4, again using 32 pixels per grid cell.\r\rYou can choose to set _either_ the `width` or `height` value to -1. Doing so tells the method\rto keep on aligning children until there are no children left. For example if this Group had\r48 children in it, the following:\r\r`Group.align(-1, 8, 32, 32)`\r\r... will align the children so that there are 8 children vertically (the second argument), \rand each row will contain 6 sprites, except the last one, which will contain 5 (totaling 48)\r\rYou can also do:\r\r`Group.align(10, -1, 32, 32)`\r\rIn this case it will create a grid 10 wide, and as tall as it needs to be in order to fit\rall of the children in.\r\rThe `position` property allows you to control where in each grid cell the child is positioned.\rThis is a constant and can be one of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, \r`Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, \r`Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.\r\rThe final argument; `offset` lets you start the alignment from a specific child index.","kind":"function","name":"align","params":[{"type":{"names":["integer"]},"description":"The width of the grid in items (not pixels). Set to -1 for a dynamic width. If -1 then you must set an explicit height value.","name":"width"},{"type":{"names":["integer"]},"description":"The height of the grid in items (not pixels). Set to -1 for a dynamic height. If -1 then you must set an explicit width value.","name":"height"},{"type":{"names":["integer"]},"description":"The width of each grid cell, in pixels.","name":"cellWidth"},{"type":{"names":["integer"]},"description":"The height of each grid cell, in pixels.","name":"cellHeight"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Optional index to start the alignment from. Defaults to zero, the first child in the Group, but can be set to any valid child index value.","name":"offset"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the Group children were aligned, otherwise false."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#align","scope":"instance","inherits":"Phaser.Group#align","inherited":true,"___s":true},{"meta":{"range":[29501,29838],"filename":"Group.js","lineno":806,"path":"src\\core"},"description":"Sets the group cursor to the first child in the group.\r\rIf the optional index parameter is given it sets the cursor to the object at that index instead.","kind":"function","name":"resetCursor","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Set the cursor to point to a specific index.","name":"index"}],"returns":[{"type":{"names":["any"]},"description":"The child the cursor now points to."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#resetCursor","scope":"instance","inherits":"Phaser.Group#resetCursor","inherited":true,"___s":true},{"meta":{"range":[30189,30462],"filename":"Group.js","lineno":833,"path":"src\\core"},"description":"Advances the group cursor to the next (higher) object in the group.\r\rIf the cursor is at the end of the group (top child) it is moved the start of the group (bottom child).","kind":"function","name":"next","returns":[{"type":{"names":["any"]},"description":"The child the cursor now points to."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#next","scope":"instance","inherits":"Phaser.Group#next","inherited":true,"___s":true},{"meta":{"range":[30859,31125],"filename":"Group.js","lineno":862,"path":"src\\core"},"description":"Moves the group cursor to the previous (lower) child in the group.\r\rIf the cursor is at the start of the group (bottom child) it is moved to the end (top child).","kind":"function","name":"previous","returns":[{"type":{"names":["any"]},"description":"The child the cursor now points to."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#previous","scope":"instance","inherits":"Phaser.Group#previous","inherited":true,"___s":true},{"meta":{"range":[31527,31845],"filename":"Group.js","lineno":891,"path":"src\\core"},"description":"Swaps the position of two children in this group.\r\rBoth children must be in this group, a child cannot be swapped with itself, and unparented children cannot be swapped.","kind":"function","name":"swap","params":[{"type":{"names":["any"]},"description":"The first child to swap.","name":"child1"},{"type":{"names":["any"]},"description":"The second child to swap.","name":"child2"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#swap","scope":"instance","inherits":"Phaser.Group#swap","inherited":true,"___s":true},{"meta":{"range":[31977,32225],"filename":"Group.js","lineno":907,"path":"src\\core"},"description":"Brings the given child to the top of this group so it renders above all other children.","kind":"function","name":"bringToTop","params":[{"type":{"names":["any"]},"description":"The child to bring to the top of this group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#bringToTop","scope":"instance","inherits":"Phaser.Group#bringToTop","inherited":true,"___s":true},{"meta":{"range":[32481,32733],"filename":"Group.js","lineno":926,"path":"src\\core"},"description":"Sends the given child to the bottom of this group so it renders below all other children.","kind":"function","name":"sendToBack","params":[{"type":{"names":["any"]},"description":"The child to send to the bottom of this group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#sendToBack","scope":"instance","inherits":"Phaser.Group#sendToBack","inherited":true,"___s":true},{"meta":{"range":[32975,33202],"filename":"Group.js","lineno":945,"path":"src\\core"},"description":"Moves the given child up one place in this group unless it's already at the top.","kind":"function","name":"moveUp","params":[{"type":{"names":["any"]},"description":"The child to move up in the group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#moveUp","scope":"instance","inherits":"Phaser.Group#moveUp","inherited":true,"___s":true},{"meta":{"range":[33533,33769],"filename":"Group.js","lineno":969,"path":"src\\core"},"description":"Moves the given child down one place in this group unless it's already at the bottom.","kind":"function","name":"moveDown","params":[{"type":{"names":["any"]},"description":"The child to move down in the group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#moveDown","scope":"instance","inherits":"Phaser.Group#moveDown","inherited":true,"___s":true},{"meta":{"range":[34079,34416],"filename":"Group.js","lineno":993,"path":"src\\core"},"description":"Positions the child found at the given index within this group to the given x and y coordinates.","kind":"function","name":"xy","params":[{"type":{"names":["integer"]},"description":"The index of the child in the group to set the position of.","name":"index"},{"type":{"names":["number"]},"description":"The new x position of the child.","name":"x"},{"type":{"names":["number"]},"description":"The new y position of the child.","name":"y"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#xy","scope":"instance","inherits":"Phaser.Group#xy","inherited":true,"___s":true},{"meta":{"range":[34670,34845],"filename":"Group.js","lineno":1015,"path":"src\\core"},"description":"Reverses all children in this group.\r\rThis operation applies only to immediate children and does not propagate to subgroups.","kind":"function","name":"reverse","memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#reverse","scope":"instance","inherits":"Phaser.Group#reverse","inherited":true,"___s":true},{"meta":{"range":[34956,35246],"filename":"Group.js","lineno":1029,"path":"src\\core"},"description":"Get the index position of the given child in this group, which should match the child's `z` property.","kind":"function","name":"getIndex","params":[{"type":{"names":["any"]},"description":"The child to get the index for.","name":"child"}],"returns":[{"type":{"names":["integer"]},"description":"The index of the child or -1 if it's not a member of this group."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#getIndex","scope":"instance","inherits":"Phaser.Group#getIndex","inherited":true,"___s":true},{"meta":{"range":[35354,35730],"filename":"Group.js","lineno":1042,"path":"src\\core"},"description":"Searches the Group for the first instance of a child with the `name`\rproperty matching the given argument. Should more than one child have\rthe same name only the first instance is returned.","kind":"function","name":"getByName","params":[{"type":{"names":["string"]},"description":"The name to search for.","name":"name"}],"returns":[{"type":{"names":["any"]},"description":"The first child with a matching name, or null if none were found."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#getByName","scope":"instance","inherits":"Phaser.Group#getByName","inherited":true,"___s":true},{"meta":{"range":[35987,36616],"filename":"Group.js","lineno":1065,"path":"src\\core"},"description":"Replaces a child of this Group with the given newChild. The newChild cannot be a member of this Group.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.","kind":"function","name":"replace","params":[{"type":{"names":["any"]},"description":"The child in this group that will be replaced.","name":"oldChild"},{"type":{"names":["any"]},"description":"The child to be inserted into this group.","name":"newChild"}],"returns":[{"type":{"names":["any"]},"description":"Returns the oldChild that was replaced within this group."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#replace","scope":"instance","inherits":"Phaser.Group#replace","inherited":true,"___s":true},{"meta":{"range":[37172,37536],"filename":"Group.js","lineno":1104,"path":"src\\core"},"description":"Checks if the child has the given property.\r\rWill scan up to 4 levels deep only.","kind":"function","name":"hasProperty","params":[{"type":{"names":["any"]},"description":"The child to check for the existence of the property on.","name":"child"},{"type":{"names":["Array.<string>"]},"description":"An array of strings that make up the property.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the child has the property, otherwise false."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#hasProperty","scope":"instance","inherits":"Phaser.Group#hasProperty","inherited":true,"___s":true},{"meta":{"range":[38169,39389],"filename":"Group.js","lineno":1139,"path":"src\\core"},"description":"Sets a property to the given value on the child. The operation parameter controls how the value is set.\r\rThe operations are:\r- 0: set the existing value to the given value; if force is `true` a new property will be created if needed\r- 1: will add the given value to the value already present.\r- 2: will subtract the given value from the value already present.\r- 3: will multiply the value already present by the given value.\r- 4: will divide the value already present by the given value.","kind":"function","name":"setProperty","params":[{"type":{"names":["any"]},"description":"The child to set the property value on.","name":"child"},{"type":{"names":["array"]},"description":"An array of strings that make up the property that will be set.","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the property was set, false if not."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#setProperty","scope":"instance","inherits":"Phaser.Group#setProperty","inherited":true,"___s":true},{"meta":{"range":[41812,42411],"filename":"Group.js","lineno":1217,"path":"src\\core"},"description":"Checks a property for the given value on the child.","kind":"function","name":"checkProperty","params":[{"type":{"names":["any"]},"description":"The child to check the property value on.","name":"child"},{"type":{"names":["array"]},"description":"An array of strings that make up the property that will be set.","name":"key"},{"type":{"names":["any"]},"description":"The value that will be checked.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the property was was equal to value, false if not."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#checkProperty","scope":"instance","inherits":"Phaser.Group#checkProperty","inherited":true,"___s":true},{"meta":{"range":[42841,43970],"filename":"Group.js","lineno":1246,"path":"src\\core"},"description":"Quickly set a property on a single child of this group to a new value.\r\rThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","kind":"function","name":"set","params":[{"type":{"names":["Phaser.Sprite"]},"description":"The child to set the property on.","name":"child"},{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then the child will only be updated if alive=true.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then the child will only be updated if visible=true.","name":"checkVisible"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the property was set, false if not."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#set","scope":"instance","inherits":"Phaser.Group#set","inherited":true,"___s":true},{"meta":{"range":[44503,45816],"filename":"Group.js","lineno":1277,"path":"src\\core"},"description":"Quickly set the same property across all children of this group to a new value.\r\rThis call doesn't descend down children, so if you have a Group inside of this group, the property will be set on the group but not its children.\rIf you need that ability please see `Group.setAllChildren`.\r\rThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","kind":"function","name":"setAll","params":[{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with alive=true will be updated. This includes any Groups that are children.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with visible=true will be updated. This includes any Groups that are children.","name":"checkVisible"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#setAll","scope":"instance","inherits":"Phaser.Group#setAll","inherited":true,"___s":true},{"meta":{"range":[46466,47814],"filename":"Group.js","lineno":1312,"path":"src\\core"},"description":"Quickly set the same property across all children of this group, and any child Groups, to a new value.\r\rIf this group contains other Groups then the same property is set across their children as well, iterating down until it reaches the bottom.\rUnlike with `setAll` the property is NOT set on child Groups itself.\r\rThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","kind":"function","name":"setAllChildren","params":[{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with alive=true will be updated. This includes any Groups that are children.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with visible=true will be updated. This includes any Groups that are children.","name":"checkVisible"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#setAllChildren","scope":"instance","inherits":"Phaser.Group#setAllChildren","inherited":true,"___s":true},{"meta":{"range":[48703,49653],"filename":"Group.js","lineno":1353,"path":"src\\core"},"description":"Quickly check that the same property across all children of this group is equal to the given value.\r\rThis call doesn't descend down children, so if you have a Group inside of this group, the property will be checked on the group but not its children.","kind":"function","name":"checkAll","params":[{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be checked.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with alive=true will be checked. This includes any Groups that are children.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with visible=true will be checked. This includes any Groups that are children.","name":"checkVisible"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned.","name":"force"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#checkAll","scope":"instance","inherits":"Phaser.Group#checkAll","inherited":true,"___s":true},{"meta":{"range":[50309,50931],"filename":"Group.js","lineno":1386,"path":"src\\core"},"description":"Adds the amount to the given property on all children in this group.\r\r`Group.addAll('x', 10)` will add 10 to the child.x value for each child.","kind":"function","name":"addAll","params":[{"type":{"names":["string"]},"description":"The property to increment, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to increment the property by. If child.x = 10 then addAll('x', 40) would make child.x = 50.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#addAll","scope":"instance","inherits":"Phaser.Group#addAll","inherited":true,"___s":true},{"meta":{"range":[51097,51731],"filename":"Group.js","lineno":1403,"path":"src\\core"},"description":"Subtracts the amount from the given property on all children in this group.\r\r`Group.subAll('x', 10)` will minus 10 from the child.x value for each child.","kind":"function","name":"subAll","params":[{"type":{"names":["string"]},"description":"The property to decrement, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to subtract from the property. If child.x = 50 then subAll('x', 40) would make child.x = 10.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#subAll","scope":"instance","inherits":"Phaser.Group#subAll","inherited":true,"___s":true},{"meta":{"range":[51897,52529],"filename":"Group.js","lineno":1420,"path":"src\\core"},"description":"Multiplies the given property by the amount on all children in this group.\r\r`Group.multiplyAll('x', 2)` will x2 the child.x value for each child.","kind":"function","name":"multiplyAll","params":[{"type":{"names":["string"]},"description":"The property to multiply, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to multiply the property by. If child.x = 10 then multiplyAll('x', 2) would make child.x = 20.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#multiplyAll","scope":"instance","inherits":"Phaser.Group#multiplyAll","inherited":true,"___s":true},{"meta":{"range":[52700,53322],"filename":"Group.js","lineno":1437,"path":"src\\core"},"description":"Divides the given property by the amount on all children in this group.\r\r`Group.divideAll('x', 2)` will half the child.x value for each child.","kind":"function","name":"divideAll","params":[{"type":{"names":["string"]},"description":"The property to divide, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to divide the property by. If child.x = 100 then divideAll('x', 2) would make child.x = 50.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#divideAll","scope":"instance","inherits":"Phaser.Group#divideAll","inherited":true,"___s":true},{"meta":{"range":[53491,54021],"filename":"Group.js","lineno":1454,"path":"src\\core"},"description":"Calls a function, specified by name, on all children in the group who exist (or do not exist).\r\rAfter the existsValue parameter you can add as many parameters as you like, which will all be passed to the child callback.","kind":"function","name":"callAllExists","params":[{"type":{"names":["string"]},"description":"Name of the function on the children to call.","name":"callback"},{"type":{"names":["boolean"]},"description":"Only children with exists=existsValue will be called.","name":"existsValue"},{"type":{"names":["any"]},"variable":true,"description":"Additional parameters that will be passed to the callback.","name":"parameter"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#callAllExists","scope":"instance","inherits":"Phaser.Group#callAllExists","inherited":true,"___s":true},{"meta":{"range":[54549,54911],"filename":"Group.js","lineno":1488,"path":"src\\core"},"description":"Returns a reference to a function that exists on a child of the group based on the given callback array.","kind":"function","name":"callbackFromArray","params":[{"type":{"names":["object"]},"description":"The object to inspect.","name":"child"},{"type":{"names":["array"]},"description":"The array of function names.","name":"callback"},{"type":{"names":["integer"]},"description":"The size of the array (pre-calculated in callAll).","name":"length"}],"access":"protected","memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#callbackFromArray","scope":"instance","inherits":"Phaser.Group#callbackFromArray","inherited":true,"___s":true},{"meta":{"range":[55847,56541],"filename":"Group.js","lineno":1538,"path":"src\\core"},"description":"Calls a function, specified by name, on all on children.\r\rThe function is called for all children regardless if they are dead or alive (see callAllExists for different options).\rAfter the method parameter and context you can add as many extra parameters as you like, which will all be passed to the child.","kind":"function","name":"callAll","params":[{"type":{"names":["string"]},"description":"Name of the function on the child to call. Deep property lookup is supported.","name":"method"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"A string containing the context under which the method will be executed. Set to null to default to the child.","name":"context"},{"type":{"names":["any"]},"variable":true,"description":"Additional parameters that will be passed to the method.","name":"args"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#callAll","scope":"instance","inherits":"Phaser.Group#callAll","inherited":true,"___s":true},{"meta":{"range":[57918,58017],"filename":"Group.js","lineno":1611,"path":"src\\core"},"description":"The core preUpdate - as called by World.","kind":"function","name":"preUpdate","access":"protected","memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#preUpdate","scope":"instance","inherits":"Phaser.Group#preUpdate","inherited":true,"___s":true},{"meta":{"range":[58768,58869],"filename":"Group.js","lineno":1656,"path":"src\\core"},"description":"The core postUpdate - as called by World.","kind":"function","name":"postUpdate","access":"protected","memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#postUpdate","scope":"instance","inherits":"Phaser.Group#postUpdate","inherited":true,"___s":true},{"meta":{"range":[59239,60105],"filename":"Group.js","lineno":1677,"path":"src\\core"},"description":"Find children matching a certain predicate.\r\rFor example:\r\r    var healthyList = Group.filter(function(child, index, children) {\r        return child.health > 10 ? true : false;\r    }, true);\r    healthyList.callAll('attack');\r\rNote: Currently this will skip any children which are Groups themselves.","kind":"function","name":"filter","params":[{"type":{"names":["function"]},"description":"The function that each child will be evaluated against. Each child of the group will be passed to it as its first parameter, the index as the second, and the entire child array as the third","name":"predicate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true, only existing can be selected; otherwise all children can be selected and will be passed to the predicate.","name":"checkExists"}],"returns":[{"type":{"names":["Phaser.ArraySet"]},"description":"Returns an array list containing all the children that the predicate returned true for"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#filter","scope":"instance","inherits":"Phaser.Group#filter","inherited":true,"___s":true},{"meta":{"range":[60612,61562],"filename":"Group.js","lineno":1717,"path":"src\\core"},"description":"Call a function on each child in this group.\r\rAdditional arguments for the callback can be specified after the `checkExists` parameter. For example,\r\r    Group.forEach(awardBonusGold, this, true, 100, 500)\r\rwould invoke `awardBonusGold` function with the parameters `(child, 100, 500)`.\r\rNote: This check will skip any children which are Groups themselves.","kind":"function","name":"forEach","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set only children matching for which `exists` is true will be passed to the callback, otherwise all children will be passed.","name":"checkExists"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#forEach","scope":"instance","inherits":"Phaser.Group#forEach","inherited":true,"___s":true},{"meta":{"range":[62664,63187],"filename":"Group.js","lineno":1771,"path":"src\\core"},"description":"Call a function on each existing child in this group.\r\rSee {@link Phaser.Group#forEach forEach} for details.","kind":"function","name":"forEachExists","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#forEachExists","scope":"instance","inherits":"Phaser.Group#forEachExists","inherited":true,"___s":true},{"meta":{"range":[63575,64094],"filename":"Group.js","lineno":1799,"path":"src\\core"},"description":"Call a function on each alive child in this group.\r\rSee {@link Phaser.Group#forEach forEach} for details.","kind":"function","name":"forEachAlive","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#forEachAlive","scope":"instance","inherits":"Phaser.Group#forEachAlive","inherited":true,"___s":true},{"meta":{"range":[64480,64997],"filename":"Group.js","lineno":1827,"path":"src\\core"},"description":"Call a function on each dead child in this group.\r\rSee {@link Phaser.Group#forEach forEach} for details.","kind":"function","name":"forEachDead","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#forEachDead","scope":"instance","inherits":"Phaser.Group#forEachDead","inherited":true,"___s":true},{"meta":{"range":[65383,66281],"filename":"Group.js","lineno":1855,"path":"src\\core"},"description":"Sort the children in the group according to a particular key and ordering.\r\rCall this function to sort the group according to a particular key value and order.\r\rFor example to depth sort Sprites for Zelda-style game you might call `group.sort('y', Phaser.Group.SORT_ASCENDING)` at the bottom of your `State.update()`.\r\rInternally this uses a standard JavaScript Array sort, so everything that applies there also applies here, including\ralphabetical sorting, mixing strings and numbers, and Unicode sorting. See MDN for more details.","kind":"function","name":"sort","params":[{"type":{"names":["string"]},"optional":true,"defaultvalue":"'z'","description":"The name of the property to sort on. Defaults to the objects z-depth value.","name":"key"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"Phaser.Group.SORT_ASCENDING","description":"Order ascending ({@link Phaser.Group.SORT_ASCENDING SORT_ASCENDING}) or descending ({@link Phaser.Group.SORT_DESCENDING SORT_DESCENDING}).","name":"order"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#sort","scope":"instance","inherits":"Phaser.Group#sort","inherited":true,"___s":true},{"meta":{"range":[66838,67280],"filename":"Group.js","lineno":1895,"path":"src\\core"},"description":"Sort the children in the group according to custom sort function.\r\rThe `sortHandler` is provided the two parameters: the two children involved in the comparison (a and b).\rIt should return -1 if `a > b`, 1 if `a < b` or 0 if `a === b`.","kind":"function","name":"customSort","params":[{"type":{"names":["function"]},"description":"The custom sort function.","name":"sortHandler"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the sortHandler is called.","name":"context"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#customSort","scope":"instance","inherits":"Phaser.Group#customSort","inherited":true,"___s":true},{"meta":{"range":[67535,67766],"filename":"Group.js","lineno":1919,"path":"src\\core"},"description":"An internal helper function for the sort process.","kind":"function","name":"ascendingSortHandler","access":"protected","params":[{"type":{"names":["object"]},"description":"The first object being sorted.","name":"a"},{"type":{"names":["object"]},"description":"The second object being sorted.","name":"b"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#ascendingSortHandler","scope":"instance","inherits":"Phaser.Group#ascendingSortHandler","inherited":true,"___s":true},{"meta":{"range":[68180,68412],"filename":"Group.js","lineno":1951,"path":"src\\core"},"description":"An internal helper function for the sort process.","kind":"function","name":"descendingSortHandler","access":"protected","params":[{"type":{"names":["object"]},"description":"The first object being sorted.","name":"a"},{"type":{"names":["object"]},"description":"The second object being sorted.","name":"b"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#descendingSortHandler","scope":"instance","inherits":"Phaser.Group#descendingSortHandler","inherited":true,"___s":true},{"meta":{"range":[68717,70530],"filename":"Group.js","lineno":1976,"path":"src\\core"},"description":"Iterates over the children of the group performing one of several actions for matched children.\r\rA child is considered a match when it has a property, named `key`, whose value is equal to `value`\raccording to a strict equality comparison.\r\rThe result depends on the `returnType`:\r\r- {@link Phaser.Group.RETURN_TOTAL RETURN_TOTAL}:\r    The callback, if any, is applied to all matching children. The number of matched children is returned.\r- {@link Phaser.Group.RETURN_NONE RETURN_NONE}:\r    The callback, if any, is applied to all matching children. No value is returned.\r- {@link Phaser.Group.RETURN_CHILD RETURN_CHILD}:\r    The callback, if any, is applied to the *first* matching child and the *first* matched child is returned.\r    If there is no matching child then null is returned.\r\rIf `args` is specified it must be an array. The matched child will be assigned to the first\relement and the entire array will be applied to the callback function.","kind":"function","name":"iterate","params":[{"type":{"names":["string"]},"description":"The child property to check, i.e. 'exists', 'alive', 'health'","name":"key"},{"type":{"names":["any"]},"description":"A child matches if `child[key] === value` is true.","name":"value"},{"type":{"names":["integer"]},"description":"How to iterate the children and what to return.","name":"returnType"},{"type":{"names":["function"]},"optional":true,"defaultvalue":null,"description":"Optional function that will be called on each matching child. The matched child is supplied as the first argument.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["Array.<any>"]},"optional":true,"defaultvalue":"(none)","description":"The arguments supplied to to the callback; the first array index (argument) will be replaced with the matched child.","name":"args"}],"returns":[{"type":{"names":["any"]},"description":"Returns either an integer (for RETURN_TOTAL), the first matched child (for RETURN_CHILD), or null."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#iterate","scope":"instance","inherits":"Phaser.Group#iterate","inherited":true,"___s":true},{"meta":{"range":[72077,73685],"filename":"Group.js","lineno":2071,"path":"src\\core"},"description":"Get the first display object that exists, or doesn't exist.\r\rYou can use the optional argument `createIfNull` to create a new Game Object if none matching your exists argument were found in this Group.\r\rIt works by calling `Group.create` passing it the parameters given to this method, and returning the new child.\r\rIf a child *was* found , `createIfNull` is `false` and you provided the additional arguments then the child\rwill be reset and/or have a new texture loaded on it. This is handled by `Group.resetChild`.","kind":"function","name":"getFirstExists","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true, find the first existing child; otherwise find the first non-existing child.","name":"exists"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `true` and no alive children are found a new one is created.","name":"createIfNull"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The first child, or `null` if none found and `createIfNull` was false."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#getFirstExists","scope":"instance","inherits":"Phaser.Group#getFirstExists","inherited":true,"___s":true},{"meta":{"range":[74132,75655],"filename":"Group.js","lineno":2105,"path":"src\\core"},"description":"Get the first child that is alive (`child.alive === true`).\r\rThis is handy for choosing a squad leader, etc.\r\rYou can use the optional argument `createIfNull` to create a new Game Object if no alive ones were found in this Group.\r\rIt works by calling `Group.create` passing it the parameters given to this method, and returning the new child.\r\rIf a child *was* found , `createIfNull` is `false` and you provided the additional arguments then the child\rwill be reset and/or have a new texture loaded on it. This is handled by `Group.resetChild`.","kind":"function","name":"getFirstAlive","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `true` and no alive children are found a new one is created.","name":"createIfNull"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The alive dead child, or `null` if none found and `createIfNull` was false."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#getFirstAlive","scope":"instance","inherits":"Phaser.Group#getFirstAlive","inherited":true,"___s":true},{"meta":{"range":[76012,77578],"filename":"Group.js","lineno":2135,"path":"src\\core"},"description":"Get the first child that is dead (`child.alive === false`).\r\rThis is handy for checking if everything has been wiped out and adding to the pool as needed.\r\rYou can use the optional argument `createIfNull` to create a new Game Object if no dead ones were found in this Group.\r\rIt works by calling `Group.create` passing it the parameters given to this method, and returning the new child.\r\rIf a child *was* found , `createIfNull` is `false` and you provided the additional arguments then the child\rwill be reset and/or have a new texture loaded on it. This is handled by `Group.resetChild`.","kind":"function","name":"getFirstDead","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `true` and no dead children are found a new one is created.","name":"createIfNull"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The first dead child, or `null` if none found and `createIfNull` was false."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#getFirstDead","scope":"instance","inherits":"Phaser.Group#getFirstDead","inherited":true,"___s":true},{"meta":{"range":[77935,79182],"filename":"Group.js","lineno":2165,"path":"src\\core"},"description":"Takes a child and if the `x` and `y` arguments are given it calls `child.reset(x, y)` on it.\r\rIf the `key` and optionally the `frame` arguments are given, it calls `child.loadTexture(key, frame)` on it.\r\rThe two operations are separate. For example if you just wish to load a new texture then pass `null` as the x and y values.","kind":"function","name":"resetChild","params":[{"type":{"names":["DisplayObject"]},"description":"The child to reset and/or load the texture on.","name":"child"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was reset: usually a {@link Phaser.Sprite}."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#resetChild","scope":"instance","inherits":"Phaser.Group#resetChild","inherited":true,"___s":true},{"meta":{"range":[79595,79813],"filename":"Group.js","lineno":2204,"path":"src\\core"},"description":"Return the child at the top of this group.\r\rThe top child is the child displayed (rendered) above every other child.","kind":"function","name":"getTop","returns":[{"type":{"names":["any"]},"description":"The child at the top of the Group."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#getTop","scope":"instance","inherits":"Phaser.Group#getTop","inherited":true,"___s":true},{"meta":{"range":[79978,80212],"filename":"Group.js","lineno":2221,"path":"src\\core"},"description":"Returns the child at the bottom of this group.\r\rThe bottom child the child being displayed (rendered) below every other child.","kind":"function","name":"getBottom","returns":[{"type":{"names":["any"]},"description":"The child at the bottom of the Group."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#getBottom","scope":"instance","inherits":"Phaser.Group#getBottom","inherited":true,"___s":true},{"meta":{"range":[80357,81660],"filename":"Group.js","lineno":2238,"path":"src\\core"},"description":"Get the closest child to given Object, with optional callback to filter children.\r\rThis can be a Sprite, Group, Image or any object with public x and y properties.\r\r'close' is determined by the distance from the objects `x` and `y` properties compared to the childs `x` and `y` properties.\r\rYou can use the optional `callback` argument to apply your own filter to the distance checks.\rIf the child is closer then the previous child, it will be sent to `callback` as the first argument,\rwith the distance as the second. The callback should return `true` if it passes your \rfiltering criteria, otherwise it should return `false`.","kind":"function","name":"getClosestTo","params":[{"type":{"names":["any"]},"description":"The object used to determine the distance. This can be a Sprite, Group, Image or any object with public x and y properties.","name":"object"},{"type":{"names":["function"]},"optional":true,"description":"The function that each child will be evaluated against. Each child of the group will be passed to it as its first parameter, with the distance as the second. It should return `true` if the child passes the matching criteria.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"}],"returns":[{"type":{"names":["any"]},"description":"The child closest to given object, or `null` if no child was found."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#getClosestTo","scope":"instance","inherits":"Phaser.Group#getClosestTo","inherited":true,"___s":true},{"meta":{"range":[82322,83655],"filename":"Group.js","lineno":2282,"path":"src\\core"},"description":"Get the child furthest away from the given Object, with optional callback to filter children.\r\rThis can be a Sprite, Group, Image or any object with public x and y properties.\r\r'furthest away' is determined by the distance from the objects `x` and `y` properties compared to the childs `x` and `y` properties.\r\rYou can use the optional `callback` argument to apply your own filter to the distance checks.\rIf the child is closer then the previous child, it will be sent to `callback` as the first argument,\rwith the distance as the second. The callback should return `true` if it passes your \rfiltering criteria, otherwise it should return `false`.","kind":"function","name":"getFurthestFrom","params":[{"type":{"names":["any"]},"description":"The object used to determine the distance. This can be a Sprite, Group, Image or any object with public x and y properties.","name":"object"},{"type":{"names":["function"]},"optional":true,"description":"The function that each child will be evaluated against. Each child of the group will be passed to it as its first parameter, with the distance as the second. It should return `true` if the child passes the matching criteria.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"}],"returns":[{"type":{"names":["any"]},"description":"The child furthest from the given object, or `null` if no child was found."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#getFurthestFrom","scope":"instance","inherits":"Phaser.Group#getFurthestFrom","inherited":true,"___s":true},{"meta":{"range":[84305,84465],"filename":"Group.js","lineno":2326,"path":"src\\core"},"description":"Get the number of living children in this group.","kind":"function","name":"countLiving","returns":[{"type":{"names":["integer"]},"description":"The number of children flagged as alive."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#countLiving","scope":"instance","inherits":"Phaser.Group#countLiving","inherited":true,"___s":true},{"meta":{"range":[84597,84752],"filename":"Group.js","lineno":2338,"path":"src\\core"},"description":"Get the number of dead children in this group.","kind":"function","name":"countDead","returns":[{"type":{"names":["integer"]},"description":"The number of children flagged as dead."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#countDead","scope":"instance","inherits":"Phaser.Group#countDead","inherited":true,"___s":true},{"meta":{"range":[84883,85214],"filename":"Group.js","lineno":2350,"path":"src\\core"},"description":"Returns a random child from the group.","kind":"function","name":"getRandom","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Offset from the front of the group (lowest child).","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"(to top)","description":"Restriction on the number of values you want to randomly select from.","name":"length"}],"returns":[{"type":{"names":["any"]},"description":"A random child of this Group."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#getRandom","scope":"instance","inherits":"Phaser.Group#getRandom","inherited":true,"___s":true},{"meta":{"range":[85558,86132],"filename":"Group.js","lineno":2372,"path":"src\\core"},"description":"Returns a random child from the Group that has `exists` set to `true`.\r\rOptionally you can specify a start and end index. For example if this Group had 100 children,\rand you set `startIndex` to 0 and `endIndex` to 50, it would return a random child from only\rthe first 50 children in the Group.","kind":"function","name":"getRandomExists","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The first child index to start the search from.","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"description":"The last child index to search up to.","name":"endIndex"}],"returns":[{"type":{"names":["any"]},"description":"A random child of this Group that exists."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#getRandomExists","scope":"instance","inherits":"Phaser.Group#getRandomExists","inherited":true,"___s":true},{"meta":{"range":[86327,87278],"filename":"Group.js","lineno":2392,"path":"src\\core"},"description":"Returns all children in this Group.\r\rYou can optionally specify a matching criteria using the `property` and `value` arguments.\r\rFor example: `getAll('exists', true)` would return only children that have their exists property set.\r\rOptionally you can specify a start and end index. For example if this Group had 100 children,\rand you set `startIndex` to 0 and `endIndex` to 50, it would return a random child from only\rthe first 50 children in the Group.","kind":"function","name":"getAll","params":[{"type":{"names":["string"]},"optional":true,"description":"An optional property to test against the value argument.","name":"property"},{"type":{"names":["any"]},"optional":true,"description":"If property is set then Child.property must strictly equal this value to be included in the results.","name":"value"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The first child index to start the search from.","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"description":"The last child index to search up until.","name":"endIndex"}],"returns":[{"type":{"names":["any"]},"description":"A random existing child of this Group."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#getAll","scope":"instance","inherits":"Phaser.Group#getAll","inherited":true,"___s":true},{"meta":{"range":[87758,88400],"filename":"Group.js","lineno":2431,"path":"src\\core"},"description":"Removes the given child from this group.\r\rThis will dispatch an `onRemovedFromGroup` event from the child (if it has one), and optionally destroy the child.\r\rIf the group cursor was referring to the removed child it is updated to refer to the next child.","kind":"function","name":"remove","params":[{"type":{"names":["any"]},"description":"The child to remove.","name":"child"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true `destroy` will be invoked on the removed child.","name":"destroy"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the the child will not dispatch the `onRemovedFromGroup` event.","name":"silent"}],"returns":[{"type":{"names":["boolean"]},"description":"true if the child was removed from this group, otherwise false."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#remove","scope":"instance","inherits":"Phaser.Group#remove","inherited":true,"___s":true},{"meta":{"range":[89108,89491],"filename":"Group.js","lineno":2479,"path":"src\\core"},"description":"Moves all children from this Group to the Group given.","kind":"function","name":"moveAll","params":[{"type":{"names":["Phaser.Group"]},"description":"The new Group to which the children will be moved to.","name":"group"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch the `onAddedToGroup` event for the new Group.","name":"silent"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"The Group to which all the children were moved."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#moveAll","scope":"instance","inherits":"Phaser.Group#moveAll","inherited":true,"___s":true},{"meta":{"range":[89905,90715],"filename":"Group.js","lineno":2508,"path":"src\\core"},"description":"Removes all children from this Group, but does not remove the group from its parent.\r\rThe children can be optionally destroyed as they are removed.\r\rYou can also optionally also destroy the BaseTexture the Child is using. Be careful if you've\rmore than one Game Object sharing the same BaseTexture.","kind":"function","name":"removeAll","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true `destroy` will be invoked on each removed child.","name":"destroy"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch their `onRemovedFromGroup` events.","name":"silent"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true, and if the `destroy` argument is also true, the BaseTexture belonging to the Child is also destroyed. Note that if another Game Object is sharing the same BaseTexture it will invalidate it.","name":"destroyTexture"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#removeAll","scope":"instance","inherits":"Phaser.Group#removeAll","inherited":true,"___s":true},{"meta":{"range":[91534,92171],"filename":"Group.js","lineno":2556,"path":"src\\core"},"description":"Removes all children from this group whose index falls beteen the given startIndex and endIndex values.","kind":"function","name":"removeBetween","params":[{"type":{"names":["integer"]},"description":"The index to start removing children from.","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"description":"The index to stop removing children at. Must be higher than startIndex. If undefined this method will remove all children between startIndex and the end of the group.","name":"endIndex"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true `destroy` will be invoked on each removed child.","name":"destroy"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch their `onRemovedFromGroup` events.","name":"silent"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#removeBetween","scope":"instance","inherits":"Phaser.Group#removeBetween","inherited":true,"___s":true},{"meta":{"range":[94267,94398],"filename":"Group.js","lineno":2648,"path":"src\\core"},"description":"Total number of existing children in the group.","name":"total","properties":[{"type":{"names":["integer"]},"name":"total"}],"readonly":true,"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#total","scope":"instance","kind":"member","inherits":"Phaser.Group#total","inherited":true,"___s":true},{"meta":{"range":[94577,94738],"filename":"Group.js","lineno":2665,"path":"src\\core"},"description":"Total number of children in this group, regardless of exists/alive status.","name":"length","properties":[{"type":{"names":["integer"]},"name":"length"}],"readonly":true,"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#length","scope":"instance","kind":"member","inherits":"Phaser.Group#length","inherited":true,"___s":true},{"meta":{"range":[94883,95247],"filename":"Group.js","lineno":2682,"path":"src\\core"},"description":"The angle of rotation of the group container, in degrees.\r\rThis adjusts the group itself by modifying its local rotation transform.\r\rThis has no impact on the rotation/angle properties of the children, but it will update their worldTransform\rand on-screen orientation and position.","name":"angle","properties":[{"type":{"names":["number"]},"name":"angle"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#angle","scope":"instance","kind":"member","inherits":"Phaser.Group#angle","inherited":true,"___s":true},{"meta":{"range":[95493,95718],"filename":"Group.js","lineno":2705,"path":"src\\core"},"description":"The center x coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"centerX","properties":[{"type":{"names":["number"]},"name":"centerX"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#centerX","scope":"instance","kind":"member","inherits":"Phaser.Group#centerX","inherited":true,"___s":true},{"meta":{"range":[96056,96281],"filename":"Group.js","lineno":2733,"path":"src\\core"},"description":"The center y coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"centerY","properties":[{"type":{"names":["number"]},"name":"centerY"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#centerY","scope":"instance","kind":"member","inherits":"Phaser.Group#centerY","inherited":true,"___s":true},{"meta":{"range":[98779,101436],"filename":"Group.js","lineno":2873,"path":"src\\core"},"description":"Aligns this Group within another Game Object, or Rectangle, known as the\r'container', to one of 9 possible positions.\r\rThe container must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Groups within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Group to another Game Object does **not** make it a child of\rthe container. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, \r`Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, \r`Phaser.BOTTOM_CENTER` and `Phaser.BOTTOM_RIGHT`.\r\rGroups are placed in such a way that their _bounds_ align with the\rcontainer, taking into consideration rotation and scale of its children.\rThis allows you to neatly align Groups, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Group. For example:\r\r`group.alignIn(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `group` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the containers bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the container bounds by that amount, and providing a positive\rone expands it.","kind":"function","name":"alignIn","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Group to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"container"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"This Group."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#alignIn","scope":"instance","inherits":"Phaser.Group#alignIn","inherited":true,"___s":true},{"meta":{"range":[101522,104305],"filename":"Group.js","lineno":2915,"path":"src\\core"},"description":"Aligns this Group to the side of another Game Object, or Rectangle, known as the\r'parent', in one of 11 possible positions.\r\rThe parent must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Groups within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Group to another Game Object does **not** make it a child of\rthe parent. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, \r`Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, \r`Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` \rand `Phaser.BOTTOM_RIGHT`.\r\rGroups are placed in such a way that their _bounds_ align with the\rparent, taking into consideration rotation and scale of the children.\rThis allows you to neatly align Groups, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Group. For example:\r\r`group.alignTo(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `group` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the parents bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the parent bounds by that amount, and providing a positive\rone expands it.","kind":"function","name":"alignTo","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Group to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"parent"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, `Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, `Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"This Group."}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#alignTo","scope":"instance","inherits":"Phaser.Group#alignTo","inherited":true,"___s":true},{"meta":{"range":[105397,105735],"filename":"Group.js","lineno":2987,"path":"src\\core"},"description":"The angle of rotation of the group container, in radians.\r\rThis will adjust the group container itself by modifying its rotation.\rThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position.","name":"rotation","properties":[{"type":{"names":["number"]},"name":"rotation"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#rotation","scope":"instance","kind":"member","inherits":"Phaser.Group#rotation","inherited":true,"___s":true},{"meta":{"range":[105739,105908],"filename":"Group.js","lineno":2996,"path":"src\\core"},"description":"The visible state of the group. Non-visible Groups and all of their children are not rendered.","name":"visible","properties":[{"type":{"names":["boolean"]},"name":"visible"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#visible","scope":"instance","kind":"member","inherits":"Phaser.Group#visible","inherited":true,"overrides":"Phaser.Group#visible","___s":true},{"meta":{"range":[105912,106021],"filename":"Group.js","lineno":3003,"path":"src\\core"},"description":"The alpha value of the group container.","name":"alpha","properties":[{"type":{"names":["number"]},"name":"alpha"}],"memberof":"Phaser.Particles.Arcade.Emitter","longname":"Phaser.Particles.Arcade.Emitter#alpha","scope":"instance","kind":"member","inherits":"Phaser.Group#alpha","inherited":true,"___s":true},{"meta":{"range":[580,598],"filename":"DisplayObjectContainer.js","lineno":24,"path":"src\\pixi\\display"},"description":"[read-only] The array of children of this container.","properties":[{"name":"children"}],"type":{"names":["Array(DisplayObject)"]},"readonly":true,"name":"children","longname":"Phaser.Particles.Arcade.Emitter#children","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"PIXI.DisplayObjectContainer#children","inherited":true,"___s":true},{"meta":{"range":[1045,1074],"filename":"DisplayObjectContainer.js","lineno":35,"path":"src\\pixi\\display"},"description":"If `ignoreChildInput`  is `false` it will allow this objects _children_ to be considered as valid for Input events.\r\rIf this property is `true` then the children will _not_ be considered as valid for Input events.\r\rNote that this property isn't recursive: only immediate children are influenced, it doesn't scan further down.","properties":[{"type":{"names":["boolean"]},"name":"ignoreChildInput"}],"defaultvalue":false,"name":"ignoreChildInput","longname":"Phaser.Particles.Arcade.Emitter#ignoreChildInput","kind":"member","memberof":"Phaser.Particles.Arcade.Emitter","scope":"instance","inherits":"PIXI.DisplayObjectContainer#ignoreChildInput","inherited":true,"___s":true},{"meta":{"range":[2199,2215],"filename":"Group.js","lineno":38,"path":"src\\core"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"access":"protected","name":"game","longname":"Phaser.Physics.P2.BodyDebug#game","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#game","inherited":true,"___s":true},{"meta":{"range":[2425,2452],"filename":"Group.js","lineno":49,"path":"src\\core"},"description":"A name for this group. Not used internally but useful for debugging.","properties":[{"type":{"names":["string"]},"name":"name"}],"name":"name","longname":"Phaser.Physics.P2.BodyDebug#name","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#name","inherited":true,"___s":true},{"meta":{"range":[2690,2700],"filename":"Group.js","lineno":57,"path":"src\\core"},"description":"The z-depth value of this object within its parent container/Group - the World is a Group as well.\rThis value must be unique for each child in a Group.","properties":[{"type":{"names":["integer"]},"name":"z"}],"readonly":true,"name":"z","longname":"Phaser.Physics.P2.BodyDebug#z","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#z","inherited":true,"___s":true},{"meta":{"range":[3136,3160],"filename":"Group.js","lineno":80,"path":"src\\core"},"description":"Internal Phaser Type value.","properties":[{"type":{"names":["integer"]},"name":"type"}],"access":"protected","name":"type","longname":"Phaser.Physics.P2.BodyDebug#type","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#type","inherited":true,"___s":true},{"meta":{"range":[3287,3318],"filename":"Group.js","lineno":86,"path":"src\\core"},"properties":[{"type":{"names":["number"]},"description":"The const physics body type of this object.","name":"physicsType"}],"readonly":true,"name":"physicsType","longname":"Phaser.Physics.P2.BodyDebug#physicsType","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#physicsType","inherited":true,"___s":true},{"meta":{"range":[3536,3553],"filename":"Group.js","lineno":93,"path":"src\\core"},"description":"The alive property is useful for Groups that are children of other Groups and need to be included/excluded in checks like forEachAlive.","properties":[{"type":{"names":["boolean"]},"name":"alive"}],"defaultvalue":true,"name":"alive","longname":"Phaser.Physics.P2.BodyDebug#alive","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#alive","inherited":true,"___s":true},{"meta":{"range":[3701,3719],"filename":"Group.js","lineno":100,"path":"src\\core"},"description":"If exists is true the group is updated, otherwise it is skipped.","properties":[{"type":{"names":["boolean"]},"name":"exists"}],"defaultvalue":true,"name":"exists","longname":"Phaser.Physics.P2.BodyDebug#exists","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#exists","inherited":true,"___s":true},{"meta":{"range":[3895,3921],"filename":"Group.js","lineno":107,"path":"src\\core"},"description":"A group with `ignoreDestroy` set to `true` ignores all calls to its `destroy` method.","properties":[{"type":{"names":["boolean"]},"name":"ignoreDestroy"}],"defaultvalue":false,"name":"ignoreDestroy","longname":"Phaser.Physics.P2.BodyDebug#ignoreDestroy","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#ignoreDestroy","inherited":true,"___s":true},{"meta":{"range":[4369,4396],"filename":"Group.js","lineno":119,"path":"src\\core"},"description":"A Group is that has `pendingDestroy` set to `true` is flagged to have its destroy method\rcalled on the next logic update.\rYou can set it directly to flag the Group to be destroyed on its next update.\r\rThis is extremely useful if you wish to destroy a Group from within one of its own callbacks\ror a callback of one of its children.","properties":[{"type":{"names":["boolean"]},"name":"pendingDestroy"}],"name":"pendingDestroy","longname":"Phaser.Physics.P2.BodyDebug#pendingDestroy","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#pendingDestroy","inherited":true,"___s":true},{"meta":{"range":[4852,4882],"filename":"Group.js","lineno":130,"path":"src\\core"},"description":"The type of objects that will be created when using {@link #create} or {@link #createMultiple}.\r\rAny object may be used but it should extend either Sprite or Image and accept the same constructor arguments:\rwhen a new object is created it is passed the following parameters to its constructor: `(game, x, y, key, frame)`.","properties":[{"type":{"names":["object"]},"name":"classType"}],"defaultvalue":"{@link Phaser.Sprite}","name":"classType","longname":"Phaser.Physics.P2.BodyDebug#classType","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#classType","inherited":true,"___s":true},{"meta":{"range":[5172,5190],"filename":"Group.js","lineno":138,"path":"src\\core"},"description":"The current display object that the group cursor is pointing to, if any. (Can be set manually.)\r\rThe cursor is a way to iterate through the children in a Group using {@link #next} and {@link #previous}.","properties":[{"type":{"names":["DisplayObject"]},"nullable":true,"name":"cursor"}],"name":"cursor","longname":"Phaser.Physics.P2.BodyDebug#cursor","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#cursor","inherited":true,"___s":true},{"meta":{"range":[5569,5601],"filename":"Group.js","lineno":149,"path":"src\\core"},"description":"A Group with `inputEnableChildren` set to `true` will automatically call `inputEnabled = true` \ron any children _added_ to, or _created by_, this Group.\r\rIf there are children already in the Group at the time you set this property, they are not changed.","properties":[{"type":{"names":["boolean"]},"name":"inputEnableChildren"}],"defaultvalue":false,"name":"inputEnableChildren","longname":"Phaser.Physics.P2.BodyDebug#inputEnableChildren","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#inputEnableChildren","inherited":true,"___s":true},{"meta":{"range":[6075,6118],"filename":"Group.js","lineno":161,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputDown signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 2 arguments: A reference to the Sprite that triggered the signal, and\ra reference to the Pointer that caused it.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputDown"}],"name":"onChildInputDown","longname":"Phaser.Physics.P2.BodyDebug#onChildInputDown","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#onChildInputDown","inherited":true,"___s":true},{"meta":{"range":[6684,6725],"filename":"Group.js","lineno":174,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputUp signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 3 arguments: A reference to the Sprite that triggered the signal, \ra reference to the Pointer that caused it, and a boolean value `isOver` that tells you if the Pointer\ris still over the Sprite or not.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputUp"}],"name":"onChildInputUp","longname":"Phaser.Physics.P2.BodyDebug#onChildInputUp","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#onChildInputUp","inherited":true,"___s":true},{"meta":{"range":[7199,7242],"filename":"Group.js","lineno":186,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputOver signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 2 arguments: A reference to the Sprite that triggered the signal, and\ra reference to the Pointer that caused it.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputOver"}],"name":"onChildInputOver","longname":"Phaser.Physics.P2.BodyDebug#onChildInputOver","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#onChildInputOver","inherited":true,"___s":true},{"meta":{"range":[7714,7756],"filename":"Group.js","lineno":198,"path":"src\\core"},"description":"This Signal is dispatched whenever a child of this Group emits an onInputOut signal as a result\rof having been interacted with by a Pointer. You can bind functions to this Signal instead of to\revery child Sprite.\r\rThis Signal is sent 2 arguments: A reference to the Sprite that triggered the signal, and\ra reference to the Pointer that caused it.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onChildInputOut"}],"name":"onChildInputOut","longname":"Phaser.Physics.P2.BodyDebug#onChildInputOut","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#onChildInputOut","inherited":true,"___s":true},{"meta":{"range":[8120,8148],"filename":"Group.js","lineno":208,"path":"src\\core"},"description":"If true all Sprites created by, or added to this group, will have a physics body enabled on them.\r\rIf there are children already in the Group at the time you set this property, they are not changed.\r\rThe default body type is controlled with {@link #physicsBodyType}.","properties":[{"type":{"names":["boolean"]},"name":"enableBody"}],"name":"enableBody","longname":"Phaser.Physics.P2.BodyDebug#enableBody","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#enableBody","inherited":true,"___s":true},{"meta":{"range":[8397,8425],"filename":"Group.js","lineno":217,"path":"src\\core"},"description":"If true when a physics body is created (via {@link #enableBody}) it will create a physics debug object as well.\r\rThis only works for P2 bodies.","properties":[{"type":{"names":["boolean"]},"name":"enableBodyDebug"}],"defaultvalue":false,"name":"enableBodyDebug","longname":"Phaser.Physics.P2.BodyDebug#enableBodyDebug","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#enableBodyDebug","inherited":true,"___s":true},{"meta":{"range":[8727,8765],"filename":"Group.js","lineno":225,"path":"src\\core"},"description":"If {@link #enableBody} is true this is the type of physics body that is created on new Sprites.\r\rThe valid values are {@link Phaser.Physics.ARCADE}, {@link Phaser.Physics.P2JS}, {@link Phaser.Physics.NINJA}, etc.","properties":[{"type":{"names":["integer"]},"name":"physicsBodyType"}],"name":"physicsBodyType","longname":"Phaser.Physics.P2.BodyDebug#physicsBodyType","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#physicsBodyType","inherited":true,"___s":true},{"meta":{"range":[9408,9440],"filename":"Group.js","lineno":243,"path":"src\\core"},"description":"If this Group contains Arcade Physics Sprites you can set a custom sort direction via this property.\r\rIt should be set to one of the Phaser.Physics.Arcade sort direction constants: \r\rPhaser.Physics.Arcade.SORT_NONE\rPhaser.Physics.Arcade.LEFT_RIGHT\rPhaser.Physics.Arcade.RIGHT_LEFT\rPhaser.Physics.Arcade.TOP_BOTTOM\rPhaser.Physics.Arcade.BOTTOM_TOP\r\rIf set to `null` the Group will use whatever Phaser.Physics.Arcade.sortDirection is set to. This is the default behavior.","properties":[{"type":{"names":["integer"]},"name":"physicsSortDirection"}],"defaultvalue":null,"name":"physicsSortDirection","longname":"Phaser.Physics.P2.BodyDebug#physicsSortDirection","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#physicsSortDirection","inherited":true,"___s":true},{"meta":{"range":[9571,9607],"filename":"Group.js","lineno":249,"path":"src\\core"},"description":"This signal is dispatched when the group is destroyed.","properties":[{"type":{"names":["Phaser.Signal"]},"name":"onDestroy"}],"name":"onDestroy","longname":"Phaser.Physics.P2.BodyDebug#onDestroy","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#onDestroy","inherited":true,"___s":true},{"meta":{"range":[9758,9778],"filename":"Group.js","lineno":255,"path":"src\\core"},"properties":[{"type":{"names":["integer"]},"description":"The current index of the Group cursor. Advance it with Group.next.","name":"cursorIndex"}],"readonly":true,"name":"cursorIndex","longname":"Phaser.Physics.P2.BodyDebug#cursorIndex","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#cursorIndex","inherited":true,"___s":true},{"meta":{"range":[10207,10233],"filename":"Group.js","lineno":265,"path":"src\\core"},"description":"A Group that is fixed to the camera uses its x/y coordinates as offsets from the top left of the camera. These are stored in Group.cameraOffset.\r\rNote that the cameraOffset values are in addition to any parent in the display list.\rSo if this Group was in a Group that has x: 200, then this will be added to the cameraOffset.x","properties":[{"type":{"names":["boolean"]},"name":"fixedToCamera"}],"name":"fixedToCamera","longname":"Phaser.Physics.P2.BodyDebug#fixedToCamera","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#fixedToCamera","inherited":true,"___s":true},{"meta":{"range":[10575,10613],"filename":"Group.js","lineno":272,"path":"src\\core"},"description":"If this object is {@link #fixedToCamera} then this stores the x/y position offset relative to the top-left of the camera view.\rIf the parent of this Group is also `fixedToCamera` then the offset here is in addition to that and should typically be disabled.","properties":[{"type":{"names":["Phaser.Point"]},"name":"cameraOffset"}],"name":"cameraOffset","longname":"Phaser.Physics.P2.BodyDebug#cameraOffset","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#cameraOffset","inherited":true,"___s":true},{"meta":{"range":[11287,11301],"filename":"Group.js","lineno":285,"path":"src\\core"},"description":"The hash array is an array belonging to this Group into which you can add any of its children via Group.addToHash and Group.removeFromHash.\r\rOnly children of this Group can be added to and removed from the hash.\r\rThis hash is used automatically by Phaser Arcade Physics in order to perform non z-index based destructive sorting.\rHowever if you don't use Arcade Physics, or this isn't a physics enabled Group, then you can use the hash to perform your own\rsorting and filtering of Group children without touching their z-index (and therefore display draw order)","properties":[{"type":{"names":["array"]},"name":"hash"}],"name":"hash","longname":"Phaser.Physics.P2.BodyDebug#hash","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"Phaser.Group#hash","inherited":true,"___s":true},{"meta":{"range":[12415,13611],"filename":"Group.js","lineno":341,"path":"src\\core"},"description":"Adds an existing object as the top child in this group.\r\rThe child is automatically added to the top of the group, and is displayed above every previous child.\r\rOr if the _optional_ index is specified, the child is added at the location specified by the index value, \rthis allows you to control child ordering.\r\rIf the child was already in this Group, it is simply returned, and nothing else happens to it.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.\r\rUse {@link #addAt} to control where a child is added. Use {@link #create} to create and add a new child.","kind":"function","name":"add","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to add as a child.","name":"child"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the child will not dispatch the `onAddedToGroup` event.","name":"silent"},{"type":{"names":["integer"]},"optional":true,"description":"The index within the group to insert the child to. Where 0 is the bottom of the Group.","name":"index"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was added to the group."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#add","scope":"instance","inherits":"Phaser.Group#add","inherited":true,"___s":true},{"meta":{"range":[14707,15502],"filename":"Group.js","lineno":418,"path":"src\\core"},"description":"Adds an existing object to this group.\r\rThe child is added to the group at the location specified by the index value, this allows you to control child ordering.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.","kind":"function","name":"addAt","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to add as a child.","name":"child"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The index within the group to insert the child to.","name":"index"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the child will not dispatch the `onAddedToGroup` event.","name":"silent"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was added to the group."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#addAt","scope":"instance","inherits":"Phaser.Group#addAt","inherited":true,"___s":true},{"meta":{"range":[15617,16054],"filename":"Group.js","lineno":439,"path":"src\\core"},"description":"Adds a child of this Group into the hash array.\rThis call will return false if the child is not a child of this Group, or is already in the hash.","kind":"function","name":"addToHash","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to add to this Groups hash. Must be a member of this Group already and not present in the hash.","name":"child"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the child was successfully added to the hash, otherwise false."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#addToHash","scope":"instance","inherits":"Phaser.Group#addToHash","inherited":true,"___s":true},{"meta":{"range":[16348,16745],"filename":"Group.js","lineno":464,"path":"src\\core"},"description":"Removes a child of this Group from the hash array.\rThis call will return false if the child is not in the hash.","kind":"function","name":"removeFromHash","params":[{"type":{"names":["DisplayObject"]},"description":"The display object to remove from this Groups hash. Must be a member of this Group and in the hash.","name":"child"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the child was successfully removed from the hash, otherwise false."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#removeFromHash","scope":"instance","inherits":"Phaser.Group#removeFromHash","inherited":true,"___s":true},{"meta":{"range":[17033,18107],"filename":"Group.js","lineno":489,"path":"src\\core"},"description":"Adds an array of existing Display Objects to this Group.\r\rThe Display Objects are automatically added to the top of this Group, and will render on-top of everything already in this Group.\r\rAs well as an array you can also pass another Group as the first argument. In this case all of the children from that\rGroup will be removed from it and added into this Group.\r\rIf `Group.enableBody` is set, then a physics body will be created on the objects, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the objects, so long as one does not already exist.","kind":"function","name":"addMultiple","params":[{"type":{"names":["Array.<DisplayObject>","Phaser.Group"]},"description":"An array of display objects or a Phaser.Group. If a Group is given then *all* children will be moved from it.","name":"children"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch the `onAddedToGroup` event.","name":"silent"}],"returns":[{"type":{"names":["Array.<DisplayObject>","Phaser.Group"]},"description":"The array of children or Group of children that were added to this Group."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#addMultiple","scope":"instance","inherits":"Phaser.Group#addMultiple","inherited":true,"___s":true},{"meta":{"range":[18479,18756],"filename":"Group.js","lineno":524,"path":"src\\core"},"description":"Returns the child found at the given index within this group.","kind":"function","name":"getAt","params":[{"type":{"names":["integer"]},"description":"The index to return the child from.","name":"index"}],"returns":[{"type":{"names":["DisplayObject","integer"]},"description":"The child that was found at the given index, or -1 for an invalid index."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#getAt","scope":"instance","inherits":"Phaser.Group#getAt","inherited":true,"___s":true},{"meta":{"range":[18970,20735],"filename":"Group.js","lineno":544,"path":"src\\core"},"description":"Creates a new Phaser.Sprite object and adds it to the top of this group.\r\rUse {@link #classType} to change the type of object created.\r\rThe child is automatically added to the top of the group, and is displayed above every previous child.\r\rOr if the _optional_ index is specified, the child is added at the location specified by the index value, \rthis allows you to control child ordering.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.","kind":"function","name":"create","params":[{"type":{"names":["number"]},"description":"The x coordinate to display the newly created Sprite at. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate to display the newly created Sprite at. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"The default exists state of the Sprite.","name":"exists"},{"type":{"names":["integer"]},"optional":true,"description":"The index within the group to insert the child to. Where 0 is the bottom of the Group.","name":"index"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was created: will be a {@link Phaser.Sprite} unless {@link #classType} has been changed."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#create","scope":"instance","inherits":"Phaser.Group#create","inherited":true,"___s":true},{"meta":{"range":[21074,23649],"filename":"Group.js","lineno":581,"path":"src\\core"},"description":"Creates multiple Phaser.Sprite objects and adds them to the top of this Group.\r\rThis method is useful if you need to quickly generate a pool of sprites, such as bullets.\r\rUse {@link #classType} to change the type of object created.\r\rYou can provide an array as the `key` and / or `frame` arguments. When you do this\rit will create `quantity` Sprites for every key (and frame) in the arrays.\r\rFor example:\r\r`createMultiple(25, ['ball', 'carrot'])`\r\rIn the above code there are 2 keys (ball and carrot) which means that 50 sprites will be\rcreated in total, 25 of each. You can also have the `frame` as an array:\r\r`createMultiple(5, 'bricks', [0, 1, 2, 3])`\r\rIn the above there is one key (bricks), which is a sprite sheet. The frames array tells\rthis method to use frames 0, 1, 2 and 3. So in total it will create 20 sprites, because\rthe quantity was set to 5, so that is 5 brick sprites of frame 0, 5 brick sprites with\rframe 1, and so on.\r\rIf you set both the key and frame arguments to be arrays then understand it will create\ra total quantity of sprites equal to the size of both arrays times each other. I.e.:\r\r`createMultiple(20, ['diamonds', 'balls'], [0, 1, 2])`\r\rThe above will create 20 'diamonds' of frame 0, 20 with frame 1 and 20 with frame 2.\rIt will then create 20 'balls' of frame 0, 20 with frame 1 and 20 with frame 2.\rIn total it will have created 120 sprites.\r\rBy default the Sprites will have their `exists` property set to `false`, and they will be \rpositioned at 0x0, relative to the `Group.x / y` values.\r\rIf `Group.enableBody` is set, then a physics body will be created on the objects, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the objects, so long as one does not already exist.","kind":"function","name":"createMultiple","params":[{"type":{"names":["integer"]},"description":"The number of Sprites to create.","name":"quantity"},{"type":{"names":["string","array"]},"description":"The Cache key of the image that the Sprites will use. Or an Array of keys. See the description for details on how the quantity applies when arrays are used.","name":"key"},{"type":{"names":["integer","string","array"]},"optional":true,"defaultvalue":0,"description":"If the Sprite image contains multiple frames you can specify which one to use here. Or an Array of frames. See the description for details on how the quantity applies when arrays are used.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"The default exists state of the Sprite.","name":"exists"}],"returns":[{"type":{"names":["array"]},"description":"An array containing all of the Sprites that were created."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#createMultiple","scope":"instance","inherits":"Phaser.Group#createMultiple","inherited":true,"___s":true},{"meta":{"range":[24339,24575],"filename":"Group.js","lineno":663,"path":"src\\core"},"description":"Internal method that re-applies all of the children's Z values.\r\rThis must be called whenever children ordering is altered so that their `z` indices are correctly updated.","kind":"function","name":"updateZ","access":"protected","memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#updateZ","scope":"instance","inherits":"Phaser.Group#updateZ","inherited":true,"___s":true},{"meta":{"range":[24736,27678],"filename":"Group.js","lineno":682,"path":"src\\core"},"description":"This method iterates through all children in the Group (regardless if they are visible or exist)\rand then changes their position so they are arranged in a Grid formation. Children must have\rthe `alignTo` method in order to be positioned by this call. All default Phaser Game Objects have\rthis.\r\rThe grid dimensions are determined by the first four arguments. The `width` and `height` arguments\rrelate to the width and height of the grid respectively.\r\rFor example if the Group had 100 children in it:\r\r`Group.align(10, 10, 32, 32)`\r\rThis will align all of the children into a grid formation of 10x10, using 32 pixels per\rgrid cell. If you want a wider grid, you could do:\r\r`Group.align(25, 4, 32, 32)`\r\rThis will align the children into a grid of 25x4, again using 32 pixels per grid cell.\r\rYou can choose to set _either_ the `width` or `height` value to -1. Doing so tells the method\rto keep on aligning children until there are no children left. For example if this Group had\r48 children in it, the following:\r\r`Group.align(-1, 8, 32, 32)`\r\r... will align the children so that there are 8 children vertically (the second argument), \rand each row will contain 6 sprites, except the last one, which will contain 5 (totaling 48)\r\rYou can also do:\r\r`Group.align(10, -1, 32, 32)`\r\rIn this case it will create a grid 10 wide, and as tall as it needs to be in order to fit\rall of the children in.\r\rThe `position` property allows you to control where in each grid cell the child is positioned.\rThis is a constant and can be one of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, \r`Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, \r`Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.\r\rThe final argument; `offset` lets you start the alignment from a specific child index.","kind":"function","name":"align","params":[{"type":{"names":["integer"]},"description":"The width of the grid in items (not pixels). Set to -1 for a dynamic width. If -1 then you must set an explicit height value.","name":"width"},{"type":{"names":["integer"]},"description":"The height of the grid in items (not pixels). Set to -1 for a dynamic height. If -1 then you must set an explicit width value.","name":"height"},{"type":{"names":["integer"]},"description":"The width of each grid cell, in pixels.","name":"cellWidth"},{"type":{"names":["integer"]},"description":"The height of each grid cell, in pixels.","name":"cellHeight"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Optional index to start the alignment from. Defaults to zero, the first child in the Group, but can be set to any valid child index value.","name":"offset"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the Group children were aligned, otherwise false."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#align","scope":"instance","inherits":"Phaser.Group#align","inherited":true,"___s":true},{"meta":{"range":[29501,29838],"filename":"Group.js","lineno":806,"path":"src\\core"},"description":"Sets the group cursor to the first child in the group.\r\rIf the optional index parameter is given it sets the cursor to the object at that index instead.","kind":"function","name":"resetCursor","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Set the cursor to point to a specific index.","name":"index"}],"returns":[{"type":{"names":["any"]},"description":"The child the cursor now points to."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#resetCursor","scope":"instance","inherits":"Phaser.Group#resetCursor","inherited":true,"___s":true},{"meta":{"range":[30189,30462],"filename":"Group.js","lineno":833,"path":"src\\core"},"description":"Advances the group cursor to the next (higher) object in the group.\r\rIf the cursor is at the end of the group (top child) it is moved the start of the group (bottom child).","kind":"function","name":"next","returns":[{"type":{"names":["any"]},"description":"The child the cursor now points to."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#next","scope":"instance","inherits":"Phaser.Group#next","inherited":true,"___s":true},{"meta":{"range":[30859,31125],"filename":"Group.js","lineno":862,"path":"src\\core"},"description":"Moves the group cursor to the previous (lower) child in the group.\r\rIf the cursor is at the start of the group (bottom child) it is moved to the end (top child).","kind":"function","name":"previous","returns":[{"type":{"names":["any"]},"description":"The child the cursor now points to."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#previous","scope":"instance","inherits":"Phaser.Group#previous","inherited":true,"___s":true},{"meta":{"range":[31527,31845],"filename":"Group.js","lineno":891,"path":"src\\core"},"description":"Swaps the position of two children in this group.\r\rBoth children must be in this group, a child cannot be swapped with itself, and unparented children cannot be swapped.","kind":"function","name":"swap","params":[{"type":{"names":["any"]},"description":"The first child to swap.","name":"child1"},{"type":{"names":["any"]},"description":"The second child to swap.","name":"child2"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#swap","scope":"instance","inherits":"Phaser.Group#swap","inherited":true,"___s":true},{"meta":{"range":[31977,32225],"filename":"Group.js","lineno":907,"path":"src\\core"},"description":"Brings the given child to the top of this group so it renders above all other children.","kind":"function","name":"bringToTop","params":[{"type":{"names":["any"]},"description":"The child to bring to the top of this group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#bringToTop","scope":"instance","inherits":"Phaser.Group#bringToTop","inherited":true,"___s":true},{"meta":{"range":[32481,32733],"filename":"Group.js","lineno":926,"path":"src\\core"},"description":"Sends the given child to the bottom of this group so it renders below all other children.","kind":"function","name":"sendToBack","params":[{"type":{"names":["any"]},"description":"The child to send to the bottom of this group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#sendToBack","scope":"instance","inherits":"Phaser.Group#sendToBack","inherited":true,"___s":true},{"meta":{"range":[32975,33202],"filename":"Group.js","lineno":945,"path":"src\\core"},"description":"Moves the given child up one place in this group unless it's already at the top.","kind":"function","name":"moveUp","params":[{"type":{"names":["any"]},"description":"The child to move up in the group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#moveUp","scope":"instance","inherits":"Phaser.Group#moveUp","inherited":true,"___s":true},{"meta":{"range":[33533,33769],"filename":"Group.js","lineno":969,"path":"src\\core"},"description":"Moves the given child down one place in this group unless it's already at the bottom.","kind":"function","name":"moveDown","params":[{"type":{"names":["any"]},"description":"The child to move down in the group.","name":"child"}],"returns":[{"type":{"names":["any"]},"description":"The child that was moved."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#moveDown","scope":"instance","inherits":"Phaser.Group#moveDown","inherited":true,"___s":true},{"meta":{"range":[34079,34416],"filename":"Group.js","lineno":993,"path":"src\\core"},"description":"Positions the child found at the given index within this group to the given x and y coordinates.","kind":"function","name":"xy","params":[{"type":{"names":["integer"]},"description":"The index of the child in the group to set the position of.","name":"index"},{"type":{"names":["number"]},"description":"The new x position of the child.","name":"x"},{"type":{"names":["number"]},"description":"The new y position of the child.","name":"y"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#xy","scope":"instance","inherits":"Phaser.Group#xy","inherited":true,"___s":true},{"meta":{"range":[34670,34845],"filename":"Group.js","lineno":1015,"path":"src\\core"},"description":"Reverses all children in this group.\r\rThis operation applies only to immediate children and does not propagate to subgroups.","kind":"function","name":"reverse","memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#reverse","scope":"instance","inherits":"Phaser.Group#reverse","inherited":true,"___s":true},{"meta":{"range":[34956,35246],"filename":"Group.js","lineno":1029,"path":"src\\core"},"description":"Get the index position of the given child in this group, which should match the child's `z` property.","kind":"function","name":"getIndex","params":[{"type":{"names":["any"]},"description":"The child to get the index for.","name":"child"}],"returns":[{"type":{"names":["integer"]},"description":"The index of the child or -1 if it's not a member of this group."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#getIndex","scope":"instance","inherits":"Phaser.Group#getIndex","inherited":true,"___s":true},{"meta":{"range":[35354,35730],"filename":"Group.js","lineno":1042,"path":"src\\core"},"description":"Searches the Group for the first instance of a child with the `name`\rproperty matching the given argument. Should more than one child have\rthe same name only the first instance is returned.","kind":"function","name":"getByName","params":[{"type":{"names":["string"]},"description":"The name to search for.","name":"name"}],"returns":[{"type":{"names":["any"]},"description":"The first child with a matching name, or null if none were found."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#getByName","scope":"instance","inherits":"Phaser.Group#getByName","inherited":true,"___s":true},{"meta":{"range":[35987,36616],"filename":"Group.js","lineno":1065,"path":"src\\core"},"description":"Replaces a child of this Group with the given newChild. The newChild cannot be a member of this Group.\r\rIf `Group.enableBody` is set, then a physics body will be created on the object, so long as one does not already exist.\r\rIf `Group.inputEnableChildren` is set, then an Input Handler will be created on the object, so long as one does not already exist.","kind":"function","name":"replace","params":[{"type":{"names":["any"]},"description":"The child in this group that will be replaced.","name":"oldChild"},{"type":{"names":["any"]},"description":"The child to be inserted into this group.","name":"newChild"}],"returns":[{"type":{"names":["any"]},"description":"Returns the oldChild that was replaced within this group."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#replace","scope":"instance","inherits":"Phaser.Group#replace","inherited":true,"___s":true},{"meta":{"range":[37172,37536],"filename":"Group.js","lineno":1104,"path":"src\\core"},"description":"Checks if the child has the given property.\r\rWill scan up to 4 levels deep only.","kind":"function","name":"hasProperty","params":[{"type":{"names":["any"]},"description":"The child to check for the existence of the property on.","name":"child"},{"type":{"names":["Array.<string>"]},"description":"An array of strings that make up the property.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the child has the property, otherwise false."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#hasProperty","scope":"instance","inherits":"Phaser.Group#hasProperty","inherited":true,"___s":true},{"meta":{"range":[38169,39389],"filename":"Group.js","lineno":1139,"path":"src\\core"},"description":"Sets a property to the given value on the child. The operation parameter controls how the value is set.\r\rThe operations are:\r- 0: set the existing value to the given value; if force is `true` a new property will be created if needed\r- 1: will add the given value to the value already present.\r- 2: will subtract the given value from the value already present.\r- 3: will multiply the value already present by the given value.\r- 4: will divide the value already present by the given value.","kind":"function","name":"setProperty","params":[{"type":{"names":["any"]},"description":"The child to set the property value on.","name":"child"},{"type":{"names":["array"]},"description":"An array of strings that make up the property that will be set.","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the property was set, false if not."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#setProperty","scope":"instance","inherits":"Phaser.Group#setProperty","inherited":true,"___s":true},{"meta":{"range":[41812,42411],"filename":"Group.js","lineno":1217,"path":"src\\core"},"description":"Checks a property for the given value on the child.","kind":"function","name":"checkProperty","params":[{"type":{"names":["any"]},"description":"The child to check the property value on.","name":"child"},{"type":{"names":["array"]},"description":"An array of strings that make up the property that will be set.","name":"key"},{"type":{"names":["any"]},"description":"The value that will be checked.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the property was was equal to value, false if not."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#checkProperty","scope":"instance","inherits":"Phaser.Group#checkProperty","inherited":true,"___s":true},{"meta":{"range":[42841,43970],"filename":"Group.js","lineno":1246,"path":"src\\core"},"description":"Quickly set a property on a single child of this group to a new value.\r\rThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","kind":"function","name":"set","params":[{"type":{"names":["Phaser.Sprite"]},"description":"The child to set the property on.","name":"child"},{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then the child will only be updated if alive=true.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then the child will only be updated if visible=true.","name":"checkVisible"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the property was set, false if not."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#set","scope":"instance","inherits":"Phaser.Group#set","inherited":true,"___s":true},{"meta":{"range":[44503,45816],"filename":"Group.js","lineno":1277,"path":"src\\core"},"description":"Quickly set the same property across all children of this group to a new value.\r\rThis call doesn't descend down children, so if you have a Group inside of this group, the property will be set on the group but not its children.\rIf you need that ability please see `Group.setAllChildren`.\r\rThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","kind":"function","name":"setAll","params":[{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with alive=true will be updated. This includes any Groups that are children.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with visible=true will be updated. This includes any Groups that are children.","name":"checkVisible"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#setAll","scope":"instance","inherits":"Phaser.Group#setAll","inherited":true,"___s":true},{"meta":{"range":[46466,47814],"filename":"Group.js","lineno":1312,"path":"src\\core"},"description":"Quickly set the same property across all children of this group, and any child Groups, to a new value.\r\rIf this group contains other Groups then the same property is set across their children as well, iterating down until it reaches the bottom.\rUnlike with `setAll` the property is NOT set on child Groups itself.\r\rThe operation parameter controls how the new value is assigned to the property, from simple replacement to addition and multiplication.","kind":"function","name":"setAllChildren","params":[{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be set.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with alive=true will be updated. This includes any Groups that are children.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with visible=true will be updated. This includes any Groups that are children.","name":"checkVisible"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Controls how the value is assigned. A value of 0 replaces the value with the new one. A value of 1 adds it, 2 subtracts it, 3 multiplies it and 4 divides it.","name":"operation"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be set on the child regardless if it already exists or not. If false and the property doesn't exist, nothing will be set.","name":"force"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#setAllChildren","scope":"instance","inherits":"Phaser.Group#setAllChildren","inherited":true,"___s":true},{"meta":{"range":[48703,49653],"filename":"Group.js","lineno":1353,"path":"src\\core"},"description":"Quickly check that the same property across all children of this group is equal to the given value.\r\rThis call doesn't descend down children, so if you have a Group inside of this group, the property will be checked on the group but not its children.","kind":"function","name":"checkAll","params":[{"type":{"names":["string"]},"description":"The property, as a string, to be set. For example: 'body.velocity.x'","name":"key"},{"type":{"names":["any"]},"description":"The value that will be checked.","name":"value"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with alive=true will be checked. This includes any Groups that are children.","name":"checkAlive"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set then only children with visible=true will be checked. This includes any Groups that are children.","name":"checkVisible"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `force` is true then the property will be checked on the child regardless if it already exists or not. If true and the property doesn't exist, false will be returned.","name":"force"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#checkAll","scope":"instance","inherits":"Phaser.Group#checkAll","inherited":true,"___s":true},{"meta":{"range":[50309,50931],"filename":"Group.js","lineno":1386,"path":"src\\core"},"description":"Adds the amount to the given property on all children in this group.\r\r`Group.addAll('x', 10)` will add 10 to the child.x value for each child.","kind":"function","name":"addAll","params":[{"type":{"names":["string"]},"description":"The property to increment, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to increment the property by. If child.x = 10 then addAll('x', 40) would make child.x = 50.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#addAll","scope":"instance","inherits":"Phaser.Group#addAll","inherited":true,"___s":true},{"meta":{"range":[51097,51731],"filename":"Group.js","lineno":1403,"path":"src\\core"},"description":"Subtracts the amount from the given property on all children in this group.\r\r`Group.subAll('x', 10)` will minus 10 from the child.x value for each child.","kind":"function","name":"subAll","params":[{"type":{"names":["string"]},"description":"The property to decrement, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to subtract from the property. If child.x = 50 then subAll('x', 40) would make child.x = 10.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#subAll","scope":"instance","inherits":"Phaser.Group#subAll","inherited":true,"___s":true},{"meta":{"range":[51897,52529],"filename":"Group.js","lineno":1420,"path":"src\\core"},"description":"Multiplies the given property by the amount on all children in this group.\r\r`Group.multiplyAll('x', 2)` will x2 the child.x value for each child.","kind":"function","name":"multiplyAll","params":[{"type":{"names":["string"]},"description":"The property to multiply, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to multiply the property by. If child.x = 10 then multiplyAll('x', 2) would make child.x = 20.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#multiplyAll","scope":"instance","inherits":"Phaser.Group#multiplyAll","inherited":true,"___s":true},{"meta":{"range":[52700,53322],"filename":"Group.js","lineno":1437,"path":"src\\core"},"description":"Divides the given property by the amount on all children in this group.\r\r`Group.divideAll('x', 2)` will half the child.x value for each child.","kind":"function","name":"divideAll","params":[{"type":{"names":["string"]},"description":"The property to divide, for example 'body.velocity.x' or 'angle'.","name":"property"},{"type":{"names":["number"]},"description":"The amount to divide the property by. If child.x = 100 then divideAll('x', 2) would make child.x = 50.","name":"amount"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is alive.","name":"checkAlive"},{"type":{"names":["boolean"]},"description":"If true the property will only be changed if the child is visible.","name":"checkVisible"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#divideAll","scope":"instance","inherits":"Phaser.Group#divideAll","inherited":true,"___s":true},{"meta":{"range":[53491,54021],"filename":"Group.js","lineno":1454,"path":"src\\core"},"description":"Calls a function, specified by name, on all children in the group who exist (or do not exist).\r\rAfter the existsValue parameter you can add as many parameters as you like, which will all be passed to the child callback.","kind":"function","name":"callAllExists","params":[{"type":{"names":["string"]},"description":"Name of the function on the children to call.","name":"callback"},{"type":{"names":["boolean"]},"description":"Only children with exists=existsValue will be called.","name":"existsValue"},{"type":{"names":["any"]},"variable":true,"description":"Additional parameters that will be passed to the callback.","name":"parameter"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#callAllExists","scope":"instance","inherits":"Phaser.Group#callAllExists","inherited":true,"___s":true},{"meta":{"range":[54549,54911],"filename":"Group.js","lineno":1488,"path":"src\\core"},"description":"Returns a reference to a function that exists on a child of the group based on the given callback array.","kind":"function","name":"callbackFromArray","params":[{"type":{"names":["object"]},"description":"The object to inspect.","name":"child"},{"type":{"names":["array"]},"description":"The array of function names.","name":"callback"},{"type":{"names":["integer"]},"description":"The size of the array (pre-calculated in callAll).","name":"length"}],"access":"protected","memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#callbackFromArray","scope":"instance","inherits":"Phaser.Group#callbackFromArray","inherited":true,"___s":true},{"meta":{"range":[55847,56541],"filename":"Group.js","lineno":1538,"path":"src\\core"},"description":"Calls a function, specified by name, on all on children.\r\rThe function is called for all children regardless if they are dead or alive (see callAllExists for different options).\rAfter the method parameter and context you can add as many extra parameters as you like, which will all be passed to the child.","kind":"function","name":"callAll","params":[{"type":{"names":["string"]},"description":"Name of the function on the child to call. Deep property lookup is supported.","name":"method"},{"type":{"names":["string"]},"optional":true,"defaultvalue":null,"description":"A string containing the context under which the method will be executed. Set to null to default to the child.","name":"context"},{"type":{"names":["any"]},"variable":true,"description":"Additional parameters that will be passed to the method.","name":"args"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#callAll","scope":"instance","inherits":"Phaser.Group#callAll","inherited":true,"___s":true},{"meta":{"range":[57918,58017],"filename":"Group.js","lineno":1611,"path":"src\\core"},"description":"The core preUpdate - as called by World.","kind":"function","name":"preUpdate","access":"protected","memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#preUpdate","scope":"instance","inherits":"Phaser.Group#preUpdate","inherited":true,"___s":true},{"meta":{"range":[58417,58510],"filename":"Group.js","lineno":1639,"path":"src\\core"},"description":"The core update - as called by World.","kind":"function","name":"update","access":"protected","memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#update","scope":"instance","inherits":"Phaser.Group#update","inherited":true,"___s":true},{"meta":{"range":[58768,58869],"filename":"Group.js","lineno":1656,"path":"src\\core"},"description":"The core postUpdate - as called by World.","kind":"function","name":"postUpdate","access":"protected","memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#postUpdate","scope":"instance","inherits":"Phaser.Group#postUpdate","inherited":true,"___s":true},{"meta":{"range":[59239,60105],"filename":"Group.js","lineno":1677,"path":"src\\core"},"description":"Find children matching a certain predicate.\r\rFor example:\r\r    var healthyList = Group.filter(function(child, index, children) {\r        return child.health > 10 ? true : false;\r    }, true);\r    healthyList.callAll('attack');\r\rNote: Currently this will skip any children which are Groups themselves.","kind":"function","name":"filter","params":[{"type":{"names":["function"]},"description":"The function that each child will be evaluated against. Each child of the group will be passed to it as its first parameter, the index as the second, and the entire child array as the third","name":"predicate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true, only existing can be selected; otherwise all children can be selected and will be passed to the predicate.","name":"checkExists"}],"returns":[{"type":{"names":["Phaser.ArraySet"]},"description":"Returns an array list containing all the children that the predicate returned true for"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#filter","scope":"instance","inherits":"Phaser.Group#filter","inherited":true,"___s":true},{"meta":{"range":[60612,61562],"filename":"Group.js","lineno":1717,"path":"src\\core"},"description":"Call a function on each child in this group.\r\rAdditional arguments for the callback can be specified after the `checkExists` parameter. For example,\r\r    Group.forEach(awardBonusGold, this, true, 100, 500)\r\rwould invoke `awardBonusGold` function with the parameters `(child, 100, 500)`.\r\rNote: This check will skip any children which are Groups themselves.","kind":"function","name":"forEach","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set only children matching for which `exists` is true will be passed to the callback, otherwise all children will be passed.","name":"checkExists"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#forEach","scope":"instance","inherits":"Phaser.Group#forEach","inherited":true,"___s":true},{"meta":{"range":[62664,63187],"filename":"Group.js","lineno":1771,"path":"src\\core"},"description":"Call a function on each existing child in this group.\r\rSee {@link Phaser.Group#forEach forEach} for details.","kind":"function","name":"forEachExists","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#forEachExists","scope":"instance","inherits":"Phaser.Group#forEachExists","inherited":true,"___s":true},{"meta":{"range":[63575,64094],"filename":"Group.js","lineno":1799,"path":"src\\core"},"description":"Call a function on each alive child in this group.\r\rSee {@link Phaser.Group#forEach forEach} for details.","kind":"function","name":"forEachAlive","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#forEachAlive","scope":"instance","inherits":"Phaser.Group#forEachAlive","inherited":true,"___s":true},{"meta":{"range":[64480,64997],"filename":"Group.js","lineno":1827,"path":"src\\core"},"description":"Call a function on each dead child in this group.\r\rSee {@link Phaser.Group#forEach forEach} for details.","kind":"function","name":"forEachDead","params":[{"type":{"names":["function"]},"description":"The function that will be called for each applicable child. The child will be passed as the first argument.","name":"callback"},{"type":{"names":["object"]},"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["any"]},"optional":true,"variable":true,"defaultvalue":"(none)","description":"Additional arguments to pass to the callback function, after the child item.","name":"args"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#forEachDead","scope":"instance","inherits":"Phaser.Group#forEachDead","inherited":true,"___s":true},{"meta":{"range":[65383,66281],"filename":"Group.js","lineno":1855,"path":"src\\core"},"description":"Sort the children in the group according to a particular key and ordering.\r\rCall this function to sort the group according to a particular key value and order.\r\rFor example to depth sort Sprites for Zelda-style game you might call `group.sort('y', Phaser.Group.SORT_ASCENDING)` at the bottom of your `State.update()`.\r\rInternally this uses a standard JavaScript Array sort, so everything that applies there also applies here, including\ralphabetical sorting, mixing strings and numbers, and Unicode sorting. See MDN for more details.","kind":"function","name":"sort","params":[{"type":{"names":["string"]},"optional":true,"defaultvalue":"'z'","description":"The name of the property to sort on. Defaults to the objects z-depth value.","name":"key"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"Phaser.Group.SORT_ASCENDING","description":"Order ascending ({@link Phaser.Group.SORT_ASCENDING SORT_ASCENDING}) or descending ({@link Phaser.Group.SORT_DESCENDING SORT_DESCENDING}).","name":"order"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#sort","scope":"instance","inherits":"Phaser.Group#sort","inherited":true,"___s":true},{"meta":{"range":[66838,67280],"filename":"Group.js","lineno":1895,"path":"src\\core"},"description":"Sort the children in the group according to custom sort function.\r\rThe `sortHandler` is provided the two parameters: the two children involved in the comparison (a and b).\rIt should return -1 if `a > b`, 1 if `a < b` or 0 if `a === b`.","kind":"function","name":"customSort","params":[{"type":{"names":["function"]},"description":"The custom sort function.","name":"sortHandler"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the sortHandler is called.","name":"context"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#customSort","scope":"instance","inherits":"Phaser.Group#customSort","inherited":true,"___s":true},{"meta":{"range":[67535,67766],"filename":"Group.js","lineno":1919,"path":"src\\core"},"description":"An internal helper function for the sort process.","kind":"function","name":"ascendingSortHandler","access":"protected","params":[{"type":{"names":["object"]},"description":"The first object being sorted.","name":"a"},{"type":{"names":["object"]},"description":"The second object being sorted.","name":"b"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#ascendingSortHandler","scope":"instance","inherits":"Phaser.Group#ascendingSortHandler","inherited":true,"___s":true},{"meta":{"range":[68180,68412],"filename":"Group.js","lineno":1951,"path":"src\\core"},"description":"An internal helper function for the sort process.","kind":"function","name":"descendingSortHandler","access":"protected","params":[{"type":{"names":["object"]},"description":"The first object being sorted.","name":"a"},{"type":{"names":["object"]},"description":"The second object being sorted.","name":"b"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#descendingSortHandler","scope":"instance","inherits":"Phaser.Group#descendingSortHandler","inherited":true,"___s":true},{"meta":{"range":[68717,70530],"filename":"Group.js","lineno":1976,"path":"src\\core"},"description":"Iterates over the children of the group performing one of several actions for matched children.\r\rA child is considered a match when it has a property, named `key`, whose value is equal to `value`\raccording to a strict equality comparison.\r\rThe result depends on the `returnType`:\r\r- {@link Phaser.Group.RETURN_TOTAL RETURN_TOTAL}:\r    The callback, if any, is applied to all matching children. The number of matched children is returned.\r- {@link Phaser.Group.RETURN_NONE RETURN_NONE}:\r    The callback, if any, is applied to all matching children. No value is returned.\r- {@link Phaser.Group.RETURN_CHILD RETURN_CHILD}:\r    The callback, if any, is applied to the *first* matching child and the *first* matched child is returned.\r    If there is no matching child then null is returned.\r\rIf `args` is specified it must be an array. The matched child will be assigned to the first\relement and the entire array will be applied to the callback function.","kind":"function","name":"iterate","params":[{"type":{"names":["string"]},"description":"The child property to check, i.e. 'exists', 'alive', 'health'","name":"key"},{"type":{"names":["any"]},"description":"A child matches if `child[key] === value` is true.","name":"value"},{"type":{"names":["integer"]},"description":"How to iterate the children and what to return.","name":"returnType"},{"type":{"names":["function"]},"optional":true,"defaultvalue":null,"description":"Optional function that will be called on each matching child. The matched child is supplied as the first argument.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"},{"type":{"names":["Array.<any>"]},"optional":true,"defaultvalue":"(none)","description":"The arguments supplied to to the callback; the first array index (argument) will be replaced with the matched child.","name":"args"}],"returns":[{"type":{"names":["any"]},"description":"Returns either an integer (for RETURN_TOTAL), the first matched child (for RETURN_CHILD), or null."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#iterate","scope":"instance","inherits":"Phaser.Group#iterate","inherited":true,"___s":true},{"meta":{"range":[72077,73685],"filename":"Group.js","lineno":2071,"path":"src\\core"},"description":"Get the first display object that exists, or doesn't exist.\r\rYou can use the optional argument `createIfNull` to create a new Game Object if none matching your exists argument were found in this Group.\r\rIt works by calling `Group.create` passing it the parameters given to this method, and returning the new child.\r\rIf a child *was* found , `createIfNull` is `false` and you provided the additional arguments then the child\rwill be reset and/or have a new texture loaded on it. This is handled by `Group.resetChild`.","kind":"function","name":"getFirstExists","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true, find the first existing child; otherwise find the first non-existing child.","name":"exists"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `true` and no alive children are found a new one is created.","name":"createIfNull"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The first child, or `null` if none found and `createIfNull` was false."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#getFirstExists","scope":"instance","inherits":"Phaser.Group#getFirstExists","inherited":true,"___s":true},{"meta":{"range":[74132,75655],"filename":"Group.js","lineno":2105,"path":"src\\core"},"description":"Get the first child that is alive (`child.alive === true`).\r\rThis is handy for choosing a squad leader, etc.\r\rYou can use the optional argument `createIfNull` to create a new Game Object if no alive ones were found in this Group.\r\rIt works by calling `Group.create` passing it the parameters given to this method, and returning the new child.\r\rIf a child *was* found , `createIfNull` is `false` and you provided the additional arguments then the child\rwill be reset and/or have a new texture loaded on it. This is handled by `Group.resetChild`.","kind":"function","name":"getFirstAlive","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `true` and no alive children are found a new one is created.","name":"createIfNull"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The alive dead child, or `null` if none found and `createIfNull` was false."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#getFirstAlive","scope":"instance","inherits":"Phaser.Group#getFirstAlive","inherited":true,"___s":true},{"meta":{"range":[76012,77578],"filename":"Group.js","lineno":2135,"path":"src\\core"},"description":"Get the first child that is dead (`child.alive === false`).\r\rThis is handy for checking if everything has been wiped out and adding to the pool as needed.\r\rYou can use the optional argument `createIfNull` to create a new Game Object if no dead ones were found in this Group.\r\rIt works by calling `Group.create` passing it the parameters given to this method, and returning the new child.\r\rIf a child *was* found , `createIfNull` is `false` and you provided the additional arguments then the child\rwill be reset and/or have a new texture loaded on it. This is handled by `Group.resetChild`.","kind":"function","name":"getFirstDead","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If `true` and no dead children are found a new one is created.","name":"createIfNull"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The first dead child, or `null` if none found and `createIfNull` was false."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#getFirstDead","scope":"instance","inherits":"Phaser.Group#getFirstDead","inherited":true,"___s":true},{"meta":{"range":[77935,79182],"filename":"Group.js","lineno":2165,"path":"src\\core"},"description":"Takes a child and if the `x` and `y` arguments are given it calls `child.reset(x, y)` on it.\r\rIf the `key` and optionally the `frame` arguments are given, it calls `child.loadTexture(key, frame)` on it.\r\rThe two operations are separate. For example if you just wish to load a new texture then pass `null` as the x and y values.","kind":"function","name":"resetChild","params":[{"type":{"names":["DisplayObject"]},"description":"The child to reset and/or load the texture on.","name":"child"},{"type":{"names":["number"]},"optional":true,"description":"The x coordinate to reset the child to. The value is in relation to the group.x point.","name":"x"},{"type":{"names":["number"]},"optional":true,"description":"The y coordinate to reset the child to. The value is in relation to the group.y point.","name":"y"},{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"optional":true,"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"}],"returns":[{"type":{"names":["DisplayObject"]},"description":"The child that was reset: usually a {@link Phaser.Sprite}."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#resetChild","scope":"instance","inherits":"Phaser.Group#resetChild","inherited":true,"___s":true},{"meta":{"range":[79595,79813],"filename":"Group.js","lineno":2204,"path":"src\\core"},"description":"Return the child at the top of this group.\r\rThe top child is the child displayed (rendered) above every other child.","kind":"function","name":"getTop","returns":[{"type":{"names":["any"]},"description":"The child at the top of the Group."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#getTop","scope":"instance","inherits":"Phaser.Group#getTop","inherited":true,"___s":true},{"meta":{"range":[79978,80212],"filename":"Group.js","lineno":2221,"path":"src\\core"},"description":"Returns the child at the bottom of this group.\r\rThe bottom child the child being displayed (rendered) below every other child.","kind":"function","name":"getBottom","returns":[{"type":{"names":["any"]},"description":"The child at the bottom of the Group."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#getBottom","scope":"instance","inherits":"Phaser.Group#getBottom","inherited":true,"___s":true},{"meta":{"range":[80357,81660],"filename":"Group.js","lineno":2238,"path":"src\\core"},"description":"Get the closest child to given Object, with optional callback to filter children.\r\rThis can be a Sprite, Group, Image or any object with public x and y properties.\r\r'close' is determined by the distance from the objects `x` and `y` properties compared to the childs `x` and `y` properties.\r\rYou can use the optional `callback` argument to apply your own filter to the distance checks.\rIf the child is closer then the previous child, it will be sent to `callback` as the first argument,\rwith the distance as the second. The callback should return `true` if it passes your \rfiltering criteria, otherwise it should return `false`.","kind":"function","name":"getClosestTo","params":[{"type":{"names":["any"]},"description":"The object used to determine the distance. This can be a Sprite, Group, Image or any object with public x and y properties.","name":"object"},{"type":{"names":["function"]},"optional":true,"description":"The function that each child will be evaluated against. Each child of the group will be passed to it as its first parameter, with the distance as the second. It should return `true` if the child passes the matching criteria.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"}],"returns":[{"type":{"names":["any"]},"description":"The child closest to given object, or `null` if no child was found."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#getClosestTo","scope":"instance","inherits":"Phaser.Group#getClosestTo","inherited":true,"___s":true},{"meta":{"range":[82322,83655],"filename":"Group.js","lineno":2282,"path":"src\\core"},"description":"Get the child furthest away from the given Object, with optional callback to filter children.\r\rThis can be a Sprite, Group, Image or any object with public x and y properties.\r\r'furthest away' is determined by the distance from the objects `x` and `y` properties compared to the childs `x` and `y` properties.\r\rYou can use the optional `callback` argument to apply your own filter to the distance checks.\rIf the child is closer then the previous child, it will be sent to `callback` as the first argument,\rwith the distance as the second. The callback should return `true` if it passes your \rfiltering criteria, otherwise it should return `false`.","kind":"function","name":"getFurthestFrom","params":[{"type":{"names":["any"]},"description":"The object used to determine the distance. This can be a Sprite, Group, Image or any object with public x and y properties.","name":"object"},{"type":{"names":["function"]},"optional":true,"description":"The function that each child will be evaluated against. Each child of the group will be passed to it as its first parameter, with the distance as the second. It should return `true` if the child passes the matching criteria.","name":"callback"},{"type":{"names":["object"]},"optional":true,"description":"The context in which the function should be called (usually 'this').","name":"callbackContext"}],"returns":[{"type":{"names":["any"]},"description":"The child furthest from the given object, or `null` if no child was found."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#getFurthestFrom","scope":"instance","inherits":"Phaser.Group#getFurthestFrom","inherited":true,"___s":true},{"meta":{"range":[84305,84465],"filename":"Group.js","lineno":2326,"path":"src\\core"},"description":"Get the number of living children in this group.","kind":"function","name":"countLiving","returns":[{"type":{"names":["integer"]},"description":"The number of children flagged as alive."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#countLiving","scope":"instance","inherits":"Phaser.Group#countLiving","inherited":true,"___s":true},{"meta":{"range":[84597,84752],"filename":"Group.js","lineno":2338,"path":"src\\core"},"description":"Get the number of dead children in this group.","kind":"function","name":"countDead","returns":[{"type":{"names":["integer"]},"description":"The number of children flagged as dead."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#countDead","scope":"instance","inherits":"Phaser.Group#countDead","inherited":true,"___s":true},{"meta":{"range":[84883,85214],"filename":"Group.js","lineno":2350,"path":"src\\core"},"description":"Returns a random child from the group.","kind":"function","name":"getRandom","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"Offset from the front of the group (lowest child).","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"(to top)","description":"Restriction on the number of values you want to randomly select from.","name":"length"}],"returns":[{"type":{"names":["any"]},"description":"A random child of this Group."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#getRandom","scope":"instance","inherits":"Phaser.Group#getRandom","inherited":true,"___s":true},{"meta":{"range":[85558,86132],"filename":"Group.js","lineno":2372,"path":"src\\core"},"description":"Returns a random child from the Group that has `exists` set to `true`.\r\rOptionally you can specify a start and end index. For example if this Group had 100 children,\rand you set `startIndex` to 0 and `endIndex` to 50, it would return a random child from only\rthe first 50 children in the Group.","kind":"function","name":"getRandomExists","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The first child index to start the search from.","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"description":"The last child index to search up to.","name":"endIndex"}],"returns":[{"type":{"names":["any"]},"description":"A random child of this Group that exists."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#getRandomExists","scope":"instance","inherits":"Phaser.Group#getRandomExists","inherited":true,"___s":true},{"meta":{"range":[86327,87278],"filename":"Group.js","lineno":2392,"path":"src\\core"},"description":"Returns all children in this Group.\r\rYou can optionally specify a matching criteria using the `property` and `value` arguments.\r\rFor example: `getAll('exists', true)` would return only children that have their exists property set.\r\rOptionally you can specify a start and end index. For example if this Group had 100 children,\rand you set `startIndex` to 0 and `endIndex` to 50, it would return a random child from only\rthe first 50 children in the Group.","kind":"function","name":"getAll","params":[{"type":{"names":["string"]},"optional":true,"description":"An optional property to test against the value argument.","name":"property"},{"type":{"names":["any"]},"optional":true,"description":"If property is set then Child.property must strictly equal this value to be included in the results.","name":"value"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"The first child index to start the search from.","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"description":"The last child index to search up until.","name":"endIndex"}],"returns":[{"type":{"names":["any"]},"description":"A random existing child of this Group."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#getAll","scope":"instance","inherits":"Phaser.Group#getAll","inherited":true,"___s":true},{"meta":{"range":[87758,88400],"filename":"Group.js","lineno":2431,"path":"src\\core"},"description":"Removes the given child from this group.\r\rThis will dispatch an `onRemovedFromGroup` event from the child (if it has one), and optionally destroy the child.\r\rIf the group cursor was referring to the removed child it is updated to refer to the next child.","kind":"function","name":"remove","params":[{"type":{"names":["any"]},"description":"The child to remove.","name":"child"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true `destroy` will be invoked on the removed child.","name":"destroy"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the the child will not dispatch the `onRemovedFromGroup` event.","name":"silent"}],"returns":[{"type":{"names":["boolean"]},"description":"true if the child was removed from this group, otherwise false."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#remove","scope":"instance","inherits":"Phaser.Group#remove","inherited":true,"___s":true},{"meta":{"range":[89108,89491],"filename":"Group.js","lineno":2479,"path":"src\\core"},"description":"Moves all children from this Group to the Group given.","kind":"function","name":"moveAll","params":[{"type":{"names":["Phaser.Group"]},"description":"The new Group to which the children will be moved to.","name":"group"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch the `onAddedToGroup` event for the new Group.","name":"silent"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"The Group to which all the children were moved."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#moveAll","scope":"instance","inherits":"Phaser.Group#moveAll","inherited":true,"___s":true},{"meta":{"range":[89905,90715],"filename":"Group.js","lineno":2508,"path":"src\\core"},"description":"Removes all children from this Group, but does not remove the group from its parent.\r\rThe children can be optionally destroyed as they are removed.\r\rYou can also optionally also destroy the BaseTexture the Child is using. Be careful if you've\rmore than one Game Object sharing the same BaseTexture.","kind":"function","name":"removeAll","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true `destroy` will be invoked on each removed child.","name":"destroy"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch their `onRemovedFromGroup` events.","name":"silent"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true, and if the `destroy` argument is also true, the BaseTexture belonging to the Child is also destroyed. Note that if another Game Object is sharing the same BaseTexture it will invalidate it.","name":"destroyTexture"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#removeAll","scope":"instance","inherits":"Phaser.Group#removeAll","inherited":true,"___s":true},{"meta":{"range":[91534,92171],"filename":"Group.js","lineno":2556,"path":"src\\core"},"description":"Removes all children from this group whose index falls beteen the given startIndex and endIndex values.","kind":"function","name":"removeBetween","params":[{"type":{"names":["integer"]},"description":"The index to start removing children from.","name":"startIndex"},{"type":{"names":["integer"]},"optional":true,"description":"The index to stop removing children at. Must be higher than startIndex. If undefined this method will remove all children between startIndex and the end of the group.","name":"endIndex"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true `destroy` will be invoked on each removed child.","name":"destroy"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If true the children will not dispatch their `onRemovedFromGroup` events.","name":"silent"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#removeBetween","scope":"instance","inherits":"Phaser.Group#removeBetween","inherited":true,"___s":true},{"meta":{"range":[93215,93635],"filename":"Group.js","lineno":2611,"path":"src\\core"},"description":"Destroys this group.\r\rRemoves all children, then removes this group from its parent and nulls references.","kind":"function","name":"destroy","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If true `destroy` will be invoked on each removed child.","name":"destroyChildren"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"A 'soft destroy' (set to true) doesn't remove this group from its parent or null the game reference. Set to false and it does.","name":"soft"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#destroy","scope":"instance","inherits":"Phaser.Group#destroy","inherited":true,"___s":true},{"meta":{"range":[94267,94398],"filename":"Group.js","lineno":2648,"path":"src\\core"},"description":"Total number of existing children in the group.","name":"total","properties":[{"type":{"names":["integer"]},"name":"total"}],"readonly":true,"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#total","scope":"instance","kind":"member","inherits":"Phaser.Group#total","inherited":true,"___s":true},{"meta":{"range":[94577,94738],"filename":"Group.js","lineno":2665,"path":"src\\core"},"description":"Total number of children in this group, regardless of exists/alive status.","name":"length","properties":[{"type":{"names":["integer"]},"name":"length"}],"readonly":true,"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#length","scope":"instance","kind":"member","inherits":"Phaser.Group#length","inherited":true,"___s":true},{"meta":{"range":[94883,95247],"filename":"Group.js","lineno":2682,"path":"src\\core"},"description":"The angle of rotation of the group container, in degrees.\r\rThis adjusts the group itself by modifying its local rotation transform.\r\rThis has no impact on the rotation/angle properties of the children, but it will update their worldTransform\rand on-screen orientation and position.","name":"angle","properties":[{"type":{"names":["number"]},"name":"angle"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#angle","scope":"instance","kind":"member","inherits":"Phaser.Group#angle","inherited":true,"___s":true},{"meta":{"range":[95493,95718],"filename":"Group.js","lineno":2705,"path":"src\\core"},"description":"The center x coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"centerX","properties":[{"type":{"names":["number"]},"name":"centerX"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#centerX","scope":"instance","kind":"member","inherits":"Phaser.Group#centerX","inherited":true,"___s":true},{"meta":{"range":[96056,96281],"filename":"Group.js","lineno":2733,"path":"src\\core"},"description":"The center y coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"centerY","properties":[{"type":{"names":["number"]},"name":"centerY"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#centerY","scope":"instance","kind":"member","inherits":"Phaser.Group#centerY","inherited":true,"___s":true},{"meta":{"range":[96620,96835],"filename":"Group.js","lineno":2761,"path":"src\\core"},"description":"The left coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"left","properties":[{"type":{"names":["number"]},"name":"left"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#left","scope":"instance","kind":"member","inherits":"Phaser.Group#left","inherited":true,"___s":true},{"meta":{"range":[97151,97368],"filename":"Group.js","lineno":2789,"path":"src\\core"},"description":"The right coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"right","properties":[{"type":{"names":["number"]},"name":"right"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#right","scope":"instance","kind":"member","inherits":"Phaser.Group#right","inherited":true,"___s":true},{"meta":{"range":[97698,97909],"filename":"Group.js","lineno":2817,"path":"src\\core"},"description":"The top coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"top","properties":[{"type":{"names":["number"]},"name":"top"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#top","scope":"instance","kind":"member","inherits":"Phaser.Group#top","inherited":true,"___s":true},{"meta":{"range":[98225,98446],"filename":"Group.js","lineno":2845,"path":"src\\core"},"description":"The bottom coordinate of this Group.\r\rIt is derived by calling `getBounds`, calculating the Groups dimensions based on its\rvisible children.","name":"bottom","properties":[{"type":{"names":["number"]},"name":"bottom"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#bottom","scope":"instance","kind":"member","inherits":"Phaser.Group#bottom","inherited":true,"___s":true},{"meta":{"range":[98779,101436],"filename":"Group.js","lineno":2873,"path":"src\\core"},"description":"Aligns this Group within another Game Object, or Rectangle, known as the\r'container', to one of 9 possible positions.\r\rThe container must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Groups within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Group to another Game Object does **not** make it a child of\rthe container. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, \r`Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, \r`Phaser.BOTTOM_CENTER` and `Phaser.BOTTOM_RIGHT`.\r\rGroups are placed in such a way that their _bounds_ align with the\rcontainer, taking into consideration rotation and scale of its children.\rThis allows you to neatly align Groups, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Group. For example:\r\r`group.alignIn(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `group` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the containers bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the container bounds by that amount, and providing a positive\rone expands it.","kind":"function","name":"alignIn","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Group to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"container"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"This Group."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#alignIn","scope":"instance","inherits":"Phaser.Group#alignIn","inherited":true,"___s":true},{"meta":{"range":[101522,104305],"filename":"Group.js","lineno":2915,"path":"src\\core"},"description":"Aligns this Group to the side of another Game Object, or Rectangle, known as the\r'parent', in one of 11 possible positions.\r\rThe parent must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Groups within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Group to another Game Object does **not** make it a child of\rthe parent. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, \r`Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, \r`Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` \rand `Phaser.BOTTOM_RIGHT`.\r\rGroups are placed in such a way that their _bounds_ align with the\rparent, taking into consideration rotation and scale of the children.\rThis allows you to neatly align Groups, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Group. For example:\r\r`group.alignTo(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `group` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the parents bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the parent bounds by that amount, and providing a positive\rone expands it.","kind":"function","name":"alignTo","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Group to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"parent"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, `Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, `Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Phaser.Group"]},"description":"This Group."}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#alignTo","scope":"instance","inherits":"Phaser.Group#alignTo","inherited":true,"___s":true},{"meta":{"range":[104771,105080],"filename":"Group.js","lineno":2969,"path":"src\\core"},"description":"The x coordinate of the group container.\r\rYou can adjust the group container itself by modifying its coordinates.\rThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position.","name":"x","properties":[{"type":{"names":["number"]},"name":"x"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#x","scope":"instance","kind":"member","inherits":"Phaser.Group#x","inherited":true,"___s":true},{"meta":{"range":[105084,105393],"filename":"Group.js","lineno":2978,"path":"src\\core"},"description":"The y coordinate of the group container.\r\rYou can adjust the group container itself by modifying its coordinates.\rThis will have no impact on the x/y coordinates of its children, but it will update their worldTransform and on-screen position.","name":"y","properties":[{"type":{"names":["number"]},"name":"y"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#y","scope":"instance","kind":"member","inherits":"Phaser.Group#y","inherited":true,"___s":true},{"meta":{"range":[105397,105735],"filename":"Group.js","lineno":2987,"path":"src\\core"},"description":"The angle of rotation of the group container, in radians.\r\rThis will adjust the group container itself by modifying its rotation.\rThis will have no impact on the rotation value of its children, but it will update their worldTransform and on-screen position.","name":"rotation","properties":[{"type":{"names":["number"]},"name":"rotation"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#rotation","scope":"instance","kind":"member","inherits":"Phaser.Group#rotation","inherited":true,"___s":true},{"meta":{"range":[105739,105908],"filename":"Group.js","lineno":2996,"path":"src\\core"},"description":"The visible state of the group. Non-visible Groups and all of their children are not rendered.","name":"visible","properties":[{"type":{"names":["boolean"]},"name":"visible"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#visible","scope":"instance","kind":"member","inherits":"Phaser.Group#visible","inherited":true,"___s":true},{"meta":{"range":[105912,106021],"filename":"Group.js","lineno":3003,"path":"src\\core"},"description":"The alpha value of the group container.","name":"alpha","properties":[{"type":{"names":["number"]},"name":"alpha"}],"memberof":"Phaser.Physics.P2.BodyDebug","longname":"Phaser.Physics.P2.BodyDebug#alpha","scope":"instance","kind":"member","inherits":"Phaser.Group#alpha","inherited":true,"___s":true},{"meta":{"range":[580,598],"filename":"DisplayObjectContainer.js","lineno":24,"path":"src\\pixi\\display"},"description":"[read-only] The array of children of this container.","properties":[{"name":"children"}],"type":{"names":["Array(DisplayObject)"]},"readonly":true,"name":"children","longname":"Phaser.Physics.P2.BodyDebug#children","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"PIXI.DisplayObjectContainer#children","inherited":true,"___s":true},{"meta":{"range":[1045,1074],"filename":"DisplayObjectContainer.js","lineno":35,"path":"src\\pixi\\display"},"description":"If `ignoreChildInput`  is `false` it will allow this objects _children_ to be considered as valid for Input events.\r\rIf this property is `true` then the children will _not_ be considered as valid for Input events.\r\rNote that this property isn't recursive: only immediate children are influenced, it doesn't scan further down.","properties":[{"type":{"names":["boolean"]},"name":"ignoreChildInput"}],"defaultvalue":false,"name":"ignoreChildInput","longname":"Phaser.Physics.P2.BodyDebug#ignoreChildInput","kind":"member","memberof":"Phaser.Physics.P2.BodyDebug","scope":"instance","inherits":"PIXI.DisplayObjectContainer#ignoreChildInput","inherited":true,"___s":true},{"meta":{"range":[2435,2460],"filename":"Sprite.js","lineno":55,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const type of this object.","name":"type"}],"readonly":true,"name":"type","longname":"Phaser.Bullet#type","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Sprite#type","inherited":true,"___s":true},{"meta":{"range":[2587,2619],"filename":"Sprite.js","lineno":61,"path":"src\\gameobjects"},"properties":[{"type":{"names":["number"]},"description":"The const physics body type of this object.","name":"physicsType"}],"readonly":true,"name":"physicsType","longname":"Phaser.Bullet#physicsType","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Sprite#physicsType","inherited":true,"___s":true},{"meta":{"range":[3771,3991],"filename":"Sprite.js","lineno":107,"path":"src\\gameobjects"},"description":"Automatically called by World.preUpdate.","kind":"function","memberof":"Phaser.Bullet","returns":[{"type":{"names":["boolean"]},"description":"True if the Sprite was rendered, otherwise false."}],"name":"preUpdate","longname":"Phaser.Bullet#preUpdate","scope":"instance","inherits":"Phaser.Sprite#preUpdate","inherited":true,"___s":true},{"meta":{"range":[774,804],"filename":"Sprite.js","lineno":26,"path":"src\\pixi\\display"},"description":"The anchor sets the origin point of the texture.\rThe default is 0,0 this means the texture's origin is the top left\rSetting than anchor to 0.5,0.5 means the textures origin is centered\rSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner","properties":[{"name":"anchor"}],"type":{"names":["Point"]},"name":"anchor","longname":"Phaser.Bullet#anchor","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"PIXI.Sprite#anchor","inherited":true,"___s":true},{"meta":{"range":[932,983],"filename":"Sprite.js","lineno":34,"path":"src\\pixi\\display"},"description":"The texture that the sprite is using","properties":[{"name":"texture"}],"type":{"names":["Texture"]},"name":"texture","longname":"Phaser.Bullet#texture","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"PIXI.Sprite#texture","inherited":true,"___s":true},{"meta":{"range":[1569,1589],"filename":"Sprite.js","lineno":61,"path":"src\\pixi\\display"},"description":"The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.","properties":[{"name":"tint"}],"type":{"names":["Number"]},"defaultvalue":"0xFFFFFF","name":"tint","longname":"Phaser.Bullet#tint","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"PIXI.Sprite#tint","inherited":true,"___s":true},{"meta":{"range":[2061,2086],"filename":"Sprite.js","lineno":80,"path":"src\\pixi\\display"},"description":"A canvas that contains the tinted version of the Sprite (in Canvas mode, WebGL doesn't populate this)","properties":[{"name":"tintedTexture"}],"type":{"names":["Canvas"]},"defaultvalue":"null","name":"tintedTexture","longname":"Phaser.Bullet#tintedTexture","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"PIXI.Sprite#tintedTexture","inherited":true,"___s":true},{"meta":{"range":[2456,2495],"filename":"Sprite.js","lineno":91,"path":"src\\pixi\\display"},"description":"The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode.\r\rWarning: You cannot have a blend mode and a filter active on the same Sprite. Doing so will render the sprite invisible.","properties":[{"name":"blendMode"}],"type":{"names":["Number"]},"defaultvalue":"PIXI.blendModes.NORMAL;","name":"blendMode","longname":"Phaser.Bullet#blendMode","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"PIXI.Sprite#blendMode","inherited":true,"___s":true},{"meta":{"range":[2714,2732],"filename":"Sprite.js","lineno":101,"path":"src\\pixi\\display"},"description":"The shader that will be used to render this Sprite.\rSet to null to remove a current shader.","properties":[{"name":"shader"}],"type":{"names":["AbstractFilter"]},"defaultvalue":"null","name":"shader","longname":"Phaser.Bullet#shader","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"PIXI.Sprite#shader","inherited":true,"___s":true},{"meta":{"range":[2922,2940],"filename":"Sprite.js","lineno":110,"path":"src\\pixi\\display"},"description":"Controls if this Sprite is processed by the core Phaser game loops and Group loops.","properties":[{"name":"exists"}],"type":{"names":["Boolean"]},"defaultvalue":"true","name":"exists","longname":"Phaser.Bullet#exists","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"PIXI.Sprite#exists","inherited":true,"overrides":"Phaser.Sprite#exists","___s":true},{"meta":{"range":[3048,3058],"filename":"Core.js","lineno":142,"path":"src\\gameobjects\\components"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"name":"game","longname":"Phaser.Bullet#game","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Core#game","inherited":true,"___s":true},{"meta":{"range":[3279,3287],"filename":"Core.js","lineno":150,"path":"src\\gameobjects\\components"},"description":"A user defined name given to this Game Object.\rThis value isn't ever used internally by Phaser, it is meant as a game level property.","properties":[{"type":{"names":["string"]},"name":"name"}],"defaultvalue":"","name":"name","longname":"Phaser.Bullet#name","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Core#name","inherited":true,"___s":true},{"meta":{"range":[3651,3659],"filename":"Core.js","lineno":160,"path":"src\\gameobjects\\components"},"description":"An empty Object that belongs to this Game Object.\rThis value isn't ever used internally by Phaser, but may be used by your own code, or\rby Phaser Plugins, to store data that needs to be associated with the Game Object,\rwithout polluting the Game Object directly.","properties":[{"type":{"names":["Object"]},"name":"data"}],"defaultvalue":"{}","defaultvaluetype":"object","name":"data","longname":"Phaser.Bullet#data","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Core#data","inherited":true,"overrides":"Phaser.Sprite#data","___s":true},{"meta":{"range":[3794,3808],"filename":"Core.js","lineno":167,"path":"src\\gameobjects\\components"},"description":"The components this Game Object has installed.","properties":[{"type":{"names":["object"]},"name":"components"}],"access":"protected","name":"components","longname":"Phaser.Bullet#components","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Core#components","inherited":true,"___s":true},{"meta":{"range":[4202,4206],"filename":"Core.js","lineno":177,"path":"src\\gameobjects\\components"},"description":"The z depth of this Game Object within its parent Group.\rNo two objects in a Group can have the same z value.\rThis value is adjusted automatically whenever the Group hierarchy changes.\rIf you wish to re-order the layering of a Game Object then see methods like Group.moveUp or Group.bringToTop.","properties":[{"type":{"names":["number"]},"name":"z"}],"readonly":true,"name":"z","longname":"Phaser.Bullet#z","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Core#z","inherited":true,"___s":true},{"meta":{"range":[4484,4501],"filename":"Core.js","lineno":185,"path":"src\\gameobjects\\components"},"description":"All Phaser Game Objects have an Events class which contains all of the events that are dispatched when certain things happen to this\rGame Object, or any of its components.","see":["Phaser.Events"],"properties":[{"type":{"names":["Phaser.Events"]},"name":"events"}],"name":"events","longname":"Phaser.Bullet#events","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Core#events","inherited":true,"___s":true},{"meta":{"range":[4815,4836],"filename":"Core.js","lineno":193,"path":"src\\gameobjects\\components"},"description":"If the Game Object is enabled for animation (such as a Phaser.Sprite) this is a reference to its AnimationManager instance.\rThrough it you can create, play, pause and stop animations.","see":["Phaser.AnimationManager"],"properties":[{"type":{"names":["Phaser.AnimationManager"]},"name":"animations"}],"name":"animations","longname":"Phaser.Bullet#animations","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Core#animations","inherited":true,"___s":true},{"meta":{"range":[5559,5566],"filename":"Core.js","lineno":203,"path":"src\\gameobjects\\components"},"description":"The key of the image or texture used by this Game Object during rendering.\rIf it is a string it's the string used to retrieve the texture from the Phaser Image Cache.\rIt can also be an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.\rIf a Game Object is created without a key it is automatically assigned the key `__default` which is a 32x32 transparent PNG stored within the Cache.\rIf a Game Object is given a key which doesn't exist in the Image Cache it is re-assigned the key `__missing` which is a 32x32 PNG of a green box with a line through it.","properties":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"name":"key"}],"name":"key","longname":"Phaser.Bullet#key","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Core#key","inherited":true,"___s":true},{"meta":{"range":[5882,5893],"filename":"Core.js","lineno":211,"path":"src\\gameobjects\\components"},"description":"The world coordinates of this Game Object in pixels.\rDepending on where in the display list this Game Object is placed this value can differ from `position`, \rwhich contains the x/y coordinates relative to the Game Objects parent.","properties":[{"type":{"names":["Phaser.Point"]},"name":"world"}],"name":"world","longname":"Phaser.Bullet#world","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Core#world","inherited":true,"___s":true},{"meta":{"range":[6029,6041],"filename":"Core.js","lineno":218,"path":"src\\gameobjects\\components"},"description":"A debug flag designed for use with `Game.enableStep`.","properties":[{"type":{"names":["boolean"]},"name":"debug"}],"defaultvalue":false,"name":"debug","longname":"Phaser.Bullet#debug","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Core#debug","inherited":true,"___s":true},{"meta":{"range":[6204,6226],"filename":"Core.js","lineno":225,"path":"src\\gameobjects\\components"},"description":"The position the Game Object was located in the previous frame.","properties":[{"type":{"names":["Phaser.Point"]},"name":"previousPosition"}],"readonly":true,"name":"previousPosition","longname":"Phaser.Bullet#previousPosition","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Core#previousPosition","inherited":true,"___s":true},{"meta":{"range":[6406,6425],"filename":"Core.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"The rotation the Game Object was in set to in the previous frame. Value is in radians.","properties":[{"type":{"names":["number"]},"name":"previousRotation"}],"readonly":true,"name":"previousRotation","longname":"Phaser.Bullet#previousRotation","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Core#previousRotation","inherited":true,"___s":true},{"meta":{"range":[6720,6736],"filename":"Core.js","lineno":240,"path":"src\\gameobjects\\components"},"description":"The render order ID is used internally by the renderer and Input Manager and should not be modified.\rThis property is mostly used internally by the renderers, but is exposed for the use of plugins.","properties":[{"type":{"names":["number"]},"name":"renderOrderID"}],"readonly":true,"name":"renderOrderID","longname":"Phaser.Bullet#renderOrderID","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Core#renderOrderID","inherited":true,"___s":true},{"meta":{"range":[7053,7064],"filename":"Core.js","lineno":248,"path":"src\\gameobjects\\components"},"description":"A Game Object is considered `fresh` if it has just been created or reset and is yet to receive a renderer transform update.\rThis property is mostly used internally by the physics systems, but is exposed for the use of plugins.","properties":[{"type":{"names":["boolean"]},"name":"fresh"}],"readonly":true,"name":"fresh","longname":"Phaser.Bullet#fresh","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Core#fresh","inherited":true,"___s":true},{"meta":{"range":[7518,7539],"filename":"Core.js","lineno":259,"path":"src\\gameobjects\\components"},"description":"A Game Object is that is pendingDestroy is flagged to have its destroy method called on the next logic update.\rYou can set it directly to allow you to flag an object to be destroyed on its next update.\r\rThis is extremely useful if you wish to destroy an object from within one of its own callbacks \rsuch as with Buttons or other Input events.","properties":[{"type":{"names":["boolean"]},"name":"pendingDestroy"}],"name":"pendingDestroy","longname":"Phaser.Bullet#pendingDestroy","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Core#pendingDestroy","inherited":true,"___s":true},{"meta":{"range":[9388,9417],"filename":"Core.js","lineno":328,"path":"src\\gameobjects\\components"},"description":"Override this method in your own custom objects to handle any update requirements.\rIt is called immediately after `preUpdate` and before `postUpdate`.\rRemember if this Game Object has any children you should call update on those too.","kind":"function","name":"update","longname":"Phaser.Bullet#update","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Core#update","inherited":true,"overrides":"Phaser.Sprite#update","___s":true},{"meta":{"range":[9544,10055],"filename":"Core.js","lineno":338,"path":"src\\gameobjects\\components"},"description":"Internal method called by the World postUpdate cycle.","kind":"function","access":"protected","name":"postUpdate","longname":"Phaser.Bullet#postUpdate","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Core#postUpdate","inherited":true,"___s":true},{"meta":{"range":[1110,1382],"filename":"Angle.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"The angle property is the rotation of the Game Object in *degrees* from its original orientation.\r\rValues from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\r\rValues outside this range are added to or subtracted from 360 to obtain a value within the range. \rFor example, the statement player.angle = 450 is the same as player.angle = 90.\r\rIf you wish to work in radians instead of degrees you can use the property `rotation` instead. \rWorking in radians is slightly faster as it doesn't have to perform any calculations.","properties":[{"type":{"names":["number"]},"name":"angle"}],"name":"angle","longname":"Phaser.Bullet#angle","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Angle#angle","inherited":true,"___s":true},{"meta":{"range":[1545,1745],"filename":"Animation.js","lineno":31,"path":"src\\gameobjects\\components"},"description":"Plays an Animation.\r\rThe animation should have previously been created via `animations.add`.\r\rIf the animation is already playing calling this again won't do anything.\rIf you need to reset an already running animation do so directly on the Animation object itself or via `AnimationManager.stop`.","kind":"function","params":[{"type":{"names":["string"]},"description":"The name of the animation to be played, e.g. \"fire\", \"walk\", \"jump\". Must have been previously created via 'AnimationManager.add'.","name":"name"},{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"The framerate to play the animation at. The speed is given in frames per second. If not provided the previously set frameRate of the Animation is used.","name":"frameRate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the animation be looped after playback. If not provided the previously set loop value of the Animation is used.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set to true when the animation completes (only happens if loop=false) the parent Sprite will be killed.","name":"killOnComplete"}],"returns":[{"type":{"names":["Phaser.Animation"]},"description":"A reference to playing Animation."}],"name":"play","longname":"Phaser.Bullet#play","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Animation#play","inherited":true,"___s":true},{"meta":{"range":[1129,1144],"filename":"AutoCull.js","lineno":28,"path":"src\\gameobjects\\components"},"description":"A Game Object with `autoCull` set to true will check its bounds against the World Camera every frame.\rIf it is not intersecting the Camera bounds at any point then it has its `renderable` property set to `false`.\rThis keeps the Game Object alive and still processing updates, but forces it to skip the render step entirely.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"autoCull"}],"defaultvalue":false,"name":"autoCull","longname":"Phaser.Bullet#autoCull","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.AutoCull#autoCull","inherited":true,"___s":true},{"meta":{"range":[1402,1809],"filename":"AutoCull.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds intersect with the Game Camera bounds.\rReturns `true` if they do, otherwise `false` if fully outside of the Cameras bounds.","properties":[{"type":{"names":["boolean"]},"name":"inCamera"}],"readonly":true,"name":"inCamera","longname":"Phaser.Bullet#inCamera","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.AutoCull#inCamera","inherited":true,"___s":true},{"meta":{"range":[661,773],"filename":"Bounds.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its x coordinate.\rThis is the same as `width * anchor.x`.\rIt will only be > 0 if anchor.x is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetX"}],"readonly":true,"name":"offsetX","longname":"Phaser.Bullet#offsetX","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Bounds#offsetX","inherited":true,"___s":true},{"meta":{"range":[1042,1155],"filename":"Bounds.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its y coordinate.\rThis is the same as `height * anchor.y`.\rIt will only be > 0 if anchor.y is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetY"}],"readonly":true,"name":"offsetY","longname":"Phaser.Bullet#offsetY","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Bounds#offsetY","inherited":true,"___s":true},{"meta":{"range":[1331,1579],"filename":"Bounds.js","lineno":58,"path":"src\\gameobjects\\components"},"description":"The center x coordinate of the Game Object.\rThis is the same as `(x - offsetX) + (width / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerX"}],"name":"centerX","longname":"Phaser.Bullet#centerX","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Bounds#centerX","inherited":true,"___s":true},{"meta":{"range":[1756,2006],"filename":"Bounds.js","lineno":80,"path":"src\\gameobjects\\components"},"description":"The center y coordinate of the Game Object.\rThis is the same as `(y - offsetY) + (height / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerY"}],"name":"centerY","longname":"Phaser.Bullet#centerY","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Bounds#centerY","inherited":true,"___s":true},{"meta":{"range":[2159,2358],"filename":"Bounds.js","lineno":102,"path":"src\\gameobjects\\components"},"description":"The left coordinate of the Game Object.\rThis is the same as `x - offsetX`.","properties":[{"type":{"names":["number"]},"name":"left"}],"name":"left","longname":"Phaser.Bullet#left","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Bounds#left","inherited":true,"___s":true},{"meta":{"range":[2521,2751],"filename":"Bounds.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The right coordinate of the Game Object.\rThis is the same as `x + width - offsetX`.","properties":[{"type":{"names":["number"]},"name":"right"}],"name":"right","longname":"Phaser.Bullet#right","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Bounds#right","inherited":true,"___s":true},{"meta":{"range":[2900,3098],"filename":"Bounds.js","lineno":146,"path":"src\\gameobjects\\components"},"description":"The y coordinate of the Game Object.\rThis is the same as `y - offsetY`.","properties":[{"type":{"names":["number"]},"name":"top"}],"name":"top","longname":"Phaser.Bullet#top","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Bounds#top","inherited":true,"___s":true},{"meta":{"range":[3262,3495],"filename":"Bounds.js","lineno":168,"path":"src\\gameobjects\\components"},"description":"The sum of the y and height properties.\rThis is the same as `y + height - offsetY`.","properties":[{"type":{"names":["number"]},"name":"bottom"}],"name":"bottom","longname":"Phaser.Bullet#bottom","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Bounds#bottom","inherited":true,"___s":true},{"meta":{"range":[6346,8224],"filename":"Bounds.js","lineno":223,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object within another Game Object, or Rectangle, known as the\r'container', to one of 9 possible positions.\r\rThe container must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe container. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, \r`Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, \r`Phaser.BOTTOM_CENTER` and `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rcontainer, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignIn(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the containers bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the container bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"container"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignIn","longname":"Phaser.Bullet#alignIn","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Bounds#alignIn","inherited":true,"___s":true},{"meta":{"range":[11205,13527],"filename":"Bounds.js","lineno":321,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object to the side of another Game Object, or Rectangle, known as the\r'parent', in one of 11 possible positions.\r\rThe parent must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe parent. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, \r`Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, \r`Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` \rand `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rparent, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignTo(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the parents bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the parent bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"parent"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, `Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, `Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignTo","longname":"Phaser.Bullet#alignTo","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Bounds#alignTo","inherited":true,"___s":true},{"meta":{"range":[784,949],"filename":"BringToTop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"Brings this Game Object to the top of its parents display list.\rVisually this means it will render over the top of any old child in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will bring it to the top of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"bringToTop","longname":"Phaser.Bullet#bringToTop","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.BringToTop#bringToTop","inherited":true,"___s":true},{"meta":{"range":[1378,1543],"filename":"BringToTop.js","lineno":45,"path":"src\\gameobjects\\components"},"description":"Sends this Game Object to the bottom of its parents display list.\rVisually this means it will render below all other children in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will send it to the bottom of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"sendToBack","longname":"Phaser.Bullet#sendToBack","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.BringToTop#sendToBack","inherited":true,"___s":true},{"meta":{"range":[1982,2140],"filename":"BringToTop.js","lineno":66,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object up one place in its parents display list.\rThis call has no effect if the Game Object is already at the top of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object up within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveUp","longname":"Phaser.Bullet#moveUp","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.BringToTop#moveUp","inherited":true,"___s":true},{"meta":{"range":[2586,2748],"filename":"BringToTop.js","lineno":87,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object down one place in its parents display list.\rThis call has no effect if the Game Object is already at the bottom of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object down within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveDown","longname":"Phaser.Bullet#moveDown","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.BringToTop#moveDown","inherited":true,"___s":true},{"meta":{"range":[751,765],"filename":"Crop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Rectangle used to crop the texture this Game Object uses.\rSet this property via `crop`. \rIf you modify this property directly you must call `updateCrop` in order to have the change take effect.","properties":[{"type":{"names":["Phaser.Rectangle"]},"name":"cropRect"}],"defaultvalue":null,"name":"cropRect","longname":"Phaser.Bullet#cropRect","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Crop#cropRect","inherited":true,"___s":true},{"meta":{"range":[2112,2842],"filename":"Crop.js","lineno":49,"path":"src\\gameobjects\\components"},"description":"Crop allows you to crop the texture being used to display this Game Object.\rSetting a crop rectangle modifies the core texture frame. The Game Object width and height properties will be adjusted accordingly.\r\rCropping takes place from the top-left and can be modified in real-time either by providing an updated rectangle object to this method,\ror by modifying `cropRect` property directly and then calling `updateCrop`.\r\rThe rectangle object given to this method can be either a `Phaser.Rectangle` or any other object \rso long as it has public `x`, `y`, `width`, `height`, `right` and `bottom` properties.\r\rA reference to the rectangle is stored in `cropRect` unless the `copy` parameter is `true`, \rin which case the values are duplicated to a local object.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle used during cropping. Pass null or no parameters to clear a previously set crop rectangle.","name":"rect"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If false `cropRect` will be stored as a reference to the given rect. If true it will copy the rect values into a local Phaser Rectangle object stored in cropRect.","name":"copy"}],"name":"crop","longname":"Phaser.Bullet#crop","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Crop#crop","inherited":true,"___s":true},{"meta":{"range":[3107,4426],"filename":"Crop.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"If you have set a crop rectangle on this Game Object via `crop` and since modified the `cropRect` property,\ror the rectangle it references, then you need to update the crop frame by calling this method.","kind":"function","name":"updateCrop","longname":"Phaser.Bullet#updateCrop","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Crop#updateCrop","inherited":true,"___s":true},{"meta":{"range":[707,829],"filename":"Delta.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"Returns the delta x value. The difference between world.x now and in the previous frame.\r\rThe value will be positive if the Game Object has moved to the right or negative if to the left.","properties":[{"type":{"names":["number"]},"name":"deltaX"}],"readonly":true,"name":"deltaX","longname":"Phaser.Bullet#deltaX","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Delta#deltaX","inherited":true,"___s":true},{"meta":{"range":[1103,1225],"filename":"Delta.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"Returns the delta y value. The difference between world.y now and in the previous frame.\r\rThe value will be positive if the Game Object has moved down or negative if up.","properties":[{"type":{"names":["number"]},"name":"deltaY"}],"readonly":true,"name":"deltaY","longname":"Phaser.Bullet#deltaY","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Delta#deltaY","inherited":true,"___s":true},{"meta":{"range":[1424,1545],"filename":"Delta.js","lineno":58,"path":"src\\gameobjects\\components"},"description":"Returns the delta z value. The difference between rotation now and in the previous frame.","properties":[{"type":{"names":["number"]},"description":"The delta value.","name":"deltaZ"}],"readonly":true,"name":"deltaZ","longname":"Phaser.Bullet#deltaZ","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Delta#deltaZ","inherited":true,"___s":true},{"meta":{"range":[629,648],"filename":"Destroy.js","lineno":22,"path":"src\\gameobjects\\components"},"description":"As a Game Object runs through its destroy method this flag is set to true, \rand can be checked in any sub-systems or plugins it is being destroyed from.","properties":[{"type":{"names":["boolean"]},"name":"destroyPhase"}],"readonly":true,"name":"destroyPhase","longname":"Phaser.Bullet#destroyPhase","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Destroy#destroyPhase","inherited":true,"___s":true},{"meta":{"range":[1497,4401],"filename":"Destroy.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Destroys the Game Object. This removes it from its parent group, destroys the input, event and animation handlers if present\rand nulls its reference to `game`, freeing it up for garbage collection.\r\rIf this Game Object has the Events component it will also dispatch the `onDestroy` event.\r\rYou can optionally also destroy the BaseTexture this Game Object is using. Be careful if you've\rmore than one Game Object sharing the same BaseTexture.","kind":"function","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Should every child of this object have its destroy method called as well?","name":"destroyChildren"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Destroy the BaseTexture this Game Object is using? Note that if another Game Object is sharing the same BaseTexture it will invalidate it.","name":"destroyTexture"}],"name":"destroy","longname":"Phaser.Bullet#destroy","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Destroy#destroy","inherited":true,"___s":true},{"meta":{"range":[2104,2515],"filename":"FixedToCamera.js","lineno":56,"path":"src\\gameobjects\\components"},"description":"A Game Object that is \"fixed\" to the camera uses its x/y coordinates as offsets from the top left of the camera during rendering.\r\rThe values are adjusted at the rendering stage, overriding the Game Objects actual world position.\r\rThe end result is that the Game Object will appear to be 'fixed' to the camera, regardless of where in the game world\rthe camera is viewing. This is useful if for example this Game Object is a UI item that you wish to be visible at all times \rregardless where in the world the camera is.\r\rThe offsets are stored in the `cameraOffset` property.\r\rNote that the `cameraOffset` values are in addition to any parent of this Game Object on the display list.\r\rBe careful not to set `fixedToCamera` on Game Objects which are in Groups that already have `fixedToCamera` enabled on them.","properties":[{"type":{"names":["boolean"]},"name":"fixedToCamera"}],"name":"fixedToCamera","longname":"Phaser.Bullet#fixedToCamera","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.FixedToCamera#fixedToCamera","inherited":true,"___s":true},{"meta":{"range":[2868,2900],"filename":"FixedToCamera.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"The x/y coordinate offset applied to the top-left of the camera that this Game Object will be drawn at if `fixedToCamera` is true.\r\rThe values are relative to the top-left of the camera view and in addition to any parent of the Game Object on the display list.","properties":[{"type":{"names":["Phaser.Point"]},"name":"cameraOffset"}],"name":"cameraOffset","longname":"Phaser.Bullet#cameraOffset","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.FixedToCamera#cameraOffset","inherited":true,"___s":true},{"meta":{"range":[778,787],"filename":"Health.js","lineno":26,"path":"src\\gameobjects\\components"},"description":"The Game Objects health value. This is a handy property for setting and manipulating health on a Game Object.\r\rIt can be used in combination with the `damage` method or modified directly.","properties":[{"type":{"names":["number"]},"name":"health"}],"defaultvalue":1,"name":"health","longname":"Phaser.Bullet#health","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Health#health","inherited":true,"___s":true},{"meta":{"range":[1029,1043],"filename":"Health.js","lineno":35,"path":"src\\gameobjects\\components"},"description":"The Game Objects maximum health value. This works in combination with the `heal` method to ensure\rthe health value never exceeds the maximum.","properties":[{"type":{"names":["number"]},"name":"maxHealth"}],"defaultvalue":100,"name":"maxHealth","longname":"Phaser.Bullet#maxHealth","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Health#maxHealth","inherited":true,"___s":true},{"meta":{"range":[1419,1661],"filename":"Health.js","lineno":46,"path":"src\\gameobjects\\components"},"description":"Damages the Game Object. This removes the given amount of health from the `health` property.\r\rIf health is taken below or is equal to zero then the `kill` method is called.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to subtract from the current `health` value.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"damage","longname":"Phaser.Bullet#damage","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Health#damage","inherited":true,"___s":true},{"meta":{"range":[1989,2195],"filename":"Health.js","lineno":70,"path":"src\\gameobjects\\components"},"description":"Sets the health property of the Game Object to the given amount.\rWill never exceed the `maxHealth` value.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to set the `health` value to. The total will never exceed `maxHealth`.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"setHealth","longname":"Phaser.Bullet#setHealth","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Health#setHealth","inherited":true,"___s":true},{"meta":{"range":[2503,2772],"filename":"Health.js","lineno":90,"path":"src\\gameobjects\\components"},"description":"Heal the Game Object. This adds the given amount of health to the `health` property.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to add to the current `health` value. The total will never exceed `maxHealth`.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"heal","longname":"Phaser.Bullet#heal","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Health#heal","inherited":true,"___s":true},{"meta":{"range":[805,816],"filename":"InputEnabled.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Input Handler for this Game Object.\r\rBy default it is disabled. If you wish this Game Object to process input events you should enable it with: `inputEnabled = true`.\r\rAfter you have done this, this property will be a reference to the Phaser InputHandler.","properties":[{"type":{"names":["Phaser.InputHandler","null"]},"name":"input"}],"name":"input","longname":"Phaser.Bullet#input","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.InputEnabled#input","inherited":true,"___s":true},{"meta":{"range":[1661,2398],"filename":"InputEnabled.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"By default a Game Object won't process any input events. By setting `inputEnabled` to true a Phaser.InputHandler is created\rfor this Game Object and it will then start to process click / touch events and more.\r\rYou can then access the Input Handler via `this.input`.\r\rNote that Input related events are dispatched from `this.events`, i.e.: `events.onInputDown`.\r\rIf you set this property to false it will stop the Input Handler from processing any more input events.\r\rIf you want to _temporarily_ disable input for a Game Object, then it's better to set\r`input.enabled = false`, as it won't reset any of the Input Handlers internal properties.\rYou can then toggle this back on as needed.","properties":[{"type":{"names":["boolean"]},"name":"inputEnabled"}],"name":"inputEnabled","longname":"Phaser.Bullet#inputEnabled","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.InputEnabled#inputEnabled","inherited":true,"___s":true},{"meta":{"range":[3394,3417],"filename":"InWorld.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"If this is set to `true` the Game Object checks if it is within the World bounds each frame. \r\rWhen it is no longer intersecting the world bounds it dispatches the `onOutOfBounds` event.\r\rIf it was *previously* out of bounds but is now intersecting the world bounds again it dispatches the `onEnterBounds` event.\r\rIt also optionally kills the Game Object if `outOfBoundsKill` is `true`.\r\rWhen `checkWorldBounds` is enabled it forces the Game Object to calculate its full bounds every frame.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"checkWorldBounds"}],"defaultvalue":false,"name":"checkWorldBounds","longname":"Phaser.Bullet#checkWorldBounds","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.InWorld#checkWorldBounds","inherited":true,"___s":true},{"meta":{"range":[3653,3675],"filename":"InWorld.js","lineno":106,"path":"src\\gameobjects\\components"},"description":"If this and the `checkWorldBounds` property are both set to `true` then the `kill` method is called as soon as `inWorld` returns false.","properties":[{"type":{"names":["boolean"]},"name":"outOfBoundsKill"}],"defaultvalue":false,"name":"outOfBoundsKill","longname":"Phaser.Bullet#outOfBoundsKill","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.InWorld#outOfBoundsKill","inherited":true,"___s":true},{"meta":{"range":[3939,3967],"filename":"InWorld.js","lineno":115,"path":"src\\gameobjects\\components"},"description":"If this and the `autoCull` property are both set to `true`, then the `kill` method\ris called as soon as the Game Object leaves the camera bounds.","properties":[{"type":{"names":["boolean"]},"name":"outOfCameraBoundsKill"}],"defaultvalue":false,"name":"outOfCameraBoundsKill","longname":"Phaser.Bullet#outOfCameraBoundsKill","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.InWorld#outOfCameraBoundsKill","inherited":true,"___s":true},{"meta":{"range":[4292,4429],"filename":"InWorld.js","lineno":129,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds are within, or intersect at any point with the Game World bounds.","properties":[{"type":{"names":["boolean"]},"name":"inWorld"}],"readonly":true,"name":"inWorld","longname":"Phaser.Bullet#inWorld","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.InWorld#inWorld","inherited":true,"___s":true},{"meta":{"range":[1310,1321],"filename":"LifeSpan.js","lineno":50,"path":"src\\gameobjects\\components"},"description":"A useful flag to control if the Game Object is alive or dead.\r\rThis is set automatically by the Health components `damage` method should the object run out of health.\rOr you can toggle it via your game code.\r\rThis property is mostly just provided to be used by your game - it doesn't effect rendering or logic updates.\rHowever you can use `Group.getFirstAlive` in conjunction with this property for fast object pooling and recycling.","properties":[{"type":{"names":["boolean"]},"name":"alive"}],"defaultvalue":true,"name":"alive","longname":"Phaser.Bullet#alive","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.LifeSpan#alive","inherited":true,"overrides":"Phaser.Sprite#alive","___s":true},{"meta":{"range":[1843,1854],"filename":"LifeSpan.js","lineno":65,"path":"src\\gameobjects\\components"},"description":"The lifespan allows you to give a Game Object a lifespan in milliseconds.\r\rOnce the Game Object is 'born' you can set this to a positive value.\r\rIt is automatically decremented by the millisecond equivalent of `game.time.physicsElapsed` each frame.\rWhen it reaches zero it will call the `kill` method.\r\rVery handy for particles, bullets, collectibles, or any other short-lived entity.","properties":[{"type":{"names":["number"]},"name":"lifespan"}],"defaultvalue":0,"name":"lifespan","longname":"Phaser.Bullet#lifespan","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.LifeSpan#lifespan","inherited":true,"___s":true},{"meta":{"range":[2390,2807],"filename":"LifeSpan.js","lineno":78,"path":"src\\gameobjects\\components"},"description":"Brings a 'dead' Game Object back to life, optionally resetting its health value in the process.\r\rA resurrected Game Object has its `alive`, `exists` and `visible` properties all set to true.\r\rIt will dispatch the `onRevived` event. Listen to `events.onRevived` for the signal.","kind":"function","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"The health to give the Game Object. Only set if the GameObject has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"revive","longname":"Phaser.Bullet#revive","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.LifeSpan#revive","inherited":true,"___s":true},{"meta":{"range":[2545,5312],"filename":"LoadTexture.js","lineno":51,"path":"src\\gameobjects\\components"},"description":"Changes the base texture the Game Object is using. The old texture is removed and the new one is referenced or fetched from the Cache.\r\rIf your Game Object is using a frame from a texture atlas and you just wish to change to another frame, then see the `frame` or `frameName` properties instead.\r\rYou should only use `loadTexture` if you want to replace the base texture entirely.\r\rCalling this method causes a WebGL texture update, so use sparingly or in low-intensity portions of your game, or if you know the new texture is already on the GPU.\r\rYou can use the new const `Phaser.PENDING_ATLAS` as the texture key for any sprite. \rDoing this then sets the key to be the `frame` argument (the frame is set to zero). \r\rThis allows you to create sprites using `load.image` during development, and then change them \rto use a Texture Atlas later in development by simply searching your code for 'PENDING_ATLAS' \rand swapping it to be the key of the atlas data.\r\rNote: You cannot use a RenderTexture as a texture for a TileSprite.","kind":"function","params":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If an animation is already playing on this Sprite you can choose to stop it or let it carry on playing.","name":"stopAnimation"}],"name":"loadTexture","longname":"Phaser.Bullet#loadTexture","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.LoadTexture#loadTexture","inherited":true,"___s":true},{"meta":{"range":[5633,7262],"filename":"LoadTexture.js","lineno":155,"path":"src\\gameobjects\\components"},"description":"Sets the texture frame the Game Object uses for rendering.\r\rThis is primarily an internal method used by `loadTexture`, but is exposed for the use of plugins and custom classes.","kind":"function","params":[{"type":{"names":["Phaser.Frame"]},"description":"The Frame to be used by the texture.","name":"frame"}],"name":"setFrame","longname":"Phaser.Bullet#setFrame","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.LoadTexture#setFrame","inherited":true,"___s":true},{"meta":{"range":[7825,7986],"filename":"LoadTexture.js","lineno":220,"path":"src\\gameobjects\\components"},"description":"Resizes the Frame dimensions that the Game Object uses for rendering.\r\rYou shouldn't normally need to ever call this, but in the case of special texture types such as Video or BitmapData\rit can be useful to adjust the dimensions directly in this way.","kind":"function","params":[{"type":{"names":["object"]},"description":"The parent texture object that caused the resize, i.e. a Phaser.Video object.","name":"parent"},{"type":{"names":["integer"]},"description":"The new width of the texture.","name":"width"},{"type":{"names":["integer"]},"description":"The new height of the texture.","name":"height"}],"name":"resizeFrame","longname":"Phaser.Bullet#resizeFrame","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.LoadTexture#resizeFrame","inherited":true,"___s":true},{"meta":{"range":[8118,8243],"filename":"LoadTexture.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"Resets the texture frame dimensions that the Game Object uses for rendering.","kind":"function","name":"resetFrame","longname":"Phaser.Bullet#resetFrame","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.LoadTexture#resetFrame","inherited":true,"___s":true},{"meta":{"range":[8868,9060],"filename":"LoadTexture.js","lineno":254,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame index of the texture being used to render this Game Object.\r\rTo change the frame set `frame` to the index of the new frame in the sprite sheet you wish this Game Object to use,\rfor example: `player.frame = 4`.\r\rIf the frame index given doesn't exist it will revert to the first frame found in the texture.\r\rIf you are using a texture atlas then you should use the `frameName` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["integer"]},"name":"frame"}],"name":"frame","longname":"Phaser.Bullet#frame","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.LoadTexture#frame","inherited":true,"___s":true},{"meta":{"range":[9723,9927],"filename":"LoadTexture.js","lineno":279,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame name of the texture being used to render this Game Object.\r\rTo change the frame set `frameName` to the name of the new frame in the texture atlas you wish this Game Object to use, \rfor example: `player.frameName = \"idle\"`.\r\rIf the frame name given doesn't exist it will revert to the first frame found in the texture and throw a console warning.\r\rIf you are using a sprite sheet then you should use the `frame` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["string"]},"name":"frameName"}],"name":"frameName","longname":"Phaser.Bullet#frameName","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.LoadTexture#frameName","inherited":true,"___s":true},{"meta":{"range":[1339,1475],"filename":"Overlap.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"Checks to see if the bounds of this Game Object overlaps with the bounds of the given Display Object, \rwhich can be a Sprite, Image, TileSprite or anything that extends those such as Button or provides a `getBounds` method and result.\r\rThis check ignores the `hitArea` property if set and runs a `getBounds` comparison on both objects to determine the result.\r\rTherefore it's relatively expensive to use in large quantities, i.e. with lots of Sprites at a high frequency.\rIt should be fine for low-volume testing where physics isn't required.","kind":"function","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.TileSprite","Phaser.Button","PIXI.DisplayObject"]},"description":"The display object to check against.","name":"displayObject"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the bounds of this Game Object intersects at any point with the bounds of the given display object."}],"name":"overlap","longname":"Phaser.Bullet#overlap","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Overlap#overlap","inherited":true,"___s":true},{"meta":{"range":[2899,2909],"filename":"PhysicsBody.js","lineno":91,"path":"src\\gameobjects\\components"},"description":"`body` is the Game Objects physics body. Once a Game Object is enabled for physics you access all associated \rproperties and methods via it.\r\rBy default Game Objects won't add themselves to any physics system and their `body` property will be `null`.\r\rTo enable this Game Object for physics you need to call `game.physics.enable(object, system)` where `object` is this object\rand `system` is the Physics system you are using. If none is given it defaults to `Phaser.Physics.Arcade`.\r\rYou can alternatively call `game.physics.arcade.enable(object)`, or add this Game Object to a physics enabled Group.\r\rImportant: Enabling a Game Object for P2 or Ninja physics will automatically set its `anchor` property to 0.5, \rso the physics body is centered on the Game Object.\r\rIf you need a different result then adjust or re-create the Body shape offsets manually or reset the anchor after enabling physics.","properties":[{"type":{"names":["Phaser.Physics.Arcade.Body","Phaser.Physics.P2.Body","Phaser.Physics.Ninja.Body","null"]},"name":"body"}],"defaultvalue":null,"name":"body","longname":"Phaser.Bullet#body","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.PhysicsBody#body","inherited":true,"___s":true},{"meta":{"range":[3072,3378],"filename":"PhysicsBody.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the x axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"x"}],"name":"x","longname":"Phaser.Bullet#x","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.PhysicsBody#x","inherited":true,"___s":true},{"meta":{"range":[3541,3847],"filename":"PhysicsBody.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the y axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"y"}],"name":"y","longname":"Phaser.Bullet#y","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.PhysicsBody#y","inherited":true,"___s":true},{"meta":{"range":[1061,1717],"filename":"Reset.js","lineno":30,"path":"src\\gameobjects\\components"},"description":"Resets the Game Object.\r\rThis moves the Game Object to the given x/y world coordinates and sets `fresh`, `exists`, \r`visible` and `renderable` to true.\r\rIf this Game Object has the LifeSpan component it will also set `alive` to true and `health` to the given value.\r\rIf this Game Object has a Physics Body it will reset the Body.","kind":"function","params":[{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the Game Object at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the Game Object at.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The health to give the Game Object if it has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"reset","longname":"Phaser.Bullet#reset","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Reset#reset","inherited":true,"___s":true},{"meta":{"range":[566,589],"filename":"ScaleMinMax.js","lineno":20,"path":"src\\gameobjects\\components"},"description":"The callback that will apply any scale limiting to the worldTransform.","properties":[{"type":{"names":["function"]},"name":"transformCallback"}],"name":"transformCallback","longname":"Phaser.Bullet#transformCallback","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#transformCallback","inherited":true,"___s":true},{"meta":{"range":[728,758],"filename":"ScaleMinMax.js","lineno":26,"path":"src\\gameobjects\\components"},"description":"The context under which `transformCallback` is called.","properties":[{"type":{"names":["object"]},"name":"transformCallbackContext"}],"name":"transformCallbackContext","longname":"Phaser.Bullet#transformCallbackContext","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#transformCallbackContext","inherited":true,"___s":true},{"meta":{"range":[1047,1061],"filename":"ScaleMinMax.js","lineno":36,"path":"src\\gameobjects\\components"},"description":"The minimum scale this Game Object will scale down to.\r\rIt allows you to prevent a parent from scaling this Game Object lower than the given value.\r\rSet it to `null` to remove the limit.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleMin"}],"name":"scaleMin","longname":"Phaser.Bullet#scaleMin","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#scaleMin","inherited":true,"___s":true},{"meta":{"range":[1350,1364],"filename":"ScaleMinMax.js","lineno":46,"path":"src\\gameobjects\\components"},"description":"The maximum scale this Game Object will scale up to. \r\rIt allows you to prevent a parent from scaling this Game Object higher than the given value.\r\rSet it to `null` to remove the limit.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleMax"}],"name":"scaleMax","longname":"Phaser.Bullet#scaleMax","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#scaleMax","inherited":true,"___s":true},{"meta":{"range":[3832,5155],"filename":"ScaleMinMax.js","lineno":110,"path":"src\\gameobjects\\components"},"description":"Sets the scaleMin and scaleMax values. These values are used to limit how far this Game Object will scale based on its parent.\r\rFor example if this Game Object has a `minScale` value of 1 and its parent has a `scale` value of 0.5, the 0.5 will be ignored \rand the scale value of 1 will be used, as the parents scale is lower than the minimum scale this Game Object should adhere to.\r\rBy setting these values you can carefully control how Game Objects deal with responsive scaling.\r\rIf only one parameter is given then that value will be used for both scaleMin and scaleMax:\r`setScaleMinMax(1)` = scaleMin.x, scaleMin.y, scaleMax.x and scaleMax.y all = 1\r\rIf only two parameters are given the first is set as scaleMin.x and y and the second as scaleMax.x and y:\r`setScaleMinMax(0.5, 2)` = scaleMin.x and y = 0.5 and scaleMax.x and y = 2\r\rIf you wish to set `scaleMin` with different values for x and y then either modify Game Object.scaleMin directly, \ror pass `null` for the `maxX` and `maxY` parameters.\r\rCall `setScaleMinMax(null)` to clear all previously set values.","kind":"function","params":[{"type":{"names":["number","null"]},"description":"The minimum horizontal scale value this Game Object can scale down to.","name":"minX"},{"type":{"names":["number","null"]},"description":"The minimum vertical scale value this Game Object can scale down to.","name":"minY"},{"type":{"names":["number","null"]},"description":"The maximum horizontal scale value this Game Object can scale up to.","name":"maxX"},{"type":{"names":["number","null"]},"description":"The maximum vertical scale value this Game Object can scale up to.","name":"maxY"}],"name":"setScaleMinMax","longname":"Phaser.Bullet#setScaleMinMax","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#setScaleMinMax","inherited":true,"___s":true},{"meta":{"range":[680,1221],"filename":"Smoothed.js","lineno":25,"path":"src\\gameobjects\\components"},"description":"Enable or disable texture smoothing for this Game Object.\r\rIt only takes effect if the Game Object is using an image based texture.\r\rSmoothing is enabled by default.","properties":[{"type":{"names":["boolean"]},"name":"smoothed"}],"name":"smoothed","longname":"Phaser.Bullet#smoothed","kind":"member","memberof":"Phaser.Bullet","scope":"instance","inherits":"Phaser.Component.Smoothed#smoothed","inherited":true,"___s":true},{"meta":{"range":[774,804],"filename":"Sprite.js","lineno":26,"path":"src\\pixi\\display"},"description":"The anchor sets the origin point of the texture.\rThe default is 0,0 this means the texture's origin is the top left\rSetting than anchor to 0.5,0.5 means the textures origin is centered\rSetting the anchor to 1,1 would mean the textures origin points will be the bottom right corner","properties":[{"name":"anchor"}],"type":{"names":["Point"]},"name":"anchor","longname":"Phaser.TilemapLayer#anchor","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"PIXI.Sprite#anchor","inherited":true,"___s":true},{"meta":{"range":[932,983],"filename":"Sprite.js","lineno":34,"path":"src\\pixi\\display"},"description":"The texture that the sprite is using","properties":[{"name":"texture"}],"type":{"names":["Texture"]},"name":"texture","longname":"Phaser.TilemapLayer#texture","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"PIXI.Sprite#texture","inherited":true,"___s":true},{"meta":{"range":[1569,1589],"filename":"Sprite.js","lineno":61,"path":"src\\pixi\\display"},"description":"The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.","properties":[{"name":"tint"}],"type":{"names":["Number"]},"defaultvalue":"0xFFFFFF","name":"tint","longname":"Phaser.TilemapLayer#tint","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"PIXI.Sprite#tint","inherited":true,"___s":true},{"meta":{"range":[2061,2086],"filename":"Sprite.js","lineno":80,"path":"src\\pixi\\display"},"description":"A canvas that contains the tinted version of the Sprite (in Canvas mode, WebGL doesn't populate this)","properties":[{"name":"tintedTexture"}],"type":{"names":["Canvas"]},"defaultvalue":"null","name":"tintedTexture","longname":"Phaser.TilemapLayer#tintedTexture","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"PIXI.Sprite#tintedTexture","inherited":true,"___s":true},{"meta":{"range":[2456,2495],"filename":"Sprite.js","lineno":91,"path":"src\\pixi\\display"},"description":"The blend mode to be applied to the sprite. Set to PIXI.blendModes.NORMAL to remove any blend mode.\r\rWarning: You cannot have a blend mode and a filter active on the same Sprite. Doing so will render the sprite invisible.","properties":[{"name":"blendMode"}],"type":{"names":["Number"]},"defaultvalue":"PIXI.blendModes.NORMAL;","name":"blendMode","longname":"Phaser.TilemapLayer#blendMode","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"PIXI.Sprite#blendMode","inherited":true,"___s":true},{"meta":{"range":[2714,2732],"filename":"Sprite.js","lineno":101,"path":"src\\pixi\\display"},"description":"The shader that will be used to render this Sprite.\rSet to null to remove a current shader.","properties":[{"name":"shader"}],"type":{"names":["AbstractFilter"]},"defaultvalue":"null","name":"shader","longname":"Phaser.TilemapLayer#shader","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"PIXI.Sprite#shader","inherited":true,"___s":true},{"meta":{"range":[3048,3058],"filename":"Core.js","lineno":142,"path":"src\\gameobjects\\components"},"description":"A reference to the currently running Game.","properties":[{"type":{"names":["Phaser.Game"]},"name":"game"}],"name":"game","longname":"Phaser.TilemapLayer#game","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Core#game","inherited":true,"___s":true},{"meta":{"range":[3279,3287],"filename":"Core.js","lineno":150,"path":"src\\gameobjects\\components"},"description":"A user defined name given to this Game Object.\rThis value isn't ever used internally by Phaser, it is meant as a game level property.","properties":[{"type":{"names":["string"]},"name":"name"}],"defaultvalue":"","name":"name","longname":"Phaser.TilemapLayer#name","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Core#name","inherited":true,"___s":true},{"meta":{"range":[3651,3659],"filename":"Core.js","lineno":160,"path":"src\\gameobjects\\components"},"description":"An empty Object that belongs to this Game Object.\rThis value isn't ever used internally by Phaser, but may be used by your own code, or\rby Phaser Plugins, to store data that needs to be associated with the Game Object,\rwithout polluting the Game Object directly.","properties":[{"type":{"names":["Object"]},"name":"data"}],"defaultvalue":"{}","defaultvaluetype":"object","name":"data","longname":"Phaser.TilemapLayer#data","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Core#data","inherited":true,"___s":true},{"meta":{"range":[3794,3808],"filename":"Core.js","lineno":167,"path":"src\\gameobjects\\components"},"description":"The components this Game Object has installed.","properties":[{"type":{"names":["object"]},"name":"components"}],"access":"protected","name":"components","longname":"Phaser.TilemapLayer#components","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Core#components","inherited":true,"___s":true},{"meta":{"range":[4202,4206],"filename":"Core.js","lineno":177,"path":"src\\gameobjects\\components"},"description":"The z depth of this Game Object within its parent Group.\rNo two objects in a Group can have the same z value.\rThis value is adjusted automatically whenever the Group hierarchy changes.\rIf you wish to re-order the layering of a Game Object then see methods like Group.moveUp or Group.bringToTop.","properties":[{"type":{"names":["number"]},"name":"z"}],"readonly":true,"name":"z","longname":"Phaser.TilemapLayer#z","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Core#z","inherited":true,"___s":true},{"meta":{"range":[4484,4501],"filename":"Core.js","lineno":185,"path":"src\\gameobjects\\components"},"description":"All Phaser Game Objects have an Events class which contains all of the events that are dispatched when certain things happen to this\rGame Object, or any of its components.","see":["Phaser.Events"],"properties":[{"type":{"names":["Phaser.Events"]},"name":"events"}],"name":"events","longname":"Phaser.TilemapLayer#events","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Core#events","inherited":true,"___s":true},{"meta":{"range":[4815,4836],"filename":"Core.js","lineno":193,"path":"src\\gameobjects\\components"},"description":"If the Game Object is enabled for animation (such as a Phaser.Sprite) this is a reference to its AnimationManager instance.\rThrough it you can create, play, pause and stop animations.","see":["Phaser.AnimationManager"],"properties":[{"type":{"names":["Phaser.AnimationManager"]},"name":"animations"}],"name":"animations","longname":"Phaser.TilemapLayer#animations","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Core#animations","inherited":true,"___s":true},{"meta":{"range":[5559,5566],"filename":"Core.js","lineno":203,"path":"src\\gameobjects\\components"},"description":"The key of the image or texture used by this Game Object during rendering.\rIf it is a string it's the string used to retrieve the texture from the Phaser Image Cache.\rIt can also be an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.\rIf a Game Object is created without a key it is automatically assigned the key `__default` which is a 32x32 transparent PNG stored within the Cache.\rIf a Game Object is given a key which doesn't exist in the Image Cache it is re-assigned the key `__missing` which is a 32x32 PNG of a green box with a line through it.","properties":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"name":"key"}],"name":"key","longname":"Phaser.TilemapLayer#key","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Core#key","inherited":true,"___s":true},{"meta":{"range":[5882,5893],"filename":"Core.js","lineno":211,"path":"src\\gameobjects\\components"},"description":"The world coordinates of this Game Object in pixels.\rDepending on where in the display list this Game Object is placed this value can differ from `position`, \rwhich contains the x/y coordinates relative to the Game Objects parent.","properties":[{"type":{"names":["Phaser.Point"]},"name":"world"}],"name":"world","longname":"Phaser.TilemapLayer#world","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Core#world","inherited":true,"___s":true},{"meta":{"range":[6204,6226],"filename":"Core.js","lineno":225,"path":"src\\gameobjects\\components"},"description":"The position the Game Object was located in the previous frame.","properties":[{"type":{"names":["Phaser.Point"]},"name":"previousPosition"}],"readonly":true,"name":"previousPosition","longname":"Phaser.TilemapLayer#previousPosition","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Core#previousPosition","inherited":true,"___s":true},{"meta":{"range":[6406,6425],"filename":"Core.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"The rotation the Game Object was in set to in the previous frame. Value is in radians.","properties":[{"type":{"names":["number"]},"name":"previousRotation"}],"readonly":true,"name":"previousRotation","longname":"Phaser.TilemapLayer#previousRotation","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Core#previousRotation","inherited":true,"___s":true},{"meta":{"range":[6720,6736],"filename":"Core.js","lineno":240,"path":"src\\gameobjects\\components"},"description":"The render order ID is used internally by the renderer and Input Manager and should not be modified.\rThis property is mostly used internally by the renderers, but is exposed for the use of plugins.","properties":[{"type":{"names":["number"]},"name":"renderOrderID"}],"readonly":true,"name":"renderOrderID","longname":"Phaser.TilemapLayer#renderOrderID","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Core#renderOrderID","inherited":true,"___s":true},{"meta":{"range":[7053,7064],"filename":"Core.js","lineno":248,"path":"src\\gameobjects\\components"},"description":"A Game Object is considered `fresh` if it has just been created or reset and is yet to receive a renderer transform update.\rThis property is mostly used internally by the physics systems, but is exposed for the use of plugins.","properties":[{"type":{"names":["boolean"]},"name":"fresh"}],"readonly":true,"name":"fresh","longname":"Phaser.TilemapLayer#fresh","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Core#fresh","inherited":true,"___s":true},{"meta":{"range":[7518,7539],"filename":"Core.js","lineno":259,"path":"src\\gameobjects\\components"},"description":"A Game Object is that is pendingDestroy is flagged to have its destroy method called on the next logic update.\rYou can set it directly to allow you to flag an object to be destroyed on its next update.\r\rThis is extremely useful if you wish to destroy an object from within one of its own callbacks \rsuch as with Buttons or other Input events.","properties":[{"type":{"names":["boolean"]},"name":"pendingDestroy"}],"name":"pendingDestroy","longname":"Phaser.TilemapLayer#pendingDestroy","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Core#pendingDestroy","inherited":true,"___s":true},{"meta":{"range":[9388,9417],"filename":"Core.js","lineno":328,"path":"src\\gameobjects\\components"},"description":"Override this method in your own custom objects to handle any update requirements.\rIt is called immediately after `preUpdate` and before `postUpdate`.\rRemember if this Game Object has any children you should call update on those too.","kind":"function","name":"update","longname":"Phaser.TilemapLayer#update","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Core#update","inherited":true,"___s":true},{"meta":{"range":[1110,1382],"filename":"Angle.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"The angle property is the rotation of the Game Object in *degrees* from its original orientation.\r\rValues from 0 to 180 represent clockwise rotation; values from 0 to -180 represent counterclockwise rotation.\r\rValues outside this range are added to or subtracted from 360 to obtain a value within the range. \rFor example, the statement player.angle = 450 is the same as player.angle = 90.\r\rIf you wish to work in radians instead of degrees you can use the property `rotation` instead. \rWorking in radians is slightly faster as it doesn't have to perform any calculations.","properties":[{"type":{"names":["number"]},"name":"angle"}],"name":"angle","longname":"Phaser.TilemapLayer#angle","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Angle#angle","inherited":true,"___s":true},{"meta":{"range":[1545,1745],"filename":"Animation.js","lineno":31,"path":"src\\gameobjects\\components"},"description":"Plays an Animation.\r\rThe animation should have previously been created via `animations.add`.\r\rIf the animation is already playing calling this again won't do anything.\rIf you need to reset an already running animation do so directly on the Animation object itself or via `AnimationManager.stop`.","kind":"function","params":[{"type":{"names":["string"]},"description":"The name of the animation to be played, e.g. \"fire\", \"walk\", \"jump\". Must have been previously created via 'AnimationManager.add'.","name":"name"},{"type":{"names":["number"]},"optional":true,"defaultvalue":null,"description":"The framerate to play the animation at. The speed is given in frames per second. If not provided the previously set frameRate of the Animation is used.","name":"frameRate"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Should the animation be looped after playback. If not provided the previously set loop value of the Animation is used.","name":"loop"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If set to true when the animation completes (only happens if loop=false) the parent Sprite will be killed.","name":"killOnComplete"}],"returns":[{"type":{"names":["Phaser.Animation"]},"description":"A reference to playing Animation."}],"name":"play","longname":"Phaser.TilemapLayer#play","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Animation#play","inherited":true,"___s":true},{"meta":{"range":[1129,1144],"filename":"AutoCull.js","lineno":28,"path":"src\\gameobjects\\components"},"description":"A Game Object with `autoCull` set to true will check its bounds against the World Camera every frame.\rIf it is not intersecting the Camera bounds at any point then it has its `renderable` property set to `false`.\rThis keeps the Game Object alive and still processing updates, but forces it to skip the render step entirely.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"autoCull"}],"defaultvalue":false,"name":"autoCull","longname":"Phaser.TilemapLayer#autoCull","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.AutoCull#autoCull","inherited":true,"___s":true},{"meta":{"range":[1402,1809],"filename":"AutoCull.js","lineno":37,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds intersect with the Game Camera bounds.\rReturns `true` if they do, otherwise `false` if fully outside of the Cameras bounds.","properties":[{"type":{"names":["boolean"]},"name":"inCamera"}],"readonly":true,"name":"inCamera","longname":"Phaser.TilemapLayer#inCamera","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.AutoCull#inCamera","inherited":true,"___s":true},{"meta":{"range":[661,773],"filename":"Bounds.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its x coordinate.\rThis is the same as `width * anchor.x`.\rIt will only be > 0 if anchor.x is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetX"}],"readonly":true,"name":"offsetX","longname":"Phaser.TilemapLayer#offsetX","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Bounds#offsetX","inherited":true,"___s":true},{"meta":{"range":[1042,1155],"filename":"Bounds.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"The amount the Game Object is visually offset from its y coordinate.\rThis is the same as `height * anchor.y`.\rIt will only be > 0 if anchor.y is not equal to zero.","properties":[{"type":{"names":["number"]},"name":"offsetY"}],"readonly":true,"name":"offsetY","longname":"Phaser.TilemapLayer#offsetY","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Bounds#offsetY","inherited":true,"___s":true},{"meta":{"range":[1331,1579],"filename":"Bounds.js","lineno":58,"path":"src\\gameobjects\\components"},"description":"The center x coordinate of the Game Object.\rThis is the same as `(x - offsetX) + (width / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerX"}],"name":"centerX","longname":"Phaser.TilemapLayer#centerX","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Bounds#centerX","inherited":true,"___s":true},{"meta":{"range":[1756,2006],"filename":"Bounds.js","lineno":80,"path":"src\\gameobjects\\components"},"description":"The center y coordinate of the Game Object.\rThis is the same as `(y - offsetY) + (height / 2)`.","properties":[{"type":{"names":["number"]},"name":"centerY"}],"name":"centerY","longname":"Phaser.TilemapLayer#centerY","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Bounds#centerY","inherited":true,"___s":true},{"meta":{"range":[2159,2358],"filename":"Bounds.js","lineno":102,"path":"src\\gameobjects\\components"},"description":"The left coordinate of the Game Object.\rThis is the same as `x - offsetX`.","properties":[{"type":{"names":["number"]},"name":"left"}],"name":"left","longname":"Phaser.TilemapLayer#left","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Bounds#left","inherited":true,"___s":true},{"meta":{"range":[2521,2751],"filename":"Bounds.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The right coordinate of the Game Object.\rThis is the same as `x + width - offsetX`.","properties":[{"type":{"names":["number"]},"name":"right"}],"name":"right","longname":"Phaser.TilemapLayer#right","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Bounds#right","inherited":true,"___s":true},{"meta":{"range":[2900,3098],"filename":"Bounds.js","lineno":146,"path":"src\\gameobjects\\components"},"description":"The y coordinate of the Game Object.\rThis is the same as `y - offsetY`.","properties":[{"type":{"names":["number"]},"name":"top"}],"name":"top","longname":"Phaser.TilemapLayer#top","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Bounds#top","inherited":true,"___s":true},{"meta":{"range":[3262,3495],"filename":"Bounds.js","lineno":168,"path":"src\\gameobjects\\components"},"description":"The sum of the y and height properties.\rThis is the same as `y + height - offsetY`.","properties":[{"type":{"names":["number"]},"name":"bottom"}],"name":"bottom","longname":"Phaser.TilemapLayer#bottom","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Bounds#bottom","inherited":true,"___s":true},{"meta":{"range":[6346,8224],"filename":"Bounds.js","lineno":223,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object within another Game Object, or Rectangle, known as the\r'container', to one of 9 possible positions.\r\rThe container must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe container. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, \r`Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, \r`Phaser.BOTTOM_CENTER` and `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rcontainer, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignIn(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the containers bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the container bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"container"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_CENTER`, `Phaser.CENTER`, `Phaser.RIGHT_CENTER`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignIn","longname":"Phaser.TilemapLayer#alignIn","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Bounds#alignIn","inherited":true,"___s":true},{"meta":{"range":[11205,13527],"filename":"Bounds.js","lineno":321,"path":"src\\gameobjects\\components"},"description":"Aligns this Game Object to the side of another Game Object, or Rectangle, known as the\r'parent', in one of 11 possible positions.\r\rThe parent must be a Game Object, or Phaser.Rectangle object. This can include properties\rsuch as `World.bounds` or `Camera.view`, for aligning Game Objects within the world \rand camera bounds. Or it can include other Sprites, Images, Text objects, BitmapText,\rTileSprites or Buttons.\r\rPlease note that aligning a Sprite to another Game Object does **not** make it a child of\rthe parent. It simply modifies its position coordinates so it aligns with it.\r\rThe position constants you can use are:\r\r`Phaser.TOP_LEFT` (default), `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, \r`Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, \r`Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` \rand `Phaser.BOTTOM_RIGHT`.\r\rThe Game Objects are placed in such a way that their _bounds_ align with the\rparent, taking into consideration rotation, scale and the anchor property.\rThis allows you to neatly align Game Objects, irrespective of their position value.\r\rThe optional `offsetX` and `offsetY` arguments allow you to apply extra spacing to the final\raligned position of the Game Object. For example:\r\r`sprite.alignTo(background, Phaser.BOTTOM_RIGHT, -20, -20)`\r\rWould align the `sprite` to the bottom-right, but moved 20 pixels in from the corner.\rThink of the offsets as applying an adjustment to the parents bounds before the alignment takes place.\rSo providing a negative offset will 'shrink' the parent bounds by that amount, and providing a positive\rone expands it.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle","Phaser.Sprite","Phaser.Image","Phaser.Text","Phaser.BitmapText","Phaser.Button","Phaser.Graphics","Phaser.TileSprite"]},"description":"The Game Object or Rectangle with which to align this Game Object to. Can also include properties such as `World.bounds` or `Camera.view`.","name":"parent"},{"type":{"names":["integer"]},"optional":true,"description":"The position constant. One of `Phaser.TOP_LEFT`, `Phaser.TOP_CENTER`, `Phaser.TOP_RIGHT`, `Phaser.LEFT_TOP`, `Phaser.LEFT_CENTER`, `Phaser.LEFT_BOTTOM`, `Phaser.RIGHT_TOP`, `Phaser.RIGHT_CENTER`, `Phaser.RIGHT_BOTTOM`, `Phaser.BOTTOM_LEFT`, `Phaser.BOTTOM_CENTER` or `Phaser.BOTTOM_RIGHT`.","name":"position"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A horizontal adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetX"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":0,"description":"A vertical adjustment of the Containers bounds, applied to the aligned position of the Game Object. Use a negative value to shrink the bounds, positive to increase it.","name":"offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"This Game Object."}],"name":"alignTo","longname":"Phaser.TilemapLayer#alignTo","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Bounds#alignTo","inherited":true,"___s":true},{"meta":{"range":[784,949],"filename":"BringToTop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"Brings this Game Object to the top of its parents display list.\rVisually this means it will render over the top of any old child in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will bring it to the top of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"bringToTop","longname":"Phaser.TilemapLayer#bringToTop","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.BringToTop#bringToTop","inherited":true,"___s":true},{"meta":{"range":[1378,1543],"filename":"BringToTop.js","lineno":45,"path":"src\\gameobjects\\components"},"description":"Sends this Game Object to the bottom of its parents display list.\rVisually this means it will render below all other children in the same Group.\r\rIf this Game Object hasn't been added to a custom Group then this method will send it to the bottom of the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"sendToBack","longname":"Phaser.TilemapLayer#sendToBack","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.BringToTop#sendToBack","inherited":true,"___s":true},{"meta":{"range":[1982,2140],"filename":"BringToTop.js","lineno":66,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object up one place in its parents display list.\rThis call has no effect if the Game Object is already at the top of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object up within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveUp","longname":"Phaser.TilemapLayer#moveUp","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.BringToTop#moveUp","inherited":true,"___s":true},{"meta":{"range":[2586,2748],"filename":"BringToTop.js","lineno":87,"path":"src\\gameobjects\\components"},"description":"Moves this Game Object down one place in its parents display list.\rThis call has no effect if the Game Object is already at the bottom of the display list.\r\rIf this Game Object hasn't been added to a custom Group then this method will move it one object down within the Game World, \rbecause the World is the root Group from which all Game Objects descend.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"moveDown","longname":"Phaser.TilemapLayer#moveDown","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.BringToTop#moveDown","inherited":true,"___s":true},{"meta":{"range":[751,765],"filename":"Crop.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Rectangle used to crop the texture this Game Object uses.\rSet this property via `crop`. \rIf you modify this property directly you must call `updateCrop` in order to have the change take effect.","properties":[{"type":{"names":["Phaser.Rectangle"]},"name":"cropRect"}],"defaultvalue":null,"name":"cropRect","longname":"Phaser.TilemapLayer#cropRect","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Crop#cropRect","inherited":true,"___s":true},{"meta":{"range":[2112,2842],"filename":"Crop.js","lineno":49,"path":"src\\gameobjects\\components"},"description":"Crop allows you to crop the texture being used to display this Game Object.\rSetting a crop rectangle modifies the core texture frame. The Game Object width and height properties will be adjusted accordingly.\r\rCropping takes place from the top-left and can be modified in real-time either by providing an updated rectangle object to this method,\ror by modifying `cropRect` property directly and then calling `updateCrop`.\r\rThe rectangle object given to this method can be either a `Phaser.Rectangle` or any other object \rso long as it has public `x`, `y`, `width`, `height`, `right` and `bottom` properties.\r\rA reference to the rectangle is stored in `cropRect` unless the `copy` parameter is `true`, \rin which case the values are duplicated to a local object.","kind":"function","params":[{"type":{"names":["Phaser.Rectangle"]},"description":"The Rectangle used during cropping. Pass null or no parameters to clear a previously set crop rectangle.","name":"rect"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"If false `cropRect` will be stored as a reference to the given rect. If true it will copy the rect values into a local Phaser Rectangle object stored in cropRect.","name":"copy"}],"name":"crop","longname":"Phaser.TilemapLayer#crop","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Crop#crop","inherited":true,"___s":true},{"meta":{"range":[3107,4426],"filename":"Crop.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"If you have set a crop rectangle on this Game Object via `crop` and since modified the `cropRect` property,\ror the rectangle it references, then you need to update the crop frame by calling this method.","kind":"function","name":"updateCrop","longname":"Phaser.TilemapLayer#updateCrop","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Crop#updateCrop","inherited":true,"___s":true},{"meta":{"range":[707,829],"filename":"Delta.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"Returns the delta x value. The difference between world.x now and in the previous frame.\r\rThe value will be positive if the Game Object has moved to the right or negative if to the left.","properties":[{"type":{"names":["number"]},"name":"deltaX"}],"readonly":true,"name":"deltaX","longname":"Phaser.TilemapLayer#deltaX","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Delta#deltaX","inherited":true,"___s":true},{"meta":{"range":[1103,1225],"filename":"Delta.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"Returns the delta y value. The difference between world.y now and in the previous frame.\r\rThe value will be positive if the Game Object has moved down or negative if up.","properties":[{"type":{"names":["number"]},"name":"deltaY"}],"readonly":true,"name":"deltaY","longname":"Phaser.TilemapLayer#deltaY","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Delta#deltaY","inherited":true,"___s":true},{"meta":{"range":[1424,1545],"filename":"Delta.js","lineno":58,"path":"src\\gameobjects\\components"},"description":"Returns the delta z value. The difference between rotation now and in the previous frame.","properties":[{"type":{"names":["number"]},"description":"The delta value.","name":"deltaZ"}],"readonly":true,"name":"deltaZ","longname":"Phaser.TilemapLayer#deltaZ","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Delta#deltaZ","inherited":true,"___s":true},{"meta":{"range":[629,648],"filename":"Destroy.js","lineno":22,"path":"src\\gameobjects\\components"},"description":"As a Game Object runs through its destroy method this flag is set to true, \rand can be checked in any sub-systems or plugins it is being destroyed from.","properties":[{"type":{"names":["boolean"]},"name":"destroyPhase"}],"readonly":true,"name":"destroyPhase","longname":"Phaser.TilemapLayer#destroyPhase","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Destroy#destroyPhase","inherited":true,"___s":true},{"meta":{"range":[2104,2515],"filename":"FixedToCamera.js","lineno":56,"path":"src\\gameobjects\\components"},"description":"A Game Object that is \"fixed\" to the camera uses its x/y coordinates as offsets from the top left of the camera during rendering.\r\rThe values are adjusted at the rendering stage, overriding the Game Objects actual world position.\r\rThe end result is that the Game Object will appear to be 'fixed' to the camera, regardless of where in the game world\rthe camera is viewing. This is useful if for example this Game Object is a UI item that you wish to be visible at all times \rregardless where in the world the camera is.\r\rThe offsets are stored in the `cameraOffset` property.\r\rNote that the `cameraOffset` values are in addition to any parent of this Game Object on the display list.\r\rBe careful not to set `fixedToCamera` on Game Objects which are in Groups that already have `fixedToCamera` enabled on them.","properties":[{"type":{"names":["boolean"]},"name":"fixedToCamera"}],"name":"fixedToCamera","longname":"Phaser.TilemapLayer#fixedToCamera","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.FixedToCamera#fixedToCamera","inherited":true,"overrides":"Phaser.Sprite#fixedToCamera","___s":true},{"meta":{"range":[2868,2900],"filename":"FixedToCamera.js","lineno":86,"path":"src\\gameobjects\\components"},"description":"The x/y coordinate offset applied to the top-left of the camera that this Game Object will be drawn at if `fixedToCamera` is true.\r\rThe values are relative to the top-left of the camera view and in addition to any parent of the Game Object on the display list.","properties":[{"type":{"names":["Phaser.Point"]},"name":"cameraOffset"}],"name":"cameraOffset","longname":"Phaser.TilemapLayer#cameraOffset","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.FixedToCamera#cameraOffset","inherited":true,"___s":true},{"meta":{"range":[778,787],"filename":"Health.js","lineno":26,"path":"src\\gameobjects\\components"},"description":"The Game Objects health value. This is a handy property for setting and manipulating health on a Game Object.\r\rIt can be used in combination with the `damage` method or modified directly.","properties":[{"type":{"names":["number"]},"name":"health"}],"defaultvalue":1,"name":"health","longname":"Phaser.TilemapLayer#health","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Health#health","inherited":true,"___s":true},{"meta":{"range":[1029,1043],"filename":"Health.js","lineno":35,"path":"src\\gameobjects\\components"},"description":"The Game Objects maximum health value. This works in combination with the `heal` method to ensure\rthe health value never exceeds the maximum.","properties":[{"type":{"names":["number"]},"name":"maxHealth"}],"defaultvalue":100,"name":"maxHealth","longname":"Phaser.TilemapLayer#maxHealth","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Health#maxHealth","inherited":true,"___s":true},{"meta":{"range":[1419,1661],"filename":"Health.js","lineno":46,"path":"src\\gameobjects\\components"},"description":"Damages the Game Object. This removes the given amount of health from the `health` property.\r\rIf health is taken below or is equal to zero then the `kill` method is called.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to subtract from the current `health` value.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"damage","longname":"Phaser.TilemapLayer#damage","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Health#damage","inherited":true,"___s":true},{"meta":{"range":[1989,2195],"filename":"Health.js","lineno":70,"path":"src\\gameobjects\\components"},"description":"Sets the health property of the Game Object to the given amount.\rWill never exceed the `maxHealth` value.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to set the `health` value to. The total will never exceed `maxHealth`.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"setHealth","longname":"Phaser.TilemapLayer#setHealth","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Health#setHealth","inherited":true,"___s":true},{"meta":{"range":[2503,2772],"filename":"Health.js","lineno":90,"path":"src\\gameobjects\\components"},"description":"Heal the Game Object. This adds the given amount of health to the `health` property.","kind":"member","params":[{"type":{"names":["number"]},"description":"The amount to add to the current `health` value. The total will never exceed `maxHealth`.","name":"amount"}],"returns":[{"type":{"names":["Phaser.Sprite"]},"description":"This instance."}],"name":"heal","longname":"Phaser.TilemapLayer#heal","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Health#heal","inherited":true,"___s":true},{"meta":{"range":[805,816],"filename":"InputEnabled.js","lineno":24,"path":"src\\gameobjects\\components"},"description":"The Input Handler for this Game Object.\r\rBy default it is disabled. If you wish this Game Object to process input events you should enable it with: `inputEnabled = true`.\r\rAfter you have done this, this property will be a reference to the Phaser InputHandler.","properties":[{"type":{"names":["Phaser.InputHandler","null"]},"name":"input"}],"name":"input","longname":"Phaser.TilemapLayer#input","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.InputEnabled#input","inherited":true,"___s":true},{"meta":{"range":[1661,2398],"filename":"InputEnabled.js","lineno":42,"path":"src\\gameobjects\\components"},"description":"By default a Game Object won't process any input events. By setting `inputEnabled` to true a Phaser.InputHandler is created\rfor this Game Object and it will then start to process click / touch events and more.\r\rYou can then access the Input Handler via `this.input`.\r\rNote that Input related events are dispatched from `this.events`, i.e.: `events.onInputDown`.\r\rIf you set this property to false it will stop the Input Handler from processing any more input events.\r\rIf you want to _temporarily_ disable input for a Game Object, then it's better to set\r`input.enabled = false`, as it won't reset any of the Input Handlers internal properties.\rYou can then toggle this back on as needed.","properties":[{"type":{"names":["boolean"]},"name":"inputEnabled"}],"name":"inputEnabled","longname":"Phaser.TilemapLayer#inputEnabled","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.InputEnabled#inputEnabled","inherited":true,"___s":true},{"meta":{"range":[3394,3417],"filename":"InWorld.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"If this is set to `true` the Game Object checks if it is within the World bounds each frame. \r\rWhen it is no longer intersecting the world bounds it dispatches the `onOutOfBounds` event.\r\rIf it was *previously* out of bounds but is now intersecting the world bounds again it dispatches the `onEnterBounds` event.\r\rIt also optionally kills the Game Object if `outOfBoundsKill` is `true`.\r\rWhen `checkWorldBounds` is enabled it forces the Game Object to calculate its full bounds every frame.\r\rThis is a relatively expensive operation, especially if enabled on hundreds of Game Objects. So enable it only if you know it's required,\ror you have tested performance and find it acceptable.","properties":[{"type":{"names":["boolean"]},"name":"checkWorldBounds"}],"defaultvalue":false,"name":"checkWorldBounds","longname":"Phaser.TilemapLayer#checkWorldBounds","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.InWorld#checkWorldBounds","inherited":true,"___s":true},{"meta":{"range":[3653,3675],"filename":"InWorld.js","lineno":106,"path":"src\\gameobjects\\components"},"description":"If this and the `checkWorldBounds` property are both set to `true` then the `kill` method is called as soon as `inWorld` returns false.","properties":[{"type":{"names":["boolean"]},"name":"outOfBoundsKill"}],"defaultvalue":false,"name":"outOfBoundsKill","longname":"Phaser.TilemapLayer#outOfBoundsKill","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.InWorld#outOfBoundsKill","inherited":true,"___s":true},{"meta":{"range":[3939,3967],"filename":"InWorld.js","lineno":115,"path":"src\\gameobjects\\components"},"description":"If this and the `autoCull` property are both set to `true`, then the `kill` method\ris called as soon as the Game Object leaves the camera bounds.","properties":[{"type":{"names":["boolean"]},"name":"outOfCameraBoundsKill"}],"defaultvalue":false,"name":"outOfCameraBoundsKill","longname":"Phaser.TilemapLayer#outOfCameraBoundsKill","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.InWorld#outOfCameraBoundsKill","inherited":true,"___s":true},{"meta":{"range":[4292,4429],"filename":"InWorld.js","lineno":129,"path":"src\\gameobjects\\components"},"description":"Checks if the Game Objects bounds are within, or intersect at any point with the Game World bounds.","properties":[{"type":{"names":["boolean"]},"name":"inWorld"}],"readonly":true,"name":"inWorld","longname":"Phaser.TilemapLayer#inWorld","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.InWorld#inWorld","inherited":true,"___s":true},{"meta":{"range":[1310,1321],"filename":"LifeSpan.js","lineno":50,"path":"src\\gameobjects\\components"},"description":"A useful flag to control if the Game Object is alive or dead.\r\rThis is set automatically by the Health components `damage` method should the object run out of health.\rOr you can toggle it via your game code.\r\rThis property is mostly just provided to be used by your game - it doesn't effect rendering or logic updates.\rHowever you can use `Group.getFirstAlive` in conjunction with this property for fast object pooling and recycling.","properties":[{"type":{"names":["boolean"]},"name":"alive"}],"defaultvalue":true,"name":"alive","longname":"Phaser.TilemapLayer#alive","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.LifeSpan#alive","inherited":true,"___s":true},{"meta":{"range":[1843,1854],"filename":"LifeSpan.js","lineno":65,"path":"src\\gameobjects\\components"},"description":"The lifespan allows you to give a Game Object a lifespan in milliseconds.\r\rOnce the Game Object is 'born' you can set this to a positive value.\r\rIt is automatically decremented by the millisecond equivalent of `game.time.physicsElapsed` each frame.\rWhen it reaches zero it will call the `kill` method.\r\rVery handy for particles, bullets, collectibles, or any other short-lived entity.","properties":[{"type":{"names":["number"]},"name":"lifespan"}],"defaultvalue":0,"name":"lifespan","longname":"Phaser.TilemapLayer#lifespan","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.LifeSpan#lifespan","inherited":true,"___s":true},{"meta":{"range":[2390,2807],"filename":"LifeSpan.js","lineno":78,"path":"src\\gameobjects\\components"},"description":"Brings a 'dead' Game Object back to life, optionally resetting its health value in the process.\r\rA resurrected Game Object has its `alive`, `exists` and `visible` properties all set to true.\r\rIt will dispatch the `onRevived` event. Listen to `events.onRevived` for the signal.","kind":"function","params":[{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"The health to give the Game Object. Only set if the GameObject has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"revive","longname":"Phaser.TilemapLayer#revive","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.LifeSpan#revive","inherited":true,"___s":true},{"meta":{"range":[3390,3634],"filename":"LifeSpan.js","lineno":113,"path":"src\\gameobjects\\components"},"description":"Kills a Game Object. A killed Game Object has its `alive`, `exists` and `visible` properties all set to false.\r\rIt will dispatch the `onKilled` event. You can listen to `events.onKilled` for the signal.\r\rNote that killing a Game Object is a way for you to quickly recycle it in an object pool,\rit doesn't destroy the object or free it up from memory.\r\rIf you don't need this Game Object any more you should call `destroy` instead.","kind":"function","returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"kill","longname":"Phaser.TilemapLayer#kill","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.LifeSpan#kill","inherited":true,"___s":true},{"meta":{"range":[2545,5312],"filename":"LoadTexture.js","lineno":51,"path":"src\\gameobjects\\components"},"description":"Changes the base texture the Game Object is using. The old texture is removed and the new one is referenced or fetched from the Cache.\r\rIf your Game Object is using a frame from a texture atlas and you just wish to change to another frame, then see the `frame` or `frameName` properties instead.\r\rYou should only use `loadTexture` if you want to replace the base texture entirely.\r\rCalling this method causes a WebGL texture update, so use sparingly or in low-intensity portions of your game, or if you know the new texture is already on the GPU.\r\rYou can use the new const `Phaser.PENDING_ATLAS` as the texture key for any sprite. \rDoing this then sets the key to be the `frame` argument (the frame is set to zero). \r\rThis allows you to create sprites using `load.image` during development, and then change them \rto use a Texture Atlas later in development by simply searching your code for 'PENDING_ATLAS' \rand swapping it to be the key of the atlas data.\r\rNote: You cannot use a RenderTexture as a texture for a TileSprite.","kind":"function","params":[{"type":{"names":["string","Phaser.RenderTexture","Phaser.BitmapData","Phaser.Video","PIXI.Texture"]},"description":"This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache Image entry, or an instance of a RenderTexture, BitmapData, Video or PIXI.Texture.","name":"key"},{"type":{"names":["string","number"]},"optional":true,"description":"If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.","name":"frame"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"If an animation is already playing on this Sprite you can choose to stop it or let it carry on playing.","name":"stopAnimation"}],"name":"loadTexture","longname":"Phaser.TilemapLayer#loadTexture","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.LoadTexture#loadTexture","inherited":true,"___s":true},{"meta":{"range":[5633,7262],"filename":"LoadTexture.js","lineno":155,"path":"src\\gameobjects\\components"},"description":"Sets the texture frame the Game Object uses for rendering.\r\rThis is primarily an internal method used by `loadTexture`, but is exposed for the use of plugins and custom classes.","kind":"function","params":[{"type":{"names":["Phaser.Frame"]},"description":"The Frame to be used by the texture.","name":"frame"}],"name":"setFrame","longname":"Phaser.TilemapLayer#setFrame","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.LoadTexture#setFrame","inherited":true,"___s":true},{"meta":{"range":[7825,7986],"filename":"LoadTexture.js","lineno":220,"path":"src\\gameobjects\\components"},"description":"Resizes the Frame dimensions that the Game Object uses for rendering.\r\rYou shouldn't normally need to ever call this, but in the case of special texture types such as Video or BitmapData\rit can be useful to adjust the dimensions directly in this way.","kind":"function","params":[{"type":{"names":["object"]},"description":"The parent texture object that caused the resize, i.e. a Phaser.Video object.","name":"parent"},{"type":{"names":["integer"]},"description":"The new width of the texture.","name":"width"},{"type":{"names":["integer"]},"description":"The new height of the texture.","name":"height"}],"name":"resizeFrame","longname":"Phaser.TilemapLayer#resizeFrame","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.LoadTexture#resizeFrame","inherited":true,"___s":true},{"meta":{"range":[8118,8243],"filename":"LoadTexture.js","lineno":232,"path":"src\\gameobjects\\components"},"description":"Resets the texture frame dimensions that the Game Object uses for rendering.","kind":"function","name":"resetFrame","longname":"Phaser.TilemapLayer#resetFrame","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.LoadTexture#resetFrame","inherited":true,"___s":true},{"meta":{"range":[8868,9060],"filename":"LoadTexture.js","lineno":254,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame index of the texture being used to render this Game Object.\r\rTo change the frame set `frame` to the index of the new frame in the sprite sheet you wish this Game Object to use,\rfor example: `player.frame = 4`.\r\rIf the frame index given doesn't exist it will revert to the first frame found in the texture.\r\rIf you are using a texture atlas then you should use the `frameName` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["integer"]},"name":"frame"}],"name":"frame","longname":"Phaser.TilemapLayer#frame","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.LoadTexture#frame","inherited":true,"___s":true},{"meta":{"range":[9723,9927],"filename":"LoadTexture.js","lineno":279,"path":"src\\gameobjects\\components"},"description":"Gets or sets the current frame name of the texture being used to render this Game Object.\r\rTo change the frame set `frameName` to the name of the new frame in the texture atlas you wish this Game Object to use, \rfor example: `player.frameName = \"idle\"`.\r\rIf the frame name given doesn't exist it will revert to the first frame found in the texture and throw a console warning.\r\rIf you are using a sprite sheet then you should use the `frame` property instead.\r\rIf you wish to fully replace the texture being used see `loadTexture`.","properties":[{"type":{"names":["string"]},"name":"frameName"}],"name":"frameName","longname":"Phaser.TilemapLayer#frameName","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.LoadTexture#frameName","inherited":true,"___s":true},{"meta":{"range":[1339,1475],"filename":"Overlap.js","lineno":29,"path":"src\\gameobjects\\components"},"description":"Checks to see if the bounds of this Game Object overlaps with the bounds of the given Display Object, \rwhich can be a Sprite, Image, TileSprite or anything that extends those such as Button or provides a `getBounds` method and result.\r\rThis check ignores the `hitArea` property if set and runs a `getBounds` comparison on both objects to determine the result.\r\rTherefore it's relatively expensive to use in large quantities, i.e. with lots of Sprites at a high frequency.\rIt should be fine for low-volume testing where physics isn't required.","kind":"function","params":[{"type":{"names":["Phaser.Sprite","Phaser.Image","Phaser.TileSprite","Phaser.Button","PIXI.DisplayObject"]},"description":"The display object to check against.","name":"displayObject"}],"returns":[{"type":{"names":["boolean"]},"description":"True if the bounds of this Game Object intersects at any point with the bounds of the given display object."}],"name":"overlap","longname":"Phaser.TilemapLayer#overlap","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Overlap#overlap","inherited":true,"___s":true},{"meta":{"range":[2899,2909],"filename":"PhysicsBody.js","lineno":91,"path":"src\\gameobjects\\components"},"description":"`body` is the Game Objects physics body. Once a Game Object is enabled for physics you access all associated \rproperties and methods via it.\r\rBy default Game Objects won't add themselves to any physics system and their `body` property will be `null`.\r\rTo enable this Game Object for physics you need to call `game.physics.enable(object, system)` where `object` is this object\rand `system` is the Physics system you are using. If none is given it defaults to `Phaser.Physics.Arcade`.\r\rYou can alternatively call `game.physics.arcade.enable(object)`, or add this Game Object to a physics enabled Group.\r\rImportant: Enabling a Game Object for P2 or Ninja physics will automatically set its `anchor` property to 0.5, \rso the physics body is centered on the Game Object.\r\rIf you need a different result then adjust or re-create the Body shape offsets manually or reset the anchor after enabling physics.","properties":[{"type":{"names":["Phaser.Physics.Arcade.Body","Phaser.Physics.P2.Body","Phaser.Physics.Ninja.Body","null"]},"name":"body"}],"defaultvalue":null,"name":"body","longname":"Phaser.TilemapLayer#body","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.PhysicsBody#body","inherited":true,"___s":true},{"meta":{"range":[3072,3378],"filename":"PhysicsBody.js","lineno":98,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the x axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"x"}],"name":"x","longname":"Phaser.TilemapLayer#x","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.PhysicsBody#x","inherited":true,"___s":true},{"meta":{"range":[3541,3847],"filename":"PhysicsBody.js","lineno":124,"path":"src\\gameobjects\\components"},"description":"The position of the Game Object on the y axis relative to the local coordinates of the parent.","properties":[{"type":{"names":["number"]},"name":"y"}],"name":"y","longname":"Phaser.TilemapLayer#y","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.PhysicsBody#y","inherited":true,"___s":true},{"meta":{"range":[1061,1717],"filename":"Reset.js","lineno":30,"path":"src\\gameobjects\\components"},"description":"Resets the Game Object.\r\rThis moves the Game Object to the given x/y world coordinates and sets `fresh`, `exists`, \r`visible` and `renderable` to true.\r\rIf this Game Object has the LifeSpan component it will also set `alive` to true and `health` to the given value.\r\rIf this Game Object has a Physics Body it will reset the Body.","kind":"function","params":[{"type":{"names":["number"]},"description":"The x coordinate (in world space) to position the Game Object at.","name":"x"},{"type":{"names":["number"]},"description":"The y coordinate (in world space) to position the Game Object at.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The health to give the Game Object if it has the Health component.","name":"health"}],"returns":[{"type":{"names":["PIXI.DisplayObject"]},"description":"This instance."}],"name":"reset","longname":"Phaser.TilemapLayer#reset","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Reset#reset","inherited":true,"___s":true},{"meta":{"range":[566,589],"filename":"ScaleMinMax.js","lineno":20,"path":"src\\gameobjects\\components"},"description":"The callback that will apply any scale limiting to the worldTransform.","properties":[{"type":{"names":["function"]},"name":"transformCallback"}],"name":"transformCallback","longname":"Phaser.TilemapLayer#transformCallback","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#transformCallback","inherited":true,"___s":true},{"meta":{"range":[728,758],"filename":"ScaleMinMax.js","lineno":26,"path":"src\\gameobjects\\components"},"description":"The context under which `transformCallback` is called.","properties":[{"type":{"names":["object"]},"name":"transformCallbackContext"}],"name":"transformCallbackContext","longname":"Phaser.TilemapLayer#transformCallbackContext","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#transformCallbackContext","inherited":true,"___s":true},{"meta":{"range":[1047,1061],"filename":"ScaleMinMax.js","lineno":36,"path":"src\\gameobjects\\components"},"description":"The minimum scale this Game Object will scale down to.\r\rIt allows you to prevent a parent from scaling this Game Object lower than the given value.\r\rSet it to `null` to remove the limit.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleMin"}],"name":"scaleMin","longname":"Phaser.TilemapLayer#scaleMin","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#scaleMin","inherited":true,"___s":true},{"meta":{"range":[1350,1364],"filename":"ScaleMinMax.js","lineno":46,"path":"src\\gameobjects\\components"},"description":"The maximum scale this Game Object will scale up to. \r\rIt allows you to prevent a parent from scaling this Game Object higher than the given value.\r\rSet it to `null` to remove the limit.","properties":[{"type":{"names":["Phaser.Point"]},"name":"scaleMax"}],"name":"scaleMax","longname":"Phaser.TilemapLayer#scaleMax","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#scaleMax","inherited":true,"___s":true},{"meta":{"range":[3832,5155],"filename":"ScaleMinMax.js","lineno":110,"path":"src\\gameobjects\\components"},"description":"Sets the scaleMin and scaleMax values. These values are used to limit how far this Game Object will scale based on its parent.\r\rFor example if this Game Object has a `minScale` value of 1 and its parent has a `scale` value of 0.5, the 0.5 will be ignored \rand the scale value of 1 will be used, as the parents scale is lower than the minimum scale this Game Object should adhere to.\r\rBy setting these values you can carefully control how Game Objects deal with responsive scaling.\r\rIf only one parameter is given then that value will be used for both scaleMin and scaleMax:\r`setScaleMinMax(1)` = scaleMin.x, scaleMin.y, scaleMax.x and scaleMax.y all = 1\r\rIf only two parameters are given the first is set as scaleMin.x and y and the second as scaleMax.x and y:\r`setScaleMinMax(0.5, 2)` = scaleMin.x and y = 0.5 and scaleMax.x and y = 2\r\rIf you wish to set `scaleMin` with different values for x and y then either modify Game Object.scaleMin directly, \ror pass `null` for the `maxX` and `maxY` parameters.\r\rCall `setScaleMinMax(null)` to clear all previously set values.","kind":"function","params":[{"type":{"names":["number","null"]},"description":"The minimum horizontal scale value this Game Object can scale down to.","name":"minX"},{"type":{"names":["number","null"]},"description":"The minimum vertical scale value this Game Object can scale down to.","name":"minY"},{"type":{"names":["number","null"]},"description":"The maximum horizontal scale value this Game Object can scale up to.","name":"maxX"},{"type":{"names":["number","null"]},"description":"The maximum vertical scale value this Game Object can scale up to.","name":"maxY"}],"name":"setScaleMinMax","longname":"Phaser.TilemapLayer#setScaleMinMax","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.ScaleMinMax#setScaleMinMax","inherited":true,"___s":true},{"meta":{"range":[680,1221],"filename":"Smoothed.js","lineno":25,"path":"src\\gameobjects\\components"},"description":"Enable or disable texture smoothing for this Game Object.\r\rIt only takes effect if the Game Object is using an image based texture.\r\rSmoothing is enabled by default.","properties":[{"type":{"names":["boolean"]},"name":"smoothed"}],"name":"smoothed","longname":"Phaser.TilemapLayer#smoothed","kind":"member","memberof":"Phaser.TilemapLayer","scope":"instance","inherits":"Phaser.Component.Smoothed#smoothed","inherited":true,"___s":true}]